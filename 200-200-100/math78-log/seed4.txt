2023-06-26 01:32:33 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-26 01:32:33 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-26 01:32:33 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-26 01:32:33 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 4 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-06-26 01:32:51 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-06-26 01:32:52 [main] [INFO]  KGenProgMain - GA started
2023-06-26 01:32:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-26 01:33:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 200, build-succeeded 53, build-failed 106, syntax-invalid 10, redundant 31
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 4911 ms, max 322 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 01:33:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-26 01:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 26 seconds
Variants: generated 200, build-succeeded 41, build-failed 120, syntax-invalid 13, redundant 26
Fitness: max 0(41), min 0(41), ave 0
Test execution time: sum 182683 ms, max 180088 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 01:36:18 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-26 01:36:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 40 seconds
Variants: generated 400, build-succeeded 77, build-failed 122, syntax-invalid 54, redundant 147
Fitness: max 1(1), min 0(76), ave 0.013
Test execution time: sum 4532 ms, max 137 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 01:36:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-26 01:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 1 seconds
Variants: generated 400, build-succeeded 92, build-failed 125, syntax-invalid 36, redundant 147
Fitness: max 1(4), min 0(88), ave 0.043
Test execution time: sum 6323 ms, max 221 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 01:36:53 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-26 01:37:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 22 seconds
Variants: generated 400, build-succeeded 156, build-failed 112, syntax-invalid 15, redundant 117
Fitness: max 1(2), min 0(154), ave 0.013
Test execution time: sum 9163 ms, max 199 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 01:37:14 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-26 01:43:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 46 seconds
Variants: generated 400, build-succeeded 177, build-failed 116, syntax-invalid 10, redundant 97
Fitness: max 1(2), min 0(175), ave 0.011
Test execution time: sum 370164 ms, max 180062 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 01:43:38 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-26 01:53:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 20 seconds
Variants: generated 400, build-succeeded 184, build-failed 121, syntax-invalid 21, redundant 74
Fitness: max 1(1), min 0(183), ave 0.005
Test execution time: sum 552741 ms, max 180109 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 01:53:12 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-26 01:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 55 seconds
Variants: generated 400, build-succeeded 174, build-failed 130, syntax-invalid 24, redundant 72
Fitness: max 1(2), min 0(172), ave 0.011
Test execution time: sum 371885 ms, max 180126 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 01:59:47 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-26 02:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 35 seconds
Variants: generated 400, build-succeeded 192, build-failed 112, syntax-invalid 42, redundant 54
Fitness: max 1(1), min 0(191), ave 0.005
Test execution time: sum 733762 ms, max 180107 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 02:12:27 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-26 02:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 11 seconds
Variants: generated 400, build-succeeded 180, build-failed 120, syntax-invalid 60, redundant 40
Fitness: max 1(3), min 0(177), ave 0.017
Test execution time: sum 1092633 ms, max 180098 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 02:31:03 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-26 02:49:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 44 seconds
Variants: generated 400, build-succeeded 170, build-failed 117, syntax-invalid 69, redundant 44
Fitness: max 1(3), min 0(167), ave 0.018
Test execution time: sum 1091601 ms, max 180104 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 02:49:36 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-26 03:08:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 23 seconds
Variants: generated 400, build-succeeded 195, build-failed 115, syntax-invalid 25, redundant 65
Fitness: max 0(195), min 0(195), ave 0
Test execution time: sum 1093347 ms, max 180096 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 03:08:15 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-26 03:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 2 seconds
Variants: generated 400, build-succeeded 208, build-failed 123, syntax-invalid 20, redundant 49
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 554403 ms, max 180135 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 03:17:55 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-26 03:30:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 45 seconds
Variants: generated 400, build-succeeded 195, build-failed 130, syntax-invalid 23, redundant 52
Fitness: max 1(2), min 0(193), ave 0.01
Test execution time: sum 733466 ms, max 180096 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 03:30:37 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-26 03:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 24 seconds
Variants: generated 400, build-succeeded 212, build-failed 116, syntax-invalid 32, redundant 40
Fitness: max 0(212), min 0(212), ave 0
Test execution time: sum 194178 ms, max 180132 ms, min 47 ms
----------------------------------------------------------------

2023-06-26 03:34:16 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-26 03:34:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 4 seconds
Variants: generated 400, build-succeeded 214, build-failed 115, syntax-invalid 30, redundant 41
Fitness: max 1(1), min 0(213), ave 0.005
Test execution time: sum 14328 ms, max 202 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 03:34:56 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-26 03:38:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 46 seconds
Variants: generated 400, build-succeeded 227, build-failed 129, syntax-invalid 19, redundant 25
Fitness: max 1(2), min 0(225), ave 0.009
Test execution time: sum 195676 ms, max 180064 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 03:38:38 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-26 03:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 29 seconds
Variants: generated 400, build-succeeded 206, build-failed 122, syntax-invalid 19, redundant 53
Fitness: max 0(206), min 0(206), ave 0
Test execution time: sum 554244 ms, max 180081 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 03:48:23 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-26 03:49:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 13 seconds
Variants: generated 400, build-succeeded 226, build-failed 121, syntax-invalid 26, redundant 27
Fitness: max 1(3), min 0(223), ave 0.013
Test execution time: sum 15673 ms, max 205 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 03:49:07 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-06-26 03:52:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 55 seconds
Variants: generated 400, build-succeeded 222, build-failed 111, syntax-invalid 25, redundant 42
Fitness: max 1(2), min 0(220), ave 0.009
Test execution time: sum 195026 ms, max 180095 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 03:52:49 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-06-26 03:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 36 seconds
Variants: generated 400, build-succeeded 208, build-failed 123, syntax-invalid 34, redundant 35
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 14635 ms, max 190 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 03:53:30 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-06-26 04:03:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 16 seconds
Variants: generated 400, build-succeeded 224, build-failed 108, syntax-invalid 32, redundant 36
Fitness: max 1(2), min 0(222), ave 0.009
Test execution time: sum 555574 ms, max 180106 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 04:03:11 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-06-26 04:09:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 5 seconds
Variants: generated 400, build-succeeded 226, build-failed 114, syntax-invalid 37, redundant 23
Fitness: max 1(3), min 0(223), ave 0.013
Test execution time: sum 376665 ms, max 180174 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 04:09:59 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-06-26 04:10:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 49 seconds
Variants: generated 400, build-succeeded 214, build-failed 121, syntax-invalid 29, redundant 36
Fitness: max 1(5), min 0(209), ave 0.023
Test execution time: sum 15341 ms, max 197 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:10:43 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-06-26 04:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 34 seconds
Variants: generated 400, build-succeeded 213, build-failed 124, syntax-invalid 26, redundant 37
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 15107 ms, max 212 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 04:11:28 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-06-26 04:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 12 seconds
Variants: generated 400, build-succeeded 197, build-failed 128, syntax-invalid 19, redundant 56
Fitness: max 1(1), min 0(196), ave 0.005
Test execution time: sum 13136 ms, max 189 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:12:06 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-06-26 04:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 53 seconds
Variants: generated 400, build-succeeded 230, build-failed 111, syntax-invalid 27, redundant 32
Fitness: max 1(4), min 0(226), ave 0.017
Test execution time: sum 195009 ms, max 180073 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:15:47 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-06-26 04:22:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 35 seconds
Variants: generated 400, build-succeeded 217, build-failed 120, syntax-invalid 30, redundant 33
Fitness: max 1(3), min 0(214), ave 0.014
Test execution time: sum 374440 ms, max 180062 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:22:29 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-06-26 04:26:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 17 seconds
Variants: generated 400, build-succeeded 217, build-failed 119, syntax-invalid 35, redundant 29
Fitness: max 1(2), min 0(215), ave 0.009
Test execution time: sum 194613 ms, max 180063 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 04:26:11 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-06-26 04:35:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 59 seconds
Variants: generated 400, build-succeeded 205, build-failed 116, syntax-invalid 44, redundant 35
Fitness: max 1(2), min 0(203), ave 0.01
Test execution time: sum 554722 ms, max 180102 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 04:35:53 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-06-26 04:39:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 42 seconds
Variants: generated 400, build-succeeded 207, build-failed 116, syntax-invalid 45, redundant 32
Fitness: max 1(1), min 0(206), ave 0.005
Test execution time: sum 194379 ms, max 180056 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:39:36 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-06-26 04:43:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 22 seconds
Variants: generated 400, build-succeeded 210, build-failed 110, syntax-invalid 39, redundant 41
Fitness: max 1(3), min 0(207), ave 0.014
Test execution time: sum 193788 ms, max 180064 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:43:16 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-06-26 04:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 0 seconds
Variants: generated 400, build-succeeded 205, build-failed 112, syntax-invalid 42, redundant 41
Fitness: max 1(3), min 0(202), ave 0.015
Test execution time: sum 373219 ms, max 180099 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:49:54 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-06-26 04:59:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 45 seconds
Variants: generated 400, build-succeeded 226, build-failed 109, syntax-invalid 35, redundant 30
Fitness: max 1(4), min 0(222), ave 0.018
Test execution time: sum 555706 ms, max 180168 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 04:59:39 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-06-26 05:03:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 30 seconds
Variants: generated 400, build-succeeded 218, build-failed 98, syntax-invalid 47, redundant 37
Fitness: max 1(6), min 0(212), ave 0.028
Test execution time: sum 194954 ms, max 180059 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 05:03:24 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-06-26 05:07:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 13 seconds
Variants: generated 400, build-succeeded 214, build-failed 118, syntax-invalid 39, redundant 29
Fitness: max 0(214), min 0(214), ave 0
Test execution time: sum 194481 ms, max 180062 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 05:07:08 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-06-26 05:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 54 seconds
Variants: generated 400, build-succeeded 221, build-failed 113, syntax-invalid 41, redundant 25
Fitness: max 1(3), min 0(218), ave 0.014
Test execution time: sum 194273 ms, max 180075 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 05:10:48 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-06-26 05:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 35 seconds
Variants: generated 400, build-succeeded 215, build-failed 119, syntax-invalid 31, redundant 35
Fitness: max 1(1), min 0(214), ave 0.005
Test execution time: sum 733613 ms, max 180118 ms, min 48 ms
----------------------------------------------------------------

2023-06-26 05:23:29 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-06-26 05:30:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 23 seconds
Variants: generated 400, build-succeeded 219, build-failed 129, syntax-invalid 33, redundant 19
Fitness: max 1(5), min 0(214), ave 0.023
Test execution time: sum 375671 ms, max 180091 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 05:30:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-06-26 07:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 8 seconds
Variants: generated 400, build-succeeded 215, build-failed 128, syntax-invalid 31, redundant 26
Fitness: max 1(2), min 0(213), ave 0.009
Test execution time: sum 8474560 ms, max 180140 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 07:52:01 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-06-26 10:58:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 0 seconds
Variants: generated 400, build-succeeded 221, build-failed 116, syntax-invalid 35, redundant 28
Fitness: max 1(1), min 0(220), ave 0.005
Test execution time: sum 11177376 ms, max 180284 ms, min 49 ms
----------------------------------------------------------------

2023-06-26 10:58:52 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-06-26 12:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 39 minutes 13 seconds
Variants: generated 400, build-succeeded 213, build-failed 134, syntax-invalid 38, redundant 15
Fitness: max 1(5), min 0(208), ave 0.023
Test execution time: sum 4344808 ms, max 180374 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 12:12:06 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-06-26 12:49:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 21 seconds
Variants: generated 400, build-succeeded 219, build-failed 119, syntax-invalid 30, redundant 32
Fitness: max 0(219), min 0(219), ave 0
Test execution time: sum 2182117 ms, max 180225 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 12:49:14 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-06-26 13:26:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 36 seconds
Variants: generated 400, build-succeeded 229, build-failed 125, syntax-invalid 30, redundant 16
Fitness: max 1(1), min 0(228), ave 0.004
Test execution time: sum 2184553 ms, max 180228 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 13:26:28 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-06-26 13:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 18 minutes 39 seconds
Variants: generated 400, build-succeeded 216, build-failed 116, syntax-invalid 32, redundant 36
Fitness: max 0(216), min 0(216), ave 0
Test execution time: sum 1459799 ms, max 180232 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 13:51:32 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-06-26 14:01:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 28 minutes 49 seconds
Variants: generated 400, build-succeeded 237, build-failed 121, syntax-invalid 22, redundant 20
Fitness: max 0(237), min 0(237), ave 0
Test execution time: sum 561316 ms, max 180118 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:01:41 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-06-26 14:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 29 minutes 41 seconds
Variants: generated 400, build-succeeded 226, build-failed 116, syntax-invalid 33, redundant 25
Fitness: max 1(1), min 0(225), ave 0.004
Test execution time: sum 16631 ms, max 330 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:02:33 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-06-26 14:03:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 30 minutes 39 seconds
Variants: generated 400, build-succeeded 230, build-failed 116, syntax-invalid 27, redundant 27
Fitness: max 0(230), min 0(230), ave 0
Test execution time: sum 17555 ms, max 232 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:03:31 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-06-26 14:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 31 minutes 25 seconds
Variants: generated 400, build-succeeded 223, build-failed 117, syntax-invalid 39, redundant 21
Fitness: max 1(2), min 0(221), ave 0.009
Test execution time: sum 15562 ms, max 253 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:04:17 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-06-26 14:05:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 32 minutes 10 seconds
Variants: generated 400, build-succeeded 230, build-failed 122, syntax-invalid 31, redundant 17
Fitness: max 1(3), min 0(227), ave 0.013
Test execution time: sum 15352 ms, max 223 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:05:02 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-06-26 14:05:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 32 minutes 52 seconds
Variants: generated 400, build-succeeded 222, build-failed 119, syntax-invalid 46, redundant 13
Fitness: max 1(1), min 0(221), ave 0.005
Test execution time: sum 14154 ms, max 204 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 14:05:44 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-06-26 14:09:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 36 minutes 46 seconds
Variants: generated 400, build-succeeded 224, build-failed 116, syntax-invalid 35, redundant 25
Fitness: max 1(1), min 0(223), ave 0.004
Test execution time: sum 196603 ms, max 180093 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:09:39 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-06-26 14:10:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 37 minutes 29 seconds
Variants: generated 400, build-succeeded 218, build-failed 124, syntax-invalid 41, redundant 17
Fitness: max 1(1), min 0(217), ave 0.005
Test execution time: sum 14892 ms, max 265 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:10:21 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-06-26 14:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 41 minutes 14 seconds
Variants: generated 400, build-succeeded 226, build-failed 112, syntax-invalid 33, redundant 29
Fitness: max 1(3), min 0(223), ave 0.013
Test execution time: sum 195633 ms, max 180080 ms, min 50 ms
----------------------------------------------------------------

2023-06-26 14:14:07 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-06-26 14:14:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 2 seconds
Variants: generated 400, build-succeeded 239, build-failed 114, syntax-invalid 23, redundant 24
Fitness: max 0(239), min 0(239), ave 0
Test execution time: sum 16320 ms, max 210 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:14:54 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-06-26 14:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 4 seconds
Variants: generated 400, build-succeeded 241, build-failed 115, syntax-invalid 26, redundant 18
Fitness: max 0(241), min 0(241), ave 0
Test execution time: sum 20023 ms, max 291 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:15:56 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-06-26 14:16:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 49 seconds
Variants: generated 400, build-succeeded 231, build-failed 128, syntax-invalid 17, redundant 24
Fitness: max 0(231), min 0(231), ave 0
Test execution time: sum 15022 ms, max 232 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:16:41 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-06-26 14:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 minutes 46 seconds
Variants: generated 400, build-succeeded 222, build-failed 134, syntax-invalid 21, redundant 23
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 17238 ms, max 263 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:17:38 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-06-26 14:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 2 seconds
Variants: generated 194, build-succeeded 48, build-failed 122, syntax-invalid 9, redundant 15
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 3210 ms, max 152 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:17:54 [main] [INFO]  KGenProgMain - GA stopped
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v30)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v30)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v30)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v30)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v748)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v748)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v748)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v748)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v816)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v816)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v816)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v816)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v854)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v854)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v854)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v854)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v854)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				oldDelta = delta;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v970)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v970)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v970)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    g0Positive = increasing;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v970)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v970)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v997)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1293)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -217,7 +215,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1293)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1293)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1293)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1293)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1365)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,8 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -217,7 +215,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1365)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1365)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1365)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1365)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				clearResult();
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1602)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,7 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    double oldx = Double.POSITIVE_INFINITY;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1750)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1750)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1750)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1750)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v1750)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,7 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    final double d12 = (y2 - y1) / (x2 - x1);
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2087)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -213,7 +212,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2458)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2518)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v2923)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -282,7 +274,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -304,7 +295,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3258)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3346)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3396)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -304,7 +296,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3708)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3708)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3708)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3738)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -226,7 +226,7 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
-                x1 = x2;
+                x1 = 0.5 * (x0 + x2);
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v3755)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,6 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5018)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -243,7 +243,6 @@
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
       interpolatedTime = time;
-      dirtyState       = true;
   }
 
   /** {@inheritDoc} */
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5177)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:58 [main] [INFO]  PatchLogExporter - patch (v5651)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -302,6 +302,7 @@
                 x2 = x0;
                 y2 = y0;
                 delta = x1 - x0;
+				delta = 0.5 * oldDelta;
                 oldDelta = delta;
             }
             i++;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6080)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6080)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,7 @@
 
         try {
 
-            forward = interpolator.isForward();
+            final double t0 = interpolator.getPreviousTime();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6080)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6080)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6080)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
@@ -162,7 +160,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6187)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6187)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6187)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6187)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6187)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
@@ -162,7 +160,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +283,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6849)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -265,6 +265,7 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
+					oldDelta = x2 - x1;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v6857)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -265,6 +265,7 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
+					oldDelta = x2 - x1;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
@@ -276,10 +277,7 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    y1 = f.value(x1);
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -283,8 +283,6 @@
         throws EventException {
 
         t0 = t;
-        g0 = handler.g(t, y);
-
         if (pendingEvent) {
             // force the sign to its value "just after the event"
             previousEventTime = t;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7148)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,6 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +214,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    interpolator.setInterpolatedTime(t0);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7344)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -265,6 +265,7 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
+					oldDelta = x2 - x1;
                     double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,7 +101,6 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
@@ -204,7 +203,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v7514)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +283,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8125)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -197,14 +197,13 @@
                         // about bracketing
                             // this should never happen
                          
-                    // variation direction, with respect to the integration direction
-                    increasing = gb >= ga;
-
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8675)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,6 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8829)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +209,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8829)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8829)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8829)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i < maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +209,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8830)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8867)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +209,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8867)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8867)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8867)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8867)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +209,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEventTime = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v8882)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +219,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9029)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -116,7 +116,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
@@ -217,7 +216,10 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v9909)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,15 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						x0 = x1;
+						x1 = x2;
+						x2 = x0;
+						y0 = y1;
+						y1 = y2;
+						y2 = y0;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10196)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -282,7 +274,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	currentTime = Double.NaN;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +219,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10208)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -280,7 +280,15 @@
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
                     delta = 0.5 * dx;
-                    oldDelta = delta;
+                    {
+						x0 = x1;
+						x1 = x2;
+						x2 = x0;
+						y0 = y1;
+						y1 = y2;
+						y2 = y0;
+					}
+					oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,7 +88,6 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10321)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10398)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +216,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -204,7 +203,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10495)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10595)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +216,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10595)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10595)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -204,7 +203,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10595)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10595)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -116,7 +117,6 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
     this.dirtyState   = true;
 
   }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v10794)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,9 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	currentTime = Double.NaN;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11019)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11196)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11402)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11532)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,10 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11532)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11532)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v11877)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12278)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -204,7 +203,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12283)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12342)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12455)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12476)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12500)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12851)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +210,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +218,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12851)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12851)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12851)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12851)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,9 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                    y0 = y1;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +210,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +218,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -76,6 +76,7 @@
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
         absoluteAccuracy = accuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12979)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +210,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +218,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:17:59 [main] [INFO]  PatchLogExporter - patch (v12999)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13076)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -269,7 +269,7 @@
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
-                if (p > 0.0) {
+                if (i <= maximalIterationCount) {
                     p1 = -p1;
                 } else {
                     p = -p;
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,7 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13225)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13238)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13299)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +284,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -162,7 +161,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13387)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13527)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v13548)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -269,7 +269,7 @@
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
-                if (p > 0.0) {
+                if (i <= maximalIterationCount) {
                     p1 = -p1;
                 } else {
                     p = -p;
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        pendingEventTime = Double.NaN;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14119)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -272,7 +273,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14168)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -272,7 +273,7 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    double x;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14754)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -290,7 +291,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -289,7 +293,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -289,7 +293,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14842)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -289,7 +293,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v14942)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15131)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,9 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15131)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15131)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -282,7 +283,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -179,7 +179,8 @@
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
 
-                // evaluate handler value at the end of the substep
+                pendingEventTime = Double.NaN;
+				// evaluate handler value at the end of the substep
                 tb += h;
                 interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
@@ -214,7 +215,7 @@
                     };
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
-                    solver.setMaximalIterationCount(maxIterationCount);
+                    pendingEventTime = Double.NaN;
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15191)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15425)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15575)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
@@ -290,7 +289,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -217,7 +216,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -289,7 +291,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v15865)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
@@ -217,7 +220,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16004)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -282,7 +274,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
@@ -217,7 +220,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16009)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
@@ -217,7 +220,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16069)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -261,6 +261,10 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					{
+						delta = 0.5 * dx;
+						oldDelta = delta;
+					}
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -282,7 +286,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16201)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16201)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16201)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,11 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +218,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -289,7 +293,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16201)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16201)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -208,7 +209,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -289,7 +291,6 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16232)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v16847)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18132)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,13 +96,13 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18950)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -282,7 +274,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,7 +90,9 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    finalized = false;
+	dirtyState = false;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,13 +96,13 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -204,7 +204,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -213,7 +215,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    pendingEvent = false;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v18962)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -282,7 +282,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19266)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -159,6 +159,7 @@
         verifyInterval(min, max);
 
         double ret = Double.NaN;
+		double x0 = min;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -218,7 +219,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -282,7 +284,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19295)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -159,6 +159,7 @@
         verifyInterval(min, max);
 
         double ret = Double.NaN;
+		double x0 = min;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -218,20 +219,13 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -282,7 +276,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19364)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -159,6 +159,7 @@
         verifyInterval(min, max);
 
         double ret = Double.NaN;
+		double x0 = min;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -218,7 +219,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -276,13 +278,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,8 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v19681)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y0 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,8 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20027)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,8 +95,13 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    previousTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -217,7 +222,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +284,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        nextAction = EventHandler.CONTINUE;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v20704)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,9 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +206,10 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +287,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        nextAction = EventHandler.CONTINUE;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21054)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        this.iterationCount = iterationCount;
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -89,7 +89,6 @@
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
-    h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
@@ -217,7 +216,11 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+	currentTime = t;
+	h = currentTime - previousTime;
+	currentTime = t;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -204,7 +203,8 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21081)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(y2) < Math.abs(y1)) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21113)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,9 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,8 +116,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -217,7 +218,8 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    currentTime = t;
+	h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21113)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21113)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,9 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
@@ -282,7 +285,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        nextAction = EventHandler.CONTINUE;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v21113)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,8 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = false;
+	dirtyState = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -114,6 +116,7 @@
     currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
+	interpolatedTime = Double.NaN;
 
     finalized         = false;
     this.forward      = forward;
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -96,7 +96,8 @@
         this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
-        this.maxIterationCount = maxIterationCount;
+        g0Positive = increasing;
+		this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
@@ -204,7 +205,11 @@
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
-                                return handler.g(t, interpolator.getInterpolatedState());
+                                pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								pendingEvent = false;
+								return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
                             } catch (EventException e) {
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 14:18:00 [main] [INFO]  PatchLogExporter - patch (v22994)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				this.iterationCount = iterationCount;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 14:18:00 [main] [INFO]  KGenProgMain - Summary
Reached generation = 59
Generated variants = 22994
Syntax valid variants = 21157
Build succeeded variants = 11817
Time elapsed = 12 hours 45 minutes 8 seconds
Exit status = SUCCESS
