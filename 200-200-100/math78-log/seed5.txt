2023-06-26 14:18:02 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-06-26 14:18:02 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-06-26 14:18:02 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-06-26 14:18:02 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 200 (set in config file)
crossoverGeneratingCount = 200 (set in config file)
headcount = 100
maxGeneration = 1000 (set in config file)
timeLimit = PT277H46M40S (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-06-26 14:18:20 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-06-26 14:18:20 [main] [INFO]  KGenProgMain - GA started
2023-06-26 14:18:20 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-06-26 14:18:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 200, build-succeeded 48, build-failed 122, syntax-invalid 10, redundant 20
Fitness: max 1(3), min 0(45), ave 0.062
Test execution time: sum 5173 ms, max 253 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 14:18:40 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-06-26 14:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 200, build-succeeded 60, build-failed 107, syntax-invalid 13, redundant 20
Fitness: max 1(2), min 0(58), ave 0.033
Test execution time: sum 4217 ms, max 172 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 14:18:53 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-06-26 14:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 seconds
Variants: generated 400, build-succeeded 77, build-failed 125, syntax-invalid 54, redundant 144
Fitness: max 1(4), min 0(73), ave 0.052
Test execution time: sum 5476 ms, max 166 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:19:11 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-06-26 14:19:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 10 seconds
Variants: generated 400, build-succeeded 126, build-failed 107, syntax-invalid 39, redundant 128
Fitness: max 1(7), min 0(119), ave 0.056
Test execution time: sum 7910 ms, max 151 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:19:30 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-06-26 14:22:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 34 seconds
Variants: generated 400, build-succeeded 164, build-failed 111, syntax-invalid 26, redundant 99
Fitness: max 1(17), min 0(147), ave 0.104
Test execution time: sum 190800 ms, max 180083 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:22:55 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-06-26 14:23:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 57 seconds
Variants: generated 400, build-succeeded 168, build-failed 122, syntax-invalid 15, redundant 95
Fitness: max 1(13), min 0(155), ave 0.077
Test execution time: sum 10749 ms, max 297 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 14:23:18 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-06-26 14:23:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 22 seconds
Variants: generated 400, build-succeeded 181, build-failed 124, syntax-invalid 26, redundant 69
Fitness: max 1(1), min 0(180), ave 0.006
Test execution time: sum 11576 ms, max 204 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 14:23:42 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-06-26 14:36:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 50 seconds
Variants: generated 400, build-succeeded 200, build-failed 106, syntax-invalid 32, redundant 62
Fitness: max 1(5), min 0(195), ave 0.025
Test execution time: sum 734493 ms, max 180090 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 14:36:11 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-06-26 14:45:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 22 seconds
Variants: generated 400, build-succeeded 200, build-failed 106, syntax-invalid 20, redundant 74
Fitness: max 1(4), min 0(196), ave 0.02
Test execution time: sum 555833 ms, max 180088 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 14:45:42 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-06-26 14:52:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 2 seconds
Variants: generated 400, build-succeeded 180, build-failed 119, syntax-invalid 35, redundant 66
Fitness: max 1(4), min 0(176), ave 0.022
Test execution time: sum 377505 ms, max 180280 ms, min 66 ms
----------------------------------------------------------------

2023-06-26 14:52:22 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-06-26 14:56:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 41 seconds
Variants: generated 400, build-succeeded 206, build-failed 112, syntax-invalid 26, redundant 56
Fitness: max 1(5), min 0(201), ave 0.024
Test execution time: sum 199158 ms, max 180087 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 14:56:02 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-06-26 15:08:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 25 seconds
Variants: generated 400, build-succeeded 186, build-failed 118, syntax-invalid 28, redundant 68
Fitness: max 1(5), min 0(181), ave 0.027
Test execution time: sum 738277 ms, max 180275 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 15:08:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-06-26 15:21:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 6 seconds
Variants: generated 400, build-succeeded 204, build-failed 107, syntax-invalid 15, redundant 74
Fitness: max 1(1), min 0(203), ave 0.005
Test execution time: sum 738885 ms, max 180235 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 15:21:26 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-06-26 15:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 48 seconds
Variants: generated 400, build-succeeded 195, build-failed 125, syntax-invalid 20, redundant 60
Fitness: max 0(195), min 0(195), ave 0
Test execution time: sum 1098963 ms, max 180213 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 15:40:08 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-06-26 15:46:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 24 seconds
Variants: generated 400, build-succeeded 213, build-failed 113, syntax-invalid 10, redundant 64
Fitness: max 1(1), min 0(212), ave 0.005
Test execution time: sum 376211 ms, max 180114 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 15:46:45 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-06-26 15:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 3 seconds
Variants: generated 400, build-succeeded 219, build-failed 112, syntax-invalid 13, redundant 56
Fitness: max 1(1), min 0(218), ave 0.005
Test execution time: sum 377919 ms, max 180087 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 15:53:24 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-06-26 16:00:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 48 seconds
Variants: generated 400, build-succeeded 203, build-failed 122, syntax-invalid 26, redundant 49
Fitness: max 0(203), min 0(203), ave 0
Test execution time: sum 378783 ms, max 180095 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:00:09 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-06-26 16:06:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 30 seconds
Variants: generated 400, build-succeeded 202, build-failed 121, syntax-invalid 16, redundant 61
Fitness: max 1(1), min 0(201), ave 0.005
Test execution time: sum 377698 ms, max 180123 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:06:51 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-06-26 16:10:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 16 seconds
Variants: generated 400, build-succeeded 204, build-failed 120, syntax-invalid 17, redundant 59
Fitness: max 0(204), min 0(204), ave 0
Test execution time: sum 198661 ms, max 180117 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:10:36 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-06-26 16:14:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 57 seconds
Variants: generated 400, build-succeeded 213, build-failed 115, syntax-invalid 26, redundant 46
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 197600 ms, max 180086 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:14:18 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-06-26 16:21:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 41 seconds
Variants: generated 400, build-succeeded 210, build-failed 121, syntax-invalid 22, redundant 47
Fitness: max 0(210), min 0(210), ave 0
Test execution time: sum 378913 ms, max 180101 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:21:02 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-06-26 16:21:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 20 seconds
Variants: generated 400, build-succeeded 210, build-failed 118, syntax-invalid 36, redundant 36
Fitness: max 0(210), min 0(210), ave 0
Test execution time: sum 15705 ms, max 236 ms, min 63 ms
----------------------------------------------------------------

2023-06-26 16:21:40 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-06-26 16:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 2 seconds
Variants: generated 400, build-succeeded 222, build-failed 116, syntax-invalid 24, redundant 38
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 17687 ms, max 293 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:22:22 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-06-26 16:35:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 44 seconds
Variants: generated 400, build-succeeded 214, build-failed 119, syntax-invalid 36, redundant 31
Fitness: max 1(4), min 0(210), ave 0.019
Test execution time: sum 738591 ms, max 180088 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:35:04 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-06-26 16:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 27 seconds
Variants: generated 400, build-succeeded 213, build-failed 114, syntax-invalid 19, redundant 54
Fitness: max 1(1), min 0(212), ave 0.005
Test execution time: sum 18517 ms, max 415 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:35:48 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-06-26 16:39:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 10 seconds
Variants: generated 400, build-succeeded 211, build-failed 118, syntax-invalid 28, redundant 43
Fitness: max 0(211), min 0(211), ave 0
Test execution time: sum 198086 ms, max 180101 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:39:31 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-06-26 16:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 55 seconds
Variants: generated 400, build-succeeded 213, build-failed 105, syntax-invalid 37, redundant 45
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 18754 ms, max 400 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:40:16 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-06-26 16:41:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 41 seconds
Variants: generated 400, build-succeeded 216, build-failed 112, syntax-invalid 29, redundant 43
Fitness: max 0(216), min 0(216), ave 0
Test execution time: sum 18834 ms, max 269 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:41:01 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-06-26 16:41:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 20 seconds
Variants: generated 400, build-succeeded 206, build-failed 123, syntax-invalid 50, redundant 21
Fitness: max 1(1), min 0(205), ave 0.005
Test execution time: sum 16444 ms, max 334 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 16:41:41 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-06-26 16:42:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 0 seconds
Variants: generated 400, build-succeeded 204, build-failed 102, syntax-invalid 39, redundant 55
Fitness: max 0(204), min 0(204), ave 0
Test execution time: sum 15903 ms, max 278 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:42:21 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-06-26 16:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 47 seconds
Variants: generated 400, build-succeeded 208, build-failed 124, syntax-invalid 23, redundant 45
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 378650 ms, max 180110 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:49:08 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-06-26 16:49:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 30 seconds
Variants: generated 400, build-succeeded 206, build-failed 110, syntax-invalid 38, redundant 46
Fitness: max 0(206), min 0(206), ave 0
Test execution time: sum 16769 ms, max 509 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:49:50 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-06-26 16:50:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 11 seconds
Variants: generated 400, build-succeeded 208, build-failed 109, syntax-invalid 42, redundant 41
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 16075 ms, max 291 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:50:32 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-06-26 16:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 53 seconds
Variants: generated 400, build-succeeded 214, build-failed 117, syntax-invalid 38, redundant 31
Fitness: max 0(214), min 0(214), ave 0
Test execution time: sum 17091 ms, max 456 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 16:51:13 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-06-26 16:51:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 37 seconds
Variants: generated 400, build-succeeded 222, build-failed 111, syntax-invalid 32, redundant 35
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 18848 ms, max 284 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 16:51:58 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-06-26 16:52:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 22 seconds
Variants: generated 400, build-succeeded 214, build-failed 120, syntax-invalid 31, redundant 35
Fitness: max 0(214), min 0(214), ave 0
Test execution time: sum 18150 ms, max 425 ms, min 64 ms
----------------------------------------------------------------

2023-06-26 16:52:42 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-06-26 16:53:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 6 seconds
Variants: generated 400, build-succeeded 196, build-failed 136, syntax-invalid 33, redundant 35
Fitness: max 0(196), min 0(196), ave 0
Test execution time: sum 15321 ms, max 268 ms, min 65 ms
----------------------------------------------------------------

2023-06-26 16:53:27 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-06-26 16:54:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 43 seconds
Variants: generated 400, build-succeeded 214, build-failed 110, syntax-invalid 39, redundant 37
Fitness: max 0(214), min 0(214), ave 0
Test execution time: sum 14893 ms, max 219 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:54:03 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-06-26 16:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 22 seconds
Variants: generated 400, build-succeeded 219, build-failed 115, syntax-invalid 29, redundant 37
Fitness: max 0(219), min 0(219), ave 0
Test execution time: sum 15651 ms, max 371 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:54:43 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-06-26 16:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 59 seconds
Variants: generated 400, build-succeeded 207, build-failed 126, syntax-invalid 35, redundant 32
Fitness: max 0(207), min 0(207), ave 0
Test execution time: sum 13990 ms, max 232 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:55:20 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-06-26 16:55:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 38 seconds
Variants: generated 400, build-succeeded 206, build-failed 124, syntax-invalid 46, redundant 24
Fitness: max 0(206), min 0(206), ave 0
Test execution time: sum 13721 ms, max 263 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:55:59 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-06-26 16:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 14 seconds
Variants: generated 400, build-succeeded 216, build-failed 111, syntax-invalid 32, redundant 41
Fitness: max 0(216), min 0(216), ave 0
Test execution time: sum 13260 ms, max 262 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:56:35 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-06-26 16:57:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 53 seconds
Variants: generated 400, build-succeeded 207, build-failed 110, syntax-invalid 49, redundant 34
Fitness: max 0(207), min 0(207), ave 0
Test execution time: sum 13607 ms, max 274 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:57:14 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-06-26 16:57:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 32 seconds
Variants: generated 400, build-succeeded 207, build-failed 121, syntax-invalid 35, redundant 37
Fitness: max 0(207), min 0(207), ave 0
Test execution time: sum 14165 ms, max 420 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:57:52 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-06-26 16:58:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 14 seconds
Variants: generated 400, build-succeeded 206, build-failed 131, syntax-invalid 34, redundant 29
Fitness: max 0(206), min 0(206), ave 0
Test execution time: sum 15837 ms, max 351 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 16:58:35 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-06-26 16:59:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 49 seconds
Variants: generated 400, build-succeeded 208, build-failed 110, syntax-invalid 39, redundant 43
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 13174 ms, max 239 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:59:10 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-06-26 16:59:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 25 seconds
Variants: generated 400, build-succeeded 201, build-failed 132, syntax-invalid 43, redundant 24
Fitness: max 0(201), min 0(201), ave 0
Test execution time: sum 13244 ms, max 377 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 16:59:46 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-06-26 17:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 6 seconds
Variants: generated 400, build-succeeded 217, build-failed 127, syntax-invalid 34, redundant 22
Fitness: max 0(217), min 0(217), ave 0
Test execution time: sum 16207 ms, max 315 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 17:00:27 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-06-26 17:01:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 46 seconds
Variants: generated 400, build-succeeded 218, build-failed 113, syntax-invalid 32, redundant 37
Fitness: max 0(218), min 0(218), ave 0
Test execution time: sum 14639 ms, max 226 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:01:06 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-06-26 17:01:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 25 seconds
Variants: generated 400, build-succeeded 222, build-failed 127, syntax-invalid 27, redundant 24
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 14143 ms, max 215 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:01:45 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-06-26 17:02:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 58 seconds
Variants: generated 400, build-succeeded 205, build-failed 120, syntax-invalid 39, redundant 36
Fitness: max 0(205), min 0(205), ave 0
Test execution time: sum 11643 ms, max 112 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 17:02:19 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-06-26 17:02:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 36 seconds
Variants: generated 400, build-succeeded 217, build-failed 116, syntax-invalid 33, redundant 34
Fitness: max 0(217), min 0(217), ave 0
Test execution time: sum 14379 ms, max 319 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:02:57 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-06-26 17:03:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 11 seconds
Variants: generated 400, build-succeeded 205, build-failed 124, syntax-invalid 34, redundant 37
Fitness: max 0(205), min 0(205), ave 0
Test execution time: sum 12111 ms, max 239 ms, min 51 ms
----------------------------------------------------------------

2023-06-26 17:03:32 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-06-26 17:04:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 47 seconds
Variants: generated 400, build-succeeded 222, build-failed 118, syntax-invalid 26, redundant 34
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 13163 ms, max 182 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:04:07 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-06-26 17:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 23 seconds
Variants: generated 400, build-succeeded 216, build-failed 119, syntax-invalid 30, redundant 35
Fitness: max 0(216), min 0(216), ave 0
Test execution time: sum 193063 ms, max 180071 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:07:44 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-06-26 17:14:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 0 seconds
Variants: generated 400, build-succeeded 198, build-failed 111, syntax-invalid 44, redundant 47
Fitness: max 0(198), min 0(198), ave 0
Test execution time: sum 373658 ms, max 180069 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:14:20 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-06-26 17:21:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 41 seconds
Variants: generated 400, build-succeeded 213, build-failed 123, syntax-invalid 29, redundant 35
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 375608 ms, max 180072 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:21:02 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-06-26 17:24:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 18 seconds
Variants: generated 400, build-succeeded 196, build-failed 113, syntax-invalid 54, redundant 37
Fitness: max 0(196), min 0(196), ave 0
Test execution time: sum 192152 ms, max 180077 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:24:38 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-06-26 17:25:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 52 seconds
Variants: generated 400, build-succeeded 191, build-failed 123, syntax-invalid 51, redundant 35
Fitness: max 0(191), min 0(191), ave 0
Test execution time: sum 11507 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:25:12 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-06-26 17:25:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 31 seconds
Variants: generated 400, build-succeeded 220, build-failed 110, syntax-invalid 26, redundant 44
Fitness: max 0(220), min 0(220), ave 0
Test execution time: sum 13997 ms, max 240 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:25:51 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-06-26 17:26:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 11 seconds
Variants: generated 400, build-succeeded 220, build-failed 124, syntax-invalid 20, redundant 36
Fitness: max 0(220), min 0(220), ave 0
Test execution time: sum 14015 ms, max 207 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:26:32 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-06-26 17:27:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 51 seconds
Variants: generated 400, build-succeeded 215, build-failed 123, syntax-invalid 33, redundant 29
Fitness: max 0(215), min 0(215), ave 0
Test execution time: sum 13066 ms, max 217 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:27:12 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-06-26 17:27:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 31 seconds
Variants: generated 400, build-succeeded 225, build-failed 131, syntax-invalid 23, redundant 21
Fitness: max 0(225), min 0(225), ave 0
Test execution time: sum 14261 ms, max 171 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:27:52 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-06-26 17:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 12 seconds
Variants: generated 400, build-succeeded 222, build-failed 125, syntax-invalid 22, redundant 31
Fitness: max 0(222), min 0(222), ave 0
Test execution time: sum 14431 ms, max 204 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:28:32 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-06-26 17:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 52 seconds
Variants: generated 400, build-succeeded 208, build-failed 118, syntax-invalid 38, redundant 36
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 14035 ms, max 239 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:29:12 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-06-26 17:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 33 seconds
Variants: generated 400, build-succeeded 213, build-failed 113, syntax-invalid 35, redundant 39
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 194257 ms, max 180071 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:32:54 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-06-26 17:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 12 seconds
Variants: generated 400, build-succeeded 208, build-failed 120, syntax-invalid 32, redundant 40
Fitness: max 0(208), min 0(208), ave 0
Test execution time: sum 12548 ms, max 178 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:33:33 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-06-26 17:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 53 seconds
Variants: generated 400, build-succeeded 209, build-failed 114, syntax-invalid 41, redundant 36
Fitness: max 0(209), min 0(209), ave 0
Test execution time: sum 13736 ms, max 160 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:34:13 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-06-26 17:34:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 39 seconds
Variants: generated 400, build-succeeded 211, build-failed 130, syntax-invalid 39, redundant 20
Fitness: max 0(211), min 0(211), ave 0
Test execution time: sum 15428 ms, max 321 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:34:59 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-06-26 17:35:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 16 seconds
Variants: generated 400, build-succeeded 199, build-failed 139, syntax-invalid 46, redundant 16
Fitness: max 1(4), min 0(195), ave 0.02
Test execution time: sum 12255 ms, max 224 ms, min 52 ms
----------------------------------------------------------------

2023-06-26 17:35:37 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-06-26 17:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 57 seconds
Variants: generated 400, build-succeeded 204, build-failed 122, syntax-invalid 39, redundant 35
Fitness: max 0(204), min 0(204), ave 0
Test execution time: sum 12619 ms, max 178 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:36:17 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-06-26 17:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 46 seconds
Variants: generated 400, build-succeeded 219, build-failed 117, syntax-invalid 37, redundant 27
Fitness: max 1(1), min 0(218), ave 0.005
Test execution time: sum 18535 ms, max 501 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:37:07 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-06-26 17:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 32 seconds
Variants: generated 400, build-succeeded 231, build-failed 102, syntax-invalid 30, redundant 37
Fitness: max 0(231), min 0(231), ave 0
Test execution time: sum 17712 ms, max 246 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:37:53 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-06-26 17:38:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 13 seconds
Variants: generated 400, build-succeeded 218, build-failed 108, syntax-invalid 50, redundant 24
Fitness: max 1(2), min 0(216), ave 0.009
Test execution time: sum 14338 ms, max 211 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:38:33 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-06-26 17:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 52 seconds
Variants: generated 400, build-succeeded 210, build-failed 113, syntax-invalid 29, redundant 48
Fitness: max 0(210), min 0(210), ave 0
Test execution time: sum 13797 ms, max 211 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:39:13 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-06-26 17:43:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 45 seconds
Variants: generated 400, build-succeeded 221, build-failed 117, syntax-invalid 40, redundant 22
Fitness: max 1(3), min 0(218), ave 0.014
Test execution time: sum 199434 ms, max 180104 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:43:05 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-06-26 17:47:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 40 seconds
Variants: generated 400, build-succeeded 217, build-failed 121, syntax-invalid 34, redundant 28
Fitness: max 0(217), min 0(217), ave 0
Test execution time: sum 201069 ms, max 180070 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:47:01 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-06-26 17:47:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 32 seconds
Variants: generated 400, build-succeeded 225, build-failed 117, syntax-invalid 30, redundant 28
Fitness: max 0(225), min 0(225), ave 0
Test execution time: sum 18525 ms, max 468 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:47:52 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-06-26 17:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 23 seconds
Variants: generated 400, build-succeeded 203, build-failed 117, syntax-invalid 39, redundant 41
Fitness: max 0(203), min 0(203), ave 0
Test execution time: sum 378013 ms, max 180163 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:54:43 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-06-26 17:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 19 seconds
Variants: generated 400, build-succeeded 200, build-failed 115, syntax-invalid 47, redundant 38
Fitness: max 0(200), min 0(200), ave 0
Test execution time: sum 18298 ms, max 585 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:55:39 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-06-26 17:56:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 13 seconds
Variants: generated 400, build-succeeded 218, build-failed 127, syntax-invalid 32, redundant 23
Fitness: max 0(218), min 0(218), ave 0
Test execution time: sum 19016 ms, max 477 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:56:33 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-06-26 17:57:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 8 seconds
Variants: generated 400, build-succeeded 213, build-failed 128, syntax-invalid 26, redundant 33
Fitness: max 0(213), min 0(213), ave 0
Test execution time: sum 19430 ms, max 293 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 17:57:29 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-06-26 17:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 6 seconds
Variants: generated 400, build-succeeded 230, build-failed 116, syntax-invalid 22, redundant 32
Fitness: max 0(230), min 0(230), ave 0
Test execution time: sum 21321 ms, max 337 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:58:26 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-06-26 17:59:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 57 seconds
Variants: generated 400, build-succeeded 221, build-failed 117, syntax-invalid 32, redundant 30
Fitness: max 0(221), min 0(221), ave 0
Test execution time: sum 18137 ms, max 375 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 17:59:18 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-06-26 18:00:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 50 seconds
Variants: generated 400, build-succeeded 221, build-failed 120, syntax-invalid 26, redundant 33
Fitness: max 0(221), min 0(221), ave 0
Test execution time: sum 18072 ms, max 322 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:00:11 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-06-26 18:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 47 seconds
Variants: generated 400, build-succeeded 215, build-failed 122, syntax-invalid 30, redundant 33
Fitness: max 0(215), min 0(215), ave 0
Test execution time: sum 20273 ms, max 393 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:01:07 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-06-26 18:05:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 42 seconds
Variants: generated 400, build-succeeded 221, build-failed 126, syntax-invalid 29, redundant 24
Fitness: max 1(2), min 0(219), ave 0.009
Test execution time: sum 198590 ms, max 180107 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:05:03 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-06-26 18:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 40 seconds
Variants: generated 400, build-succeeded 225, build-failed 112, syntax-invalid 31, redundant 32
Fitness: max 0(225), min 0(225), ave 0
Test execution time: sum 561322 ms, max 180144 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:15:01 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-06-26 18:15:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 33 seconds
Variants: generated 400, build-succeeded 230, build-failed 119, syntax-invalid 25, redundant 26
Fitness: max 0(230), min 0(230), ave 0
Test execution time: sum 17942 ms, max 426 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:15:53 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-06-26 18:16:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 34 seconds
Variants: generated 400, build-succeeded 221, build-failed 112, syntax-invalid 26, redundant 41
Fitness: max 0(221), min 0(221), ave 0
Test execution time: sum 22798 ms, max 528 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:16:54 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-06-26 18:17:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 29 seconds
Variants: generated 400, build-succeeded 226, build-failed 121, syntax-invalid 32, redundant 21
Fitness: max 1(2), min 0(224), ave 0.009
Test execution time: sum 19788 ms, max 369 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:17:49 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-06-26 18:18:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 seconds
Variants: generated 400, build-succeeded 224, build-failed 118, syntax-invalid 25, redundant 33
Fitness: max 0(224), min 0(224), ave 0
Test execution time: sum 21215 ms, max 335 ms, min 55 ms
----------------------------------------------------------------

2023-06-26 18:18:49 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-06-26 18:22:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 17 seconds
Variants: generated 400, build-succeeded 228, build-failed 118, syntax-invalid 34, redundant 20
Fitness: max 1(1), min 0(227), ave 0.004
Test execution time: sum 195220 ms, max 180072 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 18:22:38 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-06-26 18:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 5 seconds
Variants: generated 400, build-succeeded 237, build-failed 104, syntax-invalid 29, redundant 30
Fitness: max 0(237), min 0(237), ave 0
Test execution time: sum 375189 ms, max 180066 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 18:29:26 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-06-26 18:36:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 51 seconds
Variants: generated 400, build-succeeded 233, build-failed 115, syntax-invalid 28, redundant 24
Fitness: max 0(233), min 0(233), ave 0
Test execution time: sum 374101 ms, max 180068 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:36:11 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-06-26 18:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 36 seconds
Variants: generated 400, build-succeeded 225, build-failed 106, syntax-invalid 44, redundant 25
Fitness: max 1(3), min 0(222), ave 0.013
Test execution time: sum 13856 ms, max 130 ms, min 54 ms
----------------------------------------------------------------

2023-06-26 18:36:57 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-06-26 18:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 21 seconds
Variants: generated 400, build-succeeded 232, build-failed 114, syntax-invalid 35, redundant 19
Fitness: max 1(1), min 0(231), ave 0.004
Test execution time: sum 14325 ms, max 187 ms, min 53 ms
----------------------------------------------------------------

2023-06-26 18:37:42 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-06-26 18:37:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 23 seconds
Variants: generated 14, build-succeeded 4, build-failed 7, syntax-invalid 1, redundant 2
Fitness: max 1(1), min 0(3), ave 0.25
Test execution time: sum 234 ms, max 62 ms, min 56 ms
----------------------------------------------------------------

2023-06-26 18:37:43 [main] [INFO]  KGenProgMain - GA stopped
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v67)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v67)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,7 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    increasing = true;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v67)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v67)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v116)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v116)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v116)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v116)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v156)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v156)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v156)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v156)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -258,7 +258,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (i <= maximalIterationCount) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v262)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v262)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v262)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v262)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v262)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -229,7 +229,6 @@
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v266)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v628)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v628)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v628)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v628)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v628)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v756)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v756)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v756)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v756)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v756)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v758)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v758)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v758)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v758)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1023)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1023)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -289,7 +289,7 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
+            double ta = t0;
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1023)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1023)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1035)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -273,7 +272,6 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1035)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1035)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1035)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1035)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1078)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1078)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -231,9 +231,6 @@
                             // properly ends exactly at the event occurrence
                             return false;
                         }
-                        // either we were not waiting for the event or it has
-                        // moved in such a way the step cannot be accepted
-                        pendingEvent = true;
                         return true;
                     }
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1078)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1078)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1078)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				return result;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,7 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        this.defaultRelativeAccuracy = 1.0e-14;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -212,6 +212,7 @@
                             }
                         }
                     };
+					previousEventTime = Double.NaN;
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1085)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1150)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1150)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1150)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1150)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1150)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1155)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1155)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1155)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1155)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1155)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1157)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
@@ -273,7 +273,6 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1157)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1157)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1157)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1157)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1334)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1334)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1334)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1334)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1334)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1342)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1342)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1342)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -304,7 +296,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1401)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -273,7 +273,6 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
       }
 
       return interpolatedState;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1401)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1401)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -104,7 +104,6 @@
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1405)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1408)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1408)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1408)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1414)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1414)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -247,7 +247,6 @@
 
             // no event during the whole step
             pendingEvent     = false;
-            pendingEventTime = Double.NaN;
             return false;
 
         } catch (FunctionEvaluationException e) {
@@ -285,7 +284,7 @@
         t0 = t;
         g0 = handler.g(t, y);
 
-        if (pendingEvent) {
+        if (!pendingEvent) {
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1414)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1453)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1453)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1453)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1453)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1453)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,7 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    interpolatedTime = Double.NaN;
   }
 
   /** Simple constructor.
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1474)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1524)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1524)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -169,7 +169,8 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEvent = false;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1536)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -289,7 +289,7 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
+            double ta = t0;
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1569)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -285,7 +285,7 @@
         t0 = t;
         g0 = handler.g(t, y);
 
-        if (pendingEvent) {
+        if (!pendingEvent) {
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1571)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1581)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1581)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1581)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1581)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -271,15 +271,12 @@
                 }
                 if (p > 0.0) {
                     p1 = -p1;
+					delta = x1 - x0;
                 } else {
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1582)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -208,7 +208,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
@@ -269,12 +268,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1582)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1582)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1582)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1582)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		g0Positive = increasing;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1590)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -289,7 +289,7 @@
             // force the sign to its value "just after the event"
             previousEventTime = t;
             g0Positive        = increasing;
-            nextAction        = handler.eventOccurred(t, y, !(increasing ^ forward));
+            double ta = t0;
         } else {
             g0Positive = g0 >= 0;
             nextAction = EventHandler.CONTINUE;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1812)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1820)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,10 +275,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +299,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1867)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1867)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		g0Positive = increasing;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1867)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1867)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1867)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1885)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1885)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1885)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1885)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1885)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,10 +275,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1886)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1886)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1886)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1886)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1886)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,10 +275,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1890)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1890)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1890)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1890)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1890)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -229,7 +229,6 @@
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
-                y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1891)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -242,7 +242,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1891)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1891)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1891)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1891)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				return result;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:47 [main] [INFO]  PatchLogExporter - patch (v1917)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1935)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -218,6 +218,7 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
+	previousTime = Double.NaN;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1946)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1970)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -95,6 +95,7 @@
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
+	dirtyState = true;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1970)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1970)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1970)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1970)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1986)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1986)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1986)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v1986)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2332)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,6 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2332)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2332)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2332)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2332)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -276,10 +275,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2474)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2474)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2474)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2474)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2474)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2493)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2493)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2493)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2493)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2493)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,7 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    clearResult();
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2567)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2567)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2567)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2567)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2567)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2653)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2653)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -105,7 +105,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2653)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2653)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2653)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2853)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v2938)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3024)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3195)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,6 +94,7 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
+		pendingEvent = true;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -174,7 +175,8 @@
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
-            double ta = t0;
+            final double t0 = interpolator.getPreviousTime();
+			double ta = t0;
             double ga = g0;
             double tb = t0 + (interpolator.isForward() ? convergence : -convergence);
             for (int i = 0; i < n; ++i) {
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,6 +94,7 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
+		pendingEvent = true;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3373)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,6 +94,7 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
+		pendingEvent = true;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3393)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        g0 = Double.NaN;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -282,7 +283,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				y2 = y0;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        g0 = Double.NaN;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3621)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				y2 = y0;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		g0Positive = increasing;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3882)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,9 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -269,12 +267,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,6 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		g0Positive = increasing;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v3987)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4017)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -288,7 +284,8 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
@@ -304,7 +301,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4122)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -288,7 +288,8 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4161)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,12 +269,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		finalizeStep();
 
       return interpolatedState;
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4161)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4161)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4161)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4161)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -288,7 +280,8 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
@@ -304,7 +297,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4223)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4223)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4223)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4223)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (Math.abs(oldDelta) < Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				y2 = y0;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
@@ -276,10 +271,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,6 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -94,6 +94,7 @@
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
         this.handler           = handler;
+		pendingEvent = true;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4342)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v4609)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -96,7 +96,8 @@
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    currentTime = Double.NaN;
+	this.dirtyState         = true;
   }
 
   /** Simple constructor.
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,8 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
+        g0 = Double.NaN;
+		nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5569)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (Math.abs(oldDelta) < Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5822)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v5822)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (Math.abs(oldDelta) < Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
@@ -232,13 +232,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				y2 = y0;
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
@@ -270,7 +265,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
@@ -304,7 +298,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v6789)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v6789)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v6789)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v6789)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v6789)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -106,7 +106,7 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
+    h = -h;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8816)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -106,7 +106,7 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
+    h = -h;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8843)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8886)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -106,7 +106,7 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
+    h = -h;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8886)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8886)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8886)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v8886)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9000)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -106,7 +106,7 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
+    h = -h;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9000)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9000)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9000)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9000)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9490)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9490)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,11 +101,10 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
+        g0 = Double.NaN;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -181,7 +180,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9490)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9490)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v9490)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y1 == 0.0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,7 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    h = -h;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
@@ -113,8 +113,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
     finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
@@ -217,7 +215,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -100,7 +100,6 @@
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v10849)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -115,7 +114,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +175,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -242,7 +239,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,6 +101,8 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -169,7 +171,8 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEventTime = Double.NaN;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27288)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,11 +276,8 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
+                    oldDelta = delta;
                 } else {
                     oldDelta = delta;
                     delta = p / p1;
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27347)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -115,7 +114,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +175,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -242,7 +239,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27347)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27347)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,6 +101,8 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -169,7 +171,8 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEventTime = Double.NaN;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27347)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:48 [main] [INFO]  PatchLogExporter - patch (v27347)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -115,7 +114,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +175,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -242,7 +239,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,6 +101,8 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -169,7 +171,8 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEventTime = Double.NaN;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27383)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -115,7 +114,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -177,7 +175,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = isForward;
     this.dirtyState   = true;
 
@@ -242,7 +239,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,6 +101,8 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -169,7 +171,8 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEventTime = Double.NaN;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v27392)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,11 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    interpolatedTime = Double.NaN;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +115,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        final BrentSolver solver = new BrentSolver();
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -169,7 +169,9 @@
 
         try {
 
-            forward = interpolator.isForward();
+            pendingEventTime = Double.NaN;
+			pendingEventTime = Double.NaN;
+			forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28195)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -288,7 +288,9 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +116,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,11 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28889)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +116,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,11 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v28942)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +116,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,11 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29655)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +116,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,11 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -171,6 +170,7 @@
 
             forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
+			final double t0 = interpolator.getPreviousTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29754)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,12 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +116,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -218,8 +218,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -101,12 +101,11 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
+		pendingEventTime = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -282,7 +281,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v29765)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,19 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
+	finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -242,7 +244,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        pendingEvent = true;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34028)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,6 +106,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		int i = 0;
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
             return result;
@@ -276,10 +277,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,16 +87,19 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
+	finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -106,7 +109,6 @@
    */
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
-    previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
@@ -242,7 +244,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -103,7 +103,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        pendingEvent = true;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v34173)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,6 +106,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		int i = 0;
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
             return result;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,16 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -218,8 +220,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +242,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,10 +102,11 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        final BrentSolver solver = new BrentSolver();
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
+		pendingEventTime = Double.NaN;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35699)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -288,7 +288,9 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,16 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -218,8 +220,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
@@ -242,7 +242,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,10 +102,11 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        final BrentSolver solver = new BrentSolver();
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
+		pendingEventTime = Double.NaN;
         nextAction        = EventHandler.CONTINUE;
 
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v35746)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -288,7 +280,9 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,15 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -242,7 +246,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,7 +102,7 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
+        final BrentSolver solver = new BrentSolver();
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v36519)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -288,7 +280,10 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37893)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,13 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
-    currentState            = null;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -109,7 +108,9 @@
     previousTime      = Double.NaN;
     currentTime       = Double.NaN;
     h                 = Double.NaN;
-    interpolatedTime  = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime  = Double.NaN;
 
     currentState            = y;
     interpolatedState       = new double[y.length];
@@ -242,7 +243,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37893)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37893)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37893)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37893)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -288,7 +284,11 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37901)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,15 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -113,9 +114,6 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
-    interpolatedDerivatives = new double[y.length];
-
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -242,7 +240,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37901)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37901)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37901)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,7 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
+                    resultComputed = true;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -288,7 +288,10 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
@@ -304,7 +307,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,16 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -115,7 +117,6 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
     this.forward      = forward;
     this.dirtyState   = true;
 
@@ -242,7 +243,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v37941)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,6 +106,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+		int i = 0;
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
             return result;
@@ -288,7 +289,9 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,17 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -112,7 +115,7 @@
     interpolatedTime  = Double.NaN;
 
     currentState            = y;
-    interpolatedState       = new double[y.length];
+    dirtyState = true;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
@@ -242,7 +245,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
@@ -269,12 +273,8 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
-          final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
-      }
+      if (dirtyState)
+		this.dirtyState = true;
 
       return interpolatedState;
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,6 +106,7 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
+		pendingEventTime = Double.NaN;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38368)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -288,7 +288,8 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
@@ -304,7 +305,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,13 +90,19 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
+    h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	h = currentTime - previousTime;
+	interpolatedTime = Double.NaN;
+	interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
     finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
+    finalized = false;
   }
 
   /** Simple constructor.
@@ -242,7 +248,8 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
+      dirtyState = false;
+	interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -102,8 +102,8 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        final BrentSolver solver = new BrentSolver();
+        pendingEvent = true;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +282,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-06-26 18:37:49 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				delta = x1 - x0;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -288,7 +281,8 @@
             }
             // Save old X1, Y1
             x0 = x1;
-            y0 = y1;
+            y1 = f.value(x1);
+			y0 = y1;
             // Compute new X1, Y1
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
2023-06-26 18:37:49 [main] [INFO]  KGenProgMain - Summary
Reached generation = 98
Generated variants = 38414
Syntax valid variants = 35339
Build succeeded variants = 19969
Time elapsed = 4 hours 19 minutes 28 seconds
Exit status = SUCCESS
