2023-08-01 11:58:56 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-01 11:58:56 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-01 11:58:56 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-01 11:58:57 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 0 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-01 11:59:04 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-01 11:59:05 [main] [INFO]  KGenProgMain - GA started
2023-08-01 11:59:05 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-01 12:02:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 1 seconds
Variants: generated 50, build-succeeded 4, build-failed 33, syntax-invalid 5, redundant 8
Fitness: max 1(1), min 0.769(1), ave 0.904
Test execution time: sum 180543 ms, max 180133 ms, min 117 ms
----------------------------------------------------------------

2023-08-01 12:02:06 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-01 12:05:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 3 seconds
Variants: generated 50, build-succeeded 6, build-failed 34, syntax-invalid 6, redundant 4
Fitness: max 0.923(5), min 0.769(1), ave 0.897
Test execution time: sum 180600 ms, max 180108 ms, min 92 ms
----------------------------------------------------------------

2023-08-01 12:05:08 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-01 12:29:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 5 seconds
Variants: generated 100, build-succeeded 14, build-failed 28, syntax-invalid 18, redundant 40
Fitness: max 1(1), min 0.769(6), ave 0.841
Test execution time: sum 1441258 ms, max 360095 ms, min 81 ms
----------------------------------------------------------------

2023-08-01 12:29:10 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-01 12:41:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 7 seconds
Variants: generated 100, build-succeeded 11, build-failed 34, syntax-invalid 16, redundant 39
Fitness: max 0.923(4), min 0.615(1), ave 0.846
Test execution time: sum 720958 ms, max 360088 ms, min 79 ms
----------------------------------------------------------------

2023-08-01 12:41:12 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-01 12:56:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 10 seconds
Variants: generated 100, build-succeeded 18, build-failed 34, syntax-invalid 14, redundant 34
Fitness: max 0.923(6), min 0.385(1), ave 0.846
Test execution time: sum 901638 ms, max 360089 ms, min 73 ms
----------------------------------------------------------------

2023-08-01 12:56:15 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-01 13:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 14 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 14, redundant 28
Fitness: max 1(2), min 0.846(14), ave 0.894
Test execution time: sum 2702817 ms, max 360089 ms, min 74 ms
----------------------------------------------------------------

2023-08-01 13:41:19 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-01 13:41:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 17 seconds
Variants: generated 100, build-succeeded 25, build-failed 29, syntax-invalid 13, redundant 33
Fitness: max 0.923(25), min 0.923(25), ave 0.923
Test execution time: sum 2235 ms, max 101 ms, min 76 ms
----------------------------------------------------------------

2023-08-01 13:41:22 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-01 13:41:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 20 seconds
Variants: generated 100, build-succeeded 21, build-failed 29, syntax-invalid 16, redundant 34
Fitness: max 1(1), min 0.692(1), ave 0.912
Test execution time: sum 1863 ms, max 108 ms, min 77 ms
----------------------------------------------------------------

2023-08-01 13:41:25 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-01 13:41:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 23 seconds
Variants: generated 100, build-succeeded 23, build-failed 35, syntax-invalid 16, redundant 26
Fitness: max 0.923(23), min 0.923(23), ave 0.923
Test execution time: sum 2066 ms, max 112 ms, min 81 ms
----------------------------------------------------------------

2023-08-01 13:41:29 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-01 13:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 27 seconds
Variants: generated 100, build-succeeded 24, build-failed 33, syntax-invalid 12, redundant 31
Fitness: max 1(2), min 0.923(22), ave 0.929
Test execution time: sum 2263 ms, max 109 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 13:41:32 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-01 13:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 30 seconds
Variants: generated 100, build-succeeded 26, build-failed 31, syntax-invalid 13, redundant 30
Fitness: max 1(2), min 0.462(1), ave 0.911
Test execution time: sum 2341 ms, max 109 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 13:41:35 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-01 13:41:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 34 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 20, redundant 22
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 2900 ms, max 121 ms, min 81 ms
----------------------------------------------------------------

2023-08-01 13:41:39 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-01 14:05:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 38 seconds
Variants: generated 100, build-succeeded 30, build-failed 35, syntax-invalid 12, redundant 23
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 1442725 ms, max 1440070 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 14:05:44 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-01 14:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 43 seconds
Variants: generated 100, build-succeeded 41, build-failed 27, syntax-invalid 7, redundant 25
Fitness: max 0.923(39), min 0.846(2), ave 0.919
Test execution time: sum 363715 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 14:11:48 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-01 14:11:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 48 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 5, redundant 24
Fitness: max 0.923(36), min 0.462(1), ave 0.909
Test execution time: sum 3432 ms, max 106 ms, min 83 ms
----------------------------------------------------------------

2023-08-01 14:11:53 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-01 14:20:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 53 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 11, redundant 15
Fitness: max 0.923(38), min 0.846(3), ave 0.917
Test execution time: sum 543732 ms, max 360086 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 14:20:58 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-01 14:21:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 58 seconds
Variants: generated 100, build-succeeded 32, build-failed 42, syntax-invalid 13, redundant 13
Fitness: max 0.923(32), min 0.923(32), ave 0.923
Test execution time: sum 3033 ms, max 109 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 14:21:03 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-01 14:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 1 seconds
Variants: generated 100, build-succeeded 23, build-failed 35, syntax-invalid 19, redundant 23
Fitness: max 0.923(23), min 0.923(23), ave 0.923
Test execution time: sum 2081 ms, max 107 ms, min 78 ms
----------------------------------------------------------------

2023-08-01 14:21:07 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-01 14:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 6 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 14, redundant 18
Fitness: max 0.923(34), min 0.385(1), ave 0.895
Test execution time: sum 1443221 ms, max 1440067 ms, min 69 ms
----------------------------------------------------------------

2023-08-01 14:45:11 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-01 14:45:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 11 seconds
Variants: generated 100, build-succeeded 40, build-failed 32, syntax-invalid 14, redundant 14
Fitness: max 1(1), min 0.923(39), ave 0.925
Test execution time: sum 3665 ms, max 164 ms, min 80 ms
----------------------------------------------------------------

2023-08-01 14:45:16 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-01 14:57:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 16 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 15, redundant 20
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 723017 ms, max 360088 ms, min 80 ms
----------------------------------------------------------------

2023-08-01 14:57:21 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-01 15:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 20 seconds
Variants: generated 100, build-succeeded 37, build-failed 26, syntax-invalid 22, redundant 15
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183324 ms, max 180084 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 15:00:25 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-01 15:00:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 26 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 8, redundant 11
Fitness: max 1(2), min 0.923(44), ave 0.926
Test execution time: sum 4074 ms, max 103 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 15:00:31 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-01 15:30:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 31 seconds
Variants: generated 100, build-succeeded 39, build-failed 34, syntax-invalid 11, redundant 16
Fitness: max 1(1), min 0.385(1), ave 0.909
Test execution time: sum 1803521 ms, max 1440067 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 15:30:36 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-01 15:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 36 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 8, redundant 21
Fitness: max 0.923(39), min 0.462(1), ave 0.91
Test execution time: sum 183639 ms, max 180069 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 15:33:41 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-01 15:33:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 41 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 17, redundant 10
Fitness: max 0.923(44), min 0.923(44), ave 0.923
Test execution time: sum 4025 ms, max 118 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 15:33:46 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-01 15:33:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 46 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 23, redundant 6
Fitness: max 0.923(39), min 0.846(1), ave 0.921
Test execution time: sum 3592 ms, max 110 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 15:33:51 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-01 15:33:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 51 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 17, redundant 14
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 3538 ms, max 112 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 15:33:56 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-01 15:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 56 seconds
Variants: generated 100, build-succeeded 37, build-failed 36, syntax-invalid 14, redundant 13
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3325 ms, max 105 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 15:34:01 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-01 15:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 0 seconds
Variants: generated 100, build-succeeded 33, build-failed 34, syntax-invalid 18, redundant 15
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 3002 ms, max 115 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 15:34:06 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-01 15:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 5 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 16, redundant 15
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3535 ms, max 105 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 15:34:10 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-01 15:37:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 10 seconds
Variants: generated 100, build-succeeded 35, build-failed 37, syntax-invalid 19, redundant 9
Fitness: max 0.923(32), min 0.846(3), ave 0.916
Test execution time: sum 183161 ms, max 180097 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 15:37:15 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-01 15:49:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 15 seconds
Variants: generated 100, build-succeeded 37, build-failed 28, syntax-invalid 21, redundant 14
Fitness: max 0.923(34), min 0.462(1), ave 0.906
Test execution time: sum 723471 ms, max 360093 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 15:49:20 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-01 15:49:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 20 seconds
Variants: generated 100, build-succeeded 37, build-failed 28, syntax-invalid 23, redundant 12
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 3619 ms, max 116 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 15:49:25 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-01 15:49:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 25 seconds
Variants: generated 100, build-succeeded 40, build-failed 39, syntax-invalid 9, redundant 12
Fitness: max 1(1), min 0.923(39), ave 0.925
Test execution time: sum 3639 ms, max 105 ms, min 77 ms
----------------------------------------------------------------

2023-08-01 15:49:30 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-01 15:52:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 31 seconds
Variants: generated 100, build-succeeded 49, build-failed 24, syntax-invalid 14, redundant 13
Fitness: max 1(4), min 0.846(3), ave 0.925
Test execution time: sum 184549 ms, max 180089 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 15:52:36 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-01 16:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 35 seconds
Variants: generated 100, build-succeeded 31, build-failed 34, syntax-invalid 22, redundant 13
Fitness: max 0.923(28), min 0.846(3), ave 0.916
Test execution time: sum 722843 ms, max 360093 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:04:40 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-01 16:04:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 41 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 12, redundant 10
Fitness: max 0.923(46), min 0.462(1), ave 0.913
Test execution time: sum 4279 ms, max 101 ms, min 69 ms
----------------------------------------------------------------

2023-08-01 16:04:46 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-01 16:07:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 47 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 10, redundant 13
Fitness: max 1(1), min 0.769(1), ave 0.921
Test execution time: sum 183979 ms, max 180086 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:07:52 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-01 16:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 53 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 11, redundant 10
Fitness: max 0.923(51), min 0.846(1), ave 0.922
Test execution time: sum 364783 ms, max 360088 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:13:58 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-01 16:20:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 10, redundant 15
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 364396 ms, max 360089 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:20:04 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-01 16:20:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 5 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 7, redundant 17
Fitness: max 0.923(45), min 0.923(45), ave 0.923
Test execution time: sum 4251 ms, max 107 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:20:10 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-01 16:23:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 11 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 4, redundant 14
Fitness: max 0.923(48), min 0.846(2), ave 0.92
Test execution time: sum 184760 ms, max 180087 ms, min 80 ms
----------------------------------------------------------------

2023-08-01 16:23:16 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-01 16:23:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 4, redundant 14
Fitness: max 0.923(46), min 0.846(2), ave 0.92
Test execution time: sum 4415 ms, max 180 ms, min 80 ms
----------------------------------------------------------------

2023-08-01 16:23:22 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-01 16:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 23 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 7, redundant 11
Fitness: max 1(2), min 0.923(48), ave 0.926
Test execution time: sum 4626 ms, max 125 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:23:29 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-01 16:26:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 29 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 15, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183705 ms, max 180090 ms, min 75 ms
----------------------------------------------------------------

2023-08-01 16:26:34 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-01 16:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 35 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 11, redundant 8
Fitness: max 0.923(45), min 0.923(45), ave 0.923
Test execution time: sum 4100 ms, max 130 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:26:40 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-01 16:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 40 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 15, redundant 8
Fitness: max 1(2), min 0.923(41), ave 0.927
Test execution time: sum 3898 ms, max 127 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:26:45 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-01 16:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 46 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 11, redundant 13
Fitness: max 0.923(45), min 0.462(1), ave 0.912
Test execution time: sum 364207 ms, max 360087 ms, min 69 ms
----------------------------------------------------------------

2023-08-01 16:32:51 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-01 16:32:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.923(56), ave 0.924
Test execution time: sum 5160 ms, max 119 ms, min 85 ms
----------------------------------------------------------------

2023-08-01 16:32:58 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-01 16:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 58 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 19, redundant 6
Fitness: max 0.923(40), min 0.846(2), ave 0.919
Test execution time: sum 543825 ms, max 360090 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 16:42:03 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-01 16:42:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 4 seconds
Variants: generated 100, build-succeeded 44, build-failed 37, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.385(1), ave 0.913
Test execution time: sum 3986 ms, max 121 ms, min 82 ms
----------------------------------------------------------------

2023-08-01 16:42:09 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-01 16:42:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 9 seconds
Variants: generated 100, build-succeeded 41, build-failed 39, syntax-invalid 10, redundant 10
Fitness: max 1(1), min 0.923(40), ave 0.925
Test execution time: sum 3739 ms, max 117 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:42:14 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-01 16:42:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 42 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 6, redundant 22
Fitness: max 0.923(43), min 0.462(1), ave 0.913
Test execution time: sum 31370 ms, max 27438 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:42:47 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-01 16:45:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 47 seconds
Variants: generated 100, build-succeeded 41, build-failed 38, syntax-invalid 9, redundant 12
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 183800 ms, max 180099 ms, min 77 ms
----------------------------------------------------------------

2023-08-01 16:45:53 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-01 16:45:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 52 seconds
Variants: generated 100, build-succeeded 35, build-failed 37, syntax-invalid 16, redundant 12
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3221 ms, max 118 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:45:57 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-01 16:46:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 57 seconds
Variants: generated 100, build-succeeded 38, build-failed 34, syntax-invalid 15, redundant 13
Fitness: max 0.923(37), min 0.846(1), ave 0.921
Test execution time: sum 3508 ms, max 116 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 16:46:02 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-01 16:46:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 1 seconds
Variants: generated 100, build-succeeded 26, build-failed 34, syntax-invalid 21, redundant 19
Fitness: max 1(1), min 0.923(25), ave 0.926
Test execution time: sum 2393 ms, max 119 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:46:06 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-01 16:46:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 6 seconds
Variants: generated 100, build-succeeded 35, build-failed 29, syntax-invalid 16, redundant 20
Fitness: max 0.923(35), min 0.923(35), ave 0.923
Test execution time: sum 3210 ms, max 114 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 16:46:11 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-01 16:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 11 seconds
Variants: generated 100, build-succeeded 41, build-failed 27, syntax-invalid 22, redundant 10
Fitness: max 1(2), min 0.923(39), ave 0.927
Test execution time: sum 3730 ms, max 105 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 16:46:16 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-01 16:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 16 seconds
Variants: generated 100, build-succeeded 33, build-failed 32, syntax-invalid 19, redundant 16
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3057 ms, max 105 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:46:21 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-01 16:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 9, redundant 12
Fitness: max 0.923(46), min 0.615(1), ave 0.914
Test execution time: sum 184547 ms, max 180091 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 16:49:27 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-01 16:55:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 27 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 21, redundant 9
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363463 ms, max 360090 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:55:32 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-01 16:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 32 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 15, redundant 19
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 183132 ms, max 180087 ms, min 83 ms
----------------------------------------------------------------

2023-08-01 16:58:37 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-01 16:58:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 38 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 13, redundant 14
Fitness: max 1(1), min 0.615(1), ave 0.917
Test execution time: sum 3792 ms, max 109 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 16:58:43 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-01 16:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 43 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 14, redundant 11
Fitness: max 0.923(43), min 0.846(1), ave 0.921
Test execution time: sum 4098 ms, max 110 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 16:58:48 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-01 17:01:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 48 seconds
Variants: generated 100, build-succeeded 37, build-failed 28, syntax-invalid 20, redundant 15
Fitness: max 1(1), min 0.462(1), ave 0.911
Test execution time: sum 183430 ms, max 180087 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 17:01:54 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-01 17:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 54 seconds
Variants: generated 100, build-succeeded 38, build-failed 35, syntax-invalid 18, redundant 9
Fitness: max 0.923(38), min 0.923(38), ave 0.923
Test execution time: sum 3594 ms, max 112 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 17:01:59 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-01 17:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 59 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 18, redundant 13
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 183330 ms, max 180092 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 17:05:04 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-01 17:05:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 3 seconds
Variants: generated 100, build-succeeded 29, build-failed 35, syntax-invalid 24, redundant 12
Fitness: max 0.923(29), min 0.923(29), ave 0.923
Test execution time: sum 2608 ms, max 99 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:05:08 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-01 17:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 8 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 18, redundant 8
Fitness: max 0.923(39), min 0.923(39), ave 0.923
Test execution time: sum 3496 ms, max 119 ms, min 78 ms
----------------------------------------------------------------

2023-08-01 17:05:13 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-01 17:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 14 seconds
Variants: generated 100, build-succeeded 40, build-failed 38, syntax-invalid 12, redundant 10
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3672 ms, max 126 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 17:05:19 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-01 17:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 18 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 23, redundant 9
Fitness: max 1(1), min 0.923(32), ave 0.925
Test execution time: sum 3021 ms, max 134 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 17:05:23 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-01 17:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 12 minutes 24 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 11, redundant 15
Fitness: max 0.923(42), min 0.846(1), ave 0.921
Test execution time: sum 363892 ms, max 360084 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:11:29 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-01 17:17:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 29 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363660 ms, max 360089 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 17:17:34 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-01 17:23:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 35 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 12, redundant 11
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 364014 ms, max 360087 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:23:40 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-01 17:23:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 40 seconds
Variants: generated 100, build-succeeded 36, build-failed 38, syntax-invalid 21, redundant 5
Fitness: max 0.923(35), min 0.846(1), ave 0.921
Test execution time: sum 3265 ms, max 120 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 17:23:45 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-01 17:23:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 46 seconds
Variants: generated 100, build-succeeded 42, build-failed 37, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3824 ms, max 121 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 17:23:51 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-01 17:23:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 51 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 16, redundant 10
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3384 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 17:23:56 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-01 17:24:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 56 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 16, redundant 15
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3382 ms, max 113 ms, min 81 ms
----------------------------------------------------------------

2023-08-01 17:24:01 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-01 17:24:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 1 seconds
Variants: generated 100, build-succeeded 32, build-failed 40, syntax-invalid 15, redundant 13
Fitness: max 0.923(32), min 0.923(32), ave 0.923
Test execution time: sum 2924 ms, max 116 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:24:06 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-01 17:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 5 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 13, redundant 19
Fitness: max 0.923(31), min 0.846(2), ave 0.918
Test execution time: sum 183028 ms, max 180087 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 17:27:10 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-01 17:27:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 10 seconds
Variants: generated 100, build-succeeded 35, build-failed 32, syntax-invalid 12, redundant 21
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3165 ms, max 100 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:27:15 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-01 17:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 15 seconds
Variants: generated 100, build-succeeded 33, build-failed 31, syntax-invalid 23, redundant 13
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2990 ms, max 123 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 17:27:20 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-01 17:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 20 seconds
Variants: generated 100, build-succeeded 39, build-failed 28, syntax-invalid 18, redundant 15
Fitness: max 1(1), min 0.462(1), ave 0.911
Test execution time: sum 3483 ms, max 123 ms, min 69 ms
----------------------------------------------------------------

2023-08-01 17:27:25 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-01 17:27:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 25 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 9, redundant 19
Fitness: max 1(1), min 0.385(1), ave 0.912
Test execution time: sum 3719 ms, max 127 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:27:30 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-01 17:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 34 minutes 31 seconds
Variants: generated 100, build-succeeded 44, build-failed 26, syntax-invalid 16, redundant 14
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363998 ms, max 360088 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:33:36 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-01 17:36:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 36 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 19, redundant 18
Fitness: max 0.923(31), min 0.846(2), ave 0.918
Test execution time: sum 183004 ms, max 180087 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:36:41 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-01 17:36:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 41 seconds
Variants: generated 100, build-succeeded 36, build-failed 34, syntax-invalid 15, redundant 15
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3303 ms, max 128 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 17:36:46 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-01 17:36:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 46 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 14, redundant 9
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3901 ms, max 124 ms, min 84 ms
----------------------------------------------------------------

2023-08-01 17:36:52 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-01 17:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 52 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 21, redundant 10
Fitness: max 0.923(36), min 0.462(1), ave 0.911
Test execution time: sum 3398 ms, max 126 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:36:57 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-01 17:37:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 37 minutes 57 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 16, redundant 14
Fitness: max 0.923(41), min 0.846(1), ave 0.921
Test execution time: sum 3858 ms, max 122 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:37:02 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-01 17:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 2 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 22, redundant 4
Fitness: max 0.923(37), min 0.385(1), ave 0.907
Test execution time: sum 183532 ms, max 180091 ms, min 82 ms
----------------------------------------------------------------

2023-08-01 17:40:08 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-01 17:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 8 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 13, redundant 15
Fitness: max 1(4), min 0.846(1), ave 0.929
Test execution time: sum 3732 ms, max 116 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 17:40:13 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-01 17:43:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 13 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 14, redundant 18
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183385 ms, max 180102 ms, min 77 ms
----------------------------------------------------------------

2023-08-01 17:43:18 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-01 17:46:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 18 seconds
Variants: generated 100, build-succeeded 32, build-failed 30, syntax-invalid 20, redundant 18
Fitness: max 0.923(30), min 0.462(1), ave 0.906
Test execution time: sum 182906 ms, max 180088 ms, min 70 ms
----------------------------------------------------------------

2023-08-01 17:46:23 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-01 17:52:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 17, redundant 15
Fitness: max 0.923(31), min 0.462(1), ave 0.907
Test execution time: sum 363031 ms, max 360105 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:52:27 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-01 17:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 27 seconds
Variants: generated 100, build-succeeded 38, build-failed 27, syntax-invalid 13, redundant 22
Fitness: max 1(3), min 0.385(1), ave 0.901
Test execution time: sum 363468 ms, max 360067 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 17:58:33 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-01 17:58:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 33 seconds
Variants: generated 100, build-succeeded 39, build-failed 34, syntax-invalid 14, redundant 13
Fitness: max 1(4), min 0.462(1), ave 0.919
Test execution time: sum 3631 ms, max 113 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 17:58:38 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-01 17:58:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 37 seconds
Variants: generated 100, build-succeeded 27, build-failed 36, syntax-invalid 21, redundant 16
Fitness: max 0.923(26), min 0.462(1), ave 0.906
Test execution time: sum 2465 ms, max 114 ms, min 68 ms
----------------------------------------------------------------

2023-08-01 17:58:42 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-01 18:01:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 42 seconds
Variants: generated 100, build-succeeded 38, build-failed 27, syntax-invalid 10, redundant 25
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 183536 ms, max 180091 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:01:47 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-01 18:07:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 47 seconds
Variants: generated 100, build-succeeded 30, build-failed 27, syntax-invalid 21, redundant 22
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 362771 ms, max 360089 ms, min 90 ms
----------------------------------------------------------------

2023-08-01 18:07:52 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-01 18:07:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 51 seconds
Variants: generated 100, build-succeeded 31, build-failed 30, syntax-invalid 21, redundant 18
Fitness: max 0.923(30), min 0.846(1), ave 0.921
Test execution time: sum 2899 ms, max 109 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:07:57 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-01 18:08:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 57 seconds
Variants: generated 100, build-succeeded 39, build-failed 36, syntax-invalid 14, redundant 11
Fitness: max 1(2), min 0.385(1), ave 0.913
Test execution time: sum 3661 ms, max 108 ms, min 81 ms
----------------------------------------------------------------

2023-08-01 18:08:02 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-01 18:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 2 seconds
Variants: generated 100, build-succeeded 35, build-failed 35, syntax-invalid 21, redundant 9
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363288 ms, max 360094 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:14:07 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-01 18:14:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 6 seconds
Variants: generated 100, build-succeeded 22, build-failed 38, syntax-invalid 23, redundant 17
Fitness: max 0.923(22), min 0.923(22), ave 0.923
Test execution time: sum 2055 ms, max 114 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:14:11 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-01 18:14:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 10 seconds
Variants: generated 100, build-succeeded 31, build-failed 33, syntax-invalid 14, redundant 22
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 2869 ms, max 105 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:14:16 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-01 18:14:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 15 seconds
Variants: generated 100, build-succeeded 35, build-failed 30, syntax-invalid 19, redundant 16
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3241 ms, max 101 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 18:14:21 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-01 18:20:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 20 seconds
Variants: generated 100, build-succeeded 35, build-failed 29, syntax-invalid 21, redundant 15
Fitness: max 0.923(32), min 0.846(3), ave 0.916
Test execution time: sum 363154 ms, max 180090 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 18:20:26 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-01 18:20:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 25 seconds
Variants: generated 100, build-succeeded 28, build-failed 29, syntax-invalid 24, redundant 19
Fitness: max 0.923(27), min 0.462(1), ave 0.907
Test execution time: sum 2538 ms, max 117 ms, min 70 ms
----------------------------------------------------------------

2023-08-01 18:20:30 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-01 18:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 29 seconds
Variants: generated 100, build-succeeded 24, build-failed 30, syntax-invalid 31, redundant 15
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 2197 ms, max 136 ms, min 86 ms
----------------------------------------------------------------

2023-08-01 18:20:34 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-01 18:20:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 34 seconds
Variants: generated 100, build-succeeded 36, build-failed 29, syntax-invalid 17, redundant 18
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3242 ms, max 116 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 18:20:39 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-01 18:20:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 39 seconds
Variants: generated 100, build-succeeded 36, build-failed 23, syntax-invalid 17, redundant 24
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3267 ms, max 121 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 18:20:44 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-01 18:29:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 43 seconds
Variants: generated 100, build-succeeded 28, build-failed 33, syntax-invalid 22, redundant 17
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 542603 ms, max 360088 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 18:29:48 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-01 18:29:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 48 seconds
Variants: generated 100, build-succeeded 30, build-failed 36, syntax-invalid 16, redundant 18
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 2729 ms, max 121 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 18:29:53 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-01 18:29:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 52 seconds
Variants: generated 100, build-succeeded 30, build-failed 34, syntax-invalid 18, redundant 18
Fitness: max 0.923(30), min 0.923(30), ave 0.923
Test execution time: sum 2729 ms, max 124 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 18:29:57 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-01 18:30:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 58 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 18, redundant 12
Fitness: max 0.923(37), min 0.615(1), ave 0.913
Test execution time: sum 3582 ms, max 159 ms, min 87 ms
----------------------------------------------------------------

2023-08-01 18:30:03 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-01 18:33:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 3 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 22, redundant 11
Fitness: max 1(3), min 0.846(2), ave 0.925
Test execution time: sum 183288 ms, max 180088 ms, min 88 ms
----------------------------------------------------------------

2023-08-01 18:33:08 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-01 18:33:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 5 seconds
Variants: generated 45, build-succeeded 4, build-failed 36, syntax-invalid 1, redundant 4
Fitness: max 1(1), min 0.923(3), ave 0.942
Test execution time: sum 377 ms, max 108 ms, min 89 ms
----------------------------------------------------------------

2023-08-01 18:33:10 [main] [INFO]  KGenProgMain - GA stopped
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v32)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v447)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v447)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v447)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v447)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,8 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            if (p > .5) {
+            }
         }
 
         // find root
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v822)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v822)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:10 [main] [INFO]  PatchLogExporter - patch (v822)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v925)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v925)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -98,7 +98,6 @@
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v925)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v925)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v926)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v926)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v926)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,8 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
+            if (p > .5) {
             }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v926)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v926)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1004)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1004)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,11 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
+            if (p > .5) {
             }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1148)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,11 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1148)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1148)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1803)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1803)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p > .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1803)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v1941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2009)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -117,7 +118,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2009)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2009)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2009)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2009)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2049)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -98,7 +98,6 @@
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2121)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2623)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,9 +102,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -117,7 +115,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -117,7 +119,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2736)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int iterationCount = 0;
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2909)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v2947)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -174,7 +174,8 @@
                 n = n + 1.0;
                 an = an * (x / (a + n));
 
-                // update partial sum
+                double inv = 1 / (x * x);
+				// update partial sum
                 sum = sum + an;
             }
             if (n >= maxIterations) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3241)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3314)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3418)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -104,8 +103,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3418)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3418)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3418)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3418)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3425)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3428)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +117,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3428)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            fa = function.value(a);
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3428)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -105,7 +104,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -174,7 +174,8 @@
                 n = n + 1.0;
                 an = an * (x / (a + n));
 
-                // update partial sum
+                double inv = 1 / (x * x);
+				// update partial sum
                 sum = sum + an;
             }
             if (n >= maxIterations) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3444)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3743)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -105,7 +104,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3743)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3743)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3743)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v3743)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +201,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            fa = function.value(a);
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4346)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4346)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4346)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4346)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4346)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4416)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            fa = function.value(a);
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4605)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +201,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4622)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4622)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4622)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            fa = function.value(a);
+			fb = function.value(b);
+            double x1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4622)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4801)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v4801)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -105,7 +104,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +133,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5037)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5104)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5104)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5104)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,12 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            fa = function.value(a);
+			fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5104)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5104)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5437)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +119,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5643)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +136,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5809)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +117,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v5938)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +201,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6104)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6330)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6507)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +118,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        printStackTrace(System.err);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6507)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6507)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6507)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:11 [main] [INFO]  PatchLogExporter - patch (v6507)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +201,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7025)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7145)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7145)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7145)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7331)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +201,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7620)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7702)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7702)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7702)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7801)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7801)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8141)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8309)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +135,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8403)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -177,7 +177,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8546)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8731)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -96,6 +96,7 @@
             double sum = 0.0;
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
+				double tmp = x + g + .5;
             }
             sum = sum + lanczos[0];
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v8813)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9207)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9210)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9217)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9218)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,8 +104,10 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9218)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9218)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9218)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9218)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9316)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      printStackTrace(System.err);
+	this.pattern   = pattern;
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9316)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9316)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9316)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9316)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9611)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9621)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +204,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9638)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9724)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9741)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +204,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9913)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9923)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9927)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9927)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9927)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9927)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v9927)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10045)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10045)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10045)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10045)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10048)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10048)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10048)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10048)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10048)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10224)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +205,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10249)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10305)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10305)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10305)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10305)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +205,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10341)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10508)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.0;
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10636)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +202,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v10906)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,8 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,8 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11022)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -134,7 +134,7 @@
     public MathException(Throwable rootCause, String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments), rootCause);
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /** Gets the pattern used to build the message of this throwable.
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11131)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +204,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = 0.0;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -104,7 +104,9 @@
      */
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11241)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -190,8 +190,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11601)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11621)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,8 +103,10 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
-      this.pattern   = pattern;
+      printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +118,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11621)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:12 [main] [INFO]  PatchLogExporter - patch (v11645)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,7 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
-      this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+      this.arguments = new Object[0];
     }
 
     /**
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -190,8 +189,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
     }
 
     /**
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-01 18:33:13 [main] [INFO]  PatchLogExporter - patch (v11745)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            setMean(mean);
+			setMean(mean);
+			setMean(mean);
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +203,7 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            return Double.POSITIVE_INFINITY;
         }
         
         return ret;
2023-08-01 18:33:15 [main] [INFO]  KGenProgMain - Summary
Reached generation = 119
Generated variants = 11745
Syntax valid variants = 9933
Build succeeded variants = 4267
Time elapsed = 6 hours 34 minutes 10 seconds
Exit status = SUCCESS
