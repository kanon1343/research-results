2023-08-03 07:44:04 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-03 07:44:04 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-03 07:44:04 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-03 07:44:04 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-03 07:44:12 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-03 07:44:12 [main] [INFO]  KGenProgMain - GA started
2023-08-03 07:44:12 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-03 07:44:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 50, build-succeeded 2, build-failed 38, syntax-invalid 3, redundant 7
Fitness: max 0.923(2), min 0.923(2), ave 0.923
Test execution time: sum 305 ms, max 156 ms, min 149 ms
----------------------------------------------------------------

2023-08-03 07:44:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-03 07:44:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 50, build-succeeded 8, build-failed 33, syntax-invalid 4, redundant 5
Fitness: max 1(1), min 0.462(1), ave 0.875
Test execution time: sum 880 ms, max 124 ms, min 92 ms
----------------------------------------------------------------

2023-08-03 07:44:15 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-03 07:44:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 12, redundant 40
Fitness: max 1(2), min 0.462(1), ave 0.9
Test execution time: sum 1588 ms, max 131 ms, min 70 ms
----------------------------------------------------------------

2023-08-03 07:44:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-03 07:50:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 9 seconds
Variants: generated 100, build-succeeded 22, build-failed 27, syntax-invalid 14, redundant 37
Fitness: max 1(5), min 0.462(3), ave 0.871
Test execution time: sum 361967 ms, max 360092 ms, min 70 ms
----------------------------------------------------------------

2023-08-03 07:50:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-03 07:56:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 12 seconds
Variants: generated 100, build-succeeded 23, build-failed 35, syntax-invalid 17, redundant 25
Fitness: max 0.923(22), min 0.846(1), ave 0.92
Test execution time: sum 362020 ms, max 360071 ms, min 76 ms
----------------------------------------------------------------

2023-08-03 07:56:24 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-03 08:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 15 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 16, redundant 26
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 542347 ms, max 360086 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 08:05:28 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-03 08:08:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 19 seconds
Variants: generated 100, build-succeeded 31, build-failed 33, syntax-invalid 21, redundant 15
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 182742 ms, max 180085 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 08:08:32 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-03 08:32:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 23 seconds
Variants: generated 100, build-succeeded 26, build-failed 27, syntax-invalid 23, redundant 24
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 1442254 ms, max 1440066 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 08:32:35 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-03 08:35:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 27 seconds
Variants: generated 100, build-succeeded 35, build-failed 35, syntax-invalid 15, redundant 15
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 183076 ms, max 180086 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 08:35:39 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-03 08:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 31 seconds
Variants: generated 100, build-succeeded 29, build-failed 34, syntax-invalid 15, redundant 22
Fitness: max 0.923(28), min 0.769(1), ave 0.918
Test execution time: sum 2583 ms, max 113 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 08:35:43 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-03 08:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 36 seconds
Variants: generated 100, build-succeeded 39, build-failed 36, syntax-invalid 17, redundant 8
Fitness: max 1(2), min 0.923(37), ave 0.927
Test execution time: sum 3508 ms, max 105 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 08:35:48 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-03 08:41:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 39 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 22, redundant 14
Fitness: max 0.923(26), min 0.846(2), ave 0.918
Test execution time: sum 362472 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 08:41:52 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-03 08:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 43 seconds
Variants: generated 100, build-succeeded 31, build-failed 37, syntax-invalid 13, redundant 19
Fitness: max 1(1), min 0.923(30), ave 0.926
Test execution time: sum 2768 ms, max 100 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 08:41:56 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-03 09:05:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 47 seconds
Variants: generated 100, build-succeeded 26, build-failed 29, syntax-invalid 23, redundant 22
Fitness: max 1(2), min 0.385(1), ave 0.905
Test execution time: sum 1442400 ms, max 1440117 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:05:59 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-03 09:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 51 seconds
Variants: generated 100, build-succeeded 33, build-failed 29, syntax-invalid 12, redundant 26
Fitness: max 0.923(29), min 0.615(1), ave 0.907
Test execution time: sum 362926 ms, max 360086 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 09:12:04 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-03 09:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 55 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 19, redundant 15
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 3018 ms, max 139 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 09:12:08 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-03 09:15:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 0 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 11, redundant 22
Fitness: max 1(1), min 0.769(1), ave 0.919
Test execution time: sum 183175 ms, max 180086 ms, min 78 ms
----------------------------------------------------------------

2023-08-03 09:15:12 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-03 09:15:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 5 seconds
Variants: generated 100, build-succeeded 40, build-failed 32, syntax-invalid 11, redundant 17
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3558 ms, max 128 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 09:15:17 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-03 09:21:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 8 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 23, redundant 13
Fitness: max 0.923(26), min 0.846(2), ave 0.918
Test execution time: sum 362494 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:21:21 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-03 09:21:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 12 seconds
Variants: generated 100, build-succeeded 29, build-failed 33, syntax-invalid 18, redundant 20
Fitness: max 0.923(28), min 0.769(1), ave 0.918
Test execution time: sum 2550 ms, max 111 ms, min 78 ms
----------------------------------------------------------------

2023-08-03 09:21:25 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-03 09:21:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 17 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 19, redundant 13
Fitness: max 1(2), min 0.923(35), ave 0.927
Test execution time: sum 3301 ms, max 126 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 09:21:29 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-03 09:21:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 21 seconds
Variants: generated 100, build-succeeded 33, build-failed 36, syntax-invalid 19, redundant 12
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 2923 ms, max 113 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 09:21:34 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-03 09:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 26 seconds
Variants: generated 100, build-succeeded 33, build-failed 37, syntax-invalid 17, redundant 13
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 2916 ms, max 108 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 09:21:38 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-03 09:21:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 31 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 16, redundant 10
Fitness: max 0.923(39), min 0.923(39), ave 0.923
Test execution time: sum 3628 ms, max 138 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 09:21:43 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-03 09:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.769(1), ave 0.919
Test execution time: sum 183797 ms, max 180087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:24:48 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-03 09:24:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 41 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 14, redundant 15
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3635 ms, max 177 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 09:24:53 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-03 09:30:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 46 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 19, redundant 13
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 363474 ms, max 360079 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:30:58 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-03 09:37:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 51 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 23, redundant 5
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 363680 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:37:03 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-03 09:49:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 57 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 13, redundant 10
Fitness: max 1(2), min 0.846(4), ave 0.92
Test execution time: sum 724448 ms, max 360086 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 09:49:09 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-03 09:49:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 1 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 23, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3335 ms, max 141 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 09:49:14 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-03 09:49:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 7 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0.923(43), ave 0.925
Test execution time: sum 3944 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:49:19 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-03 09:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 12 seconds
Variants: generated 100, build-succeeded 37, build-failed 34, syntax-invalid 19, redundant 10
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3305 ms, max 114 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 09:49:24 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-03 09:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 17 seconds
Variants: generated 100, build-succeeded 41, build-failed 27, syntax-invalid 18, redundant 14
Fitness: max 1(2), min 0.923(39), ave 0.927
Test execution time: sum 3718 ms, max 133 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 09:49:29 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-03 09:49:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 21 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 9, redundant 22
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 3050 ms, max 114 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 09:49:34 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-03 09:55:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 25 seconds
Variants: generated 100, build-succeeded 31, build-failed 26, syntax-invalid 13, redundant 30
Fitness: max 0.923(29), min 0.846(2), ave 0.918
Test execution time: sum 362742 ms, max 180088 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:55:38 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-03 09:55:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 30 seconds
Variants: generated 100, build-succeeded 38, build-failed 37, syntax-invalid 12, redundant 13
Fitness: max 0.923(36), min 0.846(2), ave 0.919
Test execution time: sum 3400 ms, max 125 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 09:55:43 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-03 09:58:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 35 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 17, redundant 13
Fitness: max 0.923(36), min 0.846(2), ave 0.919
Test execution time: sum 183394 ms, max 180086 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 09:58:47 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-03 09:58:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 40 seconds
Variants: generated 100, build-succeeded 30, build-failed 45, syntax-invalid 14, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2723 ms, max 128 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 09:58:52 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-03 10:04:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 44 seconds
Variants: generated 100, build-succeeded 32, build-failed 36, syntax-invalid 24, redundant 8
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 362893 ms, max 360085 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:04:57 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-03 10:05:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 49 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 15, redundant 13
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3511 ms, max 114 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:05:02 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-03 10:05:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 54 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 23, redundant 15
Fitness: max 1(1), min 0.923(29), ave 0.926
Test execution time: sum 2715 ms, max 123 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:05:06 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-03 10:05:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 59 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 14, redundant 14
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3852 ms, max 112 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:05:11 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-03 10:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 4 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 19, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 183412 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:08:17 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-03 10:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 10 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 16, redundant 13
Fitness: max 0.923(39), min 0.846(2), ave 0.919
Test execution time: sum 183703 ms, max 180090 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:11:22 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-03 10:17:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 16 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 14, redundant 6
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 364558 ms, max 360087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:17:28 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-03 10:17:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 22 seconds
Variants: generated 100, build-succeeded 42, build-failed 39, syntax-invalid 14, redundant 5
Fitness: max 0.923(41), min 0.846(1), ave 0.921
Test execution time: sum 3860 ms, max 115 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 10:17:34 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-03 10:17:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 28 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 14, redundant 10
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 4292 ms, max 107 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:17:40 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-03 10:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 32 seconds
Variants: generated 100, build-succeeded 32, build-failed 29, syntax-invalid 25, redundant 14
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2872 ms, max 105 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 10:17:45 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-03 10:20:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 37 seconds
Variants: generated 100, build-succeeded 29, build-failed 40, syntax-invalid 25, redundant 6
Fitness: max 0.923(27), min 0.846(2), ave 0.918
Test execution time: sum 182584 ms, max 180086 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 10:20:49 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-03 10:20:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 42 seconds
Variants: generated 100, build-succeeded 40, build-failed 39, syntax-invalid 12, redundant 9
Fitness: max 1(1), min 0.923(39), ave 0.925
Test execution time: sum 3580 ms, max 118 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:20:54 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-03 10:20:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 46 seconds
Variants: generated 100, build-succeeded 33, build-failed 26, syntax-invalid 28, redundant 13
Fitness: max 0.923(32), min 0.615(1), ave 0.914
Test execution time: sum 2970 ms, max 111 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:20:59 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-03 10:21:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 51 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 21, redundant 13
Fitness: max 0.923(32), min 0.846(2), ave 0.919
Test execution time: sum 3025 ms, max 114 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 10:21:03 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-03 10:21:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 56 seconds
Variants: generated 100, build-succeeded 34, build-failed 30, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3063 ms, max 117 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 10:21:08 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-03 10:21:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 1 seconds
Variants: generated 100, build-succeeded 35, build-failed 33, syntax-invalid 19, redundant 13
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3182 ms, max 142 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:21:13 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-03 10:21:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 6 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 14, redundant 12
Fitness: max 1(1), min 0.923(36), ave 0.925
Test execution time: sum 3289 ms, max 111 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:21:18 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-03 10:21:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 10 seconds
Variants: generated 100, build-succeeded 32, build-failed 28, syntax-invalid 27, redundant 13
Fitness: max 0.923(31), min 0.846(1), ave 0.921
Test execution time: sum 2905 ms, max 131 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:21:23 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-03 10:24:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 15 seconds
Variants: generated 100, build-succeeded 36, build-failed 34, syntax-invalid 18, redundant 12
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183187 ms, max 180097 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:24:28 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-03 10:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 35, syntax-invalid 18, redundant 7
Fitness: max 1(2), min 0.615(1), ave 0.915
Test execution time: sum 3548 ms, max 122 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 10:24:33 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-03 10:24:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 26 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 17, redundant 9
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3604 ms, max 129 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:24:38 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-03 10:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 32 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363940 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:30:44 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-03 10:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 37 seconds
Variants: generated 100, build-succeeded 37, build-failed 27, syntax-invalid 25, redundant 11
Fitness: max 1(1), min 0.462(1), ave 0.909
Test execution time: sum 183289 ms, max 180086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:33:49 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-03 10:43:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 6 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 25, redundant 4
Fitness: max 0.923(35), min 0.846(3), ave 0.917
Test execution time: sum 567441 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 10:43:18 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-03 10:43:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 10 seconds
Variants: generated 100, build-succeeded 29, build-failed 34, syntax-invalid 27, redundant 10
Fitness: max 0.923(29), min 0.923(29), ave 0.923
Test execution time: sum 2586 ms, max 103 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:43:22 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-03 10:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 15 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 23, redundant 9
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 363404 ms, max 360087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:49:27 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-03 10:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 20 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 22, redundant 6
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3585 ms, max 115 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:49:33 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-03 10:49:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 25 seconds
Variants: generated 100, build-succeeded 30, build-failed 31, syntax-invalid 24, redundant 15
Fitness: max 1(1), min 0.846(3), ave 0.918
Test execution time: sum 2768 ms, max 125 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:49:37 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-03 10:49:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 29 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 36, redundant 10
Fitness: max 0.923(21), min 0.846(2), ave 0.916
Test execution time: sum 2049 ms, max 110 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:49:41 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-03 10:49:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 33 seconds
Variants: generated 100, build-succeeded 29, build-failed 32, syntax-invalid 32, redundant 7
Fitness: max 0.923(29), min 0.923(29), ave 0.923
Test execution time: sum 2570 ms, max 116 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:49:45 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-03 10:55:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 38 seconds
Variants: generated 100, build-succeeded 34, build-failed 36, syntax-invalid 19, redundant 11
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 363031 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 10:55:50 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-03 10:55:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 43 seconds
Variants: generated 100, build-succeeded 40, build-failed 38, syntax-invalid 15, redundant 7
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3587 ms, max 121 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 10:55:56 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-03 11:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 48 seconds
Variants: generated 100, build-succeeded 35, build-failed 28, syntax-invalid 25, redundant 12
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 1803085 ms, max 1440068 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 11:26:00 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-03 11:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 53 seconds
Variants: generated 100, build-succeeded 39, build-failed 27, syntax-invalid 23, redundant 11
Fitness: max 0.923(36), min 0.846(3), ave 0.917
Test execution time: sum 363496 ms, max 360084 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 11:32:06 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-03 11:32:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 59 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 15, redundant 12
Fitness: max 1(2), min 0.385(1), ave 0.911
Test execution time: sum 3905 ms, max 134 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 11:32:12 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-03 11:35:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 4 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 18, redundant 16
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 183349 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 11:35:17 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-03 11:38:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 10 seconds
Variants: generated 100, build-succeeded 44, build-failed 27, syntax-invalid 18, redundant 11
Fitness: max 0.923(42), min 0.615(1), ave 0.914
Test execution time: sum 183982 ms, max 180102 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 11:38:23 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-03 11:38:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 16 seconds
Variants: generated 100, build-succeeded 36, build-failed 37, syntax-invalid 15, redundant 12
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3248 ms, max 104 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 11:38:28 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-03 11:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 22 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 7, redundant 15
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 184144 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:41:35 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-03 11:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 7, redundant 9
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 184399 ms, max 180089 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 11:44:41 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-03 11:44:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 seconds
Variants: generated 100, build-succeeded 41, build-failed 36, syntax-invalid 8, redundant 15
Fitness: max 1(4), min 0.923(37), ave 0.931
Test execution time: sum 3741 ms, max 103 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 11:44:47 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-03 11:44:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 seconds
Variants: generated 100, build-succeeded 40, build-failed 32, syntax-invalid 14, redundant 14
Fitness: max 1(2), min 0.462(1), ave 0.913
Test execution time: sum 3677 ms, max 117 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 11:44:53 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-03 11:45:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 8, redundant 15
Fitness: max 1(3), min 0.462(1), ave 0.918
Test execution time: sum 4336 ms, max 105 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 11:45:00 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-03 11:45:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 14, redundant 12
Fitness: max 1(5), min 0.846(1), ave 0.93
Test execution time: sum 4045 ms, max 100 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 11:45:06 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-03 11:45:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 20, redundant 11
Fitness: max 1(1), min 0.923(39), ave 0.925
Test execution time: sum 3618 ms, max 123 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:45:12 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-03 11:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 6 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 12, redundant 12
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 184058 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:48:18 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-03 11:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 12 seconds
Variants: generated 100, build-succeeded 42, build-failed 34, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0.923(41), ave 0.925
Test execution time: sum 3783 ms, max 123 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:48:24 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-03 11:48:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 18 seconds
Variants: generated 100, build-succeeded 38, build-failed 39, syntax-invalid 16, redundant 7
Fitness: max 1(2), min 0.923(36), ave 0.927
Test execution time: sum 3479 ms, max 144 ms, min 73 ms
----------------------------------------------------------------

2023-08-03 11:48:30 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-03 11:48:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 24 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 17, redundant 10
Fitness: max 1(1), min 0.923(39), ave 0.925
Test execution time: sum 3600 ms, max 112 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:48:36 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-03 11:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 13, redundant 6
Fitness: max 0.923(46), min 0.846(2), ave 0.92
Test execution time: sum 184290 ms, max 180086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 11:51:43 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-03 11:51:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 12, redundant 14
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3841 ms, max 112 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:51:49 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-03 11:54:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 42 seconds
Variants: generated 100, build-succeeded 36, build-failed 41, syntax-invalid 14, redundant 9
Fitness: max 0.923(35), min 0.846(1), ave 0.921
Test execution time: sum 183219 ms, max 180086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 11:54:54 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-03 12:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 49 seconds
Variants: generated 100, build-succeeded 46, build-failed 38, syntax-invalid 10, redundant 6
Fitness: max 0.923(44), min 0.385(1), ave 0.91
Test execution time: sum 1804159 ms, max 1440068 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:25:01 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-03 12:25:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 55 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 12, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4101 ms, max 120 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 12:25:08 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-03 12:28:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 1 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 16, redundant 13
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 183830 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 12:28:14 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-03 12:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 7 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 10, redundant 16
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3418 ms, max 116 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 12:28:20 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-03 12:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 13 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 20, redundant 13
Fitness: max 0.923(33), min 0.846(4), ave 0.915
Test execution time: sum 183315 ms, max 180090 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 12:31:25 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-03 12:31:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 19 seconds
Variants: generated 100, build-succeeded 39, build-failed 28, syntax-invalid 15, redundant 18
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3553 ms, max 121 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:31:31 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-03 12:31:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 11, redundant 8
Fitness: max 0.923(45), min 0.385(1), ave 0.902
Test execution time: sum 4239 ms, max 109 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 12:31:38 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-03 12:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 32 seconds
Variants: generated 100, build-succeeded 40, build-failed 39, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0.462(1), ave 0.912
Test execution time: sum 183622 ms, max 180086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:34:44 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-03 12:34:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 38 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 16, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3815 ms, max 123 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:34:50 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-03 12:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 45 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 12, redundant 7
Fitness: max 0.923(42), min 0.846(5), ave 0.915
Test execution time: sum 4279 ms, max 141 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 12:34:57 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-03 12:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 51 seconds
Variants: generated 100, build-succeeded 38, build-failed 30, syntax-invalid 18, redundant 14
Fitness: max 1(3), min 0.923(35), ave 0.929
Test execution time: sum 3441 ms, max 135 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:35:03 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-03 12:41:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 57 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 13, redundant 12
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 363956 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:41:10 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-03 12:50:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 5 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 7, redundant 6
Fitness: max 0.923(53), min 0.846(2), ave 0.92
Test execution time: sum 544974 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 12:50:18 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-03 12:50:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 12 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 10, redundant 10
Fitness: max 0.923(41), min 0.615(1), ave 0.913
Test execution time: sum 3950 ms, max 116 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 12:50:24 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-03 12:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 6 minutes 19 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 6, redundant 17
Fitness: max 0.923(40), min 0.846(2), ave 0.919
Test execution time: sum 3823 ms, max 122 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 12:50:31 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-03 12:59:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 15 minutes 25 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 7, redundant 21
Fitness: max 0.923(39), min 0.462(1), ave 0.907
Test execution time: sum 543921 ms, max 360087 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 12:59:38 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-03 13:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 28 seconds
Variants: generated 47, build-succeeded 10, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 1(1), min 0.385(1), ave 0.869
Test execution time: sum 1620913 ms, max 1440068 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 13:26:40 [main] [INFO]  KGenProgMain - GA stopped
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v100)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v100)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v100)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v109)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v109)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v109)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v109)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v135)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v209)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v209)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0.0;
         }
 
         // find root
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v209)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v217)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v217)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v217)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v217)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:40 [main] [INFO]  PatchLogExporter - patch (v217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v218)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v218)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v218)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v218)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v225)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v225)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,8 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
+            if (p > .5) {
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v225)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v249)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v249)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v249)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v420)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v420)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v420)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v420)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v528)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v528)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v528)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v528)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v528)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v540)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v540)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v540)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v632)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v632)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v632)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v632)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -95,7 +95,6 @@
              * a constant.
              */ 
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v933)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1124)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -95,13 +95,11 @@
              * a constant.
              */ 
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1545)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -126,7 +126,7 @@
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            if (x < 0) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1.0d;
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1617)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,9 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
+            if (p < 0.0 || p > 1.0) {
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1618)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -95,7 +96,6 @@
              * a constant.
              */ 
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1930)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1930)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -95,9 +96,8 @@
              * a constant.
              */ 
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1930)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1930)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v1930)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2349)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,7 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2608)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2608)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2608)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        double x0, x1, x2, x, oldx, y0, y1, y2, y;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +192,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            return new double[] { a, b };
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2608)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2608)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2639)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2639)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,10 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -80,6 +80,7 @@
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
+		double ret;
         double[] bracket = null;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2710)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,8 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2723)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,8 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2827)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2827)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2827)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double d01, d12, d012, c1, delta, xplus, xminus, tolerance;
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2827)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2830)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        double x0, x1, x2, x, oldx, y0, y1, y2, y;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3101)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3113)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3615)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3721)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3727)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3835)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3835)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return lowerBound;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3835)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3835)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3835)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return lowerBound;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,8 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4133)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4133)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4133)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +116,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +116,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4617)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
@@ -220,7 +224,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4814)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4814)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v4814)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
@@ -220,7 +226,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return lowerBound;
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5146)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5213)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5213)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,11 +98,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5316)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5532)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5532)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5532)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
@@ -220,7 +225,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5549)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5549)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5549)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:41 [main] [INFO]  PatchLogExporter - patch (v5549)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int iterationCount = 0;
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5631)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5648)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5712)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5833)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
@@ -221,7 +225,7 @@
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
-            ret = getMean() + getStandardDeviation();
+            return this.mean;
         } else {
             ret = getMean();
         }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v5939)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6316)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6316)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6316)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6316)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6316)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,11 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,7 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
     }
 
     /**
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6348)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,9 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,11 +98,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6422)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -201,6 +201,8 @@
             ret = getMean();
         } else {
             ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6711)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6805)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6841)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,10 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -170,7 +170,7 @@
         if (function == null) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
-        if (maximumIterations <= 0)  {
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound)  {
             throw MathRuntimeException.createIllegalArgumentException(
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7123)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7133)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7133)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7133)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7443)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7541)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7722)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7749)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7759)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7759)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7759)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7759)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7759)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7768)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7839)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7873)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7905)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v7960)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8000)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            b = Math.min(b + 1.0, upperBound);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8027)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8054)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,12 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8068)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8093)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,8 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8094)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return pattern;
     }
 
     /**
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,8 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8154)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8215)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8215)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8215)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,15 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8328)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8328)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8328)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8328)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8328)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8469)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8477)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8561)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v8737)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,15 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9134)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9234)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9234)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9234)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9234)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,15 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,7 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9410)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,8 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9602)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,13 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,7 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        this.pattern = null;
         this.arguments = new Object[0];
     }
     
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -100,7 +101,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,7 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9800)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,14 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,7 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9904)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,16 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,15 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,7 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v9996)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,16 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -102,6 +102,7 @@
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
                 HALF_LOG_2_PI + Math.log(sum / x);
+			sum = sum + lanczos[0];
         }
 
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10038)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,17 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10087)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10087)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10087)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:42 [main] [INFO]  PatchLogExporter - patch (v10087)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,18 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 13:26:43 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -200,7 +200,17 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.POSITIVE_INFINITY;
+			ret = Double.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
+			ret = Integer.MAX_VALUE;
         }
         
         return ret;
2023-08-03 13:26:45 [main] [INFO]  KGenProgMain - Summary
Reached generation = 107
Generated variants = 10547
Syntax valid variants = 8783
Build succeeded variants = 3925
Time elapsed = 5 hours 42 minutes 32 seconds
Exit status = SUCCESS
