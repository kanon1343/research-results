2023-08-03 13:26:45 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-03 13:26:45 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-03 13:26:45 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-03 13:26:45 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-03 13:26:53 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-03 13:26:53 [main] [INFO]  KGenProgMain - GA started
2023-08-03 13:26:53 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-03 13:32:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 2 seconds
Variants: generated 50, build-succeeded 10, build-failed 28, syntax-invalid 4, redundant 8
Fitness: max 1(1), min 0.846(2), ave 0.915
Test execution time: sum 361181 ms, max 360103 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 13:32:55 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-03 13:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 4 seconds
Variants: generated 50, build-succeeded 7, build-failed 35, syntax-invalid 6, redundant 2
Fitness: max 0.923(5), min 0.615(1), ave 0.868
Test execution time: sum 360692 ms, max 360088 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 13:38:57 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-03 14:09:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 7 seconds
Variants: generated 100, build-succeeded 26, build-failed 33, syntax-invalid 5, redundant 36
Fitness: max 1(2), min 0.615(6), ave 0.843
Test execution time: sum 1802242 ms, max 360090 ms, min 70 ms
----------------------------------------------------------------

2023-08-03 14:09:00 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-03 14:09:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 9 seconds
Variants: generated 100, build-succeeded 10, build-failed 35, syntax-invalid 9, redundant 46
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 822 ms, max 92 ms, min 71 ms
----------------------------------------------------------------

2023-08-03 14:09:02 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-03 14:39:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 11 seconds
Variants: generated 100, build-succeeded 12, build-failed 28, syntax-invalid 11, redundant 49
Fitness: max 0.923(10), min 0.385(1), ave 0.872
Test execution time: sum 1801048 ms, max 1440085 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 14:39:04 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-03 14:39:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 13 seconds
Variants: generated 100, build-succeeded 10, build-failed 31, syntax-invalid 15, redundant 44
Fitness: max 0.923(9), min 0.846(1), ave 0.915
Test execution time: sum 894 ms, max 117 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 14:39:06 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-03 14:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 15 seconds
Variants: generated 100, build-succeeded 15, build-failed 31, syntax-invalid 9, redundant 45
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 1305 ms, max 109 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 14:39:09 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-03 14:42:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 19 seconds
Variants: generated 100, build-succeeded 26, build-failed 32, syntax-invalid 13, redundant 29
Fitness: max 0.923(25), min 0.846(1), ave 0.92
Test execution time: sum 182249 ms, max 180088 ms, min 72 ms
----------------------------------------------------------------

2023-08-03 14:42:12 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-03 14:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 22 seconds
Variants: generated 100, build-succeeded 23, build-failed 30, syntax-invalid 11, redundant 36
Fitness: max 0.923(22), min 0.846(1), ave 0.92
Test execution time: sum 2001 ms, max 111 ms, min 73 ms
----------------------------------------------------------------

2023-08-03 14:42:15 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-03 14:42:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 25 seconds
Variants: generated 100, build-succeeded 25, build-failed 29, syntax-invalid 17, redundant 29
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2238 ms, max 116 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 14:42:18 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-03 14:42:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 28 seconds
Variants: generated 100, build-succeeded 22, build-failed 37, syntax-invalid 15, redundant 26
Fitness: max 0.923(21), min 0.846(1), ave 0.92
Test execution time: sum 1956 ms, max 101 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 14:42:22 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-03 14:42:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 32 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 15, redundant 17
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3016 ms, max 106 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 14:42:26 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-03 14:54:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 36 seconds
Variants: generated 100, build-succeeded 28, build-failed 37, syntax-invalid 18, redundant 17
Fitness: max 0.923(26), min 0.846(2), ave 0.918
Test execution time: sum 722476 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 14:54:29 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-03 15:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 39 seconds
Variants: generated 100, build-succeeded 21, build-failed 35, syntax-invalid 24, redundant 20
Fitness: max 0.923(19), min 0.462(1), ave 0.897
Test execution time: sum 361864 ms, max 360085 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:00:33 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-03 15:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 43 seconds
Variants: generated 100, build-succeeded 29, build-failed 32, syntax-invalid 14, redundant 25
Fitness: max 1(2), min 0.462(1), ave 0.91
Test execution time: sum 2554 ms, max 100 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 15:00:36 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-03 15:00:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 47 seconds
Variants: generated 100, build-succeeded 28, build-failed 38, syntax-invalid 17, redundant 17
Fitness: max 0.923(28), min 0.923(28), ave 0.923
Test execution time: sum 2492 ms, max 97 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:00:40 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-03 15:27:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 seconds
Variants: generated 100, build-succeeded 30, build-failed 26, syntax-invalid 18, redundant 26
Fitness: max 1(2), min 0.385(1), ave 0.903
Test execution time: sum 1622604 ms, max 1440071 ms, min 71 ms
----------------------------------------------------------------

2023-08-03 15:27:44 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-03 15:33:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 54 seconds
Variants: generated 100, build-succeeded 29, build-failed 41, syntax-invalid 6, redundant 24
Fitness: max 0.923(26), min 0.846(3), ave 0.915
Test execution time: sum 362622 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 15:33:48 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-03 15:36:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 58 seconds
Variants: generated 100, build-succeeded 30, build-failed 40, syntax-invalid 14, redundant 16
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 182680 ms, max 180089 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:36:52 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-03 15:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 2 seconds
Variants: generated 100, build-succeeded 29, build-failed 35, syntax-invalid 19, redundant 17
Fitness: max 0.923(29), min 0.923(29), ave 0.923
Test execution time: sum 2596 ms, max 105 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 15:36:56 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-03 15:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 7 seconds
Variants: generated 100, build-succeeded 39, build-failed 32, syntax-invalid 14, redundant 15
Fitness: max 0.923(36), min 0.385(1), ave 0.905
Test execution time: sum 183487 ms, max 180086 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 15:40:00 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-03 15:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 12 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 17, redundant 15
Fitness: max 0.923(36), min 0.846(1), ave 0.921
Test execution time: sum 3407 ms, max 111 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 15:40:05 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-03 15:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 16 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 18, redundant 11
Fitness: max 0.923(35), min 0.846(1), ave 0.921
Test execution time: sum 363178 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:46:10 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-03 15:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 26, syntax-invalid 18, redundant 16
Fitness: max 0.923(38), min 0.462(1), ave 0.91
Test execution time: sum 3545 ms, max 101 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 15:46:15 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-03 15:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 27 seconds
Variants: generated 100, build-succeeded 46, build-failed 31, syntax-invalid 11, redundant 12
Fitness: max 1(1), min 0.846(6), ave 0.915
Test execution time: sum 544126 ms, max 180101 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:55:20 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-03 15:55:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 31 seconds
Variants: generated 100, build-succeeded 35, build-failed 27, syntax-invalid 23, redundant 15
Fitness: max 0.923(33), min 0.846(2), ave 0.919
Test execution time: sum 3184 ms, max 98 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 15:55:25 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-03 15:55:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 36 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 16, redundant 16
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 3252 ms, max 119 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 15:55:29 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-03 16:04:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 41 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 15, redundant 12
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 543669 ms, max 360083 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 16:04:34 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-03 16:04:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 46 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 21, redundant 5
Fitness: max 1(1), min 0.462(1), ave 0.911
Test execution time: sum 3620 ms, max 243 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 16:04:39 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-03 16:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 51 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 18, redundant 10
Fitness: max 1(2), min 0.462(1), ave 0.909
Test execution time: sum 3452 ms, max 110 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 16:04:44 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-03 16:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 55 seconds
Variants: generated 100, build-succeeded 32, build-failed 41, syntax-invalid 20, redundant 7
Fitness: max 0.923(31), min 0.846(1), ave 0.921
Test execution time: sum 362917 ms, max 360082 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:10:48 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-03 16:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 0 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 17, redundant 12
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3610 ms, max 113 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 16:10:53 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-03 16:10:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 5 seconds
Variants: generated 100, build-succeeded 37, build-failed 35, syntax-invalid 21, redundant 7
Fitness: max 1(3), min 0.385(1), ave 0.915
Test execution time: sum 3331 ms, max 104 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 16:10:58 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-03 16:11:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 10 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 16, redundant 10
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 3625 ms, max 97 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:11:03 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-03 16:14:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 15 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 25, redundant 6
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 183472 ms, max 180087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:14:08 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-03 16:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 9 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 22, redundant 12
Fitness: max 0.923(30), min 0.846(1), ave 0.921
Test execution time: sum 112693 ms, max 110052 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:16:02 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-03 16:16:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 13 seconds
Variants: generated 100, build-succeeded 31, build-failed 36, syntax-invalid 23, redundant 10
Fitness: max 0.923(31), min 0.923(31), ave 0.923
Test execution time: sum 2729 ms, max 127 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:16:06 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-03 16:16:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 17 seconds
Variants: generated 100, build-succeeded 32, build-failed 40, syntax-invalid 21, redundant 7
Fitness: max 0.923(32), min 0.923(32), ave 0.923
Test execution time: sum 2820 ms, max 129 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:16:11 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-03 16:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 22 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 13, redundant 15
Fitness: max 0.923(40), min 0.462(1), ave 0.91
Test execution time: sum 3683 ms, max 126 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 16:16:16 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-03 16:16:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 26 seconds
Variants: generated 100, build-succeeded 30, build-failed 39, syntax-invalid 18, redundant 13
Fitness: max 1(2), min 0.462(1), ave 0.913
Test execution time: sum 2651 ms, max 130 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 16:16:20 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-03 16:16:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 31 seconds
Variants: generated 100, build-succeeded 32, build-failed 37, syntax-invalid 20, redundant 11
Fitness: max 0.923(30), min 0.462(1), ave 0.906
Test execution time: sum 2810 ms, max 130 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 16:16:24 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-03 16:16:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 35 seconds
Variants: generated 100, build-succeeded 37, build-failed 38, syntax-invalid 18, redundant 7
Fitness: max 0.923(34), min 0.846(3), ave 0.917
Test execution time: sum 3298 ms, max 124 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 16:16:29 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-03 16:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 40 seconds
Variants: generated 100, build-succeeded 30, build-failed 31, syntax-invalid 18, redundant 21
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 182640 ms, max 180085 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 16:19:33 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-03 16:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 44 seconds
Variants: generated 100, build-succeeded 31, build-failed 36, syntax-invalid 20, redundant 13
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2768 ms, max 126 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 16:19:37 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-03 16:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 49 seconds
Variants: generated 100, build-succeeded 39, build-failed 32, syntax-invalid 20, redundant 9
Fitness: max 0.923(36), min 0.462(1), ave 0.907
Test execution time: sum 363395 ms, max 360088 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 16:25:42 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-03 16:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 54 seconds
Variants: generated 100, build-succeeded 40, build-failed 36, syntax-invalid 16, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3565 ms, max 124 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 16:25:47 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-03 16:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 59 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 23, redundant 9
Fitness: max 1(1), min 0.846(4), ave 0.917
Test execution time: sum 3193 ms, max 118 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 16:25:52 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-03 16:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 3 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 22, redundant 9
Fitness: max 0.923(35), min 0.769(1), ave 0.917
Test execution time: sum 543305 ms, max 360085 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 16:34:57 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-03 16:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 8 seconds
Variants: generated 100, build-succeeded 37, build-failed 40, syntax-invalid 17, redundant 6
Fitness: max 0.923(33), min 0.385(1), ave 0.902
Test execution time: sum 1443288 ms, max 1440067 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 16:59:02 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-03 17:23:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 13 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 22, redundant 9
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 1443084 ms, max 1440067 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 17:23:07 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-03 17:23:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 19 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 22, redundant 5
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 3718 ms, max 117 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 17:23:12 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-03 17:29:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 24 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 23, redundant 10
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 363287 ms, max 360085 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 17:29:17 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-03 18:02:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 29 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.385(1), ave 0.905
Test execution time: sum 1983803 ms, max 1440067 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 18:02:22 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-03 18:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 34 seconds
Variants: generated 100, build-succeeded 37, build-failed 34, syntax-invalid 23, redundant 6
Fitness: max 1(2), min 0.846(4), ave 0.919
Test execution time: sum 183300 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 18:05:28 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-03 18:11:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 39 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.846(5), ave 0.915
Test execution time: sum 363404 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 18:11:33 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-03 18:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 45 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3678 ms, max 95 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 18:11:38 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-03 18:11:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 50 seconds
Variants: generated 100, build-succeeded 38, build-failed 37, syntax-invalid 18, redundant 7
Fitness: max 0.923(33), min 0.462(1), ave 0.903
Test execution time: sum 3431 ms, max 109 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:11:44 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-03 18:14:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 55 seconds
Variants: generated 100, build-succeeded 33, build-failed 41, syntax-invalid 21, redundant 5
Fitness: max 0.923(31), min 0.846(2), ave 0.918
Test execution time: sum 182978 ms, max 180087 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 18:14:48 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-03 18:20:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 54 minutes 0 seconds
Variants: generated 100, build-succeeded 33, build-failed 33, syntax-invalid 25, redundant 9
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 362969 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 18:20:53 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-03 18:37:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 16 seconds
Variants: generated 100, build-succeeded 36, build-failed 38, syntax-invalid 22, redundant 4
Fitness: max 0.923(31), min 0.462(2), ave 0.891
Test execution time: sum 974627 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 18:37:10 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-03 18:37:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 21 seconds
Variants: generated 100, build-succeeded 32, build-failed 36, syntax-invalid 22, redundant 10
Fitness: max 0.923(30), min 0.846(2), ave 0.918
Test execution time: sum 2884 ms, max 103 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:37:14 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-03 18:43:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 26 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 17, redundant 9
Fitness: max 0.923(36), min 0.846(2), ave 0.919
Test execution time: sum 363414 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:43:19 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-03 18:43:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 31 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 19, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3736 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:43:25 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-03 18:49:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 36 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 27, redundant 5
Fitness: max 0.923(33), min 0.846(3), ave 0.917
Test execution time: sum 363211 ms, max 360086 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 18:49:30 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-03 18:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 41 seconds
Variants: generated 100, build-succeeded 33, build-failed 31, syntax-invalid 30, redundant 6
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 2999 ms, max 106 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 18:49:35 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-03 18:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 47 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.846(5), ave 0.916
Test execution time: sum 3704 ms, max 96 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:49:40 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-03 18:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 53 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 15, redundant 8
Fitness: max 0.923(41), min 0.846(3), ave 0.918
Test execution time: sum 3999 ms, max 113 ms, min 73 ms
----------------------------------------------------------------

2023-08-03 18:49:46 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-03 18:55:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 59 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 12, redundant 10
Fitness: max 1(1), min 0.846(5), ave 0.917
Test execution time: sum 364415 ms, max 360087 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 18:55:52 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-03 18:55:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 4 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 15, redundant 14
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3356 ms, max 117 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 18:55:57 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-03 18:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 10 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 8, redundant 8
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 4181 ms, max 99 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 18:56:04 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-03 18:56:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 15 seconds
Variants: generated 100, build-succeeded 35, build-failed 31, syntax-invalid 21, redundant 13
Fitness: max 0.923(35), min 0.923(35), ave 0.923
Test execution time: sum 3137 ms, max 125 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 18:56:09 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-03 18:56:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 40, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0.769(1), ave 0.919
Test execution time: sum 3600 ms, max 130 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 18:56:14 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-03 18:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 26 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 20, redundant 10
Fitness: max 0.923(35), min 0.846(4), ave 0.915
Test execution time: sum 3446 ms, max 120 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 18:56:19 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-03 19:02:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 31 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 25, redundant 6
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 363123 ms, max 360085 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 19:02:24 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-03 19:02:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 36 seconds
Variants: generated 100, build-succeeded 34, build-failed 37, syntax-invalid 21, redundant 8
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 3015 ms, max 121 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:02:29 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-03 19:02:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 41 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 23, redundant 9
Fitness: max 0.923(37), min 0.846(2), ave 0.919
Test execution time: sum 3493 ms, max 124 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:02:34 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-03 19:02:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 47 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 15, redundant 12
Fitness: max 0.923(39), min 0.846(1), ave 0.921
Test execution time: sum 3592 ms, max 127 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:02:40 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-03 19:02:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 52 seconds
Variants: generated 100, build-succeeded 36, build-failed 37, syntax-invalid 15, redundant 12
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3251 ms, max 128 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:02:45 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-03 19:02:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 58 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 21, redundant 3
Fitness: max 1(1), min 0.923(40), ave 0.925
Test execution time: sum 3697 ms, max 128 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:02:51 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-03 19:08:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 3 seconds
Variants: generated 100, build-succeeded 37, build-failed 42, syntax-invalid 12, redundant 9
Fitness: max 0.923(34), min 0.769(1), ave 0.915
Test execution time: sum 363291 ms, max 180087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:08:56 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-03 19:09:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 9 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 18, redundant 11
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3799 ms, max 126 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 19:09:02 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-03 19:09:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 14 seconds
Variants: generated 100, build-succeeded 41, build-failed 37, syntax-invalid 16, redundant 6
Fitness: max 1(2), min 0.769(1), ave 0.923
Test execution time: sum 3695 ms, max 121 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 19:09:08 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-03 19:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 20 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 15, redundant 9
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 3955 ms, max 117 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:09:14 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-03 19:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 25 seconds
Variants: generated 100, build-succeeded 30, build-failed 44, syntax-invalid 15, redundant 11
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 2711 ms, max 117 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 19:09:19 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-03 19:09:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 30 seconds
Variants: generated 100, build-succeeded 34, build-failed 38, syntax-invalid 18, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3067 ms, max 111 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 19:09:24 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-03 19:09:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 36 seconds
Variants: generated 100, build-succeeded 35, build-failed 40, syntax-invalid 9, redundant 16
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3159 ms, max 98 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 19:09:29 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-03 19:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 41 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 6, redundant 21
Fitness: max 1(1), min 0.846(6), ave 0.914
Test execution time: sum 3797 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:09:35 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-03 19:12:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 47 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 12, redundant 17
Fitness: max 0.923(36), min 0.462(1), ave 0.904
Test execution time: sum 183712 ms, max 180088 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:12:40 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-03 19:27:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 12, redundant 17
Fitness: max 0.923(43), min 0.846(3), ave 0.918
Test execution time: sum 904080 ms, max 360086 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:27:46 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-03 19:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 58 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 15, redundant 18
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183092 ms, max 180088 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:30:51 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-03 19:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 3 seconds
Variants: generated 100, build-succeeded 37, build-failed 38, syntax-invalid 17, redundant 8
Fitness: max 0.923(36), min 0.846(1), ave 0.921
Test execution time: sum 363354 ms, max 360086 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 19:36:57 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-03 19:37:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 8 seconds
Variants: generated 100, build-succeeded 32, build-failed 32, syntax-invalid 17, redundant 19
Fitness: max 1(2), min 0.923(30), ave 0.928
Test execution time: sum 2935 ms, max 112 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 19:37:02 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-03 19:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 10 minutes 14 seconds
Variants: generated 100, build-succeeded 40, build-failed 40, syntax-invalid 12, redundant 8
Fitness: max 0.923(38), min 0.385(1), ave 0.908
Test execution time: sum 3690 ms, max 161 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 19:37:08 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-03 19:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 19 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 12, redundant 21
Fitness: max 0.923(33), min 0.846(3), ave 0.917
Test execution time: sum 363286 ms, max 180088 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 19:43:13 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-03 19:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 25 seconds
Variants: generated 100, build-succeeded 30, build-failed 35, syntax-invalid 17, redundant 18
Fitness: max 0.923(29), min 0.462(1), ave 0.908
Test execution time: sum 303649 ms, max 301070 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 19:48:18 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-03 19:54:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 30 seconds
Variants: generated 100, build-succeeded 31, build-failed 36, syntax-invalid 15, redundant 18
Fitness: max 0.923(30), min 0.846(1), ave 0.921
Test execution time: sum 362759 ms, max 360085 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:54:23 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-03 19:57:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 35 seconds
Variants: generated 100, build-succeeded 33, build-failed 34, syntax-invalid 19, redundant 14
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 182943 ms, max 180089 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 19:57:28 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-03 20:06:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 40 seconds
Variants: generated 100, build-succeeded 35, build-failed 28, syntax-invalid 26, redundant 11
Fitness: max 1(1), min 0.769(1), ave 0.916
Test execution time: sum 543121 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 20:06:33 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-03 20:16:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 53 seconds
Variants: generated 100, build-succeeded 32, build-failed 35, syntax-invalid 24, redundant 9
Fitness: max 0.923(30), min 0.462(1), ave 0.906
Test execution time: sum 611320 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 20:16:46 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-03 20:40:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 13 minutes 58 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 19, redundant 12
Fitness: max 1(1), min 0.385(1), ave 0.91
Test execution time: sum 1443198 ms, max 1440066 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 20:40:52 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-03 20:40:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 3 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 18, redundant 14
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 3049 ms, max 133 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 20:40:57 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-03 20:41:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 9 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 23, redundant 9
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 3471 ms, max 129 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 20:41:02 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-03 20:41:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 14 seconds
Variants: generated 100, build-succeeded 31, build-failed 32, syntax-invalid 22, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2835 ms, max 158 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 20:41:07 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-03 20:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 20 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 19, redundant 10
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3677 ms, max 126 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 20:41:13 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-03 20:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 14 minutes 25 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 21, redundant 11
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3576 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 20:41:19 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-03 20:44:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 31 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 15, redundant 13
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 184086 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 20:44:25 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-03 20:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 36 seconds
Variants: generated 100, build-succeeded 29, build-failed 32, syntax-invalid 21, redundant 18
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 2603 ms, max 125 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 20:44:29 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-03 20:44:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 41 seconds
Variants: generated 100, build-succeeded 31, build-failed 32, syntax-invalid 25, redundant 12
Fitness: max 1(1), min 0.923(30), ave 0.926
Test execution time: sum 2846 ms, max 152 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 20:44:34 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-03 21:11:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 46 seconds
Variants: generated 100, build-succeeded 29, build-failed 29, syntax-invalid 25, redundant 17
Fitness: max 0.923(26), min 0.385(1), ave 0.899
Test execution time: sum 1622580 ms, max 1440067 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 21:11:39 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-03 21:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 50 minutes 51 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 21, redundant 11
Fitness: max 1(2), min 0.462(2), ave 0.9
Test execution time: sum 363263 ms, max 360087 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 21:17:44 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-03 21:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 56 seconds
Variants: generated 100, build-succeeded 33, build-failed 39, syntax-invalid 23, redundant 5
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183041 ms, max 180124 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 21:20:50 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-03 21:26:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 seconds
Variants: generated 100, build-succeeded 34, build-failed 26, syntax-invalid 24, redundant 16
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363030 ms, max 360086 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 21:26:55 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-03 21:30:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 minutes 7 seconds
Variants: generated 100, build-succeeded 35, build-failed 39, syntax-invalid 15, redundant 11
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 183153 ms, max 180087 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 21:30:00 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-03 21:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 minutes 12 seconds
Variants: generated 100, build-succeeded 36, build-failed 37, syntax-invalid 15, redundant 12
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3226 ms, max 115 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 21:30:06 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-03 21:54:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 18 seconds
Variants: generated 100, build-succeeded 36, build-failed 29, syntax-invalid 24, redundant 11
Fitness: max 0.923(33), min 0.385(1), ave 0.904
Test execution time: sum 1443285 ms, max 1440068 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 21:54:11 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-03 22:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 23 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0.846(4), ave 0.917
Test execution time: sum 363277 ms, max 180087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 22:00:17 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-03 22:03:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 29 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 19, redundant 10
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 183450 ms, max 180101 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 22:03:22 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-03 22:09:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 35 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 20, redundant 11
Fitness: max 1(2), min 0.385(1), ave 0.906
Test execution time: sum 363636 ms, max 360086 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 22:09:28 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-03 22:12:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 41 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 17, redundant 13
Fitness: max 1(1), min 0.769(1), ave 0.919
Test execution time: sum 183716 ms, max 180085 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 22:12:34 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-03 22:18:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 46 seconds
Variants: generated 100, build-succeeded 31, build-failed 31, syntax-invalid 32, redundant 6
Fitness: max 0.923(29), min 0.462(1), ave 0.906
Test execution time: sum 362708 ms, max 360086 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 22:18:39 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-03 22:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 52 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 16, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 3619 ms, max 135 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 22:18:45 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-03 22:24:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 58 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 23, redundant 7
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 363495 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 22:24:51 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-03 22:48:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 22 minutes 4 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 14, redundant 13
Fitness: max 0.923(42), min 0.385(1), ave 0.909
Test execution time: sum 1443904 ms, max 1440067 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 22:48:58 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-03 22:49:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 22 minutes 10 seconds
Variants: generated 100, build-succeeded 38, build-failed 35, syntax-invalid 20, redundant 7
Fitness: max 1(2), min 0.923(36), ave 0.927
Test execution time: sum 3439 ms, max 138 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 22:49:04 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-03 22:55:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 15 seconds
Variants: generated 100, build-succeeded 29, build-failed 33, syntax-invalid 28, redundant 10
Fitness: max 0.923(27), min 0.462(1), ave 0.905
Test execution time: sum 362639 ms, max 360087 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 22:55:09 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-03 22:55:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 20 seconds
Variants: generated 100, build-succeeded 31, build-failed 32, syntax-invalid 29, redundant 8
Fitness: max 1(3), min 0.846(2), ave 0.926
Test execution time: sum 2805 ms, max 130 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 22:55:14 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-03 22:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 28 seconds
Variants: generated 100, build-succeeded 25, build-failed 27, syntax-invalid 35, redundant 13
Fitness: max 1(3), min 0.846(2), ave 0.926
Test execution time: sum 185233 ms, max 180086 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 22:58:21 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-03 22:58:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 33 seconds
Variants: generated 100, build-succeeded 34, build-failed 27, syntax-invalid 28, redundant 11
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 3056 ms, max 122 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 22:58:27 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-03 23:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 38 seconds
Variants: generated 100, build-succeeded 31, build-failed 28, syntax-invalid 31, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.918
Test execution time: sum 542796 ms, max 360086 ms, min 78 ms
----------------------------------------------------------------

2023-08-03 23:07:32 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-03 23:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 39 seconds
Variants: generated 11, build-succeeded 3, build-failed 5, syntax-invalid 0, redundant 3
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 265 ms, max 90 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 23:07:32 [main] [INFO]  KGenProgMain - GA stopped
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v9)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v104)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v104)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v104)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v104)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v206)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v519)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v519)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v519)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v519)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v519)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y0 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v805)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v805)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v805)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y0 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1321)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1321)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1321)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,8 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
+			i++;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1321)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < .5) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1325)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1325)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1325)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1325)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1325)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,7 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y0 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -94,6 +94,7 @@
             double g = 607.0 / 128.0;
             
             double sum = 0.0;
+			double inv = 1 / (x * x);
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1532)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1538)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1538)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1538)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v1538)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2301)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -64,7 +64,8 @@
                   "{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
-        // by default, do simple root finding using bracketing and default solver.
+        double ret;
+		// by default, do simple root finding using bracketing and default solver.
         // subclasses can override if there is a better method.
         UnivariateRealFunction rootFindingFunction =
             new UnivariateRealFunction() {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2630)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2730)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v2843)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double p;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3044)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3108)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3108)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3108)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3108)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3108)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3109)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3150)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3205)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3205)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -97,11 +98,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3205)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3312)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3321)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return 0;
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3327)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3802)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3802)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3848)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3848)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -97,11 +98,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3848)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v3848)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4226)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,12 @@
             
             fb = function.value(b);
             numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
-                ((a > lowerBound) || (b < upperBound)));
+        } while (fa * fb >= 0.0);
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            throw MathRuntimeException.createIllegalArgumentException(
+					"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}", lowerBound,
+					initial, upperBound);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4537)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4537)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4537)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4537)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4537)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4831)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,8 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double fm;
+			double q, A, B, C, delta, denominator, tolerance;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4911)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,8 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,9 +188,7 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
-                ((a > lowerBound) || (b < upperBound)));
+        } while (fa * fb >= 0.0);
    
         if (fa * fb >= 0.0 ) {
             throw new ConvergenceException(
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v4926)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5060)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5060)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5060)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -167,7 +167,7 @@
             int maximumIterations) throws ConvergenceException, 
             FunctionEvaluationException {
         
-        if (function == null) {
+        if (maximumIterations <= 0) {
             throw MathRuntimeException.createIllegalArgumentException("function is null");
         }
         if (maximumIterations <= 0)  {
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5060)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5060)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5086)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5179)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5179)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5179)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5179)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5179)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -221,7 +221,8 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        y0 = y1;
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5252)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5252)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5252)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5252)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5252)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,10 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
-        return ret;
+        return -Double.MAX_VALUE;
     }
 
     /**
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5291)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return pattern;
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5291)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5291)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5291)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5291)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5389)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5389)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5389)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5389)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -175,9 +174,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +192,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double fm;
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5389)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5436)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5436)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5436)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:33 [main] [INFO]  PatchLogExporter - patch (v5436)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -50,7 +50,6 @@
      */
     public static double solve(UnivariateRealFunction f, double x0, double x1)
     throws ConvergenceException, FunctionEvaluationException {
-        setup(f);
         return LazyHolder.FACTORY.newDefaultSolver().solve(f, x0, x1);
     }
 
@@ -196,12 +195,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -93,7 +93,8 @@
         } else {
             double g = 607.0 / 128.0;
             
-            double sum = 0.0;
+            double n = 0.0;
+			double sum = 0.0;
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
@@ -158,7 +159,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (x < 0) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v5721)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (x < 0) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6177)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -192,8 +189,7 @@
             
             fb = function.value(b);
             numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
-                ((a > lowerBound) || (b < upperBound)));
+        } while (fa * fb >= 0.0);
    
         if (fa * fb >= 0.0 ) {
             throw new ConvergenceException(
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (x < 0) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6402)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,12 @@
             
             fb = function.value(b);
             numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
-                ((a > lowerBound) || (b < upperBound)));
+        } while (fa * fb >= 0.0);
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            throw MathRuntimeException.createIllegalArgumentException(
+					"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}", lowerBound,
+					initial, upperBound);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v6730)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -270,7 +269,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7026)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,7 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        this.iterationCount = 0;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -192,16 +192,12 @@
             
             fb = function.value(b);
             numIterations++ ;
-        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
-                ((a > lowerBound) || (b < upperBound)));
+        } while (fa * fb >= 0.0);
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            throw MathRuntimeException.createIllegalArgumentException(
+					"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}", lowerBound,
+					initial, upperBound);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7208)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -290,7 +290,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7616)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7732)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
@@ -200,7 +206,8 @@
         if (p < .5) {
             ret = getMean();
         } else {
-            ret = Double.MAX_VALUE;
+            ret = getMean() - getStandardDeviation();
+			ret = Double.MAX_VALUE;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8026)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8049)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8303)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
+			return 0;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8437)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8520)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v8824)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9017)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -43,7 +43,6 @@
      * Default constructor.
      */
     protected AbstractContinuousDistribution() {
-        super();
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9022)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9591)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9591)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9591)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -191,17 +188,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9591)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9591)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9649)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v9831)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10018)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
@@ -163,7 +161,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10040)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10131)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10223)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10311)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10445)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10471)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10527)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10543)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,11 +175,9 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
+		double fmin;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +194,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10622)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,10 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10846)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -304,7 +304,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10856)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,12 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10902)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,16 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v10992)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11017)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11244)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,11 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11437)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,9 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11529)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11556)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11643)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            this.mean = mean;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,17 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11905)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11916)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11916)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11916)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11916)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v11916)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,16 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            this.mean = mean;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12003)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,16 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12032)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:34 [main] [INFO]  PatchLogExporter - patch (v12047)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,18 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12202)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12300)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12300)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12300)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12300)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12300)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12431)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,13 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12434)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12435)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -175,10 +175,16 @@
     protected double getDomainLowerBound(double p) {
         double ret;
 
-        if (p < .5) {
+        if (p == 1) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12502)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12505)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12578)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,14 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12607)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12607)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12607)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12607)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12607)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,17 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12696)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12702)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12702)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12702)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,18 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -175,9 +175,6 @@
                   "bad value for maximum iterations number: {0}", maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                  "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
-                  lowerBound, initial, upperBound);
         }
         double a = initial;
         double b = initial;
@@ -196,12 +193,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -160,7 +160,7 @@
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (x == 0.0) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 23:07:35 [main] [INFO]  PatchLogExporter - patch (v12811)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,15 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = Double.NEGATIVE_INFINITY;
+			ret = getMean();
         }
         
         return ret;
2023-08-03 23:07:37 [main] [INFO]  KGenProgMain - Summary
Reached generation = 130
Generated variants = 12811
Syntax valid variants = 10450
Build succeeded variants = 4446
Time elapsed = 9 hours 40 minutes 43 seconds
Exit status = SUCCESS
