2023-08-02 15:47:17 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-02 15:47:17 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-02 15:47:17 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-02 15:47:17 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 4 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-02 15:47:24 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-02 15:47:24 [main] [INFO]  KGenProgMain - GA started
2023-08-02 15:47:24 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-02 15:53:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 2 seconds
Variants: generated 50, build-succeeded 8, build-failed 30, syntax-invalid 6, redundant 6
Fitness: max 1(1), min 0.846(3), ave 0.904
Test execution time: sum 361021 ms, max 360130 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 15:53:26 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-02 15:53:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 3 seconds
Variants: generated 50, build-succeeded 3, build-failed 38, syntax-invalid 1, redundant 8
Fitness: max 0.923(1), min 0.615(1), ave 0.795
Test execution time: sum 291 ms, max 101 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 15:53:28 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-02 16:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 6 seconds
Variants: generated 100, build-succeeded 21, build-failed 29, syntax-invalid 5, redundant 45
Fitness: max 0.923(7), min 0.385(1), ave 0.791
Test execution time: sum 1981894 ms, max 1440073 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 16:26:31 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-02 16:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 9 seconds
Variants: generated 100, build-succeeded 19, build-failed 30, syntax-invalid 12, redundant 39
Fitness: max 0.923(7), min 0.769(1), ave 0.87
Test execution time: sum 1441667 ms, max 360090 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 16:50:34 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-02 17:08:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 13 seconds
Variants: generated 100, build-succeeded 24, build-failed 34, syntax-invalid 9, redundant 33
Fitness: max 0.923(18), min 0.769(1), ave 0.901
Test execution time: sum 1082134 ms, max 360093 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 17:08:37 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-02 17:08:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 16 seconds
Variants: generated 100, build-succeeded 24, build-failed 36, syntax-invalid 9, redundant 31
Fitness: max 0.923(24), min 0.923(24), ave 0.923
Test execution time: sum 2183 ms, max 120 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 17:08:41 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-02 17:14:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 20 seconds
Variants: generated 100, build-succeeded 28, build-failed 32, syntax-invalid 6, redundant 34
Fitness: max 1(3), min 0.846(2), ave 0.926
Test execution time: sum 362476 ms, max 360110 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 17:14:44 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-02 17:20:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 24 seconds
Variants: generated 100, build-succeeded 29, build-failed 37, syntax-invalid 10, redundant 24
Fitness: max 0.923(27), min 0.846(2), ave 0.918
Test execution time: sum 362575 ms, max 360089 ms, min 72 ms
----------------------------------------------------------------

2023-08-02 17:20:48 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-02 17:20:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 27 seconds
Variants: generated 100, build-succeeded 23, build-failed 35, syntax-invalid 8, redundant 34
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 2028 ms, max 104 ms, min 74 ms
----------------------------------------------------------------

2023-08-02 17:20:52 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-02 17:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 32 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 6, redundant 26
Fitness: max 0.923(34), min 0.846(2), ave 0.919
Test execution time: sum 363271 ms, max 180091 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 17:26:56 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-02 17:30:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 36 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 11, redundant 19
Fitness: max 0.923(36), min 0.846(2), ave 0.919
Test execution time: sum 183438 ms, max 180090 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 17:30:01 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-02 17:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 41 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 13, redundant 20
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 3498 ms, max 110 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 17:30:06 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-02 17:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 46 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 15, redundant 11
Fitness: max 0.923(38), min 0.923(38), ave 0.923
Test execution time: sum 3482 ms, max 112 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 17:30:11 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-02 17:54:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 51 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 13, redundant 13
Fitness: max 1(2), min 0.385(1), ave 0.914
Test execution time: sum 1443672 ms, max 1440107 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 17:54:16 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-02 17:54:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 57 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 6, redundant 17
Fitness: max 0.923(43), min 0.846(1), ave 0.921
Test execution time: sum 3975 ms, max 118 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 17:54:21 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-02 17:54:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 2 seconds
Variants: generated 100, build-succeeded 39, build-failed 38, syntax-invalid 15, redundant 8
Fitness: max 0.923(38), min 0.846(1), ave 0.921
Test execution time: sum 3467 ms, max 111 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 17:54:27 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-02 17:54:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 8 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 7, redundant 14
Fitness: max 1(1), min 0.615(1), ave 0.916
Test execution time: sum 4272 ms, max 120 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 17:54:32 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-02 17:54:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 13 seconds
Variants: generated 100, build-succeeded 39, build-failed 40, syntax-invalid 9, redundant 12
Fitness: max 0.923(37), min 0.846(2), ave 0.919
Test execution time: sum 3530 ms, max 108 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 17:54:37 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-02 17:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 19 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 13, redundant 9
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 4186 ms, max 123 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 17:54:43 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-02 17:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 7 minutes 24 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 11, redundant 9
Fitness: max 0.923(41), min 0.385(2), ave 0.896
Test execution time: sum 4059 ms, max 131 ms, min 68 ms
----------------------------------------------------------------

2023-08-02 17:54:49 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-02 17:57:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 7, redundant 11
Fitness: max 0.923(43), min 0.846(6), ave 0.914
Test execution time: sum 184396 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 17:57:55 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-02 17:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 15, redundant 7
Fitness: max 0.923(46), min 0.846(4), ave 0.917
Test execution time: sum 4450 ms, max 111 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 17:58:01 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-02 18:22:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 13, redundant 11
Fitness: max 0.923(49), min 0.385(1), ave 0.911
Test execution time: sum 1444599 ms, max 1440067 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 18:22:07 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-02 18:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 49 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 9, redundant 7
Fitness: max 0.923(46), min 0.846(3), ave 0.918
Test execution time: sum 364440 ms, max 360086 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 18:28:13 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-02 18:28:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 54 seconds
Variants: generated 100, build-succeeded 42, build-failed 36, syntax-invalid 16, redundant 6
Fitness: max 0.923(41), min 0.846(1), ave 0.921
Test execution time: sum 3721 ms, max 119 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 18:28:19 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-02 18:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 5, redundant 10
Fitness: max 0.923(44), min 0.846(5), ave 0.915
Test execution time: sum 4411 ms, max 112 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 18:28:25 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-02 18:28:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 6 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 12, redundant 12
Fitness: max 0.923(43), min 0.846(1), ave 0.921
Test execution time: sum 3909 ms, max 113 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 18:28:30 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-02 18:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 10, redundant 7
Fitness: max 1(3), min 0.846(2), ave 0.925
Test execution time: sum 4578 ms, max 103 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 18:28:37 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-02 18:52:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 18 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 13, redundant 10
Fitness: max 1(2), min 0.385(1), ave 0.915
Test execution time: sum 1444139 ms, max 1440068 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 18:52:43 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-02 18:52:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 23 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 13, redundant 10
Fitness: max 0.923(41), min 0.846(1), ave 0.921
Test execution time: sum 3725 ms, max 132 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 18:52:48 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-02 18:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 29 seconds
Variants: generated 100, build-succeeded 40, build-failed 32, syntax-invalid 13, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363563 ms, max 360086 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 18:58:53 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-02 19:08:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 35 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 9, redundant 7
Fitness: max 1(2), min 0.462(1), ave 0.914
Test execution time: sum 544514 ms, max 540066 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 19:08:00 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-02 19:08:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 41 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 12, redundant 10
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 4052 ms, max 126 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 19:08:05 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-02 19:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 47 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 15, redundant 8
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 4694 ms, max 122 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 19:08:12 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-02 19:08:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 53 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 7, redundant 12
Fitness: max 1(1), min 0.846(4), ave 0.918
Test execution time: sum 4312 ms, max 131 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 19:08:18 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-02 19:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 59 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 11, redundant 8
Fitness: max 0.923(43), min 0.846(5), ave 0.915
Test execution time: sum 4307 ms, max 130 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 19:08:24 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-02 19:08:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 5 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 14, redundant 14
Fitness: max 0.923(36), min 0.615(1), ave 0.907
Test execution time: sum 3802 ms, max 121 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:08:29 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-02 19:08:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 10, redundant 12
Fitness: max 0.923(48), min 0.462(1), ave 0.91
Test execution time: sum 4672 ms, max 127 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 19:08:36 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-02 19:08:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 18 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 9, redundant 5
Fitness: max 0.923(50), min 0.846(4), ave 0.917
Test execution time: sum 4856 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 19:08:42 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-02 19:08:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 24 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 9, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4642 ms, max 124 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:08:49 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-02 19:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 30 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 4174 ms, max 109 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:08:55 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-02 19:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 37, syntax-invalid 6, redundant 14
Fitness: max 0.923(41), min 0.846(2), ave 0.919
Test execution time: sum 3961 ms, max 111 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:09:01 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-02 19:09:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 42 seconds
Variants: generated 100, build-succeeded 42, build-failed 36, syntax-invalid 13, redundant 9
Fitness: max 0.923(39), min 0.846(3), ave 0.918
Test execution time: sum 3980 ms, max 120 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:09:07 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-02 19:09:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 48 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 17, redundant 11
Fitness: max 0.923(39), min 0.385(1), ave 0.904
Test execution time: sum 3987 ms, max 114 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 19:09:13 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-02 19:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 54 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 19, redundant 11
Fitness: max 0.923(36), min 0.385(1), ave 0.904
Test execution time: sum 1803619 ms, max 1440067 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:39:18 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-02 19:39:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 15, redundant 7
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 4409 ms, max 106 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:39:25 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-02 19:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 7 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 9, redundant 6
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 5054 ms, max 115 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 19:39:32 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-02 19:39:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 10, redundant 12
Fitness: max 1(1), min 0.846(5), ave 0.917
Test execution time: sum 4512 ms, max 118 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:39:38 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-02 19:39:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 20 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 18, redundant 6
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 4589 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:39:45 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-02 19:48:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 27 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 13, redundant 5
Fitness: max 0.923(39), min 0.846(9), ave 0.909
Test execution time: sum 544332 ms, max 360085 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 19:48:51 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-02 19:48:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 33 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 10, redundant 6
Fitness: max 0.923(43), min 0.846(4), ave 0.917
Test execution time: sum 4236 ms, max 115 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 19:48:58 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-02 19:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 40 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 11, redundant 9
Fitness: max 1(1), min 0.846(9), ave 0.911
Test execution time: sum 4744 ms, max 115 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 19:49:05 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-02 19:49:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 47 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 8, redundant 8
Fitness: max 0.923(50), min 0.462(1), ave 0.913
Test execution time: sum 4700 ms, max 114 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 19:49:11 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-02 19:49:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 4644 ms, max 111 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 19:49:18 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-02 19:49:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 38, syntax-invalid 9, redundant 5
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 4388 ms, max 139 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:49:25 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-02 19:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 8 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 5, redundant 4
Fitness: max 0.923(55), min 0.846(1), ave 0.922
Test execution time: sum 5005 ms, max 120 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:49:32 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-02 19:49:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 14 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 13, redundant 9
Fitness: max 0.923(44), min 0.769(1), ave 0.914
Test execution time: sum 4398 ms, max 120 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:49:39 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-02 19:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 21 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 12, redundant 11
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 4319 ms, max 135 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:49:46 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 27 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 13, redundant 9
Fitness: max 1(1), min 0.846(4), ave 0.918
Test execution time: sum 183992 ms, max 180089 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-02 19:52:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 4674 ms, max 148 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:52:59 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-02 19:56:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 41 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 8, redundant 10
Fitness: max 0.923(45), min 0.769(1), ave 0.914
Test execution time: sum 184485 ms, max 180088 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 19:56:06 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-02 19:56:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 48 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 9, redundant 12
Fitness: max 0.923(42), min 0.846(3), ave 0.918
Test execution time: sum 4094 ms, max 130 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 19:56:12 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-02 19:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 7, redundant 7
Fitness: max 1(2), min 0.846(3), ave 0.922
Test execution time: sum 4587 ms, max 116 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 19:56:20 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-02 19:56:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 3 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 6, redundant 9
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 5175 ms, max 123 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 19:56:27 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-02 19:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 7, redundant 9
Fitness: max 1(1), min 0.846(8), ave 0.914
Test execution time: sum 5298 ms, max 108 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 19:56:35 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-02 20:02:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 6, redundant 6
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 364640 ms, max 360088 ms, min 71 ms
----------------------------------------------------------------

2023-08-02 20:02:42 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-02 20:02:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 25 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 16, redundant 4
Fitness: max 0.923(48), min 0.846(4), ave 0.917
Test execution time: sum 4674 ms, max 142 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 20:02:50 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-02 20:02:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 32 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 15, redundant 2
Fitness: max 0.923(48), min 0.923(48), ave 0.923
Test execution time: sum 4371 ms, max 125 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 20:02:56 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-02 20:03:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 39 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 10, redundant 4
Fitness: max 0.923(44), min 0.462(1), ave 0.904
Test execution time: sum 4715 ms, max 130 ms, min 68 ms
----------------------------------------------------------------

2023-08-02 20:03:04 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-02 20:03:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 8, redundant 8
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 4610 ms, max 116 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 20:03:11 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-02 20:03:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 54 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 6, redundant 8
Fitness: max 0.923(46), min 0.846(8), ave 0.912
Test execution time: sum 4909 ms, max 128 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 20:03:18 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-02 20:03:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 1 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 7, redundant 6
Fitness: max 1(1), min 0.846(7), ave 0.914
Test execution time: sum 4687 ms, max 113 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:03:26 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-02 20:03:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 8 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 10, redundant 7
Fitness: max 0.923(46), min 0.462(1), ave 0.911
Test execution time: sum 4469 ms, max 126 ms, min 69 ms
----------------------------------------------------------------

2023-08-02 20:03:33 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-02 20:03:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 15 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 15, redundant 12
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 4310 ms, max 106 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:03:40 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-02 20:03:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 22 seconds
Variants: generated 100, build-succeeded 46, build-failed 36, syntax-invalid 9, redundant 9
Fitness: max 0.923(42), min 0.846(4), ave 0.916
Test execution time: sum 4257 ms, max 113 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 20:03:47 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-02 20:03:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 5, redundant 11
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 4725 ms, max 107 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:03:54 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-02 20:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 36 seconds
Variants: generated 100, build-succeeded 40, build-failed 36, syntax-invalid 13, redundant 11
Fitness: max 1(1), min 0.846(4), ave 0.917
Test execution time: sum 3715 ms, max 113 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 20:04:01 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-02 20:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 9, redundant 6
Fitness: max 1(3), min 0.846(4), ave 0.922
Test execution time: sum 4587 ms, max 124 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 20:04:08 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-02 20:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 52 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 7, redundant 8
Fitness: max 0.923(45), min 0.846(7), ave 0.913
Test execution time: sum 4971 ms, max 112 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 20:04:16 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-02 20:04:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 0 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 8, redundant 5
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 4809 ms, max 110 ms, min 71 ms
----------------------------------------------------------------

2023-08-02 20:04:24 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-02 20:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 7 seconds
Variants: generated 100, build-succeeded 51, build-failed 40, syntax-invalid 6, redundant 3
Fitness: max 0.923(50), min 0.846(1), ave 0.922
Test execution time: sum 4594 ms, max 128 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 20:04:32 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-02 20:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 7, redundant 6
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5288 ms, max 133 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 20:04:40 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-02 20:04:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 8, redundant 8
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 4809 ms, max 127 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 20:04:48 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-02 20:04:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 31 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 7, redundant 7
Fitness: max 0.923(51), min 0.846(1), ave 0.922
Test execution time: sum 4702 ms, max 120 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:04:56 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-02 20:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 11, redundant 6
Fitness: max 0.923(49), min 0.846(2), ave 0.92
Test execution time: sum 4617 ms, max 117 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:05:04 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-02 20:11:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 48 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 365112 ms, max 360109 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:11:12 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-02 20:11:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 10, redundant 9
Fitness: max 0.923(45), min 0.846(5), ave 0.915
Test execution time: sum 4612 ms, max 111 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 20:11:20 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-02 20:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 3 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 15, redundant 4
Fitness: max 1(2), min 0.846(5), ave 0.919
Test execution time: sum 4688 ms, max 111 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:11:28 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-02 20:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 11 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 17, redundant 3
Fitness: max 0.923(42), min 0.846(9), ave 0.91
Test execution time: sum 184666 ms, max 180088 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 20:14:36 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-02 20:14:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 20 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.846(8), ave 0.914
Test execution time: sum 5266 ms, max 120 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 20:14:44 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-02 20:26:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 28 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.923(47), min 0.462(1), ave 0.902
Test execution time: sum 725316 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 20:26:53 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-02 20:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 36 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 4754 ms, max 106 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 20:27:01 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-02 20:27:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.846(9), ave 0.911
Test execution time: sum 4577 ms, max 147 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 20:27:09 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-02 20:27:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0.923(42), min 0.538(1), ave 0.901
Test execution time: sum 4824 ms, max 130 ms, min 69 ms
----------------------------------------------------------------

2023-08-02 20:27:17 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-02 20:51:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 2 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 8, redundant 3
Fitness: max 0.923(49), min 0.385(1), ave 0.901
Test execution time: sum 1445393 ms, max 1440068 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 20:51:26 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-02 20:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 10 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 7, redundant 6
Fitness: max 0.923(46), min 0.846(8), ave 0.912
Test execution time: sum 184929 ms, max 180102 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 20:54:35 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-02 20:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 7 minutes 18 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 9, redundant 6
Fitness: max 0.923(45), min 0.846(4), ave 0.917
Test execution time: sum 4457 ms, max 114 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 20:54:43 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-02 20:57:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 27 seconds
Variants: generated 100, build-succeeded 53, build-failed 37, syntax-invalid 7, redundant 3
Fitness: max 0.923(47), min 0.846(6), ave 0.914
Test execution time: sum 184873 ms, max 180087 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 20:57:52 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-02 20:58:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 10 minutes 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 6, redundant 4
Fitness: max 0.923(51), min 0.769(1), ave 0.911
Test execution time: sum 5441 ms, max 115 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 20:58:01 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-02 21:04:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 16 minutes 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 38, syntax-invalid 7, redundant 5
Fitness: max 0.923(43), min 0.846(7), ave 0.912
Test execution time: sum 364547 ms, max 180088 ms, min 73 ms
----------------------------------------------------------------

2023-08-02 21:04:09 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-02 21:07:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 53 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 0.923(46), min 0.846(9), ave 0.91
Test execution time: sum 185068 ms, max 180088 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 21:07:18 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-02 21:07:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0.923(39), min 0.846(10), ave 0.907
Test execution time: sum 4571 ms, max 107 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 21:07:26 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-02 21:16:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 9 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 14, redundant 5
Fitness: max 0.923(40), min 0.846(6), ave 0.913
Test execution time: sum 544270 ms, max 180098 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 21:16:33 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-02 21:16:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 17 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0.923(48), min 0.846(6), ave 0.915
Test execution time: sum 5040 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 21:16:42 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-02 21:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 35 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 12, redundant 6
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 364415 ms, max 360090 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 21:22:50 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-02 21:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 33 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 12, redundant 5
Fitness: max 0.923(45), min 0.846(6), ave 0.914
Test execution time: sum 364821 ms, max 180095 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 21:28:58 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-02 21:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 41 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 14, redundant 4
Fitness: max 0.923(44), min 0.846(5), ave 0.915
Test execution time: sum 4511 ms, max 157 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 21:29:06 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-02 21:29:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 0.923(47), min 0.846(5), ave 0.916
Test execution time: sum 4738 ms, max 149 ms, min 73 ms
----------------------------------------------------------------

2023-08-02 21:29:14 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-02 21:29:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 10, redundant 3
Fitness: max 0.923(50), min 0.846(5), ave 0.916
Test execution time: sum 5051 ms, max 132 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:29:23 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-02 21:29:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0.846(6), ave 0.916
Test execution time: sum 4767 ms, max 134 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:29:31 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-02 21:29:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 15 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 12, redundant 2
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 4662 ms, max 133 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:29:40 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-02 21:29:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 24 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 8, redundant 5
Fitness: max 0.923(48), min 0.846(7), ave 0.913
Test execution time: sum 5027 ms, max 116 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:29:49 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-02 21:29:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 33 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 5, redundant 9
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 5428 ms, max 123 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:29:58 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-02 21:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 42 seconds
Variants: generated 100, build-succeeded 50, build-failed 37, syntax-invalid 8, redundant 5
Fitness: max 0.923(48), min 0.846(2), ave 0.92
Test execution time: sum 4613 ms, max 140 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:30:06 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-02 21:30:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 8, redundant 9
Fitness: max 0.923(46), min 0.846(2), ave 0.92
Test execution time: sum 4461 ms, max 113 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:30:15 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-02 21:30:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 59 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 5, redundant 3
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 5551 ms, max 110 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 21:30:24 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-02 21:30:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 7 seconds
Variants: generated 100, build-succeeded 44, build-failed 38, syntax-invalid 17, redundant 1
Fitness: max 0.923(43), min 0.846(1), ave 0.921
Test execution time: sum 4027 ms, max 116 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:30:32 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-02 21:30:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 15 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 14, redundant 7
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 4274 ms, max 122 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 21:30:40 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-02 21:30:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 24 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 5076 ms, max 140 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:30:48 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-02 21:30:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 32 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 4377 ms, max 118 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:30:56 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-02 21:31:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 17, redundant 4
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 4681 ms, max 142 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:31:04 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-02 21:31:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 43 minutes 48 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 10, redundant 8
Fitness: max 0.923(46), min 0.846(7), ave 0.913
Test execution time: sum 4842 ms, max 122 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:31:13 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-02 21:55:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 minutes 57 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.923(51), min 0.385(1), ave 0.91
Test execution time: sum 1445012 ms, max 1440078 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:55:21 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-02 21:55:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 5 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 16, redundant 2
Fitness: max 0.923(41), min 0.846(6), ave 0.913
Test execution time: sum 4382 ms, max 139 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:55:29 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-02 21:55:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 12 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 20, redundant 6
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 4112 ms, max 135 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:55:37 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-02 21:55:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 20 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 16, redundant 3
Fitness: max 0.923(40), min 0.846(5), ave 0.915
Test execution time: sum 4170 ms, max 146 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:55:45 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-02 21:55:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 28 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 18, redundant 3
Fitness: max 0.923(42), min 0.462(1), ave 0.907
Test execution time: sum 4393 ms, max 147 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 21:55:53 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-02 21:56:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 37 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 10, redundant 2
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 4935 ms, max 146 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 21:56:02 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-02 21:56:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 0.923(51), min 0.615(1), ave 0.913
Test execution time: sum 5104 ms, max 142 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:56:11 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-02 21:56:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 8 minutes 55 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 12, redundant 1
Fitness: max 0.923(49), min 0.846(5), ave 0.916
Test execution time: sum 5037 ms, max 153 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 21:56:20 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-02 21:56:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0.923(54), min 0.846(6), ave 0.915
Test execution time: sum 5597 ms, max 145 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 21:56:29 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-02 21:56:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 11, redundant 3
Fitness: max 0.923(48), min 0.769(1), ave 0.913
Test execution time: sum 4969 ms, max 117 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:56:38 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-02 21:56:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 23 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0.923(53), min 0.462(1), ave 0.911
Test execution time: sum 5239 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-08-02 21:56:48 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-02 21:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 10, redundant 5
Fitness: max 0.923(48), min 0.846(2), ave 0.92
Test execution time: sum 4576 ms, max 109 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 21:56:56 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-02 21:57:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 41 seconds
Variants: generated 100, build-succeeded 51, build-failed 38, syntax-invalid 9, redundant 2
Fitness: max 0.923(45), min 0.846(6), ave 0.914
Test execution time: sum 4715 ms, max 122 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:57:05 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-02 21:57:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 49 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 13, redundant 10
Fitness: max 0.923(43), min 0.846(4), ave 0.917
Test execution time: sum 4406 ms, max 135 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 21:57:14 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-02 21:57:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 9 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 5, redundant 6
Fitness: max 0.923(54), min 0.846(3), ave 0.919
Test execution time: sum 5278 ms, max 118 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 21:57:23 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-02 22:03:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.923(55), min 0.846(4), ave 0.918
Test execution time: sum 365464 ms, max 360091 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:03:32 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-02 22:03:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 17 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 7, redundant 4
Fitness: max 0.923(51), min 0.846(3), ave 0.919
Test execution time: sum 5037 ms, max 129 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:03:42 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-02 22:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 38, syntax-invalid 3, redundant 4
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 5137 ms, max 114 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:03:51 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-02 22:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.923(56), min 0.846(3), ave 0.919
Test execution time: sum 5540 ms, max 130 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:04:01 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-02 22:04:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0.846(5), ave 0.918
Test execution time: sum 5407 ms, max 107 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:04:10 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-02 22:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 16 minutes 55 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0.923(53), min 0.846(7), ave 0.914
Test execution time: sum 5499 ms, max 111 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:04:20 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-02 22:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 5 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 7, redundant 4
Fitness: max 0.923(58), min 0.846(1), ave 0.922
Test execution time: sum 5451 ms, max 148 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:04:30 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-02 22:04:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 15 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 6, redundant 3
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5166 ms, max 114 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:04:39 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-02 22:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 7, redundant 4
Fitness: max 0.923(52), min 0.769(1), ave 0.91
Test execution time: sum 5651 ms, max 151 ms, min 73 ms
----------------------------------------------------------------

2023-08-02 22:04:49 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-02 22:04:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 34 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 4, redundant 6
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 5331 ms, max 146 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:04:59 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-02 22:05:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 6, redundant 6
Fitness: max 1(2), min 0.846(5), ave 0.919
Test execution time: sum 5411 ms, max 123 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:05:08 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-02 22:05:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 17 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5495 ms, max 125 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:05:18 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-02 22:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 4 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 6, redundant 0
Fitness: max 0.923(53), min 0.769(1), ave 0.913
Test execution time: sum 5666 ms, max 117 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:05:28 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-02 22:05:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 13 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 12, redundant 3
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 4897 ms, max 125 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:05:37 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-02 22:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0.846(6), ave 0.916
Test execution time: sum 365314 ms, max 360088 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:11:47 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-02 22:11:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 30 seconds
Variants: generated 100, build-succeeded 45, build-failed 37, syntax-invalid 16, redundant 2
Fitness: max 0.923(42), min 0.846(3), ave 0.918
Test execution time: sum 4192 ms, max 133 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 22:11:55 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-02 22:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 17, redundant 3
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 4720 ms, max 149 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:12:04 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-02 22:12:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 47 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 18, redundant 3
Fitness: max 0.923(44), min 0.846(2), ave 0.92
Test execution time: sum 4148 ms, max 125 ms, min 73 ms
----------------------------------------------------------------

2023-08-02 22:12:11 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-02 22:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 24 minutes 56 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 5460 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 22:12:21 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-02 22:12:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 5 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 15, redundant 6
Fitness: max 0.923(49), min 0.846(5), ave 0.916
Test execution time: sum 4995 ms, max 136 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:12:30 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-02 22:12:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 13 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 15, redundant 4
Fitness: max 0.923(44), min 0.846(1), ave 0.921
Test execution time: sum 4151 ms, max 130 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:12:38 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-02 22:12:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 21 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 15, redundant 6
Fitness: max 0.923(41), min 0.846(2), ave 0.919
Test execution time: sum 3996 ms, max 123 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:12:46 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-02 22:12:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 30 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.923(52), min 0.846(5), ave 0.916
Test execution time: sum 5358 ms, max 137 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:12:55 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-02 22:13:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 11, redundant 5
Fitness: max 0.923(49), min 0.846(6), ave 0.915
Test execution time: sum 5138 ms, max 119 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 22:13:04 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-02 22:13:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 25 minutes 48 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 0.923(53), min 0.846(2), ave 0.92
Test execution time: sum 5127 ms, max 122 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:13:13 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-02 22:19:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 58 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 7, redundant 0
Fitness: max 0.923(55), min 0.846(5), ave 0.917
Test execution time: sum 365649 ms, max 360092 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 22:19:23 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-02 22:19:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 8 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 9, redundant 2
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 5110 ms, max 121 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:19:32 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-02 22:19:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 16 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 11, redundant 8
Fitness: max 0.923(46), min 0.923(46), ave 0.923
Test execution time: sum 4294 ms, max 146 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:19:41 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-02 22:19:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 10, redundant 3
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 5606 ms, max 153 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:19:51 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-02 22:20:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 4, redundant 4
Fitness: max 0.923(57), min 0.846(2), ave 0.92
Test execution time: sum 5471 ms, max 128 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 22:20:00 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-02 22:20:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 11, redundant 5
Fitness: max 0.923(49), min 0.846(1), ave 0.922
Test execution time: sum 4678 ms, max 131 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:20:09 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-02 22:20:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 6, redundant 8
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 4973 ms, max 124 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:20:18 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-02 22:20:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 3 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.923(55), min 0.462(1), ave 0.912
Test execution time: sum 5434 ms, max 146 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 22:20:28 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-02 22:20:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 12 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5255 ms, max 129 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 22:20:37 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-02 22:20:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 22 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 8, redundant 8
Fitness: max 0.923(53), min 0.846(1), ave 0.922
Test execution time: sum 5122 ms, max 129 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:20:46 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-02 22:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 5490 ms, max 122 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 22:20:56 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-02 22:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 41 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 9, redundant 2
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 5261 ms, max 123 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 22:21:06 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-02 22:21:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 51 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 5367 ms, max 138 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:21:16 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-02 22:21:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 7, redundant 4
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5344 ms, max 116 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:21:26 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-02 22:21:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 12 seconds
Variants: generated 100, build-succeeded 64, build-failed 32, syntax-invalid 3, redundant 1
Fitness: max 1(1), min 0.846(3), ave 0.921
Test execution time: sum 5979 ms, max 134 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 22:21:36 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-02 22:21:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 9, redundant 4
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 5172 ms, max 132 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:21:46 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-02 22:21:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 10, redundant 2
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 4981 ms, max 168 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:21:56 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-02 22:22:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 42 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 4, redundant 1
Fitness: max 0.923(57), min 0.846(4), ave 0.918
Test execution time: sum 5785 ms, max 158 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:22:06 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-02 22:22:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 34 minutes 52 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 0.923(58), min 0.846(3), ave 0.919
Test execution time: sum 5776 ms, max 127 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:22:17 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-02 22:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.923(56), min 0.846(3), ave 0.919
Test execution time: sum 5596 ms, max 138 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:22:27 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-02 22:22:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 12 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5132 ms, max 119 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:22:37 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-02 22:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 4, redundant 2
Fitness: max 0.923(59), min 0.846(3), ave 0.919
Test execution time: sum 5863 ms, max 120 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:22:48 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-02 22:22:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 33 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 8, redundant 2
Fitness: max 1(1), min 0.846(5), ave 0.918
Test execution time: sum 5416 ms, max 121 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:22:58 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-02 22:23:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 42 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 16, redundant 4
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 4463 ms, max 145 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:23:07 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-02 22:23:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 35 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 8, redundant 5
Fitness: max 0.923(52), min 0.846(1), ave 0.922
Test execution time: sum 4959 ms, max 128 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 22:23:17 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-02 22:23:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 12, redundant 5
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 4856 ms, max 131 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:23:27 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-02 22:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 12 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 8, redundant 2
Fitness: max 0.923(55), min 0.846(1), ave 0.922
Test execution time: sum 5355 ms, max 128 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:23:37 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-02 22:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 22 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 7, redundant 2
Fitness: max 0.923(52), min 0.462(1), ave 0.913
Test execution time: sum 5103 ms, max 129 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 22:23:47 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-02 22:23:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 33 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 5473 ms, max 117 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:23:57 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-02 22:24:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 43 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 11, redundant 5
Fitness: max 0.923(57), min 0.846(4), ave 0.918
Test execution time: sum 5795 ms, max 129 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:24:08 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-02 22:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 5538 ms, max 134 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:24:18 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-02 22:24:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 10, redundant 7
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 5215 ms, max 125 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:24:29 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-02 22:24:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 9, redundant 3
Fitness: max 0.923(50), min 0.846(4), ave 0.917
Test execution time: sum 5169 ms, max 155 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:24:39 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-02 22:24:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 24 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 19, redundant 0
Fitness: max 0.923(46), min 0.846(5), ave 0.916
Test execution time: sum 4842 ms, max 119 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:24:49 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-02 22:24:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 34 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0.846(7), ave 0.914
Test execution time: sum 5058 ms, max 149 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:24:59 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-02 22:25:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 45 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 8, redundant 2
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 5306 ms, max 145 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:25:09 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-02 22:25:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 56 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 4, redundant 3
Fitness: max 0.923(61), min 0.846(3), ave 0.919
Test execution time: sum 6085 ms, max 115 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:25:21 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-02 22:25:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 7 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 9, redundant 4
Fitness: max 0.923(55), min 0.846(5), ave 0.917
Test execution time: sum 5707 ms, max 111 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:25:32 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-02 22:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 18 seconds
Variants: generated 100, build-succeeded 54, build-failed 39, syntax-invalid 6, redundant 1
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5224 ms, max 129 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:25:43 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-02 22:25:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 7, redundant 1
Fitness: max 0.923(55), min 0.462(1), ave 0.911
Test execution time: sum 5513 ms, max 113 ms, min 74 ms
----------------------------------------------------------------

2023-08-02 22:25:54 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-02 22:26:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 41 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 8, redundant 2
Fitness: max 0.923(58), min 0.462(1), ave 0.911
Test execution time: sum 5988 ms, max 124 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:26:05 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-02 22:26:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 36, syntax-invalid 6, redundant 2
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 5409 ms, max 156 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:26:16 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-02 22:26:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 40, syntax-invalid 4, redundant 1
Fitness: max 0.923(52), min 0.846(3), ave 0.919
Test execution time: sum 5305 ms, max 164 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:26:27 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-02 22:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 14 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 11, redundant 7
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 5517 ms, max 152 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:26:38 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-02 22:26:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 24 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 10, redundant 6
Fitness: max 0.923(50), min 0.846(2), ave 0.92
Test execution time: sum 5009 ms, max 123 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:26:49 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-02 22:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 36 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 5400 ms, max 127 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:27:00 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-02 22:27:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 11, redundant 2
Fitness: max 0.923(44), min 0.846(7), ave 0.913
Test execution time: sum 4862 ms, max 122 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:27:11 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-02 22:27:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 39 minutes 57 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 0.923(49), min 0.846(6), ave 0.915
Test execution time: sum 5215 ms, max 128 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:27:22 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-02 22:27:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 8 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 10, redundant 4
Fitness: max 0.923(43), min 0.846(8), ave 0.911
Test execution time: sum 4881 ms, max 124 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:27:33 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-02 22:27:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 19 seconds
Variants: generated 100, build-succeeded 49, build-failed 39, syntax-invalid 8, redundant 4
Fitness: max 0.923(45), min 0.846(4), ave 0.917
Test execution time: sum 4780 ms, max 128 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:27:44 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-02 22:27:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 6, redundant 1
Fitness: max 1(1), min 0.769(1), ave 0.919
Test execution time: sum 5539 ms, max 124 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:27:55 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-02 22:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 42 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 10, redundant 1
Fitness: max 0.923(54), min 0.462(1), ave 0.909
Test execution time: sum 5746 ms, max 123 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 22:28:07 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-02 22:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 54 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0.846(5), ave 0.918
Test execution time: sum 5497 ms, max 144 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:28:18 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-02 22:28:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 15, redundant 5
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 5420 ms, max 115 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:28:30 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-02 22:28:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 17 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 11, redundant 1
Fitness: max 0.923(55), min 0.846(4), ave 0.918
Test execution time: sum 5709 ms, max 123 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:28:42 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-02 22:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 29 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 5, redundant 3
Fitness: max 0.923(56), min 0.846(1), ave 0.922
Test execution time: sum 5455 ms, max 117 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:28:53 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-02 22:29:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 42 seconds
Variants: generated 100, build-succeeded 69, build-failed 26, syntax-invalid 3, redundant 2
Fitness: max 0.923(63), min 0.846(6), ave 0.916
Test execution time: sum 6684 ms, max 124 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:29:07 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-02 22:29:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 38, syntax-invalid 8, redundant 3
Fitness: max 0.923(49), min 0.846(2), ave 0.92
Test execution time: sum 4894 ms, max 121 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:29:18 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-02 22:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 13, redundant 1
Fitness: max 0.923(54), min 0.846(4), ave 0.918
Test execution time: sum 5529 ms, max 129 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:29:30 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-02 22:29:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0.923(53), min 0.846(2), ave 0.92
Test execution time: sum 5293 ms, max 125 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:29:41 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-02 22:29:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 12, redundant 6
Fitness: max 0.923(50), min 0.846(4), ave 0.917
Test execution time: sum 5165 ms, max 116 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:29:53 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-02 22:30:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 41 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 6, redundant 2
Fitness: max 0.923(60), min 0.846(3), ave 0.919
Test execution time: sum 6021 ms, max 121 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:30:05 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-02 22:30:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 52 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 13, redundant 4
Fitness: max 0.923(44), min 0.846(5), ave 0.915
Test execution time: sum 4746 ms, max 123 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:30:16 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-02 22:30:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 3 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 12, redundant 2
Fitness: max 0.923(51), min 0.846(5), ave 0.916
Test execution time: sum 5439 ms, max 124 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 22:30:28 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-02 22:30:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 38, syntax-invalid 11, redundant 4
Fitness: max 0.923(43), min 0.846(4), ave 0.917
Test execution time: sum 4535 ms, max 119 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:30:39 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-02 22:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 0.923(53), min 0.923(53), ave 0.923
Test execution time: sum 5197 ms, max 124 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:30:51 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-02 22:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 39 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 7, redundant 2
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 5845 ms, max 118 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:31:03 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-02 22:31:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 43 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 7, redundant 2
Fitness: max 0.923(58), min 0.846(4), ave 0.918
Test execution time: sum 6055 ms, max 123 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 22:31:16 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-02 22:31:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 3 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 11, redundant 2
Fitness: max 1(2), min 0.769(1), ave 0.919
Test execution time: sum 5066 ms, max 165 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:31:27 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-02 22:31:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 14 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 12, redundant 1
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 4928 ms, max 134 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:31:39 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-02 22:31:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 13, redundant 2
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 4842 ms, max 123 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:31:50 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-02 22:32:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 37 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.846(5), ave 0.917
Test execution time: sum 5099 ms, max 126 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:32:01 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-02 22:32:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 44 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 8, redundant 4
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 5595 ms, max 128 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:32:14 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-02 22:32:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.923(53), min 0.846(4), ave 0.918
Test execution time: sum 5471 ms, max 122 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:32:26 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-02 22:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 13 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.923(54), min 0.462(1), ave 0.912
Test execution time: sum 185437 ms, max 180092 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 22:35:38 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-02 22:35:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.923(50), min 0.846(4), ave 0.917
Test execution time: sum 5095 ms, max 115 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:35:50 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-02 22:36:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 15, redundant 2
Fitness: max 0.923(44), min 0.846(6), ave 0.914
Test execution time: sum 4815 ms, max 115 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:36:01 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-02 22:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 48 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 11, redundant 1
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5257 ms, max 134 ms, min 77 ms
----------------------------------------------------------------

2023-08-02 22:36:13 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-02 22:36:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 0 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 9, redundant 7
Fitness: max 0.923(50), min 0.462(1), ave 0.913
Test execution time: sum 4976 ms, max 116 ms, min 74 ms
----------------------------------------------------------------

2023-08-02 22:36:24 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-02 22:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 12 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 7, redundant 0
Fitness: max 1(1), min 0.846(4), ave 0.919
Test execution time: sum 5668 ms, max 113 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:36:37 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-02 22:36:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 25 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 9, redundant 3
Fitness: max 0.923(55), min 0.846(4), ave 0.918
Test execution time: sum 5708 ms, max 115 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:36:50 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-02 22:37:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 37 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 6, redundant 4
Fitness: max 0.923(56), min 0.846(1), ave 0.922
Test execution time: sum 5423 ms, max 109 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:37:02 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-02 22:37:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 50 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.923(54), min 0.846(5), ave 0.917
Test execution time: sum 5767 ms, max 131 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:37:15 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-02 22:37:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 3 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 15, redundant 0
Fitness: max 0.923(58), min 0.846(4), ave 0.918
Test execution time: sum 6036 ms, max 128 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:37:28 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-02 22:37:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 14, redundant 1
Fitness: max 0.923(52), min 0.846(5), ave 0.916
Test execution time: sum 5496 ms, max 120 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:37:40 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-02 22:37:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 28 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 8, redundant 3
Fitness: max 0.923(57), min 0.846(2), ave 0.92
Test execution time: sum 5693 ms, max 122 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:37:53 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-02 22:38:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 41 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 10, redundant 2
Fitness: max 0.923(53), min 0.846(4), ave 0.918
Test execution time: sum 5507 ms, max 115 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:38:05 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-02 22:38:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 52 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 18, redundant 3
Fitness: max 0.923(48), min 0.846(4), ave 0.917
Test execution time: sum 5095 ms, max 117 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:38:17 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-02 22:38:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 4 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 13, redundant 3
Fitness: max 0.923(48), min 0.846(4), ave 0.917
Test execution time: sum 5062 ms, max 119 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:38:29 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-02 22:38:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 17 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 9, redundant 2
Fitness: max 0.923(51), min 0.846(3), ave 0.919
Test execution time: sum 5229 ms, max 116 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:38:42 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-02 22:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 29 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5292 ms, max 114 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:38:54 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-02 22:39:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 42 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 0.923(55), min 0.846(2), ave 0.92
Test execution time: sum 5557 ms, max 110 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:39:07 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-02 22:39:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 54 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 9, redundant 2
Fitness: max 0.923(51), min 0.385(1), ave 0.909
Test execution time: sum 5404 ms, max 118 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:39:19 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-02 22:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 7 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 10, redundant 4
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 5212 ms, max 114 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:39:32 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-02 22:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 16, redundant 3
Fitness: max 0.923(46), min 0.846(2), ave 0.92
Test execution time: sum 4705 ms, max 113 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:39:43 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-02 22:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 30 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 14, redundant 1
Fitness: max 0.923(44), min 0.846(6), ave 0.914
Test execution time: sum 4820 ms, max 107 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:39:55 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-02 22:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 43 seconds
Variants: generated 100, build-succeeded 56, build-failed 36, syntax-invalid 5, redundant 3
Fitness: max 0.923(55), min 0.846(1), ave 0.922
Test execution time: sum 5433 ms, max 130 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:40:08 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-02 22:40:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 7, redundant 2
Fitness: max 0.923(58), min 0.846(3), ave 0.919
Test execution time: sum 5885 ms, max 119 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:40:21 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 22:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 9 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 16, redundant 2
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 5103 ms, max 117 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:40:34 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 22:40:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 12, redundant 2
Fitness: max 0.923(48), min 0.846(5), ave 0.916
Test execution time: sum 5134 ms, max 118 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:40:46 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 22:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 33 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 16, redundant 1
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 4694 ms, max 117 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:40:58 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 22:41:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 46 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 11, redundant 1
Fitness: max 0.923(51), min 0.846(3), ave 0.919
Test execution time: sum 5266 ms, max 110 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:41:11 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 22:41:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 59 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 10, redundant 3
Fitness: max 0.923(51), min 0.846(3), ave 0.919
Test execution time: sum 5315 ms, max 139 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 22:41:24 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 22:41:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 12, redundant 1
Fitness: max 0.923(50), min 0.846(1), ave 0.922
Test execution time: sum 4945 ms, max 129 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:41:36 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 22:41:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 24 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 16, redundant 1
Fitness: max 0.923(45), min 0.846(4), ave 0.917
Test execution time: sum 4700 ms, max 125 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 22:41:49 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 22:42:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 37 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5391 ms, max 134 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 22:42:02 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 22:42:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 54 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 14, redundant 2
Fitness: max 0.923(48), min 0.923(48), ave 0.923
Test execution time: sum 4684 ms, max 122 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:42:14 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 22:42:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 15, redundant 2
Fitness: max 0.923(49), min 0.769(1), ave 0.919
Test execution time: sum 4928 ms, max 111 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:42:27 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 22:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 0.923(53), min 0.846(2), ave 0.92
Test execution time: sum 5367 ms, max 115 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 22:42:40 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 22:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 7, redundant 0
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 5659 ms, max 110 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:42:54 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 22:43:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 42 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 11, redundant 5
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5521 ms, max 117 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:43:07 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 22:43:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 55 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 11, redundant 1
Fitness: max 0.923(50), min 0.846(2), ave 0.92
Test execution time: sum 5108 ms, max 116 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:43:20 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 22:43:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.923(54), min 0.923(54), ave 0.923
Test execution time: sum 5222 ms, max 115 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:43:33 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 22:43:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 22 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 5, redundant 3
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 5833 ms, max 110 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:43:47 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 22:44:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 7, redundant 1
Fitness: max 0.923(56), min 0.846(1), ave 0.922
Test execution time: sum 5680 ms, max 283 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:44:00 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 22:44:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 56 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 5596 ms, max 128 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:44:14 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 22:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 8, redundant 3
Fitness: max 0.923(59), min 0.846(2), ave 0.921
Test execution time: sum 5896 ms, max 123 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:44:27 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 22:44:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 17, redundant 0
Fitness: max 0.923(48), min 0.846(4), ave 0.917
Test execution time: sum 5057 ms, max 127 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 22:44:40 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 22:44:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 29 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.923(61), min 0.923(61), ave 0.923
Test execution time: sum 5861 ms, max 118 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 22:44:54 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 22:45:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 14, redundant 3
Fitness: max 0.923(48), min 0.846(5), ave 0.916
Test execution time: sum 5175 ms, max 116 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:45:07 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 22:45:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 57 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 9, redundant 3
Fitness: max 0.923(56), min 0.846(3), ave 0.919
Test execution time: sum 5733 ms, max 107 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:45:21 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 22:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 9 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 14, redundant 3
Fitness: max 0.923(47), min 0.846(2), ave 0.92
Test execution time: sum 4835 ms, max 121 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:45:34 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 22:45:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 22 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 14, redundant 1
Fitness: max 0.923(51), min 0.846(1), ave 0.922
Test execution time: sum 5069 ms, max 114 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:45:47 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 22:46:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0.846(5), ave 0.917
Test execution time: sum 5395 ms, max 113 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:46:00 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 22:46:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 58 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 0.923(49), min 0.846(2), ave 0.92
Test execution time: sum 5008 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 22:46:13 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 22:46:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 6, redundant 3
Fitness: max 0.923(48), min 0.846(6), ave 0.915
Test execution time: sum 5368 ms, max 112 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:46:27 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 22:46:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 17 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 6, redundant 1
Fitness: max 0.923(58), min 0.846(5), ave 0.917
Test execution time: sum 6229 ms, max 106 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:46:42 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 22:46:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 31 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.923(53), min 0.385(1), ave 0.911
Test execution time: sum 5609 ms, max 114 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:46:56 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 22:47:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 59 minutes 46 seconds
Variants: generated 100, build-succeeded 60, build-failed 36, syntax-invalid 2, redundant 2
Fitness: max 0.923(59), min 0.846(1), ave 0.922
Test execution time: sum 5959 ms, max 177 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:47:11 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 22:47:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 seconds
Variants: generated 100, build-succeeded 60, build-failed 35, syntax-invalid 4, redundant 1
Fitness: max 0.923(59), min 0.846(1), ave 0.922
Test execution time: sum 5920 ms, max 129 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:47:25 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 22:47:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 15 seconds
Variants: generated 100, build-succeeded 59, build-failed 35, syntax-invalid 6, redundant 0
Fitness: max 0.923(56), min 0.846(3), ave 0.919
Test execution time: sum 5757 ms, max 122 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:47:40 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 22:47:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 5556 ms, max 129 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:47:54 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 22:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 7, redundant 1
Fitness: max 0.923(60), min 0.846(5), ave 0.917
Test execution time: sum 6424 ms, max 118 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:48:09 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 22:48:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 seconds
Variants: generated 100, build-succeeded 62, build-failed 35, syntax-invalid 2, redundant 1
Fitness: max 0.923(58), min 0.846(4), ave 0.918
Test execution time: sum 6125 ms, max 115 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:48:23 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 22:48:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 14 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 2, redundant 2
Fitness: max 0.923(64), min 0.846(1), ave 0.922
Test execution time: sum 6449 ms, max 109 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:48:39 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 22:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 8, redundant 1
Fitness: max 0.923(56), min 0.846(6), ave 0.916
Test execution time: sum 6082 ms, max 108 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 22:48:54 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 22:49:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 44 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 4, redundant 2
Fitness: max 0.923(60), min 0.846(4), ave 0.918
Test execution time: sum 6286 ms, max 130 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 22:49:09 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 22:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 1 minutes 59 seconds
Variants: generated 100, build-succeeded 66, build-failed 28, syntax-invalid 3, redundant 3
Fitness: max 1(1), min 0.846(5), ave 0.918
Test execution time: sum 6505 ms, max 129 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 22:49:24 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 22:49:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 14 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 4, redundant 2
Fitness: max 0.923(58), min 0.846(3), ave 0.919
Test execution time: sum 5955 ms, max 116 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:49:38 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 22:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 2 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 33, syntax-invalid 4, redundant 1
Fitness: max 0.923(60), min 0.846(2), ave 0.921
Test execution time: sum 6125 ms, max 120 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:49:53 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 22:56:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 8 minutes 44 seconds
Variants: generated 100, build-succeeded 67, build-failed 27, syntax-invalid 4, redundant 2
Fitness: max 0.923(62), min 0.846(5), ave 0.917
Test execution time: sum 366683 ms, max 360089 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 22:56:09 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 22:56:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 8 minutes 59 seconds
Variants: generated 100, build-succeeded 57, build-failed 36, syntax-invalid 5, redundant 2
Fitness: max 0.923(57), min 0.923(57), ave 0.923
Test execution time: sum 5708 ms, max 111 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 22:56:23 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 22:56:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 13, redundant 3
Fitness: max 0.923(49), min 0.846(2), ave 0.92
Test execution time: sum 5164 ms, max 125 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 22:56:37 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 22:56:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 36, syntax-invalid 4, redundant 3
Fitness: max 0.923(56), min 0.846(1), ave 0.922
Test execution time: sum 5721 ms, max 117 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:56:51 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 22:57:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 42 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 6, redundant 1
Fitness: max 0.923(55), min 0.462(1), ave 0.91
Test execution time: sum 6046 ms, max 111 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 22:57:06 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 22:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 9 minutes 57 seconds
Variants: generated 100, build-succeeded 64, build-failed 31, syntax-invalid 5, redundant 0
Fitness: max 0.923(61), min 0.846(3), ave 0.919
Test execution time: sum 6545 ms, max 126 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:57:22 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 22:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 13 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 11, redundant 1
Fitness: max 0.923(55), min 0.846(8), ave 0.913
Test execution time: sum 6372 ms, max 113 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:57:37 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 22:57:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 38, syntax-invalid 9, redundant 1
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 5313 ms, max 120 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 22:57:52 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 22:58:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 12, redundant 2
Fitness: max 0.923(53), min 0.923(53), ave 0.923
Test execution time: sum 5383 ms, max 115 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 22:58:06 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 22:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 56 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 0.923(48), min 0.846(4), ave 0.917
Test execution time: sum 5229 ms, max 113 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 22:58:21 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 22:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 11 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 10, redundant 2
Fitness: max 0.923(55), min 0.846(5), ave 0.917
Test execution time: sum 5967 ms, max 125 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 22:58:36 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 22:58:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 12, redundant 1
Fitness: max 0.923(48), min 0.846(5), ave 0.916
Test execution time: sum 5284 ms, max 137 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 22:58:50 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 23:05:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 18, redundant 2
Fitness: max 0.923(47), min 0.462(1), ave 0.91
Test execution time: sum 365058 ms, max 360070 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 23:05:03 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 23:05:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 17 minutes 53 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 8, redundant 0
Fitness: max 0.923(51), min 0.846(7), ave 0.914
Test execution time: sum 5887 ms, max 131 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:05:18 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 23:05:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 8 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 9, redundant 2
Fitness: max 0.923(58), min 0.846(7), ave 0.915
Test execution time: sum 6618 ms, max 131 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:05:33 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 23:05:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 11, redundant 1
Fitness: max 0.923(59), min 0.846(3), ave 0.919
Test execution time: sum 6210 ms, max 119 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:05:48 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 23:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 9, redundant 2
Fitness: max 0.923(53), min 0.846(4), ave 0.918
Test execution time: sum 5762 ms, max 111 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:06:03 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 23:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 18 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5677 ms, max 130 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 23:06:17 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 23:06:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 0.923(53), min 0.846(1), ave 0.922
Test execution time: sum 5445 ms, max 120 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:06:31 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 23:06:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 20 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 15, redundant 2
Fitness: max 0.923(45), min 0.846(4), ave 0.917
Test execution time: sum 4946 ms, max 110 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:06:44 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-02 23:06:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 8, redundant 3
Fitness: max 0.923(56), min 0.846(1), ave 0.922
Test execution time: sum 5853 ms, max 117 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:06:59 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-02 23:07:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 19 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 37, syntax-invalid 9, redundant 1
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5442 ms, max 126 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:07:14 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-02 23:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 4 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 5975 ms, max 117 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:07:29 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-02 23:07:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 19 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 9, redundant 3
Fitness: max 0.923(53), min 0.846(3), ave 0.919
Test execution time: sum 5681 ms, max 110 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 23:07:43 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-02 23:07:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 34 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 13, redundant 3
Fitness: max 0.923(59), min 0.846(2), ave 0.921
Test execution time: sum 6125 ms, max 126 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:07:58 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-02 23:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 20 minutes 48 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 13, redundant 0
Fitness: max 0.923(53), min 0.923(53), ave 0.923
Test execution time: sum 5310 ms, max 104 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 23:08:12 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-02 23:08:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 18, redundant 4
Fitness: max 0.923(47), min 0.846(2), ave 0.92
Test execution time: sum 5040 ms, max 139 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:08:26 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-02 23:08:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 16 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 12, redundant 4
Fitness: max 0.923(55), min 0.846(2), ave 0.92
Test execution time: sum 5795 ms, max 129 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 23:08:40 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-02 23:08:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 9, redundant 7
Fitness: max 0.923(57), min 0.846(2), ave 0.92
Test execution time: sum 6050 ms, max 118 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:08:56 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-02 23:09:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 21 minutes 46 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 12, redundant 1
Fitness: max 1(1), min 0.846(6), ave 0.916
Test execution time: sum 5839 ms, max 134 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:09:11 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-02 23:09:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 1 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 8, redundant 1
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 6172 ms, max 130 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 23:09:26 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-02 23:09:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 9, redundant 1
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 5865 ms, max 115 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 23:09:42 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-02 23:09:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 9, redundant 0
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5612 ms, max 138 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:09:56 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-02 23:10:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 22 minutes 47 seconds
Variants: generated 100, build-succeeded 53, build-failed 36, syntax-invalid 8, redundant 3
Fitness: max 0.923(52), min 0.846(1), ave 0.922
Test execution time: sum 5380 ms, max 136 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:10:11 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-02 23:10:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 20, redundant 6
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 4819 ms, max 137 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 23:10:25 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-02 23:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 17, redundant 3
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5249 ms, max 131 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 23:10:38 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-02 23:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 23 minutes 27 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 12, redundant 6
Fitness: max 0.923(45), min 0.462(1), ave 0.909
Test execution time: sum 4873 ms, max 125 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 23:10:52 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-02 23:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 41 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 12, redundant 4
Fitness: max 0.923(47), min 0.538(1), ave 0.911
Test execution time: sum 365149 ms, max 360081 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 23:17:05 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-02 23:17:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 57 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 9, redundant 1
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 6168 ms, max 114 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 23:17:21 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-02 23:17:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 8, redundant 2
Fitness: max 0.923(55), min 0.462(1), ave 0.912
Test execution time: sum 5938 ms, max 148 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 23:17:37 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-02 23:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 40, syntax-invalid 3, redundant 3
Fitness: max 0.923(54), min 0.923(54), ave 0.923
Test execution time: sum 5478 ms, max 137 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 23:17:52 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-02 23:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.923(54), min 0.769(1), ave 0.915
Test execution time: sum 6095 ms, max 138 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 23:18:08 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-02 23:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 30 minutes 58 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 12, redundant 1
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 5965 ms, max 128 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 23:18:23 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-02 23:18:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 13 seconds
Variants: generated 100, build-succeeded 51, build-failed 38, syntax-invalid 11, redundant 0
Fitness: max 0.923(51), min 0.923(51), ave 0.923
Test execution time: sum 5321 ms, max 134 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:18:38 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-02 23:18:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 27 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 20, redundant 2
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 4538 ms, max 117 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 23:18:52 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-02 23:19:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 43 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 15, redundant 2
Fitness: max 0.923(55), min 0.846(3), ave 0.919
Test execution time: sum 6028 ms, max 118 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 23:19:08 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-02 23:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 31 minutes 57 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 22, redundant 1
Fitness: max 0.923(43), min 0.846(4), ave 0.917
Test execution time: sum 4858 ms, max 113 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 23:19:22 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-02 23:19:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 13 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 12, redundant 0
Fitness: max 0.923(53), min 0.923(53), ave 0.923
Test execution time: sum 5642 ms, max 164 ms, min 100 ms
----------------------------------------------------------------

2023-08-02 23:19:38 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-02 23:19:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 28 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0.923(45), min 0.846(2), ave 0.92
Test execution time: sum 4955 ms, max 136 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 23:19:52 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-02 23:20:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 18, redundant 1
Fitness: max 0.923(47), min 0.846(5), ave 0.916
Test execution time: sum 5364 ms, max 117 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:20:07 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-02 23:20:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 32 minutes 57 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 16, redundant 3
Fitness: max 0.923(43), min 0.846(3), ave 0.918
Test execution time: sum 4689 ms, max 110 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 23:20:22 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-02 23:20:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 14, redundant 1
Fitness: max 0.923(52), min 0.846(2), ave 0.92
Test execution time: sum 5581 ms, max 116 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:20:38 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-02 23:20:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 28 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 18, redundant 5
Fitness: max 0.923(43), min 0.846(2), ave 0.92
Test execution time: sum 4658 ms, max 113 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:20:53 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-02 23:21:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 43 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 16, redundant 6
Fitness: max 0.923(47), min 0.846(3), ave 0.918
Test execution time: sum 5111 ms, max 122 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:21:08 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-02 23:21:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 33 minutes 58 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 14, redundant 1
Fitness: max 0.923(48), min 0.923(48), ave 0.923
Test execution time: sum 4844 ms, max 122 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:21:23 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-02 23:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 34 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 14, redundant 1
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5383 ms, max 131 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:21:38 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-02 23:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 34 minutes 28 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 18, redundant 2
Fitness: max 0.923(44), min 0.846(2), ave 0.92
Test execution time: sum 4661 ms, max 132 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:21:53 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-02 23:46:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 12, redundant 2
Fitness: max 0.923(53), min 0.385(1), ave 0.913
Test execution time: sum 1445522 ms, max 1440072 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:46:09 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-02 23:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.923(52), min 0.846(1), ave 0.922
Test execution time: sum 5452 ms, max 120 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:46:25 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-02 23:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 16 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 14, redundant 4
Fitness: max 0.923(47), min 0.846(7), ave 0.913
Test execution time: sum 5552 ms, max 116 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:46:41 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-02 23:46:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 32 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0.923(46), min 0.846(3), ave 0.918
Test execution time: sum 5035 ms, max 111 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:46:56 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-02 23:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 47 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 20, redundant 0
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 5401 ms, max 118 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:47:12 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-02 23:47:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 16, redundant 1
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5487 ms, max 121 ms, min 100 ms
----------------------------------------------------------------

2023-08-02 23:47:28 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-02 23:47:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 19 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 20, redundant 1
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 4968 ms, max 118 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:47:43 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-02 23:48:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 5300 ms, max 112 ms, min 101 ms
----------------------------------------------------------------

2023-08-02 23:48:00 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-02 23:48:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 21, redundant 0
Fitness: max 0.923(41), min 0.462(1), ave 0.908
Test execution time: sum 4693 ms, max 129 ms, min 83 ms
----------------------------------------------------------------

2023-08-02 23:48:15 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-02 23:48:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 5 seconds
Variants: generated 100, build-succeeded 42, build-failed 37, syntax-invalid 18, redundant 3
Fitness: max 0.923(40), min 0.846(2), ave 0.919
Test execution time: sum 4370 ms, max 112 ms, min 101 ms
----------------------------------------------------------------

2023-08-02 23:48:30 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-02 23:48:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 21 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 17, redundant 1
Fitness: max 0.923(47), min 0.692(1), ave 0.915
Test execution time: sum 5270 ms, max 123 ms, min 101 ms
----------------------------------------------------------------

2023-08-02 23:48:46 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-02 23:49:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 1 minutes 37 seconds
Variants: generated 100, build-succeeded 48, build-failed 38, syntax-invalid 12, redundant 2
Fitness: max 0.923(47), min 0.846(1), ave 0.921
Test execution time: sum 5084 ms, max 122 ms, min 102 ms
----------------------------------------------------------------

2023-08-02 23:49:02 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-02 23:55:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 7 minutes 53 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0.923(45), min 0.846(4), ave 0.917
Test execution time: sum 365183 ms, max 360096 ms, min 101 ms
----------------------------------------------------------------

2023-08-02 23:55:18 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-02 23:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 22, syntax-invalid 15, redundant 9
Fitness: max 0.923(51), min 0.462(1), ave 0.912
Test execution time: sum 5520 ms, max 120 ms, min 82 ms
----------------------------------------------------------------

2023-08-02 23:55:34 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-02 23:55:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 23 seconds
Variants: generated 100, build-succeeded 43, build-failed 33, syntax-invalid 24, redundant 0
Fitness: max 0.923(39), min 0.462(1), ave 0.907
Test execution time: sum 4353 ms, max 122 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 23:55:48 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-02 23:56:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 39 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 20, redundant 0
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5125 ms, max 136 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 23:56:03 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-02 23:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 8 minutes 55 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 17, redundant 3
Fitness: max 0.923(52), min 0.846(2), ave 0.92
Test execution time: sum 5507 ms, max 129 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:56:19 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-02 23:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 9 minutes 10 seconds
Variants: generated 100, build-succeeded 46, build-failed 38, syntax-invalid 15, redundant 1
Fitness: max 0.923(43), min 0.846(3), ave 0.918
Test execution time: sum 4702 ms, max 129 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:56:35 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-02 23:56:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 9 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 22, redundant 1
Fitness: max 0.923(45), min 0.846(2), ave 0.92
Test execution time: sum 4795 ms, max 115 ms, min 97 ms
----------------------------------------------------------------

2023-08-02 23:56:50 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-02 23:57:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 9 minutes 40 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 24, redundant 3
Fitness: max 0.923(40), min 0.846(2), ave 0.919
Test execution time: sum 4345 ms, max 115 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:57:04 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-02 23:57:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 9 minutes 56 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 15, redundant 1
Fitness: max 0.923(47), min 0.846(5), ave 0.916
Test execution time: sum 5366 ms, max 110 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:57:21 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-02 23:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 10 minutes 12 seconds
Variants: generated 100, build-succeeded 47, build-failed 39, syntax-invalid 13, redundant 1
Fitness: max 0.923(45), min 0.846(2), ave 0.92
Test execution time: sum 4878 ms, max 123 ms, min 99 ms
----------------------------------------------------------------

2023-08-02 23:57:37 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-02 23:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 10 minutes 30 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 11, redundant 2
Fitness: max 0.923(55), min 0.846(2), ave 0.92
Test execution time: sum 5889 ms, max 128 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:57:54 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-02 23:58:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 10 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 23, redundant 1
Fitness: max 0.923(47), min 0.846(1), ave 0.921
Test execution time: sum 4978 ms, max 115 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 23:58:10 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-02 23:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 1 seconds
Variants: generated 100, build-succeeded 46, build-failed 37, syntax-invalid 14, redundant 3
Fitness: max 0.923(46), min 0.923(46), ave 0.923
Test execution time: sum 4804 ms, max 113 ms, min 98 ms
----------------------------------------------------------------

2023-08-02 23:58:26 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-02 23:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 17 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 21, redundant 1
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 4958 ms, max 127 ms, min 100 ms
----------------------------------------------------------------

2023-08-02 23:58:41 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-02 23:58:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 32 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0.923(43), min 0.462(1), ave 0.907
Test execution time: sum 4877 ms, max 113 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 23:58:57 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-02 23:59:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 48 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 16, redundant 3
Fitness: max 0.923(44), min 0.462(1), ave 0.909
Test execution time: sum 4998 ms, max 121 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 23:59:13 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-02 23:59:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 4 seconds
Variants: generated 100, build-succeeded 42, build-failed 36, syntax-invalid 21, redundant 1
Fitness: max 0.923(37), min 0.846(5), ave 0.914
Test execution time: sum 4418 ms, max 121 ms, min 100 ms
----------------------------------------------------------------

2023-08-02 23:59:28 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-02 23:59:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 21 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 10, redundant 3
Fitness: max 0.923(53), min 0.846(1), ave 0.922
Test execution time: sum 5646 ms, max 131 ms, min 100 ms
----------------------------------------------------------------

2023-08-02 23:59:46 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-03 00:00:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 18, redundant 2
Fitness: max 0.923(52), min 0.846(5), ave 0.916
Test execution time: sum 5855 ms, max 126 ms, min 96 ms
----------------------------------------------------------------

2023-08-03 00:00:03 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-03 00:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 54 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 16, redundant 8
Fitness: max 0.923(42), min 0.846(4), ave 0.916
Test execution time: sum 4725 ms, max 126 ms, min 98 ms
----------------------------------------------------------------

2023-08-03 00:00:19 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-03 00:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 13 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 12, redundant 2
Fitness: max 0.923(51), min 0.846(1), ave 0.922
Test execution time: sum 5387 ms, max 132 ms, min 98 ms
----------------------------------------------------------------

2023-08-03 00:00:36 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-03 00:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 13 minutes 27 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 17, redundant 3
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 4816 ms, max 105 ms, min 99 ms
----------------------------------------------------------------

2023-08-03 00:00:52 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-03 00:01:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 13 minutes 45 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 5529 ms, max 121 ms, min 97 ms
----------------------------------------------------------------

2023-08-03 00:01:09 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-03 00:01:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 12, redundant 2
Fitness: max 0.923(46), min 0.846(5), ave 0.916
Test execution time: sum 5295 ms, max 114 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:01:27 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-03 00:01:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 20 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 12, redundant 3
Fitness: max 0.923(56), min 0.846(5), ave 0.917
Test execution time: sum 6382 ms, max 112 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:01:45 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-03 00:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 6, redundant 7
Fitness: max 0.923(51), min 0.846(8), ave 0.913
Test execution time: sum 6172 ms, max 119 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:02:04 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-03 00:02:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 14 minutes 56 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 14, redundant 1
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 5559 ms, max 116 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:02:21 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-03 00:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 1(1), min 0.846(7), ave 0.915
Test execution time: sum 5760 ms, max 115 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:02:38 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-03 00:02:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 31 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 15, redundant 3
Fitness: max 0.923(49), min 0.846(2), ave 0.92
Test execution time: sum 5351 ms, max 112 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:02:55 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-03 00:03:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 48 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 15, redundant 5
Fitness: max 0.923(50), min 0.846(5), ave 0.916
Test execution time: sum 5803 ms, max 125 ms, min 98 ms
----------------------------------------------------------------

2023-08-03 00:03:13 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-03 00:03:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 13, redundant 2
Fitness: max 0.923(47), min 0.846(9), ave 0.911
Test execution time: sum 5924 ms, max 112 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:03:31 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-03 00:03:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 5642 ms, max 127 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:03:49 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-03 00:04:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 0.923(50), min 0.846(5), ave 0.916
Test execution time: sum 5737 ms, max 130 ms, min 98 ms
----------------------------------------------------------------

2023-08-03 00:04:06 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-03 00:04:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 16 minutes 58 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 16, redundant 2
Fitness: max 0.923(44), min 0.846(4), ave 0.917
Test execution time: sum 5017 ms, max 136 ms, min 98 ms
----------------------------------------------------------------

2023-08-03 00:04:23 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-03 00:10:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 16 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 11, redundant 3
Fitness: max 0.923(48), min 0.462(1), ave 0.909
Test execution time: sum 365521 ms, max 360099 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:10:41 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-03 00:10:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 34 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 11, redundant 4
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 5359 ms, max 131 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:10:58 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-03 00:11:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 53 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.923(53), min 0.846(6), ave 0.915
Test execution time: sum 6179 ms, max 124 ms, min 99 ms
----------------------------------------------------------------

2023-08-03 00:11:17 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-03 00:11:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 15, redundant 1
Fitness: max 0.923(46), min 0.846(4), ave 0.917
Test execution time: sum 5253 ms, max 116 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:11:35 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-03 00:11:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 14, redundant 4
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 5453 ms, max 117 ms, min 99 ms
----------------------------------------------------------------

2023-08-03 00:11:52 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-03 00:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 45 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 16, redundant 3
Fitness: max 0.923(41), min 0.846(9), ave 0.909
Test execution time: sum 5256 ms, max 110 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:12:09 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-03 00:12:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 2 seconds
Variants: generated 100, build-succeeded 46, build-failed 37, syntax-invalid 15, redundant 2
Fitness: max 0.923(41), min 0.846(5), ave 0.915
Test execution time: sum 4832 ms, max 121 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:12:26 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-03 00:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 19 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 15, redundant 1
Fitness: max 0.923(45), min 0.846(7), ave 0.913
Test execution time: sum 5544 ms, max 136 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:12:44 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-03 00:13:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 8, redundant 2
Fitness: max 0.923(49), min 0.846(9), ave 0.911
Test execution time: sum 6151 ms, max 134 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:13:03 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-03 00:13:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 55 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 18, redundant 2
Fitness: max 0.923(42), min 0.846(3), ave 0.918
Test execution time: sum 4710 ms, max 122 ms, min 99 ms
----------------------------------------------------------------

2023-08-03 00:13:19 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-03 00:13:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 13 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 12, redundant 0
Fitness: max 0.923(50), min 0.385(1), ave 0.905
Test execution time: sum 5781 ms, max 124 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 00:13:38 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-03 00:13:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 15, redundant 1
Fitness: max 0.923(45), min 0.846(6), ave 0.914
Test execution time: sum 5401 ms, max 121 ms, min 100 ms
----------------------------------------------------------------

2023-08-03 00:13:55 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-03 00:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 8, redundant 3
Fitness: max 0.923(52), min 0.846(2), ave 0.92
Test execution time: sum 5761 ms, max 116 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:14:14 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-03 00:14:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 8, redundant 0
Fitness: max 0.923(60), min 0.923(60), ave 0.923
Test execution time: sum 6387 ms, max 119 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:14:33 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-03 00:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 21, redundant 2
Fitness: max 0.923(42), min 0.846(5), ave 0.915
Test execution time: sum 5050 ms, max 123 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:14:49 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-03 00:21:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 42 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 16, redundant 2
Fitness: max 0.923(46), min 0.462(1), ave 0.912
Test execution time: sum 365128 ms, max 360073 ms, min 97 ms
----------------------------------------------------------------

2023-08-03 00:21:06 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-03 00:21:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 13, redundant 0
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5692 ms, max 127 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:21:25 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-03 00:21:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 17 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5084 ms, max 134 ms, min 97 ms
----------------------------------------------------------------

2023-08-03 00:21:42 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-03 00:21:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 20, redundant 2
Fitness: max 0.923(43), min 0.846(6), ave 0.914
Test execution time: sum 5269 ms, max 113 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:21:59 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-03 00:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 15, redundant 2
Fitness: max 0.923(54), min 0.846(3), ave 0.919
Test execution time: sum 6224 ms, max 124 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:22:18 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-03 00:22:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 18, redundant 2
Fitness: max 0.923(47), min 0.846(5), ave 0.916
Test execution time: sum 5658 ms, max 127 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:22:35 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-03 00:22:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 minutes 28 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 0.923(50), min 0.846(2), ave 0.92
Test execution time: sum 5611 ms, max 186 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:22:53 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-03 00:23:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 35 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.846(2), ave 0.922
Test execution time: sum 5635 ms, max 135 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:23:11 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-03 00:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 5 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 9, redundant 6
Fitness: max 0.923(50), min 0.846(2), ave 0.92
Test execution time: sum 5523 ms, max 134 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:23:29 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-03 00:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 14, redundant 2
Fitness: max 0.923(49), min 0.846(3), ave 0.919
Test execution time: sum 5547 ms, max 129 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:23:47 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-03 00:24:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 10, redundant 4
Fitness: max 0.923(51), min 0.846(1), ave 0.922
Test execution time: sum 5557 ms, max 128 ms, min 91 ms
----------------------------------------------------------------

2023-08-03 00:24:06 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-03 00:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 36 minutes 59 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 18, redundant 1
Fitness: max 0.923(42), min 0.846(7), ave 0.912
Test execution time: sum 5230 ms, max 120 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:24:24 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-03 00:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 37 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 13, redundant 1
Fitness: max 0.923(52), min 0.846(4), ave 0.918
Test execution time: sum 6014 ms, max 116 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:24:43 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-03 00:25:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 37 minutes 37 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 12, redundant 2
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5912 ms, max 115 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:25:02 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-03 00:25:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 37 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.923(53), min 0.846(1), ave 0.922
Test execution time: sum 5773 ms, max 122 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:25:21 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-03 00:25:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 11, redundant 1
Fitness: max 0.923(53), min 0.846(2), ave 0.92
Test execution time: sum 5852 ms, max 136 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:25:40 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-03 00:25:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 34 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.923(51), min 0.846(4), ave 0.917
Test execution time: sum 5835 ms, max 126 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:25:59 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-03 00:26:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 52 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 15, redundant 2
Fitness: max 1(1), min 0.846(6), ave 0.915
Test execution time: sum 5296 ms, max 124 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:26:17 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-03 00:26:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 13 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0.923(56), min 0.846(5), ave 0.917
Test execution time: sum 6594 ms, max 124 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:26:37 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-03 00:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 31 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 16, redundant 2
Fitness: max 0.923(44), min 0.846(4), ave 0.917
Test execution time: sum 5388 ms, max 139 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:26:56 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-03 00:27:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 37, syntax-invalid 6, redundant 1
Fitness: max 0.923(52), min 0.846(4), ave 0.918
Test execution time: sum 6306 ms, max 130 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:27:16 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-03 00:27:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 10, redundant 3
Fitness: max 0.923(52), min 0.846(2), ave 0.92
Test execution time: sum 6098 ms, max 145 ms, min 107 ms
----------------------------------------------------------------

2023-08-03 00:27:36 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-03 00:27:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.923(58), min 0.846(3), ave 0.919
Test execution time: sum 6829 ms, max 145 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:27:57 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-03 00:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 50 seconds
Variants: generated 100, build-succeeded 46, build-failed 43, syntax-invalid 11, redundant 0
Fitness: max 0.923(42), min 0.846(4), ave 0.916
Test execution time: sum 4975 ms, max 117 ms, min 92 ms
----------------------------------------------------------------

2023-08-03 00:28:15 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-03 00:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 10 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 12, redundant 0
Fitness: max 0.923(51), min 0(1), ave 0.902
Test execution time: sum 5840 ms, max 114 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 00:28:35 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-03 00:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 29 seconds
Variants: generated 100, build-succeeded 50, build-failed 38, syntax-invalid 11, redundant 1
Fitness: max 0.923(49), min 0.846(1), ave 0.922
Test execution time: sum 5345 ms, max 122 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:28:53 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-03 00:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 46 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 17, redundant 2
Fitness: max 0.923(40), min 0.692(1), ave 0.908
Test execution time: sum 5029 ms, max 129 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:29:11 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-03 00:29:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 7 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 5, redundant 2
Fitness: max 0.923(57), min 0.846(4), ave 0.918
Test execution time: sum 6565 ms, max 132 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:29:32 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-03 00:29:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 28 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 5, redundant 2
Fitness: max 0.923(58), min 0.846(4), ave 0.918
Test execution time: sum 6728 ms, max 132 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:29:52 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-03 00:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 46 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 15, redundant 2
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 5175 ms, max 131 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:30:11 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-03 00:30:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 7 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 7, redundant 1
Fitness: max 0.923(65), min 0.846(2), ave 0.921
Test execution time: sum 7208 ms, max 122 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:30:32 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-03 00:30:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 28 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 7, redundant 1
Fitness: max 0.923(56), min 0.846(4), ave 0.918
Test execution time: sum 6523 ms, max 117 ms, min 92 ms
----------------------------------------------------------------

2023-08-03 00:30:53 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-03 00:31:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 43 minutes 48 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 9, redundant 2
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 6328 ms, max 134 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:31:13 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-03 00:31:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 1(2), min 0.846(4), ave 0.92
Test execution time: sum 6205 ms, max 120 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:31:32 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-03 00:31:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 27 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 11, redundant 3
Fitness: max 0.923(54), min 0.923(54), ave 0.923
Test execution time: sum 5911 ms, max 120 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:31:51 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-03 00:32:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 11, redundant 1
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 5788 ms, max 122 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:32:11 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-03 00:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 6 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 8, redundant 4
Fitness: max 0.923(57), min 0.846(4), ave 0.918
Test execution time: sum 6562 ms, max 129 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:32:31 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-03 00:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.923(55), min 0.846(5), ave 0.917
Test execution time: sum 6467 ms, max 136 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:32:51 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-03 00:33:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 45 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 9, redundant 2
Fitness: max 0.923(51), min 0.846(3), ave 0.919
Test execution time: sum 5860 ms, max 139 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:33:10 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-03 00:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 4 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 17, redundant 1
Fitness: max 0.923(53), min 0.538(1), ave 0.911
Test execution time: sum 366218 ms, max 360071 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:39:28 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-03 00:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.923(50), min 0.846(4), ave 0.917
Test execution time: sum 5845 ms, max 122 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:39:48 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-03 00:40:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 10, redundant 1
Fitness: max 0.923(54), min 0.846(1), ave 0.922
Test execution time: sum 6002 ms, max 124 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:40:07 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-03 00:40:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 8, redundant 1
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 6314 ms, max 119 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:40:27 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-03 00:40:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 20 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 19, redundant 2
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 4864 ms, max 134 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:40:44 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-03 00:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 0.923(52), min 0.846(3), ave 0.919
Test execution time: sum 6038 ms, max 128 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:41:04 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-03 00:41:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 59 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 10, redundant 2
Fitness: max 0.923(53), min 0.615(1), ave 0.912
Test execution time: sum 6334 ms, max 120 ms, min 99 ms
----------------------------------------------------------------

2023-08-03 00:41:23 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-03 00:41:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.923(55), min 0.846(4), ave 0.918
Test execution time: sum 6490 ms, max 117 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:41:43 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-03 00:42:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 40 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 5, redundant 4
Fitness: max 0.923(60), min 0.846(3), ave 0.919
Test execution time: sum 6869 ms, max 129 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:42:04 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-03 00:42:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 58 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 0.923(51), min 0.846(2), ave 0.92
Test execution time: sum 5756 ms, max 135 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:42:23 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-03 00:42:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 14, redundant 1
Fitness: max 0.923(50), min 0.846(5), ave 0.916
Test execution time: sum 5977 ms, max 137 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:42:42 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-03 00:43:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 35 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 15, redundant 2
Fitness: max 0.923(48), min 0.846(1), ave 0.922
Test execution time: sum 5330 ms, max 130 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:43:00 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-03 00:43:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 16, redundant 1
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 5530 ms, max 122 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:43:18 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-03 00:43:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 11 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 17, redundant 1
Fitness: max 0.923(45), min 0.846(3), ave 0.918
Test execution time: sum 5207 ms, max 121 ms, min 101 ms
----------------------------------------------------------------

2023-08-03 00:43:36 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-03 00:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 28 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 15, redundant 4
Fitness: max 0.923(40), min 0.846(5), ave 0.915
Test execution time: sum 4955 ms, max 119 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:43:53 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-03 00:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 48 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 14, redundant 0
Fitness: max 0.923(52), min 0.846(5), ave 0.916
Test execution time: sum 6224 ms, max 114 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:44:12 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-03 00:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 5 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 18, redundant 2
Fitness: max 0.923(48), min 0.846(2), ave 0.92
Test execution time: sum 5504 ms, max 124 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:44:30 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-03 00:44:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 23 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 17, redundant 1
Fitness: max 0.923(42), min 0.846(5), ave 0.915
Test execution time: sum 5183 ms, max 124 ms, min 102 ms
----------------------------------------------------------------

2023-08-03 00:44:48 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-03 00:45:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 40 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 21, redundant 2
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 5199 ms, max 123 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:45:05 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-03 00:45:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 57 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 16, redundant 3
Fitness: max 0.923(44), min 0.846(1), ave 0.921
Test execution time: sum 4963 ms, max 114 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:45:22 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-03 00:45:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 16 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 16, redundant 0
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 5912 ms, max 122 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:45:41 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-03 00:45:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 33 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 20, redundant 2
Fitness: max 0.923(45), min 0.846(1), ave 0.921
Test execution time: sum 5084 ms, max 119 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:45:58 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-03 00:46:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 52 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 19, redundant 2
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 5736 ms, max 132 ms, min 107 ms
----------------------------------------------------------------

2023-08-03 00:46:17 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-03 00:46:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 11 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0.923(50), min 0.846(1), ave 0.922
Test execution time: sum 5732 ms, max 136 ms, min 107 ms
----------------------------------------------------------------

2023-08-03 00:46:35 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-03 00:46:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 29 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 14, redundant 2
Fitness: max 0.923(44), min 0.846(3), ave 0.918
Test execution time: sum 5370 ms, max 154 ms, min 96 ms
----------------------------------------------------------------

2023-08-03 00:46:54 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-03 00:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 48 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 15, redundant 3
Fitness: max 0.923(44), min 0.846(8), ave 0.911
Test execution time: sum 5801 ms, max 128 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:47:12 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-03 00:47:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 16, redundant 1
Fitness: max 0.923(50), min 0.846(3), ave 0.919
Test execution time: sum 5972 ms, max 125 ms, min 107 ms
----------------------------------------------------------------

2023-08-03 00:47:31 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-03 00:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 11, redundant 4
Fitness: max 0.923(50), min 0.846(1), ave 0.922
Test execution time: sum 5682 ms, max 120 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:47:50 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-03 00:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 13, redundant 2
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 5737 ms, max 129 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:48:09 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-03 00:48:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 13, redundant 0
Fitness: max 0.923(54), min 0.846(2), ave 0.92
Test execution time: sum 6286 ms, max 117 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:48:29 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-03 00:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 13, redundant 0
Fitness: max 0.923(48), min 0.846(6), ave 0.915
Test execution time: sum 6084 ms, max 132 ms, min 107 ms
----------------------------------------------------------------

2023-08-03 00:48:48 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-03 00:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.923(54), min 0.846(4), ave 0.918
Test execution time: sum 6602 ms, max 132 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:49:08 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-03 00:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 4 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 8, redundant 1
Fitness: max 0.923(57), min 0.846(2), ave 0.92
Test execution time: sum 6498 ms, max 134 ms, min 103 ms
----------------------------------------------------------------

2023-08-03 00:49:29 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-03 00:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 10, redundant 0
Fitness: max 0.923(56), min 0.846(2), ave 0.92
Test execution time: sum 6373 ms, max 142 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:49:49 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-03 00:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 44 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 13, redundant 2
Fitness: max 0.923(48), min 0.846(3), ave 0.919
Test execution time: sum 5598 ms, max 143 ms, min 104 ms
----------------------------------------------------------------

2023-08-03 00:50:08 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-03 00:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 2 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 15, redundant 1
Fitness: max 0.923(50), min 0.923(50), ave 0.923
Test execution time: sum 5603 ms, max 145 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:50:27 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-03 00:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0.923(49), min 0.846(4), ave 0.917
Test execution time: sum 5937 ms, max 140 ms, min 105 ms
----------------------------------------------------------------

2023-08-03 00:50:47 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-03 00:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 41 seconds
Variants: generated 100, build-succeeded 50, build-failed 39, syntax-invalid 10, redundant 1
Fitness: max 0.923(49), min 0.846(1), ave 0.922
Test execution time: sum 5601 ms, max 135 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:51:06 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-03 00:51:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 59 seconds
Variants: generated 100, build-succeeded 44, build-failed 38, syntax-invalid 17, redundant 1
Fitness: max 0.923(42), min 0.846(2), ave 0.92
Test execution time: sum 4861 ms, max 130 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:51:24 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-03 00:51:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 16 seconds
Variants: generated 100, build-succeeded 42, build-failed 34, syntax-invalid 22, redundant 2
Fitness: max 0.923(38), min 0.846(4), ave 0.916
Test execution time: sum 4693 ms, max 128 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:51:40 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-03 00:52:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 35 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 0.923(47), min 0.846(4), ave 0.917
Test execution time: sum 5686 ms, max 122 ms, min 106 ms
----------------------------------------------------------------

2023-08-03 00:52:00 [main] [INFO]  KGenProgMain - GA stopped
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v7)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v7)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v7)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v531)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v531)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v531)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v741)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v741)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v741)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v741)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v741)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -116,7 +116,8 @@
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
-        // return the second endpoint if it is good enough
+        verifyInterval(min, max);
+		// return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v747)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v747)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v747)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v747)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -105,6 +106,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
+	printStackTrace(System.err);
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
@@ -116,7 +118,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -105,6 +105,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
+	printStackTrace(System.err);
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1214)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -105,6 +106,7 @@
     public MathException(String pattern, Object ... arguments) {
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
+	printStackTrace(System.err);
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v1706)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2638)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -116,7 +116,9 @@
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
-        // return the second endpoint if it is good enough
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		// return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -116,7 +118,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2719)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2722)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,7 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
+                    this.resultComputed = false;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v2911)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3020)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3022)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3119)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,13 +94,14 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double m;
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,11 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,7 +100,8 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3808)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,10 +97,11 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
+            double ret;
+			// Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }
 
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:00 [main] [INFO]  PatchLogExporter - patch (v3913)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -116,7 +118,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4532)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
@@ -116,7 +119,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4541)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v4629)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,13 +231,13 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -116,7 +117,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super();
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5008)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,13 +231,13 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,11 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,6 @@
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5713)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -247,11 +248,9 @@
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
-                // Force bisection.
-                delta = 0.5 * dx;
-                oldDelta = delta;
-            } else {
+                    (Math.abs(y0) <= Math.abs(y1)))
+				delta = 0.5 * dx;
+			else {
                 double r3 = y1 / y0;
                 double p;
                 double p1;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v5805)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -258,7 +260,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (y0 == 0.0) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6109)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6134)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,9 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -274,8 +277,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (i <= maximalIterationCount) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6210)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6210)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6210)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6210)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,11 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -247,11 +252,9 @@
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
-                // Force bisection.
-                delta = 0.5 * dx;
-                oldDelta = delta;
-            } else {
+                    (Math.abs(y0) <= Math.abs(y1)))
+				delta = 0.5 * dx;
+			else {
                 double r3 = y1 / y0;
                 double p;
                 double p1;
@@ -262,6 +265,12 @@
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
+					{
+						double r1 = y0 / y2;
+						double r2 = y1 / y2;
+						p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
+						p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
+					}
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6249)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -57,7 +57,8 @@
      */
     private static String translate(String s, Locale locale) {
         try {
-            ResourceBundle bundle =
+            final String pattern = "internal error, please fill a bug report at {0}";
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated string
@@ -92,7 +93,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6249)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6249)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,9 +188,22 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
-            fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6249)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,13 +231,13 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
@@ -270,7 +270,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,10 +188,23 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v6342)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -258,7 +260,7 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if (Math.abs(y1) <= functionValueAccuracy) {
                     // Linear interpolation.
                     p = dx * r3;
                     p1 = 1.0 - r3;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,12 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7045)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -129,7 +129,7 @@
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1.0d;
+                return Double.MAX_VALUE;
             } else {
                 throw ex;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7501)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,13 +231,15 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
@@ -282,7 +284,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,11 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7601)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -219,7 +219,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -231,6 +233,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,7 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,10 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v7631)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,9 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -246,8 +249,7 @@
                 setResult(x1, i);
                 return result;
             }
-            if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
+            if (i < maximalIterationCount) {
                 // Force bisection.
                 delta = 0.5 * dx;
                 oldDelta = delta;
@@ -265,7 +267,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        final String argument = "https://issues.apache.org/jira/browse/MATH";
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,28 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8023)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,11 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8625)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8625)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -218,7 +218,8 @@
                          double x2, double y2)
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        double delta = x1 - x0;
+        y1 = f.value(x1);
+		double delta = x1 - x0;
         double oldDelta = delta;
 
         int i = 0;
@@ -231,13 +232,15 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
@@ -270,7 +273,7 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
+                    resultComputed = true;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,28 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8628)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -219,7 +219,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -231,6 +233,7 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,12 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            double ret;
         }
 
         // find root
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v8811)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,13 +231,17 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,28 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -219,7 +219,11 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -233,11 +237,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
@@ -265,7 +264,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,15 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v10843)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,9 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -265,7 +268,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,12 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11144)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -265,7 +270,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,28 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11414)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
-        clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
@@ -228,9 +226,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                iterationCount = i;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				double ret = Double.NaN;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -265,7 +268,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,10 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,35 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11717)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,10 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -247,11 +251,9 @@
                 return result;
             }
             if ((Math.abs(oldDelta) < tolerance) ||
-                    (Math.abs(y0) <= Math.abs(y1))) {
-                // Force bisection.
-                delta = 0.5 * dx;
-                oldDelta = delta;
-            } else {
+                    (Math.abs(y0) <= Math.abs(y1)))
+				throw new MaxIterationsExceededException(maximalIterationCount);
+			else {
                 double r3 = y1 / y0;
                 double p;
                 double p1;
@@ -265,7 +267,8 @@
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
-                    double r2 = y1 / y2;
+                    double ret = Double.NaN;
+					double r2 = y1 / y2;
                     p = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,13 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,21 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v11864)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,8 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +263,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +273,7 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
+                    double fa;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,9 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,77 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v13836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -261,6 +261,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14038)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,35 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14038)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,14 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +268,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14518)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14518)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14518)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,49 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14518)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,13 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +267,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +279,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
@@ -115,7 +116,6 @@
 
     /** {@inheritDoc} */
     public void resetRelativeAccuracy() {
-        relativeAccuracy = defaultRelativeAccuracy;
     }
 
 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,49 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14580)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,11 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +265,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +277,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14681)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14681)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14681)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,10 +188,51 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14681)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14681)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,13 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +267,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +277,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
+		relativeAccuracy = defaultRelativeAccuracy;
+		this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,49 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14688)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,6 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -261,6 +263,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +275,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -92,7 +92,8 @@
     public MathException() {
         super();
         this.pattern   = null;
-        this.arguments = new Object[0];
+        printStackTrace(System.err);
+		this.arguments = new Object[0];
     }
     
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,49 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v14797)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,11 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +265,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +277,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -163,7 +161,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,10 +188,23 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15055)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,13 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +267,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -283,7 +292,7 @@
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
-                    delta = p / p1;
+                    delta = 0.5 * dx;
                 }
             }
             // Save old X1, Y1 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,34 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v15233)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +266,10 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,11 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,49 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17317)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,13 +223,18 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i < maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -261,6 +266,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,63 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v17513)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,14 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +268,8 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -290,7 +299,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i <= maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v18341)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v18341)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v18341)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,55 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v18341)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v18341)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,16 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +270,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +280,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,9 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,83 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19502)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,6 +230,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
@@ -237,7 +243,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = (x2 - x1);
             double tolerance =
@@ -261,6 +266,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,6 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,84 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v19923)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,14 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +268,8 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v20408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v20408)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,78 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				double x1;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v20408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v20408)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,11 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+                setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +265,10 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -295,12 +303,14 @@
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
             } else if (dx <= 0.0) {
-                x1 = x1 - 0.5 * tolerance;
+                x1 = x1 + delta;
             }
             y1 = f.value(x1);
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
                 delta = x1 - x0;
                 oldDelta = delta;
             }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,111 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				int i = 0;
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21141)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,20 +223,20 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i <= maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
@@ -261,6 +261,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21309)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21309)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,7 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        maximalIterationCount = defaultMaximalIterationCount;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21309)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,97 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v21309)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,13 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +267,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22928)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22928)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22928)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,9 +186,104 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22928)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22928)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,9 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -258,9 +261,15 @@
                 // the equality test (x0 == x2) is intentional,
                 // it is part of the original Brent's method,
                 // it should NOT be replaced by proximity test
-                if (x0 == x2) {
+                if ((y1 > 0) == (y2 > 0)) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22995)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22995)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,9 +186,107 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				b = Math.min(b + 1.0, upperBound);
+				int i = 0;
+				fa = function.value(a);
+				fb = function.value(b);
+				double x0, x1, x2, x, oldx, y0, y1, y2, y;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22995)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v22995)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
         
         clearResult();
-        verifyInterval(min, max);
-        
         double ret = Double.NaN;
         
         double yMin = f.value(min);
@@ -230,7 +228,13 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +265,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +277,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23064)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23064)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23064)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,109 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23064)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23064)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,12 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +266,8 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +277,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23286)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23286)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23286)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,9 +186,104 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23286)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:01 [main] [INFO]  PatchLogExporter - patch (v23286)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,7 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        int i = 1;
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +230,10 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +264,7 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -270,7 +274,6 @@
                     p1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);
                 }
                 if (p > 0.0) {
-                    p1 = -p1;
                 } else {
                     p = -p;
                 }
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double result, final int iterationCount) {
         this.result         = result;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,11 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,75 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v24003)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,14 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				oldDelta = delta;
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +268,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -186,9 +186,92 @@
         int numIterations = 0 ;
     
         do {
-            a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v25101)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
         
         clearResult();
-        verifyInterval(min, max);
-        
         double ret = Double.NaN;
         
         double yMin = f.value(min);
@@ -231,6 +229,12 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +254,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -261,6 +264,8 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v28445)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v28445)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v28445)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,8 +187,154 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v28445)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v28445)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,15 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
+				y2 = f.value(x2);
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +258,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -261,6 +268,8 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -304,7 +313,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v29811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v29811)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v29811)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,90 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v29811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v29811)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,16 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
+				y2 = f.value(x2);
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +270,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v33002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v33002)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,11 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v33002)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,10 +188,146 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v33002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v33002)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,10 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +265,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -304,7 +316,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36441)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36441)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36441)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,172 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				double x1, x2, x3, x, oldx, y1, y2, y3, y, delta, correction, tolerance;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				double q, A, B, C, delta, denominator, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				double q, A, B, C, delta, denominator, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36441)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,14 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				y0 = f.value(x0);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +258,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
@@ -261,6 +268,12 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36531)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36531)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,10 +187,152 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				double x1, x2, x3, x, oldx, y1, y2, y3, y, delta, correction, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
-            fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v36531)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,17 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +272,12 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,15 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,129 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				int i = 1;
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				double q, A, B, C, delta, denominator, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v37332)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,17 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,7 +272,9 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
-                    p1 = 1.0 - r3;
+					++i;
+					++i;
+					p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
@@ -293,7 +306,8 @@
             if (Math.abs(delta) > tolerance) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
-                x1 = x1 + 0.5 * tolerance;
+                delta = 0.5 * dx;
+				x1 = x1 + 0.5 * tolerance;
             } else if (dx <= 0.0) {
                 x1 = x1 - 0.5 * tolerance;
             }
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v39709)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v39709)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,12 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        this.defaultRelativeAccuracy = 1.0e-14;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v39709)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,174 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				double q, A, B, C, delta, denominator, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v39709)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v39709)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,20 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +275,13 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42119)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,11 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,189 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				double q, A, B, C, delta, denominator, tolerance;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42119)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
         
         clearResult();
-        verifyInterval(min, max);
-        
         double ret = Double.NaN;
         
         double yMin = f.value(min);
@@ -231,6 +229,13 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +266,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42630)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,225 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v42630)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,16 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,7 +271,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
+					int numIterations = 0;
                 } else {
                     // Inverse quadratic interpolation.
                     double r1 = y0 / y2;
@@ -290,7 +307,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if ((Math.abs(oldDelta) < tolerance) || (Math.abs(y0) <= Math.abs(y1))) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v43609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v43609)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v43609)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,243 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				fb = function.value(b);
+				double x0, x1, x2, x, oldx, y0, y1, y2, y;
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v43609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v43609)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,14 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +269,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,6 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
+		double x1, x2, x3, x, oldx, y1, y2, y3, y, delta, correction, tolerance;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,15 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,191 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45206)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,13 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				++i;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				y1 = f.value(x1);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +268,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -290,7 +305,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i < maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,7 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		double x1, x2, x3, x, oldx, y1, y2, y3, y, delta, correction, tolerance;
     }
 
     /**
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,13 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,207 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v45296)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,16 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				++i;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				y1 = f.value(x1);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +271,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -290,7 +308,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (i < maximalIterationCount) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v46110)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v46110)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,16 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v46110)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,174 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v46110)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v46110)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,15 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +270,16 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
@@ -305,6 +324,7 @@
                 oldDelta = delta;
             }
             i++;
+			functionValueAccuracy = defaultFunctionValueAccuracy;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v47022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v47022)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,17 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v47022)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,154 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            {
+				a = Math.max(a - 1.0, lowerBound);
+				fa = function.value(a);
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				b = Math.min(b + 1.0, upperBound);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			{
+				a = Math.max(a - 1.0, lowerBound);
+				b = Math.min(b + 1.0, upperBound);
+				fa = function.value(a);
+				fb = function.value(b);
+				numIterations++;
+			}
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v47022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 00:52:02 [main] [INFO]  PatchLogExporter - patch (v47022)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -231,6 +231,18 @@
                 y0 = y1;
                 y1 = y2;
                 y2 = y0;
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
+				setResult(x1, i);
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -261,6 +273,14 @@
                 if (x0 == x2) {
                     // Linear interpolation.
                     p = dx * r3;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
+					++i;
                     p1 = 1.0 - r3;
                 } else {
                     // Inverse quadratic interpolation.
2023-08-03 00:52:04 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 44327
Build succeeded variants = 26215
Time elapsed = 9 hours 4 minutes 39 seconds
Exit status = FAILURE (maximum generation)
