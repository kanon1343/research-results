2023-08-03 23:07:37 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-03 23:07:37 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-03 23:07:37 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-03 23:07:38 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-03 23:07:45 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-03 23:07:45 [main] [INFO]  KGenProgMain - GA started
2023-08-03 23:07:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-03 23:07:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 50, build-succeeded 3, build-failed 34, syntax-invalid 4, redundant 9
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 445 ms, max 156 ms, min 139 ms
----------------------------------------------------------------

2023-08-03 23:07:47 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-03 23:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 50, build-succeeded 5, build-failed 29, syntax-invalid 6, redundant 10
Fitness: max 0.923(2), min 0.462(1), ave 0.8
Test execution time: sum 505 ms, max 122 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 23:07:49 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-03 23:13:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 5 seconds
Variants: generated 100, build-succeeded 16, build-failed 34, syntax-invalid 6, redundant 44
Fitness: max 1(3), min 0.462(5), ave 0.76
Test execution time: sum 361393 ms, max 360094 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 23:13:51 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-04 00:01:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 8 seconds
Variants: generated 100, build-succeeded 22, build-failed 31, syntax-invalid 12, redundant 35
Fitness: max 1(1), min 0.385(1), ave 0.678
Test execution time: sum 2881797 ms, max 1440070 ms, min 69 ms
----------------------------------------------------------------

2023-08-04 00:01:54 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-04 00:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 12 seconds
Variants: generated 100, build-succeeded 24, build-failed 35, syntax-invalid 5, redundant 36
Fitness: max 0.923(5), min 0.462(2), ave 0.808
Test execution time: sum 1621970 ms, max 360099 ms, min 67 ms
----------------------------------------------------------------

2023-08-04 00:28:58 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-04 00:56:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 15 seconds
Variants: generated 100, build-succeeded 21, build-failed 34, syntax-invalid 12, redundant 33
Fitness: max 1(2), min 0.769(2), ave 0.886
Test execution time: sum 1621799 ms, max 360087 ms, min 75 ms
----------------------------------------------------------------

2023-08-04 00:56:01 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-04 01:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 18 seconds
Variants: generated 100, build-succeeded 24, build-failed 31, syntax-invalid 13, redundant 32
Fitness: max 1(3), min 0.462(1), ave 0.891
Test execution time: sum 542057 ms, max 360086 ms, min 66 ms
----------------------------------------------------------------

2023-08-04 01:05:04 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-04 01:08:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 seconds
Variants: generated 100, build-succeeded 18, build-failed 37, syntax-invalid 11, redundant 34
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 181581 ms, max 180083 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 01:08:07 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-04 01:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 seconds
Variants: generated 100, build-succeeded 30, build-failed 38, syntax-invalid 11, redundant 21
Fitness: max 1(7), min 0.462(1), ave 0.91
Test execution time: sum 2569 ms, max 108 ms, min 70 ms
----------------------------------------------------------------

2023-08-04 01:08:10 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-04 01:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 27 seconds
Variants: generated 100, build-succeeded 21, build-failed 28, syntax-invalid 12, redundant 39
Fitness: max 1(3), min 0.846(5), ave 0.916
Test execution time: sum 181809 ms, max 180086 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 01:11:13 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-04 01:11:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 30 seconds
Variants: generated 100, build-succeeded 16, build-failed 39, syntax-invalid 15, redundant 30
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 1447 ms, max 114 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 01:11:16 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-04 01:11:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 34 seconds
Variants: generated 100, build-succeeded 26, build-failed 33, syntax-invalid 12, redundant 29
Fitness: max 1(1), min 0.385(1), ave 0.891
Test execution time: sum 2284 ms, max 106 ms, min 73 ms
----------------------------------------------------------------

2023-08-04 01:11:19 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-04 01:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 36 seconds
Variants: generated 100, build-succeeded 16, build-failed 34, syntax-invalid 10, redundant 40
Fitness: max 0.923(15), min 0.846(1), ave 0.918
Test execution time: sum 1411 ms, max 100 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 01:11:22 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-04 01:11:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 40 seconds
Variants: generated 100, build-succeeded 24, build-failed 35, syntax-invalid 15, redundant 26
Fitness: max 0.923(23), min 0.846(1), ave 0.92
Test execution time: sum 2196 ms, max 113 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 01:11:26 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-04 01:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 43 seconds
Variants: generated 100, build-succeeded 18, build-failed 35, syntax-invalid 17, redundant 30
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 1704 ms, max 138 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 01:11:29 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-04 01:11:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 46 seconds
Variants: generated 100, build-succeeded 23, build-failed 33, syntax-invalid 25, redundant 19
Fitness: max 1(2), min 0.462(2), ave 0.886
Test execution time: sum 2051 ms, max 134 ms, min 73 ms
----------------------------------------------------------------

2023-08-04 01:11:32 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-04 01:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 49 seconds
Variants: generated 100, build-succeeded 24, build-failed 27, syntax-invalid 22, redundant 27
Fitness: max 1(1), min 0.462(1), ave 0.901
Test execution time: sum 722102 ms, max 360085 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 01:23:35 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-04 01:23:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 53 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 19, redundant 19
Fitness: max 1(3), min 0.462(1), ave 0.913
Test execution time: sum 2640 ms, max 113 ms, min 67 ms
----------------------------------------------------------------

2023-08-04 01:23:39 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-04 01:23:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 56 seconds
Variants: generated 100, build-succeeded 23, build-failed 30, syntax-invalid 19, redundant 28
Fitness: max 0.923(21), min 0.846(2), ave 0.916
Test execution time: sum 2072 ms, max 138 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 01:23:42 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-04 01:35:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 0 seconds
Variants: generated 100, build-succeeded 30, build-failed 29, syntax-invalid 17, redundant 24
Fitness: max 1(1), min 0.846(4), ave 0.915
Test execution time: sum 722607 ms, max 360085 ms, min 76 ms
----------------------------------------------------------------

2023-08-04 01:35:46 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-04 01:35:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 3 seconds
Variants: generated 100, build-succeeded 23, build-failed 30, syntax-invalid 28, redundant 19
Fitness: max 1(1), min 0.923(22), ave 0.926
Test execution time: sum 2048 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 01:35:49 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-04 01:35:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 7 seconds
Variants: generated 100, build-succeeded 29, build-failed 32, syntax-invalid 24, redundant 15
Fitness: max 1(4), min 0.923(25), ave 0.934
Test execution time: sum 2592 ms, max 112 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 01:35:53 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-04 01:35:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 11 seconds
Variants: generated 100, build-succeeded 26, build-failed 33, syntax-invalid 22, redundant 19
Fitness: max 0.923(26), min 0.923(26), ave 0.923
Test execution time: sum 2429 ms, max 191 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 01:35:57 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-04 01:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 15 seconds
Variants: generated 100, build-succeeded 35, build-failed 37, syntax-invalid 9, redundant 19
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 363118 ms, max 360086 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 01:42:01 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-04 01:42:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 20 seconds
Variants: generated 100, build-succeeded 35, build-failed 26, syntax-invalid 19, redundant 20
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3141 ms, max 139 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 01:42:06 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-04 01:54:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 23 seconds
Variants: generated 100, build-succeeded 26, build-failed 34, syntax-invalid 26, redundant 14
Fitness: max 0.923(22), min 0.846(4), ave 0.911
Test execution time: sum 722376 ms, max 360087 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 01:54:09 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-04 01:57:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 27 seconds
Variants: generated 100, build-succeeded 25, build-failed 31, syntax-invalid 20, redundant 24
Fitness: max 0.923(23), min 0.846(2), ave 0.917
Test execution time: sum 182263 ms, max 180109 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 01:57:13 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-04 02:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 31 seconds
Variants: generated 100, build-succeeded 31, build-failed 34, syntax-invalid 14, redundant 21
Fitness: max 0.923(28), min 0.846(3), ave 0.916
Test execution time: sum 182760 ms, max 180085 ms, min 66 ms
----------------------------------------------------------------

2023-08-04 02:00:17 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-04 02:00:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 35 seconds
Variants: generated 100, build-succeeded 31, build-failed 28, syntax-invalid 16, redundant 25
Fitness: max 1(1), min 0.923(30), ave 0.926
Test execution time: sum 2733 ms, max 109 ms, min 77 ms
----------------------------------------------------------------

2023-08-04 02:00:21 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-04 02:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 39 seconds
Variants: generated 100, build-succeeded 29, build-failed 38, syntax-invalid 17, redundant 16
Fitness: max 0.923(28), min 0.846(1), ave 0.92
Test execution time: sum 2613 ms, max 118 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 02:00:25 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-04 02:00:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 43 seconds
Variants: generated 100, build-succeeded 24, build-failed 34, syntax-invalid 23, redundant 19
Fitness: max 0.923(23), min 0.846(1), ave 0.92
Test execution time: sum 2154 ms, max 114 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:00:29 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-04 02:09:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 47 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 17, redundant 16
Fitness: max 1(1), min 0.846(4), ave 0.917
Test execution time: sum 543261 ms, max 360084 ms, min 77 ms
----------------------------------------------------------------

2023-08-04 02:09:33 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-04 02:15:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 52 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 21, redundant 12
Fitness: max 1(1), min 0.385(1), ave 0.903
Test execution time: sum 363069 ms, max 360088 ms, min 77 ms
----------------------------------------------------------------

2023-08-04 02:15:38 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-04 02:15:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 56 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 22, redundant 12
Fitness: max 1(1), min 0.923(33), ave 0.925
Test execution time: sum 3061 ms, max 119 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 02:15:42 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-04 02:15:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 1 seconds
Variants: generated 100, build-succeeded 29, build-failed 36, syntax-invalid 27, redundant 8
Fitness: max 1(1), min 0.923(28), ave 0.926
Test execution time: sum 2613 ms, max 107 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 02:15:46 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-04 02:15:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 4 seconds
Variants: generated 100, build-succeeded 26, build-failed 35, syntax-invalid 26, redundant 13
Fitness: max 0.923(26), min 0.923(26), ave 0.923
Test execution time: sum 2357 ms, max 111 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 02:15:50 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-04 02:15:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 9 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 19, redundant 16
Fitness: max 1(2), min 0.923(32), ave 0.928
Test execution time: sum 3159 ms, max 132 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 02:15:55 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-04 02:15:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 13 seconds
Variants: generated 100, build-succeeded 24, build-failed 37, syntax-invalid 31, redundant 8
Fitness: max 0.923(23), min 0.846(1), ave 0.92
Test execution time: sum 2150 ms, max 117 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 02:15:59 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-04 02:16:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 17 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 22, redundant 9
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3225 ms, max 129 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 02:16:03 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-04 02:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 22 seconds
Variants: generated 100, build-succeeded 30, build-failed 31, syntax-invalid 23, redundant 16
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 182716 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:19:07 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-04 02:22:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 27 seconds
Variants: generated 100, build-succeeded 40, build-failed 37, syntax-invalid 15, redundant 8
Fitness: max 1(2), min 0.462(1), ave 0.912
Test execution time: sum 183669 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:22:13 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-04 02:31:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 31 seconds
Variants: generated 100, build-succeeded 33, build-failed 29, syntax-invalid 20, redundant 18
Fitness: max 1(2), min 0.385(1), ave 0.907
Test execution time: sum 542989 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:31:17 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-04 02:31:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 36 seconds
Variants: generated 100, build-succeeded 33, build-failed 33, syntax-invalid 15, redundant 19
Fitness: max 0.923(32), min 0.846(1), ave 0.921
Test execution time: sum 3002 ms, max 107 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 02:31:22 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-04 02:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 40 seconds
Variants: generated 100, build-succeeded 28, build-failed 39, syntax-invalid 22, redundant 11
Fitness: max 0.923(28), min 0.923(28), ave 0.923
Test execution time: sum 2592 ms, max 148 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 02:31:26 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-04 02:31:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 44 seconds
Variants: generated 100, build-succeeded 32, build-failed 34, syntax-invalid 20, redundant 14
Fitness: max 0.923(31), min 0.846(1), ave 0.921
Test execution time: sum 2947 ms, max 116 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:31:30 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-04 02:40:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 50 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 12, redundant 15
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 543625 ms, max 360087 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 02:40:35 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-04 02:49:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 55 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 12, redundant 15
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 543769 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 02:49:41 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-04 02:55:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 0 seconds
Variants: generated 100, build-succeeded 40, build-failed 37, syntax-invalid 12, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363682 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 02:55:46 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-04 02:55:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 5 seconds
Variants: generated 100, build-succeeded 28, build-failed 32, syntax-invalid 22, redundant 18
Fitness: max 1(2), min 0.923(26), ave 0.929
Test execution time: sum 2615 ms, max 143 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 02:55:51 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-04 03:01:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 10 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 14, redundant 12
Fitness: max 0.923(42), min 0.846(1), ave 0.921
Test execution time: sum 364028 ms, max 360089 ms, min 80 ms
----------------------------------------------------------------

2023-08-04 03:01:56 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-04 03:08:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 19, redundant 15
Fitness: max 1(3), min 0.846(1), ave 0.928
Test execution time: sum 363072 ms, max 360089 ms, min 78 ms
----------------------------------------------------------------

2023-08-04 03:08:01 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-04 03:08:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0.923(42), ave 0.925
Test execution time: sum 3934 ms, max 130 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 03:08:07 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-04 03:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 20, redundant 11
Fitness: max 1(2), min 0.923(36), ave 0.927
Test execution time: sum 3454 ms, max 138 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 03:08:12 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-04 03:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 7, redundant 24
Fitness: max 0.923(40), min 0.923(40), ave 0.923
Test execution time: sum 3606 ms, max 129 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 03:08:17 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-04 03:08:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 seconds
Variants: generated 100, build-succeeded 38, build-failed 29, syntax-invalid 15, redundant 18
Fitness: max 0.923(37), min 0.846(1), ave 0.921
Test execution time: sum 3440 ms, max 116 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 03:08:22 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-04 03:08:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 seconds
Variants: generated 100, build-succeeded 32, build-failed 31, syntax-invalid 27, redundant 10
Fitness: max 1(1), min 0.923(31), ave 0.925
Test execution time: sum 2894 ms, max 108 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 03:08:27 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-04 03:08:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 18, redundant 13
Fitness: max 1(2), min 0.923(39), ave 0.927
Test execution time: sum 3739 ms, max 117 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 03:08:32 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-04 03:11:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 52 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 13, redundant 12
Fitness: max 0.923(39), min 0.846(2), ave 0.919
Test execution time: sum 183743 ms, max 180086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 03:11:38 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-04 03:11:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 58 seconds
Variants: generated 100, build-succeeded 42, build-failed 36, syntax-invalid 9, redundant 13
Fitness: max 0.923(40), min 0.462(2), ave 0.901
Test execution time: sum 3849 ms, max 122 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 03:11:44 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-04 03:35:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 4 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 11, redundant 13
Fitness: max 0.923(43), min 0.385(1), ave 0.909
Test execution time: sum 1444125 ms, max 1440067 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 03:35:50 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-04 03:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 11 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 15, redundant 10
Fitness: max 1(5), min 0.538(1), ave 0.921
Test execution time: sum 184214 ms, max 180090 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 03:38:56 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-04 03:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 17 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4077 ms, max 120 ms, min 81 ms
----------------------------------------------------------------

2023-08-04 03:39:03 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-04 03:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 23 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 10, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 4058 ms, max 117 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 03:39:09 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-04 03:39:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 29 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 19, redundant 6
Fitness: max 1(3), min 0.846(1), ave 0.927
Test execution time: sum 4048 ms, max 127 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 03:39:15 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-04 03:45:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 35 seconds
Variants: generated 100, build-succeeded 39, build-failed 36, syntax-invalid 18, redundant 7
Fitness: max 0.923(37), min 0.846(2), ave 0.919
Test execution time: sum 363820 ms, max 360111 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 03:45:21 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-04 03:48:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 41 seconds
Variants: generated 100, build-succeeded 34, build-failed 30, syntax-invalid 26, redundant 10
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 183221 ms, max 180090 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 03:48:27 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-04 03:54:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 364455 ms, max 360085 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 03:54:33 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-04 03:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 11, redundant 18
Fitness: max 0.923(38), min 0.846(2), ave 0.919
Test execution time: sum 3797 ms, max 142 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 03:54:39 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-04 03:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 59 seconds
Variants: generated 100, build-succeeded 35, build-failed 30, syntax-invalid 16, redundant 19
Fitness: max 0.923(35), min 0.923(35), ave 0.923
Test execution time: sum 3236 ms, max 134 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 03:54:45 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-04 04:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 5 seconds
Variants: generated 100, build-succeeded 35, build-failed 30, syntax-invalid 12, redundant 23
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 363328 ms, max 360086 ms, min 75 ms
----------------------------------------------------------------

2023-08-04 04:00:51 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-04 04:06:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 10 seconds
Variants: generated 100, build-succeeded 37, build-failed 33, syntax-invalid 7, redundant 23
Fitness: max 0.923(36), min 0.846(1), ave 0.921
Test execution time: sum 363418 ms, max 360089 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 04:06:56 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-04 04:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 16 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 9, redundant 21
Fitness: max 1(1), min 0.615(1), ave 0.917
Test execution time: sum 3530 ms, max 134 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 04:07:02 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-04 04:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 22 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 15, redundant 15
Fitness: max 0.923(37), min 0.846(3), ave 0.917
Test execution time: sum 543621 ms, max 360092 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 04:16:08 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-04 04:16:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 28 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 14, redundant 11
Fitness: max 1(2), min 0.923(41), ave 0.927
Test execution time: sum 3981 ms, max 134 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 04:16:14 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-04 04:16:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 35 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 17, redundant 11
Fitness: max 1(1), min 0.923(41), ave 0.925
Test execution time: sum 3996 ms, max 145 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 04:16:21 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-04 04:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 8 minutes 41 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 18, redundant 6
Fitness: max 0.923(42), min 0.615(1), ave 0.914
Test execution time: sum 4212 ms, max 176 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 04:16:27 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-04 04:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 46 seconds
Variants: generated 100, build-succeeded 32, build-failed 34, syntax-invalid 20, redundant 14
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 722992 ms, max 360089 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 04:28:32 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-04 04:31:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 53 seconds
Variants: generated 100, build-succeeded 45, build-failed 26, syntax-invalid 19, redundant 10
Fitness: max 0.923(41), min 0.846(4), ave 0.916
Test execution time: sum 184171 ms, max 180095 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 04:31:38 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-04 04:31:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 58 seconds
Variants: generated 100, build-succeeded 34, build-failed 29, syntax-invalid 21, redundant 16
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3174 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 04:31:44 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-04 04:31:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 4 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.923(43), ave 0.925
Test execution time: sum 4184 ms, max 125 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 04:31:50 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-04 04:31:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 9 seconds
Variants: generated 100, build-succeeded 29, build-failed 30, syntax-invalid 21, redundant 20
Fitness: max 0.923(29), min 0.923(29), ave 0.923
Test execution time: sum 2776 ms, max 116 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 04:31:55 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-04 04:32:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 15 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 13, redundant 15
Fitness: max 1(1), min 0.615(1), ave 0.914
Test execution time: sum 3787 ms, max 109 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 04:32:01 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-04 04:38:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 21 seconds
Variants: generated 100, build-succeeded 35, build-failed 39, syntax-invalid 15, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363230 ms, max 360086 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 04:38:06 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-04 04:50:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 26 seconds
Variants: generated 100, build-succeeded 38, build-failed 35, syntax-invalid 16, redundant 11
Fitness: max 0.923(35), min 0.846(3), ave 0.917
Test execution time: sum 723525 ms, max 360090 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 04:50:12 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-04 04:50:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 32 seconds
Variants: generated 100, build-succeeded 35, build-failed 27, syntax-invalid 20, redundant 18
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3247 ms, max 141 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 04:50:18 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-04 04:50:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 37 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 13, redundant 13
Fitness: max 1(1), min 0.923(37), ave 0.925
Test execution time: sum 3566 ms, max 149 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 04:50:23 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-04 04:50:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 43 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 12, redundant 17
Fitness: max 1(4), min 0.923(36), ave 0.931
Test execution time: sum 3751 ms, max 124 ms, min 78 ms
----------------------------------------------------------------

2023-08-04 04:50:29 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-04 04:50:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 49 seconds
Variants: generated 100, build-succeeded 31, build-failed 32, syntax-invalid 18, redundant 19
Fitness: max 0.923(31), min 0.923(31), ave 0.923
Test execution time: sum 2846 ms, max 117 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 04:50:34 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-04 04:50:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 54 seconds
Variants: generated 100, build-succeeded 34, build-failed 37, syntax-invalid 19, redundant 10
Fitness: max 0.923(34), min 0.923(34), ave 0.923
Test execution time: sum 3181 ms, max 150 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 04:50:40 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-04 04:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 59 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 16, redundant 16
Fitness: max 0.923(34), min 0.846(2), ave 0.919
Test execution time: sum 183293 ms, max 180092 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 04:53:45 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-04 04:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 1 seconds
Variants: generated 41, build-succeeded 8, build-failed 26, syntax-invalid 3, redundant 4
Fitness: max 1(2), min 0.615(1), ave 0.894
Test execution time: sum 360724 ms, max 360116 ms, min 70 ms
----------------------------------------------------------------

2023-08-04 04:59:47 [main] [INFO]  KGenProgMain - GA stopped
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v19)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v148)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v148)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v172)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v172)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v172)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:47 [main] [INFO]  PatchLogExporter - patch (v172)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v173)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v173)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v173)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v173)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v250)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v250)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v250)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v250)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v250)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v462)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v462)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v462)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v462)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v471)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v471)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v471)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v471)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v471)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v506)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v506)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v506)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v506)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v562)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,8 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v562)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v562)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v562)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v562)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v578)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v578)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v578)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v578)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v578)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v664)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v672)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,8 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
@@ -103,7 +104,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v672)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v672)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v672)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v695)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v752)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v752)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v752)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v752)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v752)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v753)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v753)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v753)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v753)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v753)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v755)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v755)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v755)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v755)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v755)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v780)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -68,7 +68,8 @@
             // do nothing here
         }
 
-        // the locale is not supported or the resource is unknown
+        ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+		// the locale is not supported or the resource is unknown
         // don't translate and fall back to using the string as is
         return s;
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v780)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v780)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v780)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v780)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v783)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v783)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v783)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v783)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v783)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v798)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v798)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v798)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v798)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v798)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v800)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v857)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v858)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v957)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1303)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1303)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1303)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -97,7 +97,8 @@
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
-            sum = sum + lanczos[0];
+            double m;
+			sum = sum + lanczos[0];
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1412)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1412)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1412)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1412)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1412)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1537)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1537)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1537)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1537)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1537)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1633)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1633)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1633)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1633)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1643)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1827)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1827)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1827)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1827)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -97,7 +97,8 @@
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
-            sum = sum + lanczos[0];
+            double m;
+			sum = sum + lanczos[0];
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2319)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2747)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2747)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2747)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2747)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v2747)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -97,7 +97,8 @@
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
-            sum = sum + lanczos[0];
+            double m;
+			sum = sum + lanczos[0];
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
@@ -158,7 +159,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3102)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double d01, d12, d012, c1, delta, xplus, xminus, tolerance;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3342)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3503)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +117,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:48 [main] [INFO]  PatchLogExporter - patch (v3545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -97,7 +97,8 @@
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
-            sum = sum + lanczos[0];
+            double m;
+			sum = sum + lanczos[0];
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            numIterations++;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3813)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v3932)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 1;
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -97,7 +97,8 @@
             for (int i = lanczos.length - 1; i > 0; --i) {
                 sum = sum + (lanczos[i] / (x + i));
             }
-            sum = sum + lanczos[0];
+            double m;
+			sum = sum + lanczos[0];
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
@@ -158,7 +159,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4030)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,7 +192,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4744)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4746)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +119,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,7 +191,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4746)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            int i = 1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4746)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +118,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4913)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,9 +190,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4923)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,9 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v4928)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,7 +191,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
@@ -233,7 +233,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 1.0;
         } else if (x < a || a < 1.0) {
             // use regularizedGammaP because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5120)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5145)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +119,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5145)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5145)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5405)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -190,8 +192,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5512)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,10 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -190,8 +194,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5540)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,11 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5906)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,10 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +120,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5914)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,12 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5920)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,10 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -169,7 +173,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5931)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,11 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -169,7 +174,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v5950)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
@@ -190,8 +191,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6120)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,13 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +120,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6120)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6120)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (maximumIterations <= 0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6120)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6120)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6139)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,13 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -116,7 +120,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6139)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6139)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6139)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6139)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6240)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,12 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -169,7 +175,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6240)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6240)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6240)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,10 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6247)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,9 +192,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6248)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +180,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
@@ -189,9 +191,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double delta;
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6440)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,12 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -158,7 +158,7 @@
 
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
-        } else if (x == 0.0) {
+        } else if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6550)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6814)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,15 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,7 +195,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6814)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6814)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6814)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v6814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,12 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7050)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,14 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,7 +194,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,12 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -189,7 +195,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7345)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,11 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -190,8 +195,6 @@
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
             printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7345)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7345)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            a = Math.max(a - 1.0, lowerBound);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7345)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7512)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,10 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7705)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,13 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,10 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8013)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +180,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,12 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +180,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8119)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:49 [main] [INFO]  PatchLogExporter - patch (v8305)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8414)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +180,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8414)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8414)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,9 +103,10 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +178,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8510)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,8 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
@@ -177,7 +179,6 @@
      */
     @Override
     public void printStackTrace() {
-        printStackTrace(System.err);
     }
     
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8530)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            a = Math.max(a - 1.0, lowerBound);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8531)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,7 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8935)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -106,6 +106,9 @@
       super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
+	printStackTrace(System.err);
+	printStackTrace(System.err);
+	printStackTrace(System.err);
     }
 
     /**
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        double fm;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 04:59:50 [main] [INFO]  PatchLogExporter - patch (v8941)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
+			ret = 0.0;
         }
         
         return ret;
2023-08-04 04:59:52 [main] [INFO]  KGenProgMain - Summary
Reached generation = 91
Generated variants = 8941
Syntax valid variants = 7465
Build succeeded variants = 2930
Time elapsed = 5 hours 52 minutes 6 seconds
Exit status = SUCCESS
