2023-08-03 00:52:05 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-03 00:52:05 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-03 00:52:05 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-03 00:52:05 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-03 00:52:13 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-03 00:52:13 [main] [INFO]  KGenProgMain - GA started
2023-08-03 00:52:13 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-03 00:52:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 50, build-succeeded 3, build-failed 30, syntax-invalid 9, redundant 8
Fitness: max 1(1), min 0.923(2), ave 0.949
Test execution time: sum 415 ms, max 159 ms, min 119 ms
----------------------------------------------------------------

2023-08-03 00:52:15 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-03 01:01:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 3 seconds
Variants: generated 50, build-succeeded 7, build-failed 27, syntax-invalid 6, redundant 10
Fitness: max 0.923(5), min 0.769(1), ave 0.89
Test execution time: sum 540801 ms, max 360098 ms, min 95 ms
----------------------------------------------------------------

2023-08-03 01:01:16 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-03 01:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 5 seconds
Variants: generated 100, build-succeeded 11, build-failed 29, syntax-invalid 11, redundant 49
Fitness: max 1(2), min 0.462(1), ave 0.846
Test execution time: sum 1260944 ms, max 360088 ms, min 71 ms
----------------------------------------------------------------

2023-08-03 01:22:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-03 01:55:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 7 seconds
Variants: generated 100, build-succeeded 13, build-failed 35, syntax-invalid 11, redundant 41
Fitness: max 0.923(5), min 0.462(1), ave 0.834
Test execution time: sum 1981137 ms, max 360093 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 01:55:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-03 03:10:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 10 seconds
Variants: generated 100, build-succeeded 24, build-failed 31, syntax-invalid 12, redundant 33
Fitness: max 0.923(6), min 0.846(18), ave 0.865
Test execution time: sum 4502109 ms, max 360106 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 03:10:24 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-03 03:43:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 13 seconds
Variants: generated 100, build-succeeded 23, build-failed 32, syntax-invalid 7, redundant 38
Fitness: max 1(2), min 0.846(10), ave 0.896
Test execution time: sum 1982011 ms, max 360087 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 03:43:27 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-03 03:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 16 seconds
Variants: generated 100, build-succeeded 20, build-failed 34, syntax-invalid 17, redundant 29
Fitness: max 0.923(20), min 0.923(20), ave 0.923
Test execution time: sum 1749 ms, max 104 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 03:43:30 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-03 03:46:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 19 seconds
Variants: generated 100, build-succeeded 15, build-failed 30, syntax-invalid 17, redundant 38
Fitness: max 1(2), min 0.846(3), ave 0.918
Test execution time: sum 181322 ms, max 180085 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 03:46:32 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-03 03:46:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 21 seconds
Variants: generated 100, build-succeeded 14, build-failed 32, syntax-invalid 18, redundant 36
Fitness: max 1(1), min 0.923(13), ave 0.929
Test execution time: sum 1264 ms, max 103 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 03:46:35 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-03 03:46:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 24 seconds
Variants: generated 100, build-succeeded 16, build-failed 32, syntax-invalid 10, redundant 42
Fitness: max 0.923(15), min 0.846(1), ave 0.918
Test execution time: sum 1419 ms, max 120 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 03:46:37 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-03 03:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 27 seconds
Variants: generated 100, build-succeeded 23, build-failed 33, syntax-invalid 15, redundant 29
Fitness: max 1(1), min 0.846(3), ave 0.916
Test execution time: sum 182019 ms, max 180092 ms, min 71 ms
----------------------------------------------------------------

2023-08-03 03:49:40 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-03 03:49:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 31 seconds
Variants: generated 100, build-succeeded 32, build-failed 30, syntax-invalid 15, redundant 23
Fitness: max 0.923(29), min 0.846(3), ave 0.916
Test execution time: sum 2865 ms, max 111 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 03:49:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-03 03:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 35 seconds
Variants: generated 100, build-succeeded 32, build-failed 37, syntax-invalid 5, redundant 26
Fitness: max 0.923(30), min 0.462(1), ave 0.906
Test execution time: sum 2903 ms, max 120 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 03:49:49 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-03 03:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 39 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 10, redundant 26
Fitness: max 0.923(22), min 0.462(1), ave 0.893
Test execution time: sum 2551 ms, max 108 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 03:49:53 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-03 03:49:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 43 seconds
Variants: generated 100, build-succeeded 28, build-failed 34, syntax-invalid 12, redundant 26
Fitness: max 0.923(27), min 0.846(1), ave 0.92
Test execution time: sum 2502 ms, max 113 ms, min 78 ms
----------------------------------------------------------------

2023-08-03 03:49:57 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-03 03:50:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 47 seconds
Variants: generated 100, build-succeeded 29, build-failed 33, syntax-invalid 18, redundant 20
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 2678 ms, max 136 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 03:50:01 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-03 03:50:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 50 seconds
Variants: generated 100, build-succeeded 22, build-failed 36, syntax-invalid 17, redundant 25
Fitness: max 0.923(19), min 0.462(1), ave 0.895
Test execution time: sum 1997 ms, max 124 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 03:50:04 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-03 03:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 54 seconds
Variants: generated 100, build-succeeded 32, build-failed 34, syntax-invalid 16, redundant 18
Fitness: max 1(2), min 0.385(1), ave 0.911
Test execution time: sum 2851 ms, max 110 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 03:50:08 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-03 03:53:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 seconds
Variants: generated 100, build-succeeded 24, build-failed 35, syntax-invalid 10, redundant 31
Fitness: max 0.923(22), min 0.846(2), ave 0.917
Test execution time: sum 182108 ms, max 180094 ms, min 77 ms
----------------------------------------------------------------

2023-08-03 03:53:11 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-03 03:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 1 seconds
Variants: generated 100, build-succeeded 21, build-failed 32, syntax-invalid 22, redundant 25
Fitness: max 1(4), min 0.923(17), ave 0.938
Test execution time: sum 1842 ms, max 111 ms, min 71 ms
----------------------------------------------------------------

2023-08-03 03:53:14 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-03 03:53:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 4 seconds
Variants: generated 100, build-succeeded 26, build-failed 40, syntax-invalid 11, redundant 23
Fitness: max 0.923(26), min 0.923(26), ave 0.923
Test execution time: sum 2313 ms, max 114 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 03:53:18 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-03 03:53:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 8 seconds
Variants: generated 100, build-succeeded 24, build-failed 40, syntax-invalid 9, redundant 27
Fitness: max 1(2), min 0.923(22), ave 0.929
Test execution time: sum 2111 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 03:53:22 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-03 03:56:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 12 seconds
Variants: generated 100, build-succeeded 29, build-failed 41, syntax-invalid 13, redundant 17
Fitness: max 0.923(28), min 0.846(1), ave 0.92
Test execution time: sum 182606 ms, max 180096 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 03:56:25 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-03 03:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 51 seconds
Variants: generated 100, build-succeeded 30, build-failed 39, syntax-invalid 16, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 98155 ms, max 95566 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 03:58:05 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-03 03:58:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 55 seconds
Variants: generated 100, build-succeeded 24, build-failed 38, syntax-invalid 22, redundant 16
Fitness: max 1(1), min 0.923(23), ave 0.926
Test execution time: sum 2125 ms, max 116 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 03:58:08 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-03 04:04:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 58 seconds
Variants: generated 100, build-succeeded 26, build-failed 35, syntax-invalid 19, redundant 20
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 362306 ms, max 360083 ms, min 72 ms
----------------------------------------------------------------

2023-08-03 04:04:12 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-03 04:04:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 1 seconds
Variants: generated 100, build-succeeded 15, build-failed 41, syntax-invalid 25, redundant 19
Fitness: max 0.923(13), min 0.846(2), ave 0.913
Test execution time: sum 1342 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:04:15 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-03 04:04:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 5 seconds
Variants: generated 100, build-succeeded 27, build-failed 34, syntax-invalid 10, redundant 29
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2397 ms, max 118 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:04:18 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-03 04:04:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 8 seconds
Variants: generated 100, build-succeeded 25, build-failed 45, syntax-invalid 13, redundant 17
Fitness: max 0.923(25), min 0.923(25), ave 0.923
Test execution time: sum 2236 ms, max 111 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 04:04:22 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-03 04:04:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 12 seconds
Variants: generated 100, build-succeeded 24, build-failed 45, syntax-invalid 10, redundant 21
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 2222 ms, max 113 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:04:26 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-03 04:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 16 seconds
Variants: generated 100, build-succeeded 25, build-failed 35, syntax-invalid 27, redundant 13
Fitness: max 1(1), min 0.846(3), ave 0.917
Test execution time: sum 182292 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 04:07:29 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-03 04:07:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 20 seconds
Variants: generated 100, build-succeeded 33, build-failed 40, syntax-invalid 13, redundant 14
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 3053 ms, max 117 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 04:07:34 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-03 04:16:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 24 seconds
Variants: generated 100, build-succeeded 30, build-failed 34, syntax-invalid 17, redundant 19
Fitness: max 1(1), min 0.846(4), ave 0.915
Test execution time: sum 542735 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 04:16:38 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-03 04:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 29 seconds
Variants: generated 100, build-succeeded 36, build-failed 39, syntax-invalid 15, redundant 10
Fitness: max 1(2), min 0.923(34), ave 0.927
Test execution time: sum 3259 ms, max 112 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 04:16:43 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-03 04:16:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 33 seconds
Variants: generated 100, build-succeeded 25, build-failed 45, syntax-invalid 16, redundant 14
Fitness: max 0.923(25), min 0.923(25), ave 0.923
Test execution time: sum 2227 ms, max 125 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:16:47 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-03 04:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 38 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 543500 ms, max 360095 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:25:52 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-03 04:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 42 seconds
Variants: generated 100, build-succeeded 30, build-failed 39, syntax-invalid 16, redundant 15
Fitness: max 0.923(30), min 0.923(30), ave 0.923
Test execution time: sum 2743 ms, max 120 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 04:25:56 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-03 04:25:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 46 seconds
Variants: generated 100, build-succeeded 24, build-failed 35, syntax-invalid 25, redundant 16
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 2183 ms, max 121 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:25:59 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-03 04:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 18, redundant 11
Fitness: max 1(2), min 0.846(4), ave 0.919
Test execution time: sum 438264 ms, max 180085 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:33:19 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-03 04:33:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 10 seconds
Variants: generated 100, build-succeeded 34, build-failed 46, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0.923(33), ave 0.925
Test execution time: sum 2992 ms, max 109 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:33:24 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-03 04:33:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 13 seconds
Variants: generated 100, build-succeeded 19, build-failed 42, syntax-invalid 29, redundant 10
Fitness: max 0.923(19), min 0.923(19), ave 0.923
Test execution time: sum 1687 ms, max 120 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 04:33:27 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-03 04:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 17 seconds
Variants: generated 100, build-succeeded 29, build-failed 43, syntax-invalid 20, redundant 8
Fitness: max 0.923(28), min 0.846(1), ave 0.92
Test execution time: sum 2596 ms, max 125 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 04:33:31 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-03 04:33:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 22 seconds
Variants: generated 100, build-succeeded 30, build-failed 41, syntax-invalid 17, redundant 12
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 2678 ms, max 114 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 04:33:35 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-03 04:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 25 seconds
Variants: generated 100, build-succeeded 22, build-failed 44, syntax-invalid 25, redundant 9
Fitness: max 1(2), min 0.846(1), ave 0.927
Test execution time: sum 181976 ms, max 180086 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 04:36:39 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-03 04:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 30 seconds
Variants: generated 100, build-succeeded 35, build-failed 36, syntax-invalid 18, redundant 11
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 183123 ms, max 180085 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 04:39:43 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-03 04:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 35 seconds
Variants: generated 100, build-succeeded 37, build-failed 38, syntax-invalid 13, redundant 12
Fitness: max 1(2), min 0.923(35), ave 0.927
Test execution time: sum 3330 ms, max 119 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:39:48 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-03 04:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 19 seconds
Variants: generated 100, build-succeeded 34, build-failed 41, syntax-invalid 15, redundant 10
Fitness: max 0.923(30), min 0.846(4), ave 0.914
Test execution time: sum 402843 ms, max 180086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:46:33 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-03 04:49:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 24 seconds
Variants: generated 100, build-succeeded 33, build-failed 42, syntax-invalid 20, redundant 5
Fitness: max 0.923(30), min 0.385(1), ave 0.902
Test execution time: sum 182989 ms, max 180085 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:49:37 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-03 04:49:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 28 seconds
Variants: generated 100, build-succeeded 30, build-failed 36, syntax-invalid 21, redundant 13
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 2698 ms, max 116 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:49:41 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-03 04:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 33 seconds
Variants: generated 100, build-succeeded 34, build-failed 39, syntax-invalid 15, redundant 12
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 3038 ms, max 119 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 04:49:46 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-03 04:49:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 37 seconds
Variants: generated 100, build-succeeded 34, build-failed 36, syntax-invalid 20, redundant 10
Fitness: max 1(1), min 0.923(33), ave 0.925
Test execution time: sum 3102 ms, max 116 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 04:49:51 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-03 04:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 32 seconds
Variants: generated 100, build-succeeded 33, build-failed 40, syntax-invalid 13, redundant 14
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 293285 ms, max 180087 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 04:54:46 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-03 04:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 37 seconds
Variants: generated 100, build-succeeded 36, build-failed 41, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3279 ms, max 122 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 04:54:51 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-03 05:00:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 41 seconds
Variants: generated 100, build-succeeded 28, build-failed 40, syntax-invalid 19, redundant 13
Fitness: max 0.923(26), min 0.846(2), ave 0.918
Test execution time: sum 362504 ms, max 180086 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 05:00:55 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-03 05:01:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 46 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 17, redundant 9
Fitness: max 1(6), min 0.923(31), ave 0.936
Test execution time: sum 3370 ms, max 115 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 05:01:00 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-03 05:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 50 seconds
Variants: generated 100, build-succeeded 27, build-failed 40, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.462(1), ave 0.9
Test execution time: sum 1082398 ms, max 360086 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 05:19:04 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-03 05:23:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 45 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 16, redundant 9
Fitness: max 0.923(39), min 0.846(3), ave 0.918
Test execution time: sum 293675 ms, max 180087 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 05:23:59 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-03 05:24:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 50 seconds
Variants: generated 100, build-succeeded 31, build-failed 42, syntax-invalid 16, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2845 ms, max 118 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 05:24:03 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-03 05:27:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 55 seconds
Variants: generated 100, build-succeeded 33, build-failed 39, syntax-invalid 21, redundant 7
Fitness: max 1(1), min 0.462(1), ave 0.909
Test execution time: sum 183110 ms, max 180089 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 05:27:08 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-03 05:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 59 seconds
Variants: generated 100, build-succeeded 32, build-failed 41, syntax-invalid 19, redundant 8
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 2955 ms, max 114 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 05:27:13 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-03 05:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 4 seconds
Variants: generated 100, build-succeeded 34, build-failed 50, syntax-invalid 14, redundant 2
Fitness: max 0.923(33), min 0.385(1), ave 0.907
Test execution time: sum 3130 ms, max 163 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 05:27:18 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-03 05:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 9 seconds
Variants: generated 100, build-succeeded 34, build-failed 39, syntax-invalid 21, redundant 6
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 363078 ms, max 360087 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 05:33:23 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-03 05:39:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 13 seconds
Variants: generated 100, build-succeeded 28, build-failed 37, syntax-invalid 27, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 362512 ms, max 360085 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 05:39:27 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-03 05:42:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 18 seconds
Variants: generated 100, build-succeeded 28, build-failed 47, syntax-invalid 21, redundant 4
Fitness: max 1(1), min 0.846(3), ave 0.918
Test execution time: sum 182465 ms, max 180088 ms, min 70 ms
----------------------------------------------------------------

2023-08-03 05:42:31 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-03 05:48:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 56 minutes 22 seconds
Variants: generated 100, build-succeeded 30, build-failed 40, syntax-invalid 22, redundant 8
Fitness: max 1(4), min 0.846(1), ave 0.931
Test execution time: sum 362656 ms, max 360081 ms, min 83 ms
----------------------------------------------------------------

2023-08-03 05:48:36 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-03 05:54:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 26 seconds
Variants: generated 100, build-succeeded 23, build-failed 48, syntax-invalid 23, redundant 6
Fitness: max 0.923(21), min 0.846(2), ave 0.916
Test execution time: sum 362047 ms, max 360085 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 05:54:40 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-03 06:03:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 31 seconds
Variants: generated 100, build-succeeded 34, build-failed 40, syntax-invalid 18, redundant 8
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 543149 ms, max 360083 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 06:03:45 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-03 06:03:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 11 minutes 35 seconds
Variants: generated 100, build-succeeded 26, build-failed 38, syntax-invalid 27, redundant 9
Fitness: max 0.923(26), min 0.923(26), ave 0.923
Test execution time: sum 2338 ms, max 117 ms, min 74 ms
----------------------------------------------------------------

2023-08-03 06:03:49 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-03 06:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 40 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 25, redundant 6
Fitness: max 1(1), min 0.769(1), ave 0.921
Test execution time: sum 183175 ms, max 180094 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 06:06:54 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-03 06:06:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 44 seconds
Variants: generated 100, build-succeeded 25, build-failed 49, syntax-invalid 18, redundant 8
Fitness: max 0.923(24), min 0.846(1), ave 0.92
Test execution time: sum 2226 ms, max 123 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 06:06:58 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-03 06:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 49 seconds
Variants: generated 100, build-succeeded 39, build-failed 42, syntax-invalid 14, redundant 5
Fitness: max 0.923(39), min 0.923(39), ave 0.923
Test execution time: sum 3591 ms, max 152 ms, min 79 ms
----------------------------------------------------------------

2023-08-03 06:07:03 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-03 06:07:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 54 seconds
Variants: generated 100, build-succeeded 28, build-failed 38, syntax-invalid 31, redundant 3
Fitness: max 0.923(27), min 0.846(1), ave 0.92
Test execution time: sum 2627 ms, max 130 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 06:07:07 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-03 06:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 14 minutes 58 seconds
Variants: generated 100, build-succeeded 27, build-failed 39, syntax-invalid 29, redundant 5
Fitness: max 0.923(27), min 0.923(27), ave 0.923
Test execution time: sum 2500 ms, max 128 ms, min 73 ms
----------------------------------------------------------------

2023-08-03 06:07:12 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-03 06:13:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 2 seconds
Variants: generated 100, build-succeeded 27, build-failed 36, syntax-invalid 28, redundant 9
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 362448 ms, max 360086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 06:13:16 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-03 06:16:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 6 seconds
Variants: generated 100, build-succeeded 28, build-failed 40, syntax-invalid 25, redundant 7
Fitness: max 0.923(27), min 0.846(1), ave 0.92
Test execution time: sum 182535 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 06:16:20 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-03 06:19:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 11 seconds
Variants: generated 100, build-succeeded 28, build-failed 39, syntax-invalid 27, redundant 6
Fitness: max 0.923(27), min 0.846(1), ave 0.92
Test execution time: sum 182489 ms, max 180085 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 06:19:24 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-03 06:19:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 15 seconds
Variants: generated 100, build-succeeded 25, build-failed 37, syntax-invalid 31, redundant 7
Fitness: max 0.923(23), min 0.846(2), ave 0.917
Test execution time: sum 2268 ms, max 140 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 06:19:28 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-03 06:28:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 19 seconds
Variants: generated 100, build-succeeded 26, build-failed 42, syntax-invalid 30, redundant 2
Fitness: max 1(1), min 0.769(1), ave 0.914
Test execution time: sum 542357 ms, max 360087 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 06:28:32 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-03 06:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 36 minutes 23 seconds
Variants: generated 100, build-succeeded 29, build-failed 39, syntax-invalid 27, redundant 5
Fitness: max 0.923(28), min 0.846(1), ave 0.92
Test execution time: sum 2647 ms, max 119 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 06:28:37 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-03 06:31:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 28 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 25, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183049 ms, max 180089 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 06:31:41 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-03 06:31:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 31 seconds
Variants: generated 100, build-succeeded 20, build-failed 40, syntax-invalid 32, redundant 8
Fitness: max 0.923(19), min 0.846(1), ave 0.919
Test execution time: sum 1803 ms, max 132 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 06:31:45 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-03 06:31:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 35 seconds
Variants: generated 100, build-succeeded 25, build-failed 38, syntax-invalid 32, redundant 5
Fitness: max 1(1), min 0.923(24), ave 0.926
Test execution time: sum 2318 ms, max 153 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 06:31:49 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-03 06:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 54 seconds
Variants: generated 100, build-succeeded 21, build-failed 44, syntax-invalid 24, redundant 11
Fitness: max 1(1), min 0.846(2), ave 0.919
Test execution time: sum 316792 ms, max 180086 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 06:37:08 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-03 06:49:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 59 seconds
Variants: generated 100, build-succeeded 32, build-failed 32, syntax-invalid 28, redundant 8
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 722910 ms, max 360085 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 06:49:12 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-03 06:52:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 seconds
Variants: generated 100, build-succeeded 21, build-failed 40, syntax-invalid 31, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 181888 ms, max 180086 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 06:52:16 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-03 06:52:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 7 seconds
Variants: generated 100, build-succeeded 26, build-failed 37, syntax-invalid 32, redundant 5
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 2423 ms, max 121 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 06:52:20 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-03 06:52:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 11 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 25, redundant 9
Fitness: max 0.923(29), min 0.846(2), ave 0.918
Test execution time: sum 2864 ms, max 115 ms, min 80 ms
----------------------------------------------------------------

2023-08-03 06:52:25 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-03 07:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 16 seconds
Variants: generated 100, build-succeeded 35, build-failed 36, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 723226 ms, max 360083 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 07:04:30 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-03 07:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 21 seconds
Variants: generated 100, build-succeeded 28, build-failed 40, syntax-invalid 26, redundant 6
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 362669 ms, max 360116 ms, min 81 ms
----------------------------------------------------------------

2023-08-03 07:10:34 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-03 07:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 26 seconds
Variants: generated 100, build-succeeded 32, build-failed 45, syntax-invalid 18, redundant 5
Fitness: max 0.923(31), min 0.846(1), ave 0.921
Test execution time: sum 2986 ms, max 122 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 07:10:39 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-03 07:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 30 seconds
Variants: generated 100, build-succeeded 29, build-failed 44, syntax-invalid 25, redundant 2
Fitness: max 0.923(27), min 0.385(1), ave 0.902
Test execution time: sum 182754 ms, max 180093 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 07:13:44 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-03 07:19:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 27 minutes 35 seconds
Variants: generated 100, build-succeeded 32, build-failed 39, syntax-invalid 21, redundant 8
Fitness: max 0.923(30), min 0.538(1), ave 0.909
Test execution time: sum 362970 ms, max 360086 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 07:19:49 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-03 07:25:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 40 seconds
Variants: generated 100, build-succeeded 34, build-failed 44, syntax-invalid 19, redundant 3
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 363074 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 07:25:54 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-03 07:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 47 seconds
Variants: generated 100, build-succeeded 46, build-failed 39, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4292 ms, max 130 ms, min 82 ms
----------------------------------------------------------------

2023-08-03 07:26:00 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-03 07:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 52 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 16, redundant 9
Fitness: max 0.923(40), min 0.846(3), ave 0.918
Test execution time: sum 4014 ms, max 147 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 07:26:06 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-03 07:26:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 58 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 21, redundant 9
Fitness: max 1(2), min 0.462(1), ave 0.915
Test execution time: sum 3503 ms, max 119 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 07:26:11 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-03 07:32:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 40 minutes 3 seconds
Variants: generated 100, build-succeeded 35, build-failed 32, syntax-invalid 26, redundant 7
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363242 ms, max 360083 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 07:32:16 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-03 07:34:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 41 minutes 56 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 18, redundant 2
Fitness: max 1(1), min 0.462(1), ave 0.911
Test execution time: sum 111076 ms, max 107037 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 07:34:09 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-03 07:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 1 seconds
Variants: generated 100, build-succeeded 32, build-failed 39, syntax-invalid 23, redundant 6
Fitness: max 1(1), min 0.923(31), ave 0.925
Test execution time: sum 3060 ms, max 121 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 07:34:14 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-03 07:34:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 6 seconds
Variants: generated 100, build-succeeded 35, build-failed 31, syntax-invalid 26, redundant 8
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3332 ms, max 117 ms, min 86 ms
----------------------------------------------------------------

2023-08-03 07:34:19 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-03 07:34:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 42 minutes 12 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 18, redundant 2
Fitness: max 1(3), min 0.846(2), ave 0.925
Test execution time: sum 4731 ms, max 124 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 07:34:26 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-03 07:37:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 18 seconds
Variants: generated 100, build-succeeded 35, build-failed 31, syntax-invalid 30, redundant 4
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 183404 ms, max 180089 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 07:37:31 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-03 07:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 45 minutes 23 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 29, redundant 3
Fitness: max 0.923(32), min 0.846(1), ave 0.921
Test execution time: sum 3153 ms, max 126 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 07:37:36 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-03 07:40:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 29 seconds
Variants: generated 100, build-succeeded 41, build-failed 38, syntax-invalid 19, redundant 2
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183870 ms, max 180090 ms, min 87 ms
----------------------------------------------------------------

2023-08-03 07:40:42 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-03 07:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 35 seconds
Variants: generated 100, build-succeeded 39, build-failed 37, syntax-invalid 20, redundant 4
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3654 ms, max 123 ms, min 75 ms
----------------------------------------------------------------

2023-08-03 07:40:48 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-03 07:43:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 40 seconds
Variants: generated 100, build-succeeded 37, build-failed 34, syntax-invalid 21, redundant 8
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 183457 ms, max 180094 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 07:43:53 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-03 07:43:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 45 seconds
Variants: generated 100, build-succeeded 35, build-failed 39, syntax-invalid 21, redundant 5
Fitness: max 1(2), min 0.615(1), ave 0.916
Test execution time: sum 3364 ms, max 125 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 07:43:59 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-03 07:43:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 46 seconds
Variants: generated 3, build-succeeded 2, build-failed 0, syntax-invalid 1, redundant 0
Fitness: max 1(1), min 0.923(1), ave 0.962
Test execution time: sum 184 ms, max 96 ms, min 88 ms
----------------------------------------------------------------

2023-08-03 07:43:59 [main] [INFO]  KGenProgMain - GA stopped
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v114)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v114)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v114)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v133)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v133)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v410)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v410)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v410)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v440)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v440)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v440)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v440)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x < 0) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v646)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v646)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            numIterations++;
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x < 0) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v908)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v908)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v908)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v908)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v908)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = (x2 - x1);
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:43:59 [main] [INFO]  PatchLogExporter - patch (v1449)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,13 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1635)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1635)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1635)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1635)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1635)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1816)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1817)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1817)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1817)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v1828)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2024)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2024)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2024)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2024)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2024)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2031)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2216)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2216)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2216)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2216)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2216)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2312)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2312)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2312)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2312)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2312)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,13 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2413)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2620)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2620)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2620)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2620)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2816)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2816)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2816)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2816)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -191,17 +192,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            i++;
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2839)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v2913)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3131)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,13 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3131)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3246)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3246)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3246)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3246)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3246)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3447)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3647)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3647)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3723)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,13 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v3821)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4233)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,13 +164,14 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4233)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4402)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4402)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4402)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4402)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4432)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4804)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +161,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4804)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4804)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4826)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v4933)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5002)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5009)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5045)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,8 +116,8 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5135)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5304)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5313)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -183,7 +183,8 @@
         double b = initial;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5318)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5333)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5333)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5333)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5333)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5333)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5343)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5424)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5628)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5728)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5728)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5728)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5728)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5728)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +161,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5801)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:00 [main] [INFO]  PatchLogExporter - patch (v5837)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6006)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6018)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6018)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,14 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +199,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6018)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6037)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,8 +116,8 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6212)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,9 +179,10 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
-        double fa;
+		double fa;
         double fb;
         int numIterations = 0 ;
     
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6301)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,11 +179,14 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
-        int numIterations = 0 ;
+        int i = 0;
+		int numIterations = 0 ;
     
         do {
             a = Math.max(a - 1.0, lowerBound);
@@ -196,12 +199,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6303)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -187,6 +187,7 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
+			double fmin;
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6327)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -179,7 +179,8 @@
                   "invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
                   lowerBound, initial, upperBound);
         }
-        double a = initial;
+        int iterationCount = 0;
+		double a = initial;
         double b = initial;
         double fa;
         double fb;
@@ -187,6 +188,7 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
+			double fmin;
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +116,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +163,10 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6547)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v6741)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7213)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +116,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.POSITIVE_INFINITY;
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7621)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v7843)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8015)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8128)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -223,7 +223,7 @@
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8220)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8244)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8329)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,10 +220,11 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -223,7 +223,7 @@
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +161,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v8747)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +115,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,15 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9243)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -117,7 +116,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9440)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -223,7 +223,7 @@
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9501)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,8 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9521)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9633)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +161,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9633)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9633)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9633)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,10 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +199,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.distribution.AbstractDistribution
+++ org.apache.commons.math.distribution.AbstractDistribution
@@ -36,7 +36,6 @@
      * Default constructor.
      */
     protected AbstractDistribution() {
-        super();
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +162,10 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,8 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9810)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -223,7 +223,7 @@
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -163,7 +162,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,9 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9934)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,10 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,9 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +198,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9935)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,8 +220,9 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -103,7 +102,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -117,7 +115,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,8 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -117,7 +116,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -188,20 +189,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10012)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,8 +222,9 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -188,7 +189,11 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +201,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10207)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -188,20 +189,16 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -82,7 +82,8 @@
      * @return a message string
      */
     private static String buildMessage(Locale locale, String pattern, Object ... arguments) {
-        return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
+        ResourceBundle bundle = ResourceBundle.getBundle("org.apache.commons.math.MessagesResources", locale);
+		return (pattern == null) ? "" : new MessageFormat(translate(pattern, locale), locale).format(arguments);        
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -188,20 +189,16 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            double g = 607.0 / 128.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10318)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			return ret;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -181,6 +181,7 @@
         }
         double a = initial;
         double b = initial;
+		double ret = Double.NaN;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -188,7 +189,11 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +201,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,13 +164,14 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,9 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10537)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,9 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -79,6 +79,7 @@
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
+		double ret;
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,20 +188,14 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10547)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -222,6 +222,7 @@
             ret = getMean() - getStandardDeviation();
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
+			double[] bracket = null;
         } else {
             ret = getMean();
         }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
@@ -163,7 +164,8 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        printStackTrace(System.err);
+		return buildMessage(locale, pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,7 +188,10 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
-            fa = function.value(a);
+            fb = function.value(b);
+			fb = function.value(b);
+			fb = function.value(b);
+			fa = function.value(a);
             
             fb = function.value(b);
             numIterations++ ;
@@ -196,12 +199,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -88,7 +88,7 @@
     public static double logGamma(double x) {
         double ret;
 
-        if (Double.isNaN(x) || (x <= 0.0)) {
+        if (x > 0 && x <= S_LIMIT) {
             ret = Double.NaN;
         } else {
             double g = 607.0 / 128.0;
@@ -178,7 +178,7 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                return 1.0;
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 07:44:01 [main] [INFO]  PatchLogExporter - patch (v10603)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -223,7 +223,7 @@
         } else if (p > .5) {
             ret = getMean() + getStandardDeviation();
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-03 07:44:03 [main] [INFO]  KGenProgMain - Summary
Reached generation = 108
Generated variants = 10603
Syntax valid variants = 8526
Build succeeded variants = 3114
Time elapsed = 6 hours 51 minutes 50 seconds
Exit status = SUCCESS
