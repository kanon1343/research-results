2023-08-04 04:59:52 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-04 04:59:52 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-04 04:59:52 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-04 04:59:52 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 9 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-04 05:00:00 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-04 05:00:00 [main] [INFO]  KGenProgMain - GA started
2023-08-04 05:00:00 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-04 05:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 2 seconds
Variants: generated 50, build-succeeded 8, build-failed 29, syntax-invalid 7, redundant 6
Fitness: max 0.923(6), min 0.462(1), ave 0.856
Test execution time: sum 360969 ms, max 360114 ms, min 101 ms
----------------------------------------------------------------

2023-08-04 05:06:02 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-04 05:06:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 3 seconds
Variants: generated 50, build-succeeded 4, build-failed 37, syntax-invalid 1, redundant 8
Fitness: max 0.923(4), min 0.923(4), ave 0.923
Test execution time: sum 370 ms, max 98 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:06:04 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-04 05:06:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 5 seconds
Variants: generated 100, build-succeeded 7, build-failed 35, syntax-invalid 14, redundant 44
Fitness: max 0.923(6), min 0.462(1), ave 0.857
Test execution time: sum 654 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-08-04 05:06:05 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-04 05:20:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 29 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 12, redundant 50
Fitness: max 0.923(4), min 0.462(6), ave 0.664
Test execution time: sum 863642 ms, max 360068 ms, min 70 ms
----------------------------------------------------------------

2023-08-04 05:20:30 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-04 05:20:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 31 seconds
Variants: generated 100, build-succeeded 7, build-failed 36, syntax-invalid 14, redundant 43
Fitness: max 1(1), min 0.462(2), ave 0.791
Test execution time: sum 619 ms, max 107 ms, min 71 ms
----------------------------------------------------------------

2023-08-04 05:20:32 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-04 05:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 33 seconds
Variants: generated 100, build-succeeded 15, build-failed 31, syntax-invalid 15, redundant 39
Fitness: max 1(1), min 0.846(4), ave 0.908
Test execution time: sum 1372 ms, max 114 ms, min 82 ms
----------------------------------------------------------------

2023-08-04 05:20:34 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-04 05:20:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 36 seconds
Variants: generated 100, build-succeeded 16, build-failed 28, syntax-invalid 19, redundant 37
Fitness: max 1(2), min 0.846(1), ave 0.928
Test execution time: sum 1417 ms, max 104 ms, min 77 ms
----------------------------------------------------------------

2023-08-04 05:20:36 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-04 05:20:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 38 seconds
Variants: generated 100, build-succeeded 17, build-failed 24, syntax-invalid 18, redundant 41
Fitness: max 0.923(16), min 0.846(1), ave 0.919
Test execution time: sum 1542 ms, max 106 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 05:20:39 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-04 05:23:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 41 seconds
Variants: generated 100, build-succeeded 18, build-failed 32, syntax-invalid 10, redundant 40
Fitness: max 1(1), min 0.462(1), ave 0.897
Test execution time: sum 181600 ms, max 180084 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:23:41 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-04 05:23:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 43 seconds
Variants: generated 100, build-succeeded 18, build-failed 35, syntax-invalid 17, redundant 30
Fitness: max 0.923(16), min 0.846(2), ave 0.915
Test execution time: sum 1610 ms, max 112 ms, min 71 ms
----------------------------------------------------------------

2023-08-04 05:23:44 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-04 05:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 46 seconds
Variants: generated 100, build-succeeded 20, build-failed 32, syntax-invalid 16, redundant 32
Fitness: max 1(2), min 0.923(18), ave 0.931
Test execution time: sum 1818 ms, max 110 ms, min 82 ms
----------------------------------------------------------------

2023-08-04 05:23:47 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-04 05:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 49 seconds
Variants: generated 100, build-succeeded 16, build-failed 26, syntax-invalid 35, redundant 23
Fitness: max 0.923(14), min 0.846(2), ave 0.913
Test execution time: sum 541442 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 05:32:49 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-04 05:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 52 seconds
Variants: generated 100, build-succeeded 21, build-failed 35, syntax-invalid 13, redundant 31
Fitness: max 1(2), min 0.846(1), ave 0.927
Test execution time: sum 1823 ms, max 95 ms, min 77 ms
----------------------------------------------------------------

2023-08-04 05:32:52 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-04 05:38:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 54 seconds
Variants: generated 100, build-succeeded 21, build-failed 30, syntax-invalid 22, redundant 27
Fitness: max 0.923(20), min 0.846(1), ave 0.919
Test execution time: sum 361868 ms, max 360093 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 05:38:55 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-04 05:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 58 seconds
Variants: generated 100, build-succeeded 23, build-failed 30, syntax-invalid 23, redundant 24
Fitness: max 1(2), min 0.846(3), ave 0.92
Test execution time: sum 182033 ms, max 180087 ms, min 70 ms
----------------------------------------------------------------

2023-08-04 05:41:58 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-04 05:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 0 seconds
Variants: generated 100, build-succeeded 14, build-failed 33, syntax-invalid 29, redundant 24
Fitness: max 0.923(13), min 0.846(1), ave 0.918
Test execution time: sum 1216 ms, max 100 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:42:01 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-04 05:42:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 3 seconds
Variants: generated 100, build-succeeded 22, build-failed 28, syntax-invalid 26, redundant 24
Fitness: max 1(3), min 0.846(1), ave 0.93
Test execution time: sum 1947 ms, max 104 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:42:04 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-04 05:48:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 6 seconds
Variants: generated 100, build-succeeded 18, build-failed 27, syntax-invalid 35, redundant 20
Fitness: max 0.923(17), min 0.846(1), ave 0.919
Test execution time: sum 361591 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 05:48:06 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-04 05:51:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 9 seconds
Variants: generated 100, build-succeeded 16, build-failed 33, syntax-invalid 31, redundant 20
Fitness: max 0.923(14), min 0.846(2), ave 0.913
Test execution time: sum 181436 ms, max 180092 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 05:51:09 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-04 05:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 12 seconds
Variants: generated 100, build-succeeded 19, build-failed 36, syntax-invalid 39, redundant 6
Fitness: max 1(1), min 0.462(1), ave 0.887
Test execution time: sum 181713 ms, max 180129 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:54:12 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-04 05:54:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 15 seconds
Variants: generated 100, build-succeeded 27, build-failed 28, syntax-invalid 28, redundant 17
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 2435 ms, max 120 ms, min 82 ms
----------------------------------------------------------------

2023-08-04 05:54:16 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-04 05:54:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 19 seconds
Variants: generated 100, build-succeeded 29, build-failed 27, syntax-invalid 29, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2565 ms, max 105 ms, min 73 ms
----------------------------------------------------------------

2023-08-04 05:54:20 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-04 05:54:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 23 seconds
Variants: generated 100, build-succeeded 34, build-failed 26, syntax-invalid 27, redundant 13
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3036 ms, max 113 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 05:54:24 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-04 06:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 38, redundant 8
Fitness: max 1(1), min 0.462(1), ave 0.903
Test execution time: sum 362086 ms, max 360085 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 06:00:27 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-04 06:24:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 30 seconds
Variants: generated 100, build-succeeded 21, build-failed 38, syntax-invalid 31, redundant 10
Fitness: max 1(1), min 0.385(1), ave 0.901
Test execution time: sum 1441924 ms, max 1440067 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 06:24:31 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-04 06:27:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 34 seconds
Variants: generated 100, build-succeeded 25, build-failed 29, syntax-invalid 35, redundant 11
Fitness: max 0.923(23), min 0.769(1), ave 0.914
Test execution time: sum 182249 ms, max 180087 ms, min 78 ms
----------------------------------------------------------------

2023-08-04 06:27:34 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-04 06:30:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 36 seconds
Variants: generated 100, build-succeeded 15, build-failed 32, syntax-invalid 41, redundant 12
Fitness: max 0.923(14), min 0.846(1), ave 0.918
Test execution time: sum 181296 ms, max 180085 ms, min 82 ms
----------------------------------------------------------------

2023-08-04 06:30:37 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-04 06:30:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 39 seconds
Variants: generated 100, build-succeeded 19, build-failed 36, syntax-invalid 35, redundant 10
Fitness: max 1(1), min 0.923(18), ave 0.927
Test execution time: sum 1693 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 06:30:40 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-04 06:30:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 42 seconds
Variants: generated 100, build-succeeded 18, build-failed 39, syntax-invalid 33, redundant 10
Fitness: max 1(1), min 0.846(2), ave 0.919
Test execution time: sum 1635 ms, max 127 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 06:30:43 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-04 06:36:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 46 seconds
Variants: generated 100, build-succeeded 29, build-failed 28, syntax-invalid 33, redundant 10
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 362597 ms, max 360083 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 06:36:47 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-04 06:48:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 50 seconds
Variants: generated 100, build-succeeded 22, build-failed 43, syntax-invalid 27, redundant 8
Fitness: max 1(3), min 0.462(1), ave 0.906
Test execution time: sum 721996 ms, max 360085 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 06:48:51 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-04 06:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 53 seconds
Variants: generated 100, build-succeeded 24, build-failed 37, syntax-invalid 29, redundant 10
Fitness: max 0.923(22), min 0.846(2), ave 0.917
Test execution time: sum 2159 ms, max 115 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 06:48:54 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-04 06:50:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 48 seconds
Variants: generated 100, build-succeeded 28, build-failed 37, syntax-invalid 24, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 112695 ms, max 110296 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 06:50:48 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-04 06:50:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 52 seconds
Variants: generated 100, build-succeeded 27, build-failed 38, syntax-invalid 27, redundant 8
Fitness: max 1(1), min 0.923(26), ave 0.926
Test execution time: sum 2428 ms, max 127 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 06:50:52 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-04 06:50:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 56 seconds
Variants: generated 100, build-succeeded 30, build-failed 38, syntax-invalid 24, redundant 8
Fitness: max 0.923(29), min 0.846(1), ave 0.921
Test execution time: sum 2738 ms, max 113 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 06:50:57 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-04 06:54:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 59 seconds
Variants: generated 100, build-succeeded 20, build-failed 31, syntax-invalid 33, redundant 16
Fitness: max 1(1), min 0.462(1), ave 0.9
Test execution time: sum 181816 ms, max 180085 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 06:54:00 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-04 06:55:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 52 seconds
Variants: generated 100, build-succeeded 21, build-failed 40, syntax-invalid 32, redundant 7
Fitness: max 1(1), min 0.462(1), ave 0.894
Test execution time: sum 112099 ms, max 110346 ms, min 69 ms
----------------------------------------------------------------

2023-08-04 06:55:53 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-04 06:58:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 57 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 20, redundant 11
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183197 ms, max 180085 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 06:58:58 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-04 06:59:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 0 seconds
Variants: generated 100, build-succeeded 20, build-failed 40, syntax-invalid 26, redundant 14
Fitness: max 0.923(20), min 0.923(20), ave 0.923
Test execution time: sum 1807 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 06:59:01 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-04 06:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 4 seconds
Variants: generated 100, build-succeeded 20, build-failed 37, syntax-invalid 36, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 1833 ms, max 134 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 06:59:04 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-04 06:59:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 8 seconds
Variants: generated 100, build-succeeded 26, build-failed 35, syntax-invalid 28, redundant 11
Fitness: max 0.923(25), min 0.846(1), ave 0.92
Test execution time: sum 2348 ms, max 107 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 06:59:08 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-04 07:05:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 11 seconds
Variants: generated 100, build-succeeded 26, build-failed 38, syntax-invalid 28, redundant 8
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 362355 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:05:12 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-04 07:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 15 seconds
Variants: generated 100, build-succeeded 27, build-failed 37, syntax-invalid 26, redundant 10
Fitness: max 1(2), min 0.923(25), ave 0.929
Test execution time: sum 2414 ms, max 130 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:05:16 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-04 07:06:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 30 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 25, redundant 9
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 73765 ms, max 70815 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 07:06:31 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-04 07:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 34 seconds
Variants: generated 100, build-succeeded 27, build-failed 34, syntax-invalid 28, redundant 11
Fitness: max 0.923(26), min 0.846(1), ave 0.92
Test execution time: sum 2429 ms, max 116 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:06:35 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-04 07:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 39 seconds
Variants: generated 100, build-succeeded 31, build-failed 33, syntax-invalid 27, redundant 9
Fitness: max 1(1), min 0.923(30), ave 0.926
Test execution time: sum 2769 ms, max 111 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:06:39 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-04 07:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 42 seconds
Variants: generated 100, build-succeeded 24, build-failed 36, syntax-invalid 33, redundant 7
Fitness: max 0.923(24), min 0.923(24), ave 0.923
Test execution time: sum 2168 ms, max 136 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 07:06:43 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-04 07:06:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 46 seconds
Variants: generated 100, build-succeeded 27, build-failed 34, syntax-invalid 28, redundant 11
Fitness: max 1(1), min 0.923(26), ave 0.926
Test execution time: sum 2397 ms, max 106 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:06:47 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-04 07:08:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 5 seconds
Variants: generated 100, build-succeeded 34, build-failed 39, syntax-invalid 22, redundant 5
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 77223 ms, max 74255 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 07:08:06 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-04 07:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 10 seconds
Variants: generated 100, build-succeeded 33, build-failed 28, syntax-invalid 28, redundant 11
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 2895 ms, max 100 ms, min 80 ms
----------------------------------------------------------------

2023-08-04 07:08:10 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-04 07:08:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 14 seconds
Variants: generated 100, build-succeeded 28, build-failed 40, syntax-invalid 27, redundant 5
Fitness: max 0.923(28), min 0.923(28), ave 0.923
Test execution time: sum 2521 ms, max 127 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:08:14 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-04 07:08:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 19 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 19, redundant 6
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 3767 ms, max 115 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:08:20 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-04 07:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 25 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 19, redundant 6
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3992 ms, max 117 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:08:25 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-04 07:08:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 30 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 22, redundant 4
Fitness: max 0.923(36), min 0.846(1), ave 0.921
Test execution time: sum 3372 ms, max 127 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:08:30 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-04 07:08:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 34 seconds
Variants: generated 100, build-succeeded 29, build-failed 36, syntax-invalid 27, redundant 8
Fitness: max 1(1), min 0.923(28), ave 0.926
Test execution time: sum 2606 ms, max 112 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 07:08:35 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-04 07:08:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 39 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 18, redundant 8
Fitness: max 0.923(35), min 0.615(1), ave 0.913
Test execution time: sum 3285 ms, max 110 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 07:08:40 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-04 07:08:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 43 seconds
Variants: generated 100, build-succeeded 26, build-failed 33, syntax-invalid 29, redundant 12
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2288 ms, max 103 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:08:44 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-04 07:08:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 47 seconds
Variants: generated 100, build-succeeded 27, build-failed 34, syntax-invalid 29, redundant 10
Fitness: max 0.923(25), min 0.385(1), ave 0.9
Test execution time: sum 2388 ms, max 115 ms, min 78 ms
----------------------------------------------------------------

2023-08-04 07:08:48 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-04 07:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 52 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 20, redundant 9
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3174 ms, max 104 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:08:52 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-04 07:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 8 minutes 56 seconds
Variants: generated 100, build-succeeded 31, build-failed 44, syntax-invalid 17, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 2827 ms, max 138 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:08:57 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-04 07:09:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 2 seconds
Variants: generated 100, build-succeeded 38, build-failed 34, syntax-invalid 16, redundant 12
Fitness: max 1(1), min 0.923(37), ave 0.925
Test execution time: sum 3415 ms, max 112 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:09:02 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-04 07:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 7 seconds
Variants: generated 100, build-succeeded 39, build-failed 34, syntax-invalid 17, redundant 10
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183487 ms, max 180087 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:12:08 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-04 07:12:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 12 seconds
Variants: generated 100, build-succeeded 38, build-failed 30, syntax-invalid 19, redundant 13
Fitness: max 1(1), min 0.615(1), ave 0.911
Test execution time: sum 3400 ms, max 109 ms, min 80 ms
----------------------------------------------------------------

2023-08-04 07:12:13 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-04 07:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 17 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0.923(37), ave 0.925
Test execution time: sum 3409 ms, max 108 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:12:18 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-04 07:21:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 23 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 10, redundant 16
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 544006 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 07:21:24 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-04 07:21:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 29 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 13, redundant 12
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3754 ms, max 111 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 07:21:29 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-04 07:27:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 34 seconds
Variants: generated 100, build-succeeded 35, build-failed 41, syntax-invalid 13, redundant 11
Fitness: max 0.923(33), min 0.846(2), ave 0.919
Test execution time: sum 363238 ms, max 360087 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 07:27:34 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-04 07:27:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 39 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 10, redundant 16
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3436 ms, max 106 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 07:27:40 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-04 07:30:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 44 seconds
Variants: generated 100, build-succeeded 37, build-failed 28, syntax-invalid 16, redundant 19
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 183454 ms, max 180107 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 07:30:45 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-04 07:42:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 49 seconds
Variants: generated 100, build-succeeded 33, build-failed 34, syntax-invalid 13, redundant 20
Fitness: max 1(2), min 0.846(4), ave 0.918
Test execution time: sum 722925 ms, max 360098 ms, min 81 ms
----------------------------------------------------------------

2023-08-04 07:42:50 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-04 07:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 54 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 10, redundant 28
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 2716 ms, max 120 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 07:42:54 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-04 07:48:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 58 seconds
Variants: generated 100, build-succeeded 26, build-failed 31, syntax-invalid 11, redundant 32
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 362304 ms, max 360086 ms, min 84 ms
----------------------------------------------------------------

2023-08-04 07:48:58 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-04 07:52:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 2 seconds
Variants: generated 100, build-succeeded 23, build-failed 38, syntax-invalid 17, redundant 22
Fitness: max 0.923(22), min 0.846(1), ave 0.92
Test execution time: sum 182088 ms, max 180083 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 07:52:02 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-04 08:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 6 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 15, redundant 27
Fitness: max 0.923(23), min 0.385(1), ave 0.895
Test execution time: sum 542391 ms, max 360068 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 08:01:07 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-04 08:01:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 11 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 14, redundant 20
Fitness: max 1(2), min 0.923(35), ave 0.927
Test execution time: sum 3383 ms, max 142 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 08:01:12 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-04 08:01:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 15 seconds
Variants: generated 100, build-succeeded 26, build-failed 36, syntax-invalid 26, redundant 12
Fitness: max 0.923(26), min 0.923(26), ave 0.923
Test execution time: sum 2374 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:01:16 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-04 08:10:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 19 seconds
Variants: generated 100, build-succeeded 27, build-failed 30, syntax-invalid 18, redundant 25
Fitness: max 0.923(25), min 0.846(2), ave 0.917
Test execution time: sum 542458 ms, max 360086 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:10:20 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-04 08:10:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 24 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 24, redundant 13
Fitness: max 1(2), min 0.923(31), ave 0.928
Test execution time: sum 2976 ms, max 117 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:10:25 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-04 08:10:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 29 seconds
Variants: generated 100, build-succeeded 28, build-failed 41, syntax-invalid 15, redundant 16
Fitness: max 1(1), min 0.923(27), ave 0.926
Test execution time: sum 2529 ms, max 115 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:10:29 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-04 08:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 33 seconds
Variants: generated 100, build-succeeded 31, build-failed 36, syntax-invalid 20, redundant 13
Fitness: max 1(2), min 0.846(1), ave 0.926
Test execution time: sum 2812 ms, max 134 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 08:10:34 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-04 08:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 38 seconds
Variants: generated 100, build-succeeded 27, build-failed 37, syntax-invalid 22, redundant 14
Fitness: max 0.923(27), min 0.923(27), ave 0.923
Test execution time: sum 2424 ms, max 114 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 08:10:38 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-04 08:22:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 42 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 22, redundant 10
Fitness: max 1(1), min 0.846(4), ave 0.916
Test execution time: sum 723002 ms, max 360087 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 08:22:43 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-04 08:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 48 seconds
Variants: generated 100, build-succeeded 35, build-failed 39, syntax-invalid 17, redundant 9
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 3158 ms, max 123 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:22:48 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-04 08:25:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 52 seconds
Variants: generated 100, build-succeeded 32, build-failed 38, syntax-invalid 14, redundant 16
Fitness: max 1(1), min 0.462(1), ave 0.906
Test execution time: sum 182863 ms, max 180087 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 08:25:53 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-04 08:28:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 58 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 19, redundant 10
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 183694 ms, max 180070 ms, min 73 ms
----------------------------------------------------------------

2023-08-04 08:28:59 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-04 08:35:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 3 seconds
Variants: generated 100, build-succeeded 37, build-failed 37, syntax-invalid 21, redundant 5
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 363366 ms, max 360089 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 08:35:04 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-04 08:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 8 seconds
Variants: generated 100, build-succeeded 29, build-failed 37, syntax-invalid 24, redundant 10
Fitness: max 1(1), min 0.462(1), ave 0.907
Test execution time: sum 902636 ms, max 540066 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 08:50:08 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-04 08:50:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 13 seconds
Variants: generated 100, build-succeeded 32, build-failed 38, syntax-invalid 16, redundant 14
Fitness: max 1(1), min 0.923(31), ave 0.925
Test execution time: sum 2977 ms, max 126 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:50:13 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-04 08:50:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 18 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 16, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.919
Test execution time: sum 3480 ms, max 120 ms, min 81 ms
----------------------------------------------------------------

2023-08-04 08:50:19 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-04 08:50:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 23 seconds
Variants: generated 100, build-succeeded 33, build-failed 38, syntax-invalid 17, redundant 12
Fitness: max 0.923(32), min 0.615(1), ave 0.914
Test execution time: sum 3069 ms, max 138 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 08:50:24 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-04 08:50:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 29 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 10, redundant 11
Fitness: max 1(3), min 0.923(40), ave 0.928
Test execution time: sum 3911 ms, max 124 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 08:50:30 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-04 08:56:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 35 seconds
Variants: generated 100, build-succeeded 32, build-failed 39, syntax-invalid 8, redundant 21
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 362956 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 08:56:35 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-04 09:02:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 40 seconds
Variants: generated 100, build-succeeded 33, build-failed 42, syntax-invalid 7, redundant 18
Fitness: max 1(1), min 0.462(1), ave 0.909
Test execution time: sum 362984 ms, max 360087 ms, min 68 ms
----------------------------------------------------------------

2023-08-04 09:02:40 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-04 09:02:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 45 seconds
Variants: generated 100, build-succeeded 31, build-failed 39, syntax-invalid 8, redundant 22
Fitness: max 0.923(31), min 0.923(31), ave 0.923
Test execution time: sum 2828 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-08-04 09:02:45 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-04 09:02:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 49 seconds
Variants: generated 100, build-succeeded 26, build-failed 39, syntax-invalid 6, redundant 29
Fitness: max 1(2), min 0.923(24), ave 0.929
Test execution time: sum 2347 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-08-04 09:02:50 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-04 09:02:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 54 seconds
Variants: generated 100, build-succeeded 31, build-failed 36, syntax-invalid 9, redundant 24
Fitness: max 1(1), min 0.769(1), ave 0.918
Test execution time: sum 2852 ms, max 120 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 09:02:55 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-04 09:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 59 seconds
Variants: generated 100, build-succeeded 26, build-failed 39, syntax-invalid 8, redundant 27
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 542401 ms, max 360088 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 09:12:00 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-04 09:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 5 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 11, redundant 20
Fitness: max 0.923(36), min 0.846(1), ave 0.921
Test execution time: sum 3461 ms, max 118 ms, min 89 ms
----------------------------------------------------------------

2023-08-04 09:12:06 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-04 09:21:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 9 seconds
Variants: generated 100, build-succeeded 24, build-failed 35, syntax-invalid 12, redundant 29
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 542213 ms, max 360069 ms, min 82 ms
----------------------------------------------------------------

2023-08-04 09:21:10 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-04 09:24:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 14 seconds
Variants: generated 100, build-succeeded 29, build-failed 32, syntax-invalid 13, redundant 26
Fitness: max 0.923(27), min 0.462(1), ave 0.905
Test execution time: sum 182720 ms, max 180090 ms, min 79 ms
----------------------------------------------------------------

2023-08-04 09:24:15 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-04 09:27:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 20 seconds
Variants: generated 100, build-succeeded 32, build-failed 36, syntax-invalid 12, redundant 20
Fitness: max 1(1), min 0.385(1), ave 0.906
Test execution time: sum 183008 ms, max 180091 ms, min 83 ms
----------------------------------------------------------------

2023-08-04 09:27:21 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-04 09:27:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 26 seconds
Variants: generated 100, build-succeeded 40, build-failed 37, syntax-invalid 12, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3740 ms, max 119 ms, min 87 ms
----------------------------------------------------------------

2023-08-04 09:27:27 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-04 09:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 32 seconds
Variants: generated 100, build-succeeded 35, build-failed 40, syntax-invalid 19, redundant 6
Fitness: max 0.923(34), min 0.462(1), ave 0.91
Test execution time: sum 3315 ms, max 117 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 09:27:32 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-04 09:30:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 38 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 16, redundant 14
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183590 ms, max 180091 ms, min 74 ms
----------------------------------------------------------------

2023-08-04 09:30:38 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-04 09:30:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 44 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 21, redundant 7
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3992 ms, max 112 ms, min 85 ms
----------------------------------------------------------------

2023-08-04 09:30:45 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-04 09:30:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 50 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 21, redundant 11
Fitness: max 0.923(34), min 0.923(34), ave 0.923
Test execution time: sum 3235 ms, max 108 ms, min 86 ms
----------------------------------------------------------------

2023-08-04 09:30:50 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-04 09:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 57 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 11, redundant 7
Fitness: max 0.923(46), min 0.846(2), ave 0.92
Test execution time: sum 364563 ms, max 360090 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 09:36:57 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-04 09:37:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 2 seconds
Variants: generated 100, build-succeeded 33, build-failed 37, syntax-invalid 17, redundant 13
Fitness: max 1(3), min 0.923(30), ave 0.93
Test execution time: sum 3054 ms, max 128 ms, min 88 ms
----------------------------------------------------------------

2023-08-04 09:37:03 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-04 09:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 8 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 25, redundant 12
Fitness: max 0.923(32), min 0.846(1), ave 0.921
Test execution time: sum 183120 ms, max 180088 ms, min 89 ms
----------------------------------------------------------------

2023-08-04 09:40:08 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-04 09:40:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 8 seconds
Variants: generated 15, build-succeeded 2, build-failed 11, syntax-invalid 0, redundant 2
Fitness: max 1(1), min 0.923(1), ave 0.962
Test execution time: sum 222 ms, max 130 ms, min 92 ms
----------------------------------------------------------------

2023-08-04 09:40:09 [main] [INFO]  KGenProgMain - GA stopped
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v418)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v418)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})", p);
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v418)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v418)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v541)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v541)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v541)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v541)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v919)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v946)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v946)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v946)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v946)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1108)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1108)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1108)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1108)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1129)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            return getMean();
         }
         
         return ret;
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1302)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1302)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1302)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1302)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1302)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:09 [main] [INFO]  PatchLogExporter - patch (v1504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1511)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1511)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1511)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1511)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1843)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1843)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2118)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2308)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2308)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2308)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2308)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2308)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -100,8 +101,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2837)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2901)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2920)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v2934)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -94,14 +95,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3116)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -85,6 +85,7 @@
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
+			double ret;
         }  catch (ConvergenceException ex) {
             /* 
              * Check domain endpoints to see if one gives value that is within
@@ -97,11 +98,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3229)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3550)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3550)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -94,14 +95,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3550)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3550)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3625)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v3824)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4007)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4034)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -77,7 +77,8 @@
             }
         };
               
-        // Try to bracket root, test domain endoints if this fails     
+        double ret;
+		// Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4131)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -90,7 +90,6 @@
      * detail message.
      */
     public MathException() {
-        super();
         this.pattern   = null;
         this.arguments = new Object[0];
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4137)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4234)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +221,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return Double.MAX_VALUE;
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -98,6 +98,7 @@
                 sum = sum + (lanczos[i] / (x + i));
             }
             sum = sum + lanczos[0];
+			double inv = 1 / (x * x);
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4434)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4616)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4616)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4616)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4616)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4616)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -76,6 +76,7 @@
                 }
             }
         };
+		double ret;
               
         // Try to bracket root, test domain endoints if this fails     
         double lowerBound = getDomainLowerBound(p);
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -98,6 +98,7 @@
                 sum = sum + (lanczos[i] / (x + i));
             }
             sum = sum + lanczos[0];
+			double inv = 1 / (x * x);
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
@@ -172,6 +173,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4723)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -86,23 +86,14 @@
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
         }  catch (ConvergenceException ex) {
-            /* 
-             * Check domain endpoints to see if one gives value that is within
-             * the default solver's defaultAbsoluteAccuracy of 0 (will be the
-             * case if density has bounded support and p is 0 or 1).
-             * 
-             * TODO: expose the default solver, defaultAbsoluteAccuracy as
-             * a constant.
-             */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
-                return lowerBound;
-            }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
-        }
+			if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+				return lowerBound;
+			}
+			if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+				return upperBound;
+			}
+			throw new MathException(ex);
+		}
 
         // find root
         double root = UnivariateRealSolverUtils.solve(rootFindingFunction,
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v4732)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +222,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -98,6 +98,7 @@
                 sum = sum + (lanczos[i] / (x + i));
             }
             sum = sum + lanczos[0];
+			double inv = 1 / (x * x);
 
             double tmp = x + g + .5;
             ret = ((x + .5) * Math.log(tmp)) - tmp +
@@ -172,6 +173,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5113)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
@@ -220,7 +223,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5516)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5747)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5849)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v5934)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6002)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6046)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6114)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6221)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6339)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:10 [main] [INFO]  PatchLogExporter - patch (v6405)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6650)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6650)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6650)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6650)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6650)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6722)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6738)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6822)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6840)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6942)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v6948)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7320)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7603)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -99,9 +100,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7625)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7744)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,7 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7831)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double delta;
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v7837)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8250)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8250)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8250)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8250)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8250)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+			double p1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8311)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+			double p1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -31,7 +31,6 @@
      * Default constructor.
      */
     public ConvergenceException() {
-        super("Convergence failed");
     }
     
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8321)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8426)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8514)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8639)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8723)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8903)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8920)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v8949)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+			double p1;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,8 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9121)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9319)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9327)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9327)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9327)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9327)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9327)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9423)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9514)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9514)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9514)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,7 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9514)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,14 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9708)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9708)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9708)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,14 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,10 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v9914)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10041)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,14 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p > .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -195,7 +195,7 @@
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)) ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10219)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,12 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10348)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10348)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,7 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
-        double b = initial;
+        int i = 1;
+		double b = initial;
         double fa;
         double fb;
         int numIterations = 0 ;
@@ -191,17 +192,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10348)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,10 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10348)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10348)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,10 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,11 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10601)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -117,7 +117,8 @@
      */
     public MathException(Throwable rootCause) {
         super(rootCause);
-        this.pattern   = getMessage();
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
     
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10623)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,12 @@
             fa = function.value(a);
             
             fb = function.value(b);
+			double p1;
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10631)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,11 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,6 +172,12 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
+				ret = Double.NaN;
                 an = an * (x / (a + n));
 
                 // update partial sum
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-04 09:40:11 [main] [INFO]  PatchLogExporter - patch (v10815)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -179,6 +179,9 @@
             ret = -Double.MAX_VALUE;
         } else {
             ret = getMean();
+			ret = getMean();
+			ret = getMean();
+			ret = getMean();
         }
         
         return ret;
2023-08-04 09:40:14 [main] [INFO]  KGenProgMain - Summary
Reached generation = 110
Generated variants = 10815
Syntax valid variants = 8558
Build succeeded variants = 3080
Time elapsed = 4 hours 40 minutes 13 seconds
Exit status = SUCCESS
