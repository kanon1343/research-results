2023-08-02 10:01:22 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-02 10:01:22 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-02 10:01:22 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-02 10:01:23 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/kgenprog-85.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/math85/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.distribution.NormalDistributionTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-02 10:01:30 [main] [INFO]  KGenProgMain - initial failed tests (1/13)
org.apache.commons.math.distribution.NormalDistributionTest.testMath280: null

2023-08-02 10:01:30 [main] [INFO]  KGenProgMain - GA started
2023-08-02 10:01:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-02 10:01:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 50, build-succeeded 6, build-failed 35, syntax-invalid 3, redundant 6
Fitness: max 0.923(6), min 0.923(6), ave 0.923
Test execution time: sum 814 ms, max 155 ms, min 118 ms
----------------------------------------------------------------

2023-08-02 10:01:32 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-02 10:01:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 50, build-succeeded 4, build-failed 37, syntax-invalid 5, redundant 4
Fitness: max 0.923(3), min 0.462(1), ave 0.808
Test execution time: sum 404 ms, max 109 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 10:01:34 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-02 10:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, build-succeeded 17, build-failed 37, syntax-invalid 4, redundant 42
Fitness: max 1(1), min 0.462(5), ave 0.787
Test execution time: sum 1516 ms, max 115 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 10:01:36 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-02 10:07:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 8 seconds
Variants: generated 100, build-succeeded 11, build-failed 30, syntax-invalid 3, redundant 56
Fitness: max 0.923(6), min 0.846(5), ave 0.888
Test execution time: sum 361004 ms, max 360079 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 10:07:38 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-02 10:07:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 10 seconds
Variants: generated 100, build-succeeded 12, build-failed 37, syntax-invalid 5, redundant 46
Fitness: max 1(2), min 0.846(1), ave 0.929
Test execution time: sum 1036 ms, max 92 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 10:07:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-02 10:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 13 seconds
Variants: generated 100, build-succeeded 21, build-failed 29, syntax-invalid 12, redundant 38
Fitness: max 1(2), min 0.846(1), ave 0.927
Test execution time: sum 1862 ms, max 98 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 10:07:44 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-02 10:10:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 17 seconds
Variants: generated 100, build-succeeded 28, build-failed 31, syntax-invalid 11, redundant 30
Fitness: max 1(3), min 0.846(1), ave 0.929
Test execution time: sum 182506 ms, max 180090 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 10:10:47 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-02 10:16:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 20 seconds
Variants: generated 100, build-succeeded 26, build-failed 25, syntax-invalid 12, redundant 37
Fitness: max 1(1), min 0.538(1), ave 0.908
Test execution time: sum 362333 ms, max 360087 ms, min 74 ms
----------------------------------------------------------------

2023-08-02 10:16:51 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-02 10:22:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 23 seconds
Variants: generated 100, build-succeeded 24, build-failed 28, syntax-invalid 15, redundant 33
Fitness: max 0.923(22), min 0.385(1), ave 0.897
Test execution time: sum 362123 ms, max 360091 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 10:22:54 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-02 10:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 28 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 15, redundant 20
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 363047 ms, max 360086 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 10:28:58 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-02 10:29:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 32 seconds
Variants: generated 100, build-succeeded 35, build-failed 32, syntax-invalid 12, redundant 21
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3148 ms, max 124 ms, min 79 ms
----------------------------------------------------------------

2023-08-02 10:29:02 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-02 10:29:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 36 seconds
Variants: generated 100, build-succeeded 32, build-failed 30, syntax-invalid 10, redundant 28
Fitness: max 1(2), min 0.923(30), ave 0.928
Test execution time: sum 2889 ms, max 104 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 10:29:07 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-02 10:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 41 seconds
Variants: generated 100, build-succeeded 36, build-failed 28, syntax-invalid 10, redundant 26
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3359 ms, max 118 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 10:29:11 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-02 10:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 44 seconds
Variants: generated 100, build-succeeded 27, build-failed 33, syntax-invalid 12, redundant 28
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 362430 ms, max 360088 ms, min 74 ms
----------------------------------------------------------------

2023-08-02 10:35:15 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-02 10:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 48 seconds
Variants: generated 100, build-succeeded 23, build-failed 40, syntax-invalid 13, redundant 24
Fitness: max 0.923(22), min 0.846(1), ave 0.92
Test execution time: sum 2110 ms, max 127 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 10:35:18 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-02 10:38:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 52 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 12, redundant 20
Fitness: max 1(1), min 0.462(1), ave 0.902
Test execution time: sum 183365 ms, max 180103 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 10:38:23 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-02 10:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 56 seconds
Variants: generated 100, build-succeeded 30, build-failed 30, syntax-invalid 22, redundant 18
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 362695 ms, max 360088 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 10:44:27 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-02 10:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 1 seconds
Variants: generated 100, build-succeeded 35, build-failed 33, syntax-invalid 11, redundant 21
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 363141 ms, max 360085 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 10:50:31 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-02 10:50:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 5 seconds
Variants: generated 100, build-succeeded 30, build-failed 36, syntax-invalid 20, redundant 14
Fitness: max 0.923(28), min 0.846(2), ave 0.918
Test execution time: sum 2715 ms, max 119 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 10:50:35 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-02 10:56:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 9 seconds
Variants: generated 100, build-succeeded 35, build-failed 31, syntax-invalid 14, redundant 20
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 363157 ms, max 360086 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 10:56:40 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-02 10:56:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 13 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 15, redundant 27
Fitness: max 0.923(24), min 0.846(3), ave 0.915
Test execution time: sum 2418 ms, max 109 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 10:56:43 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-02 10:56:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 17 seconds
Variants: generated 100, build-succeeded 27, build-failed 39, syntax-invalid 15, redundant 19
Fitness: max 1(1), min 0.462(1), ave 0.909
Test execution time: sum 2429 ms, max 109 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 10:56:47 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-02 10:56:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 20 seconds
Variants: generated 100, build-succeeded 23, build-failed 39, syntax-invalid 20, redundant 18
Fitness: max 0.923(23), min 0.923(23), ave 0.923
Test execution time: sum 2126 ms, max 124 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 10:56:50 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-02 11:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 25 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 14, redundant 18
Fitness: max 1(4), min 0.846(3), ave 0.925
Test execution time: sum 723334 ms, max 360087 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 11:08:55 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-02 11:09:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 29 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 15, redundant 16
Fitness: max 1(2), min 0.923(34), ave 0.927
Test execution time: sum 3207 ms, max 108 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 11:09:00 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-02 11:12:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 33 seconds
Variants: generated 100, build-succeeded 27, build-failed 36, syntax-invalid 16, redundant 21
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 182467 ms, max 180089 ms, min 71 ms
----------------------------------------------------------------

2023-08-02 11:12:03 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-02 11:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 38 seconds
Variants: generated 100, build-succeeded 37, build-failed 34, syntax-invalid 17, redundant 12
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3376 ms, max 124 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 11:12:08 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-02 11:12:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 42 seconds
Variants: generated 100, build-succeeded 33, build-failed 38, syntax-invalid 14, redundant 15
Fitness: max 1(2), min 0.923(31), ave 0.928
Test execution time: sum 2970 ms, max 114 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 11:12:13 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-02 11:12:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 47 seconds
Variants: generated 100, build-succeeded 36, build-failed 36, syntax-invalid 11, redundant 17
Fitness: max 1(2), min 0.923(34), ave 0.927
Test execution time: sum 3290 ms, max 120 ms, min 78 ms
----------------------------------------------------------------

2023-08-02 11:12:17 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-02 11:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 51 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 16, redundant 18
Fitness: max 1(1), min 0.923(30), ave 0.926
Test execution time: sum 2828 ms, max 122 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 11:12:21 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-02 11:18:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 16 minutes 56 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 11, redundant 17
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 363734 ms, max 360088 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 11:18:26 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-02 11:18:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 0 seconds
Variants: generated 100, build-succeeded 33, build-failed 38, syntax-invalid 18, redundant 11
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 3088 ms, max 122 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 11:18:31 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-02 11:18:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 5 seconds
Variants: generated 100, build-succeeded 35, build-failed 33, syntax-invalid 15, redundant 17
Fitness: max 0.923(34), min 0.385(1), ave 0.908
Test execution time: sum 3228 ms, max 115 ms, min 68 ms
----------------------------------------------------------------

2023-08-02 11:18:36 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-02 11:18:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 10 seconds
Variants: generated 100, build-succeeded 33, build-failed 35, syntax-invalid 18, redundant 14
Fitness: max 0.923(33), min 0.923(33), ave 0.923
Test execution time: sum 3093 ms, max 112 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 11:18:40 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-02 11:18:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 15 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 11, redundant 15
Fitness: max 0.923(39), min 0.846(1), ave 0.921
Test execution time: sum 3861 ms, max 116 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 11:18:46 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-02 11:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 20 seconds
Variants: generated 100, build-succeeded 40, build-failed 36, syntax-invalid 10, redundant 14
Fitness: max 1(2), min 0.923(38), ave 0.927
Test execution time: sum 3767 ms, max 122 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 11:18:51 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-02 11:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 25 seconds
Variants: generated 100, build-succeeded 36, build-failed 39, syntax-invalid 13, redundant 12
Fitness: max 1(1), min 0.923(35), ave 0.925
Test execution time: sum 3255 ms, max 106 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 11:18:56 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-02 11:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 31 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 16, redundant 8
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 363742 ms, max 360089 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 11:25:01 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-02 11:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 36 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 16, redundant 12
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 183838 ms, max 180089 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 11:28:07 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-02 11:28:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 41 seconds
Variants: generated 100, build-succeeded 37, build-failed 35, syntax-invalid 16, redundant 12
Fitness: max 1(3), min 0.923(34), ave 0.929
Test execution time: sum 3481 ms, max 155 ms, min 76 ms
----------------------------------------------------------------

2023-08-02 11:28:12 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-02 11:34:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 46 seconds
Variants: generated 100, build-succeeded 42, build-failed 27, syntax-invalid 17, redundant 14
Fitness: max 1(2), min 0.462(1), ave 0.914
Test execution time: sum 363846 ms, max 360078 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 11:34:17 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-02 11:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 52 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 16, redundant 9
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 364190 ms, max 180096 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 11:40:22 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-02 11:46:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 56 seconds
Variants: generated 100, build-succeeded 32, build-failed 32, syntax-invalid 18, redundant 18
Fitness: max 1(2), min 0.462(1), ave 0.909
Test execution time: sum 362937 ms, max 360088 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 11:46:27 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-02 11:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 1 seconds
Variants: generated 100, build-succeeded 33, build-failed 37, syntax-invalid 20, redundant 10
Fitness: max 0.923(31), min 0.846(2), ave 0.918
Test execution time: sum 182995 ms, max 180091 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 11:49:32 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-02 12:13:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 6 seconds
Variants: generated 100, build-succeeded 36, build-failed 34, syntax-invalid 18, redundant 12
Fitness: max 1(2), min 0.385(1), ave 0.912
Test execution time: sum 1443289 ms, max 1440067 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 12:13:36 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-02 12:37:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 10 seconds
Variants: generated 100, build-succeeded 33, build-failed 37, syntax-invalid 9, redundant 21
Fitness: max 0.923(31), min 0.385(1), ave 0.904
Test execution time: sum 1442947 ms, max 1440070 ms, min 85 ms
----------------------------------------------------------------

2023-08-02 12:37:41 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-02 12:43:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 15 seconds
Variants: generated 100, build-succeeded 33, build-failed 40, syntax-invalid 19, redundant 8
Fitness: max 0.923(32), min 0.846(1), ave 0.921
Test execution time: sum 363027 ms, max 360088 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 12:43:45 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-02 12:43:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 19 seconds
Variants: generated 100, build-succeeded 27, build-failed 37, syntax-invalid 22, redundant 14
Fitness: max 1(1), min 0.846(2), ave 0.92
Test execution time: sum 2429 ms, max 110 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 12:43:49 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-02 12:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 24 seconds
Variants: generated 100, build-succeeded 35, build-failed 35, syntax-invalid 16, redundant 14
Fitness: max 0.923(33), min 0.692(1), ave 0.914
Test execution time: sum 363151 ms, max 360088 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 12:49:54 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-02 12:49:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 28 seconds
Variants: generated 100, build-succeeded 35, build-failed 35, syntax-invalid 12, redundant 18
Fitness: max 1(1), min 0.923(34), ave 0.925
Test execution time: sum 3291 ms, max 129 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 12:49:59 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-02 12:50:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 33 seconds
Variants: generated 100, build-succeeded 32, build-failed 41, syntax-invalid 10, redundant 17
Fitness: max 1(1), min 0.923(31), ave 0.925
Test execution time: sum 2990 ms, max 122 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 12:50:04 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-02 12:53:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 38 seconds
Variants: generated 100, build-succeeded 37, build-failed 41, syntax-invalid 10, redundant 12
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 183416 ms, max 180084 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 12:53:09 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-02 12:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 43 seconds
Variants: generated 100, build-succeeded 33, build-failed 54, syntax-invalid 4, redundant 9
Fitness: max 0.923(31), min 0.846(2), ave 0.918
Test execution time: sum 3029 ms, max 124 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 12:53:14 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-02 12:53:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 49 seconds
Variants: generated 100, build-succeeded 41, build-failed 37, syntax-invalid 11, redundant 11
Fitness: max 1(2), min 0.923(39), ave 0.927
Test execution time: sum 3791 ms, max 122 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 12:53:19 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-02 13:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 54 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 16, redundant 16
Fitness: max 1(1), min 0.462(1), ave 0.906
Test execution time: sum 903352 ms, max 360089 ms, min 68 ms
----------------------------------------------------------------

2023-08-02 13:08:24 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-02 13:08:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 59 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 14, redundant 10
Fitness: max 0.923(41), min 0.923(41), ave 0.923
Test execution time: sum 3822 ms, max 125 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 13:08:30 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-02 13:08:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 4 seconds
Variants: generated 100, build-succeeded 39, build-failed 37, syntax-invalid 13, redundant 11
Fitness: max 1(1), min 0.923(38), ave 0.925
Test execution time: sum 3680 ms, max 123 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 13:08:35 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-02 13:11:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 11 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 9, redundant 13
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 184263 ms, max 180092 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 13:11:41 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-02 13:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 16 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 11, redundant 15
Fitness: max 1(1), min 0.846(1), ave 0.923
Test execution time: sum 4064 ms, max 111 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 13:11:47 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-02 13:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 22 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0.846(3), ave 0.92
Test execution time: sum 724217 ms, max 360094 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 13:23:53 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-02 13:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 28 seconds
Variants: generated 100, build-succeeded 38, build-failed 36, syntax-invalid 16, redundant 10
Fitness: max 1(2), min 0.769(1), ave 0.923
Test execution time: sum 3795 ms, max 124 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 13:23:58 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-02 13:27:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 33 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 22, redundant 10
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 183595 ms, max 180111 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 13:27:04 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-02 13:30:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 38 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 15, redundant 16
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 183779 ms, max 180094 ms, min 91 ms
----------------------------------------------------------------

2023-08-02 13:30:09 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-02 13:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 44 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 18, redundant 12
Fitness: max 0.923(38), min 0.846(1), ave 0.921
Test execution time: sum 3860 ms, max 120 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 13:30:14 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-02 13:36:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 49 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 19, redundant 13
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 363254 ms, max 360091 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 13:36:20 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-02 13:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 54 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 23, redundant 11
Fitness: max 0.923(35), min 0.385(1), ave 0.906
Test execution time: sum 363475 ms, max 360091 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 13:42:25 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-02 13:48:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 59 seconds
Variants: generated 100, build-succeeded 33, build-failed 40, syntax-invalid 16, redundant 11
Fitness: max 0.923(32), min 0.846(1), ave 0.921
Test execution time: sum 363130 ms, max 360138 ms, min 73 ms
----------------------------------------------------------------

2023-08-02 13:48:30 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-02 13:57:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 4 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 15, redundant 14
Fitness: max 1(2), min 0.846(3), ave 0.921
Test execution time: sum 543633 ms, max 360094 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 13:57:35 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-02 13:57:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 9 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 18, redundant 17
Fitness: max 1(2), min 0.846(2), ave 0.923
Test execution time: sum 3287 ms, max 141 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 13:57:40 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-02 14:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 15 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 11, redundant 15
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 184413 ms, max 180090 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 14:00:46 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-02 14:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 20 seconds
Variants: generated 100, build-succeeded 31, build-failed 32, syntax-invalid 20, redundant 17
Fitness: max 1(2), min 0.923(29), ave 0.928
Test execution time: sum 3093 ms, max 140 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 14:00:51 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-02 14:06:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 25 seconds
Variants: generated 100, build-succeeded 28, build-failed 38, syntax-invalid 10, redundant 24
Fitness: max 0.923(27), min 0.846(1), ave 0.92
Test execution time: sum 362965 ms, max 360109 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:06:56 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-02 14:07:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 30 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 11, redundant 23
Fitness: max 1(1), min 0.385(1), ave 0.908
Test execution time: sum 3231 ms, max 152 ms, min 70 ms
----------------------------------------------------------------

2023-08-02 14:07:01 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-02 14:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 36 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 13, redundant 18
Fitness: max 0.923(36), min 0.846(4), ave 0.915
Test execution time: sum 364175 ms, max 360104 ms, min 81 ms
----------------------------------------------------------------

2023-08-02 14:13:07 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-02 14:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 42 seconds
Variants: generated 100, build-succeeded 35, build-failed 32, syntax-invalid 16, redundant 17
Fitness: max 1(2), min 0.846(1), ave 0.925
Test execution time: sum 364056 ms, max 360095 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 14:19:13 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-02 14:22:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 49 seconds
Variants: generated 100, build-succeeded 40, build-failed 36, syntax-invalid 15, redundant 9
Fitness: max 0.923(39), min 0.846(1), ave 0.921
Test execution time: sum 184566 ms, max 180093 ms, min 86 ms
----------------------------------------------------------------

2023-08-02 14:22:19 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-02 14:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 55 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 22, redundant 9
Fitness: max 0.923(36), min 0.846(3), ave 0.917
Test execution time: sum 184541 ms, max 180090 ms, min 80 ms
----------------------------------------------------------------

2023-08-02 14:25:26 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-02 14:25:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 2 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 18, redundant 14
Fitness: max 0.923(34), min 0.385(1), ave 0.906
Test execution time: sum 5218 ms, max 789 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:25:33 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-02 14:31:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 8 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 22, redundant 9
Fitness: max 0.923(33), min 0.846(1), ave 0.921
Test execution time: sum 364274 ms, max 360089 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 14:31:39 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-02 14:31:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 15 seconds
Variants: generated 100, build-succeeded 34, build-failed 32, syntax-invalid 27, redundant 7
Fitness: max 1(1), min 0.923(33), ave 0.925
Test execution time: sum 5249 ms, max 275 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:31:46 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-02 14:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 23 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 25, redundant 7
Fitness: max 0.923(34), min 0.846(5), ave 0.913
Test execution time: sum 5759 ms, max 339 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 14:31:53 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-02 14:32:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 30 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 22, redundant 13
Fitness: max 0.923(34), min 0.923(34), ave 0.923
Test execution time: sum 5237 ms, max 340 ms, min 87 ms
----------------------------------------------------------------

2023-08-02 14:32:00 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-02 14:32:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 39 seconds
Variants: generated 100, build-succeeded 42, build-failed 27, syntax-invalid 20, redundant 11
Fitness: max 0.923(41), min 0.462(1), ave 0.912
Test execution time: sum 6712 ms, max 655 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:32:09 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-02 14:32:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 47 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 15, redundant 11
Fitness: max 0.923(41), min 0.846(1), ave 0.921
Test execution time: sum 6830 ms, max 336 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:32:18 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-02 14:32:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 55 seconds
Variants: generated 100, build-succeeded 37, build-failed 35, syntax-invalid 17, redundant 11
Fitness: max 1(2), min 0.923(35), ave 0.927
Test execution time: sum 5675 ms, max 338 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 14:32:26 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-02 14:32:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 6 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 8, redundant 9
Fitness: max 1(1), min 0.923(48), ave 0.925
Test execution time: sum 8241 ms, max 526 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 14:32:36 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-02 14:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 14 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 18, redundant 13
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 6004 ms, max 380 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 14:32:44 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-02 14:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 24 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 15, redundant 11
Fitness: max 1(2), min 0.923(45), ave 0.926
Test execution time: sum 7853 ms, max 338 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 14:32:54 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-02 15:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.385(1), ave 0.91
Test execution time: sum 1883906 ms, max 1440068 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 15:04:20 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-02 15:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 9 minutes 0 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 11, redundant 16
Fitness: max 0.923(41), min 0.462(1), ave 0.911
Test execution time: sum 368047 ms, max 360093 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 15:10:30 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-02 15:22:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 10 seconds
Variants: generated 100, build-succeeded 42, build-failed 37, syntax-invalid 8, redundant 13
Fitness: max 0.923(40), min 0.846(2), ave 0.919
Test execution time: sum 727829 ms, max 360147 ms, min 90 ms
----------------------------------------------------------------

2023-08-02 15:22:40 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-02 15:22:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 18 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 16, redundant 18
Fitness: max 0.923(35), min 0.846(2), ave 0.919
Test execution time: sum 6319 ms, max 418 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 15:22:49 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-02 15:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 28 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 16, redundant 14
Fitness: max 0.923(41), min 0.462(1), ave 0.912
Test execution time: sum 7575 ms, max 458 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 15:22:59 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-02 15:23:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 38 seconds
Variants: generated 100, build-succeeded 38, build-failed 38, syntax-invalid 12, redundant 12
Fitness: max 0.923(38), min 0.923(38), ave 0.923
Test execution time: sum 7460 ms, max 429 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 15:23:08 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-02 15:29:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 47 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 11, redundant 20
Fitness: max 0.923(34), min 0.846(1), ave 0.921
Test execution time: sum 366907 ms, max 360150 ms, min 95 ms
----------------------------------------------------------------

2023-08-02 15:29:17 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-02 15:29:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 58 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 10, redundant 15
Fitness: max 0.923(42), min 0.846(1), ave 0.921
Test execution time: sum 8675 ms, max 414 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 15:29:28 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-02 15:29:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 10 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 9, redundant 22
Fitness: max 0.923(39), min 0.923(39), ave 0.923
Test execution time: sum 9775 ms, max 564 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 15:29:41 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-02 15:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 9, redundant 17
Fitness: max 0.923(38), min 0.846(2), ave 0.919
Test execution time: sum 188662 ms, max 180139 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 15:32:52 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-02 15:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 32 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 9, redundant 16
Fitness: max 1(3), min 0.462(1), ave 0.909
Test execution time: sum 8690 ms, max 341 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 15:33:03 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-02 15:33:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 42 seconds
Variants: generated 100, build-succeeded 31, build-failed 39, syntax-invalid 10, redundant 20
Fitness: max 0.923(31), min 0.923(31), ave 0.923
Test execution time: sum 7507 ms, max 496 ms, min 92 ms
----------------------------------------------------------------

2023-08-02 15:33:12 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-02 15:33:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 53 seconds
Variants: generated 100, build-succeeded 38, build-failed 39, syntax-invalid 7, redundant 16
Fitness: max 0.923(38), min 0.923(38), ave 0.923
Test execution time: sum 9091 ms, max 460 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 15:33:24 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-02 15:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 3 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 21, redundant 8
Fitness: max 1(3), min 0.846(3), ave 0.923
Test execution time: sum 367922 ms, max 360073 ms, min 88 ms
----------------------------------------------------------------

2023-08-02 15:39:34 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-02 15:39:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 16 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 12, redundant 13
Fitness: max 0.923(41), min 0.923(41), ave 0.923
Test execution time: sum 10238 ms, max 496 ms, min 94 ms
----------------------------------------------------------------

2023-08-02 15:39:47 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-02 15:40:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 30 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 12, redundant 15
Fitness: max 1(1), min 0.846(2), ave 0.921
Test execution time: sum 11553 ms, max 575 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 15:40:01 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-02 15:40:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 44 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 8, redundant 16
Fitness: max 0.923(46), min 0.846(1), ave 0.921
Test execution time: sum 11427 ms, max 414 ms, min 89 ms
----------------------------------------------------------------

2023-08-02 15:40:14 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-02 15:40:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 13, redundant 8
Fitness: max 1(3), min 0.923(44), ave 0.928
Test execution time: sum 13125 ms, max 496 ms, min 152 ms
----------------------------------------------------------------

2023-08-02 15:40:30 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-02 15:40:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 12 seconds
Variants: generated 100, build-succeeded 38, build-failed 40, syntax-invalid 14, redundant 8
Fitness: max 1(1), min 0.923(37), ave 0.925
Test execution time: sum 10538 ms, max 498 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 15:40:43 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-02 15:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 26 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 18, redundant 13
Fitness: max 0.923(32), min 0.615(1), ave 0.912
Test execution time: sum 11224 ms, max 529 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 15:40:56 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-02 15:41:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 39 seconds
Variants: generated 100, build-succeeded 33, build-failed 34, syntax-invalid 21, redundant 12
Fitness: max 1(1), min 0.462(1), ave 0.911
Test execution time: sum 10717 ms, max 633 ms, min 96 ms
----------------------------------------------------------------

2023-08-02 15:41:09 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-02 15:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 41 seconds
Variants: generated 30, build-succeeded 5, build-failed 22, syntax-invalid 1, redundant 2
Fitness: max 1(1), min 0.538(1), ave 0.831
Test execution time: sum 361269 ms, max 180390 ms, min 93 ms
----------------------------------------------------------------

2023-08-02 15:47:12 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v138)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v138)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v138)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v307)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v307)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v307)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,11 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v307)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v413)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v413)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,13 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v413)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,6 +189,7 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
+			final String argument = "https://issues.apache.org/jira/browse/MATH";
             printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            return new double[] { a, b };
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v502)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -94,10 +95,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v502)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v504)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v504)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v504)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -189,6 +188,7 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
+			final String argument = "https://issues.apache.org/jira/browse/MATH";
             printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v802)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v802)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v809)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v809)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -70,7 +70,8 @@
             new UnivariateRealFunction() {
             public double value(double x) throws FunctionEvaluationException {
                 try {
-                    return cumulativeProbability(x) - p;
+                    double ret;
+					return cumulativeProbability(x) - p;
                 } catch (MathException ex) {
                     throw new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());
                 }
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v809)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v809)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v936)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v936)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v936)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            throw MathRuntimeException.createIllegalArgumentException("{0} out of [{1}, {2}] range", p, 0.0, 1.0);
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            numIterations++;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1005)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,6 +189,7 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
+			final String argument = "https://issues.apache.org/jira/browse/MATH";
             printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1005)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1005)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1005)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1131)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,6 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1203)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -163,7 +162,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1508)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -163,7 +163,7 @@
      * @since 1.2
      */
     public String getMessage(Locale locale) {
-        return buildMessage(locale, pattern, arguments);
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /** {@inheritDoc} */
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,14 +94,12 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1513)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < .5) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1840)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2008)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2008)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2008)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2008)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2212)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2212)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,8 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2224)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2229)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2232)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2232)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2232)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2306)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2339)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2339)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2339)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2339)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:12 [main] [INFO]  PatchLogExporter - patch (v2339)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2409)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2409)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2409)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2409)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2409)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p == 1) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2537)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2537)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2537)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2537)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2537)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2605)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,8 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.MaxIterationsExceededException
+++ org.apache.commons.math.MaxIterationsExceededException
@@ -40,7 +40,6 @@
      * @param maxIterations maximal number of iterations allowed
      */
     public MaxIterationsExceededException(final int maxIterations) {
-        super("Maximal number of iterations ({0}) exceeded", maxIterations);
         this.maxIterations = maxIterations;
     }
 
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2743)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -169,7 +169,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2743)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2743)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2743)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2743)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2802)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2802)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2802)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2802)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
@@ -169,7 +168,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return buildMessage(Locale.getDefault(), pattern, arguments);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v2948)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3050)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3412)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3423)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3423)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3423)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3423)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3423)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double inv = 1 / (x * x);
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3517)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,8 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 1;
+			double m;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3607)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -94,7 +95,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3715)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 1) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3819)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3827)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -191,17 +193,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v3931)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,9 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4005)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4048)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.5;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4119)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p < .5) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4119)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4139)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4303)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4303)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,9 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
+		a = Math.max(a - 1.0, lowerBound);
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +199,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4303)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,8 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4349)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4633)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,12 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,8 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4901)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4901)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4901)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4901)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v4901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            UnivariateRealSolver solver = LazyHolder.FACTORY.newDefaultSolver();
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,7 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5215)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5218)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5218)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,7 +94,7 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5218)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5218)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5218)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5328)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5328)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
@@ -97,7 +98,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5328)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,8 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +198,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5328)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5328)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5511)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5511)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5511)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5511)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5511)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -81,6 +81,7 @@
         double lowerBound = getDomainLowerBound(p);
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
+		double ret;
         try {
             bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5601)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5709)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
@@ -128,7 +127,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,12 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5804)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5901)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.0;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v5913)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6005)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,10 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6041)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -100,8 +100,7 @@
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6146)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -178,7 +178,7 @@
         if (p < .5) {
             ret = -Double.MAX_VALUE;
         } else {
-            ret = getMean();
+            ret = 0.0;
         }
         
         return ret;
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6614)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6614)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6614)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -180,6 +180,7 @@
                   lowerBound, initial, upperBound);
         }
         double a = initial;
+		a = Math.max(a - 1.0, lowerBound);
         double b = initial;
         double fa;
         double fb;
@@ -191,11 +192,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (function == null ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6614)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,9 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6737)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6737)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6737)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6737)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6737)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,7 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
+        super("Convergence failed");
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,11 +97,10 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            return 0;
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6740)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -94,10 +94,10 @@
              * TODO: expose the default solver, defaultAbsoluteAccuracy as
              * a constant.
              */ 
-            if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
+            if (p == 1) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6930)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p < 0.0 || p > 1.0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,13 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:13 [main] [INFO]  PatchLogExporter - patch (v7134)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -191,17 +191,10 @@
             fa = function.value(a);
             
             fb = function.value(b);
-            numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -42,7 +42,8 @@
      * @since 1.2
      */
     public ConvergenceException(String pattern, Object ... arguments) {
-        super(pattern, arguments);
+        printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7311)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < 0.0 || p > 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -178,7 +178,8 @@
                 sum = sum + an;
             }
             if (n >= maxIterations) {
-                throw new MaxIterationsExceededException(maxIterations);
+                double m;
+				throw new MaxIterationsExceededException(maxIterations);
             } else {
                 ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
             }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7340)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
@@ -128,7 +127,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            int i = 0;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v7813)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            double ret = Double.NaN;
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,13 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8312)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8349)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,10 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,8 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8422)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (mean <= 0.0) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < 0.0 || p > 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
@@ -172,7 +173,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8624)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -128,7 +128,7 @@
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0.0d;
-            } else if (x > (mean + 20 * standardDeviation)) {
+            } else if (x >= 1) {
                 return 1.0d;
             } else {
                 throw ex;
@@ -220,7 +220,7 @@
 
         if (p < .5) {
             ret = getMean() - getStandardDeviation();
-        } else if (p > .5) {
+        } else if (p < 0.0 || p > 1.0) {
             ret = getMean() + getStandardDeviation();
         } else {
             ret = getMean();
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,12 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
-            numIterations++ ;
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,14 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,14 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v8718)
--- org.apache.commons.math.distribution.NormalDistributionImpl
+++ org.apache.commons.math.distribution.NormalDistributionImpl
@@ -51,7 +51,6 @@
      * @param sd standard deviation for this distribution
      */
     public NormalDistributionImpl(double mean, double sd){
-        super();
         setMean(mean);
         setStandardDeviation(sd);
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
@@ -168,7 +169,8 @@
             // calculate series
             double n = 0.0; // current element index
             double an = 1.0 / a; // n-th element in the series
-            double sum = an; // partial sum
+            ret = Double.NaN;
+			double sum = an; // partial sum
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -99,9 +99,7 @@
             }
             if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
                 return upperBound;
-            }     
-            // Failed bracket convergence was not because of corner solution
-            throw new MathException(ex);
+            }
         }
 
         // find root
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
@@ -172,7 +173,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -141,8 +141,6 @@
             if (Double.isInfinite(p2) || Double.isInfinite(q2)) {
                 // need to scale
                 if (a != 0.0) {
-                    p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,10 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v9743)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,7 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            fb = function.value(b);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,13 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -168,11 +168,14 @@
             // calculate series
             double n = 0.0; // current element index
             double an = 1.0 / a; // n-th element in the series
-            double sum = an; // partial sum
+            ret = Double.NaN;
+			double sum = an; // partial sum
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,6 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10028)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,13 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,14 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
@@ -116,7 +115,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,9 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
-            // Flush the PrintWriter before it's GC'ed.
-            pw.flush();
         }
     }
 
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,9 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.util.ContinuedFraction
+++ org.apache.commons.math.util.ContinuedFraction
@@ -142,7 +142,7 @@
                 // need to scale
                 if (a != 0.0) {
                     p2 = p1 + (b / a * p0);
-                    q2 = q1 + (b / a * q0);
+                    double value = Double.NaN;
                 } else if (b != 0) {
                     p2 = (a / b * p1) + p0;
                     q2 = (a / b * q1) + q0;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -103,7 +103,6 @@
      * @param arguments format arguments
      */
     public MathException(String pattern, Object ... arguments) {
-      super(buildMessage(Locale.US, pattern, arguments));
       this.pattern   = pattern;
       this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -188,6 +188,7 @@
         do {
             a = Math.max(a - 1.0, lowerBound);
             b = Math.min(b + 1.0, upperBound);
+			int i = 1;
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +197,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,8 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
@@ -168,11 +169,13 @@
             // calculate series
             double n = 0.0; // current element index
             double an = 1.0 / a; // n-th element in the series
-            double sum = an; // partial sum
+            ret = Double.NaN;
+			double sum = an; // partial sum
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,12 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10442)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -189,7 +189,6 @@
     public void printStackTrace(PrintStream out) {
         synchronized (out) {
             PrintWriter pw = new PrintWriter(out, false);
-            printStackTrace(pw);
             // Flush the PrintWriter before it's GC'ed.
             pw.flush();
         }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,8 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,14 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10548)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.MathException
+++ org.apache.commons.math.MathException
@@ -116,7 +116,6 @@
      *                   to be thrown.
      */
     public MathException(Throwable rootCause) {
-        super(rootCause);
         this.pattern   = getMessage();
         this.arguments = new Object[0];
     }
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -196,12 +196,6 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -172,7 +172,11 @@
             while (Math.abs(an) > epsilon && n < maxIterations) {
                 // compute next element in the series
                 n = n + 1.0;
-                an = an * (x / (a + n));
+                {ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				{ContinuedFraction cf=new ContinuedFraction(){@Override protected double getA(int n,double x){return ((2.0 * n) + 1.0) - a + x;}@Override protected double getB(int n,double x){return n * (a - n);}};ret=1.0 / cf.evaluate(x,epsilon,maxIterations);ret=Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * ret;}
+				an = an * (x / (a + n));
 
                 // update partial sum
                 sum = sum + an;
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.distribution.AbstractContinuousDistribution
+++ org.apache.commons.math.distribution.AbstractContinuousDistribution
@@ -97,7 +97,7 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
+            if (p == 0) {
                 return upperBound;
             }     
             // Failed bracket convergence was not because of corner solution
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
@@ -190,18 +190,13 @@
             b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
-            fb = function.value(b);
+            double x0, x1, x2, x, oldx, y0, y1, y2, y;
+			fb = function.value(b);
             numIterations++ ;
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.special.Gamma
+++ org.apache.commons.math.special.Gamma
@@ -159,7 +159,9 @@
         if (Double.isNaN(a) || Double.isNaN(x) || (a <= 0.0) || (x < 0.0)) {
             ret = Double.NaN;
         } else if (x == 0.0) {
-            ret = 0.0;
+            ret = 1.0;
+			ret = 1.0;
+			ret = 0.0;
         } else if (a >= 1.0 && x > a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.ConvergenceException
+++ org.apache.commons.math.ConvergenceException
@@ -43,6 +43,11 @@
      */
     public ConvergenceException(String pattern, Object ... arguments) {
         super(pattern, arguments);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
+		printStackTrace(System.err);
     }
 
     /**
2023-08-02 15:47:14 [main] [INFO]  PatchLogExporter - patch (v10830)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 15:47:16 [main] [INFO]  KGenProgMain - Summary
Reached generation = 110
Generated variants = 10830
Syntax valid variants = 9287
Build succeeded variants = 3829
Time elapsed = 5 hours 45 minutes 46 seconds
Exit status = SUCCESS
