2023-08-07 06:40:15 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 06:40:15 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 06:40:15 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 06:40:15 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 9 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 06:40:38 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-07 06:40:40 [main] [INFO]  KGenProgMain - GA started
2023-08-07 06:40:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 06:40:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 50, build-succeeded 5, build-failed 34, syntax-invalid 0, redundant 11
Fitness: max 0.991(2), min 0.966(1), ave 0.983
Test execution time: sum 4752 ms, max 1391 ms, min 649 ms
----------------------------------------------------------------

2023-08-07 06:40:50 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 06:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 50, build-succeeded 6, build-failed 29, syntax-invalid 1, redundant 14
Fitness: max 0.991(5), min 0.966(1), ave 0.987
Test execution time: sum 3585 ms, max 808 ms, min 476 ms
----------------------------------------------------------------

2023-08-07 06:40:58 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 06:41:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 100, build-succeeded 14, build-failed 29, syntax-invalid 2, redundant 55
Fitness: max 1(1), min 0.957(1), ave 0.986
Test execution time: sum 7245 ms, max 704 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 06:41:09 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 06:41:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 100, build-succeeded 20, build-failed 27, syntax-invalid 10, redundant 43
Fitness: max 0.991(15), min 0.94(1), ave 0.985
Test execution time: sum 9971 ms, max 790 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 06:41:24 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 06:41:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 5 seconds
Variants: generated 100, build-succeeded 33, build-failed 18, syntax-invalid 13, redundant 36
Fitness: max 1(1), min 0.957(1), ave 0.986
Test execution time: sum 15919 ms, max 654 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 06:41:45 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 06:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 18 seconds
Variants: generated 100, build-succeeded 16, build-failed 26, syntax-invalid 25, redundant 33
Fitness: max 0.991(10), min 0.974(3), ave 0.987
Test execution time: sum 7584 ms, max 609 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 06:41:58 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 06:42:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 32 seconds
Variants: generated 100, build-succeeded 21, build-failed 29, syntax-invalid 33, redundant 17
Fitness: max 0.991(16), min 0.966(2), ave 0.988
Test execution time: sum 9565 ms, max 528 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 06:42:12 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 06:42:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 46 seconds
Variants: generated 100, build-succeeded 19, build-failed 25, syntax-invalid 32, redundant 24
Fitness: max 1(1), min 0.931(1), ave 0.985
Test execution time: sum 9250 ms, max 691 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:42:26 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 06:42:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 58 seconds
Variants: generated 100, build-succeeded 18, build-failed 30, syntax-invalid 25, redundant 27
Fitness: max 0.991(13), min 0.966(5), ave 0.984
Test execution time: sum 8508 ms, max 614 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 06:42:39 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 06:42:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 12 seconds
Variants: generated 100, build-succeeded 20, build-failed 29, syntax-invalid 27, redundant 24
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 9312 ms, max 579 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 06:42:52 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 06:43:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 30 seconds
Variants: generated 100, build-succeeded 28, build-failed 30, syntax-invalid 28, redundant 14
Fitness: max 1(1), min 0.966(4), ave 0.987
Test execution time: sum 13442 ms, max 771 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:43:11 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 06:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 43 seconds
Variants: generated 100, build-succeeded 18, build-failed 30, syntax-invalid 21, redundant 31
Fitness: max 0.991(16), min 0.974(1), ave 0.99
Test execution time: sum 8272 ms, max 520 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:43:23 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 06:43:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 58 seconds
Variants: generated 100, build-succeeded 22, build-failed 34, syntax-invalid 31, redundant 13
Fitness: max 0.991(18), min 0.845(1), ave 0.983
Test execution time: sum 9889 ms, max 487 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:43:38 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 06:43:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 17 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 23, redundant 19
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 14675 ms, max 699 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 06:43:58 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 06:44:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 34 seconds
Variants: generated 100, build-succeeded 24, build-failed 33, syntax-invalid 24, redundant 19
Fitness: max 0.991(16), min 0.966(1), ave 0.987
Test execution time: sum 11287 ms, max 765 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:44:14 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 06:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 50 seconds
Variants: generated 100, build-succeeded 26, build-failed 26, syntax-invalid 32, redundant 16
Fitness: max 1(1), min 0.836(1), ave 0.985
Test execution time: sum 11849 ms, max 530 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 06:44:30 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 06:44:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 8 seconds
Variants: generated 100, build-succeeded 28, build-failed 29, syntax-invalid 23, redundant 20
Fitness: max 1(1), min 0.983(6), ave 0.99
Test execution time: sum 12968 ms, max 549 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 06:44:48 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 06:45:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 25 seconds
Variants: generated 100, build-succeeded 24, build-failed 25, syntax-invalid 36, redundant 15
Fitness: max 0.991(19), min 0.966(1), ave 0.989
Test execution time: sum 11733 ms, max 887 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:45:05 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 06:45:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 44 seconds
Variants: generated 100, build-succeeded 26, build-failed 30, syntax-invalid 32, redundant 12
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 13789 ms, max 849 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:45:24 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 06:45:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 5 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 24, redundant 14
Fitness: max 1(1), min 0.983(4), ave 0.991
Test execution time: sum 15721 ms, max 859 ms, min 398 ms
----------------------------------------------------------------

2023-08-07 06:45:45 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 06:46:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 23 seconds
Variants: generated 100, build-succeeded 24, build-failed 29, syntax-invalid 32, redundant 15
Fitness: max 0.991(21), min 0.983(3), ave 0.99
Test execution time: sum 13182 ms, max 976 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:46:04 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 06:46:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 47 seconds
Variants: generated 100, build-succeeded 33, build-failed 28, syntax-invalid 24, redundant 15
Fitness: max 0.991(27), min 0.845(1), ave 0.985
Test execution time: sum 18178 ms, max 837 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 06:46:28 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 06:46:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 5 seconds
Variants: generated 100, build-succeeded 21, build-failed 33, syntax-invalid 29, redundant 17
Fitness: max 0.991(12), min 0.966(2), ave 0.986
Test execution time: sum 11391 ms, max 756 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 06:46:45 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 06:47:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 28 seconds
Variants: generated 100, build-succeeded 31, build-failed 27, syntax-invalid 28, redundant 14
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 17969 ms, max 880 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 06:47:08 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 06:47:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 47 seconds
Variants: generated 100, build-succeeded 24, build-failed 30, syntax-invalid 32, redundant 14
Fitness: max 0.991(23), min 0.966(1), ave 0.99
Test execution time: sum 14005 ms, max 789 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 06:47:27 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 06:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 9 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 27, redundant 15
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 15911 ms, max 864 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 06:47:49 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 06:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 37 seconds
Variants: generated 100, build-succeeded 35, build-failed 25, syntax-invalid 33, redundant 7
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 21505 ms, max 897 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:48:18 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 06:48:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 10 seconds
Variants: generated 100, build-succeeded 38, build-failed 25, syntax-invalid 27, redundant 10
Fitness: max 0.991(32), min 0.966(1), ave 0.989
Test execution time: sum 24867 ms, max 886 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 06:48:51 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 06:49:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 31 seconds
Variants: generated 100, build-succeeded 16, build-failed 27, syntax-invalid 46, redundant 11
Fitness: max 0.991(12), min 0.914(1), ave 0.984
Test execution time: sum 12709 ms, max 999 ms, min 516 ms
----------------------------------------------------------------

2023-08-07 06:49:11 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 06:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 54 seconds
Variants: generated 100, build-succeeded 25, build-failed 37, syntax-invalid 32, redundant 6
Fitness: max 0.991(18), min 0.966(1), ave 0.988
Test execution time: sum 17035 ms, max 880 ms, min 469 ms
----------------------------------------------------------------

2023-08-07 06:49:35 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 06:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 13 seconds
Variants: generated 100, build-succeeded 22, build-failed 32, syntax-invalid 39, redundant 7
Fitness: max 0.991(16), min 0.897(1), ave 0.983
Test execution time: sum 12095 ms, max 945 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 06:49:53 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 06:50:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 29 seconds
Variants: generated 100, build-succeeded 21, build-failed 36, syntax-invalid 34, redundant 9
Fitness: max 1(2), min 0.931(1), ave 0.988
Test execution time: sum 10354 ms, max 719 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 06:50:09 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 06:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 47 seconds
Variants: generated 100, build-succeeded 27, build-failed 24, syntax-invalid 37, redundant 12
Fitness: max 1(4), min 0.845(1), ave 0.985
Test execution time: sum 13376 ms, max 744 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:50:27 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 06:50:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 4 seconds
Variants: generated 100, build-succeeded 25, build-failed 27, syntax-invalid 36, redundant 12
Fitness: max 0.991(24), min 0.983(1), ave 0.991
Test execution time: sum 12609 ms, max 788 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 06:50:44 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 06:50:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 18 seconds
Variants: generated 100, build-succeeded 17, build-failed 37, syntax-invalid 33, redundant 13
Fitness: max 0.991(17), min 0.991(17), ave 0.991
Test execution time: sum 8214 ms, max 789 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 06:50:58 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 06:51:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 37 seconds
Variants: generated 100, build-succeeded 28, build-failed 27, syntax-invalid 31, redundant 14
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 14596 ms, max 872 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:51:18 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 06:51:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 57 seconds
Variants: generated 100, build-succeeded 27, build-failed 29, syntax-invalid 27, redundant 17
Fitness: max 1(3), min 0.966(2), ave 0.99
Test execution time: sum 13814 ms, max 823 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 06:51:37 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 06:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 15 seconds
Variants: generated 100, build-succeeded 25, build-failed 28, syntax-invalid 26, redundant 21
Fitness: max 1(3), min 0.991(22), ave 0.992
Test execution time: sum 12591 ms, max 778 ms, min 407 ms
----------------------------------------------------------------

2023-08-07 06:51:56 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 06:52:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 37 seconds
Variants: generated 100, build-succeeded 25, build-failed 25, syntax-invalid 35, redundant 15
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 14742 ms, max 1066 ms, min 393 ms
----------------------------------------------------------------

2023-08-07 06:52:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 06:52:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 55 seconds
Variants: generated 100, build-succeeded 23, build-failed 34, syntax-invalid 26, redundant 17
Fitness: max 1(3), min 0.974(1), ave 0.991
Test execution time: sum 12479 ms, max 825 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:52:35 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 06:52:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 12 seconds
Variants: generated 100, build-succeeded 21, build-failed 32, syntax-invalid 34, redundant 13
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 11471 ms, max 843 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 06:52:52 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 06:53:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 28 seconds
Variants: generated 100, build-succeeded 19, build-failed 31, syntax-invalid 31, redundant 19
Fitness: max 0.991(16), min 0.974(1), ave 0.99
Test execution time: sum 10743 ms, max 895 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:53:08 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 06:53:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 45 seconds
Variants: generated 100, build-succeeded 22, build-failed 33, syntax-invalid 29, redundant 16
Fitness: max 0.991(15), min 0.957(1), ave 0.985
Test execution time: sum 11804 ms, max 803 ms, min 392 ms
----------------------------------------------------------------

2023-08-07 06:53:25 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 06:53:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 59 seconds
Variants: generated 100, build-succeeded 16, build-failed 25, syntax-invalid 40, redundant 19
Fitness: max 0.991(13), min 0.983(3), ave 0.99
Test execution time: sum 8848 ms, max 885 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:53:39 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 06:53:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 14 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 35, redundant 17
Fitness: max 0.991(13), min 0.983(4), ave 0.989
Test execution time: sum 10239 ms, max 814 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 06:53:54 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 06:54:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 29 seconds
Variants: generated 100, build-succeeded 18, build-failed 22, syntax-invalid 36, redundant 24
Fitness: max 0.991(16), min 0.983(2), ave 0.99
Test execution time: sum 10128 ms, max 802 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 06:54:09 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 06:54:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 41 seconds
Variants: generated 100, build-succeeded 13, build-failed 24, syntax-invalid 45, redundant 18
Fitness: max 0.991(9), min 0.957(1), ave 0.985
Test execution time: sum 7052 ms, max 755 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:54:21 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 06:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 56 seconds
Variants: generated 100, build-succeeded 17, build-failed 30, syntax-invalid 43, redundant 10
Fitness: max 0.991(15), min 0.966(1), ave 0.989
Test execution time: sum 10594 ms, max 867 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 06:54:36 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 06:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 9 seconds
Variants: generated 100, build-succeeded 12, build-failed 36, syntax-invalid 41, redundant 11
Fitness: max 0.991(9), min 0.983(3), ave 0.989
Test execution time: sum 7059 ms, max 774 ms, min 453 ms
----------------------------------------------------------------

2023-08-07 06:54:49 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 06:55:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 23 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 37, redundant 14
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 8131 ms, max 841 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 06:55:03 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 06:55:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 45 seconds
Variants: generated 100, build-succeeded 24, build-failed 28, syntax-invalid 39, redundant 9
Fitness: max 1(1), min 0.983(4), ave 0.99
Test execution time: sum 16577 ms, max 998 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 06:55:26 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 06:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 59 seconds
Variants: generated 100, build-succeeded 9, build-failed 34, syntax-invalid 40, redundant 17
Fitness: max 0.991(8), min 0.966(1), ave 0.989
Test execution time: sum 6252 ms, max 938 ms, min 563 ms
----------------------------------------------------------------

2023-08-07 06:55:39 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 06:55:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 12 seconds
Variants: generated 100, build-succeeded 12, build-failed 31, syntax-invalid 46, redundant 11
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 8080 ms, max 911 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 06:55:52 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 06:56:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 27 seconds
Variants: generated 100, build-succeeded 14, build-failed 28, syntax-invalid 43, redundant 15
Fitness: max 0.991(12), min 0.966(1), ave 0.989
Test execution time: sum 9635 ms, max 851 ms, min 473 ms
----------------------------------------------------------------

2023-08-07 06:56:07 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 06:56:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 40 seconds
Variants: generated 100, build-succeeded 11, build-failed 37, syntax-invalid 42, redundant 10
Fitness: max 0.991(9), min 0.966(1), ave 0.988
Test execution time: sum 7443 ms, max 837 ms, min 494 ms
----------------------------------------------------------------

2023-08-07 06:56:21 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 06:56:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 56 seconds
Variants: generated 100, build-succeeded 13, build-failed 29, syntax-invalid 45, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 9081 ms, max 902 ms, min 510 ms
----------------------------------------------------------------

2023-08-07 06:56:36 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 06:56:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 9 seconds
Variants: generated 100, build-succeeded 12, build-failed 32, syntax-invalid 41, redundant 15
Fitness: max 0.991(7), min 0.914(1), ave 0.981
Test execution time: sum 7187 ms, max 799 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 06:56:49 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-07 06:57:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 21 seconds
Variants: generated 100, build-succeeded 14, build-failed 25, syntax-invalid 50, redundant 11
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 7538 ms, max 956 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 06:57:01 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-07 06:57:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 35 seconds
Variants: generated 100, build-succeeded 17, build-failed 29, syntax-invalid 42, redundant 12
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 9101 ms, max 743 ms, min 398 ms
----------------------------------------------------------------

2023-08-07 06:57:15 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-07 06:57:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 49 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 41, redundant 10
Fitness: max 0.991(12), min 0.966(1), ave 0.989
Test execution time: sum 8260 ms, max 897 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:57:30 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-07 06:57:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 1 seconds
Variants: generated 100, build-succeeded 13, build-failed 26, syntax-invalid 42, redundant 19
Fitness: max 0.991(10), min 0.966(3), ave 0.985
Test execution time: sum 7361 ms, max 772 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:57:41 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-07 06:57:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 13 seconds
Variants: generated 100, build-succeeded 13, build-failed 26, syntax-invalid 45, redundant 16
Fitness: max 0.991(9), min 0.914(1), ave 0.982
Test execution time: sum 7256 ms, max 810 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:57:53 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 06:58:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 23 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 47, redundant 15
Fitness: max 0.991(7), min 0.966(1), ave 0.988
Test execution time: sum 4913 ms, max 797 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 06:58:03 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 06:58:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 33 seconds
Variants: generated 100, build-succeeded 10, build-failed 25, syntax-invalid 51, redundant 14
Fitness: max 0.991(9), min 0.983(1), ave 0.991
Test execution time: sum 5863 ms, max 823 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 06:58:13 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 06:58:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 44 seconds
Variants: generated 100, build-succeeded 10, build-failed 31, syntax-invalid 48, redundant 11
Fitness: max 0.991(10), min 0.991(10), ave 0.991
Test execution time: sum 6003 ms, max 825 ms, min 455 ms
----------------------------------------------------------------

2023-08-07 06:58:24 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 06:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 56 seconds
Variants: generated 100, build-succeeded 10, build-failed 27, syntax-invalid 45, redundant 18
Fitness: max 0.991(7), min 0.931(1), ave 0.983
Test execution time: sum 6147 ms, max 931 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 06:58:36 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 06:58:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 11 seconds
Variants: generated 100, build-succeeded 17, build-failed 22, syntax-invalid 48, redundant 13
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 10095 ms, max 799 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:58:51 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 06:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 22 seconds
Variants: generated 100, build-succeeded 9, build-failed 34, syntax-invalid 50, redundant 7
Fitness: max 1(2), min 0.905(1), ave 0.984
Test execution time: sum 5462 ms, max 762 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 06:59:02 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 06:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 34 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 51, redundant 11
Fitness: max 0.991(8), min 0.966(2), ave 0.986
Test execution time: sum 7342 ms, max 828 ms, min 478 ms
----------------------------------------------------------------

2023-08-07 06:59:14 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 06:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 47 seconds
Variants: generated 100, build-succeeded 9, build-failed 35, syntax-invalid 45, redundant 11
Fitness: max 0.991(6), min 0.888(1), ave 0.978
Test execution time: sum 6297 ms, max 884 ms, min 476 ms
----------------------------------------------------------------

2023-08-07 06:59:27 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 06:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 1 seconds
Variants: generated 100, build-succeeded 13, build-failed 30, syntax-invalid 47, redundant 10
Fitness: max 0.991(11), min 0.914(1), ave 0.983
Test execution time: sum 8823 ms, max 909 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 06:59:42 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 06:59:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 13 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 55, redundant 13
Fitness: max 1(1), min 0.845(1), ave 0.975
Test execution time: sum 6203 ms, max 848 ms, min 487 ms
----------------------------------------------------------------

2023-08-07 06:59:53 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 07:00:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 22 seconds
Variants: generated 100, build-succeeded 7, build-failed 31, syntax-invalid 53, redundant 9
Fitness: max 0.991(7), min 0.991(7), ave 0.991
Test execution time: sum 5006 ms, max 754 ms, min 668 ms
----------------------------------------------------------------

2023-08-07 07:00:03 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 07:00:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 34 seconds
Variants: generated 100, build-succeeded 10, build-failed 21, syntax-invalid 57, redundant 12
Fitness: max 0.991(5), min 0.966(3), ave 0.981
Test execution time: sum 6675 ms, max 901 ms, min 515 ms
----------------------------------------------------------------

2023-08-07 07:00:14 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 07:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 45 seconds
Variants: generated 100, build-succeeded 9, build-failed 34, syntax-invalid 45, redundant 12
Fitness: max 0.991(6), min 0.845(1), ave 0.968
Test execution time: sum 6247 ms, max 820 ms, min 564 ms
----------------------------------------------------------------

2023-08-07 07:00:25 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 07:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 56 seconds
Variants: generated 100, build-succeeded 11, build-failed 23, syntax-invalid 58, redundant 8
Fitness: max 0.991(10), min 0.983(1), ave 0.991
Test execution time: sum 5967 ms, max 785 ms, min 400 ms
----------------------------------------------------------------

2023-08-07 07:00:36 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 07:00:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 4 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 52, redundant 16
Fitness: max 0.991(2), min 0.836(1), ave 0.961
Test execution time: sum 3960 ms, max 754 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 07:00:44 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 07:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 11 seconds
Variants: generated 100, build-succeeded 7, build-failed 22, syntax-invalid 49, redundant 22
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 3812 ms, max 732 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 07:00:51 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 07:00:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 18 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 50, redundant 15
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 2764 ms, max 745 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 07:00:58 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 07:01:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 26 seconds
Variants: generated 100, build-succeeded 7, build-failed 27, syntax-invalid 55, redundant 11
Fitness: max 0.991(3), min 0.836(1), ave 0.958
Test execution time: sum 3857 ms, max 745 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 07:01:06 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 07:01:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 36 seconds
Variants: generated 100, build-succeeded 12, build-failed 21, syntax-invalid 53, redundant 14
Fitness: max 0.991(6), min 0.845(1), ave 0.976
Test execution time: sum 7017 ms, max 802 ms, min 381 ms
----------------------------------------------------------------

2023-08-07 07:01:17 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 07:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 44 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 51, redundant 17
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 2892 ms, max 612 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 07:01:24 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 07:01:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 51 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 54, redundant 15
Fitness: max 0.991(3), min 0.931(1), ave 0.974
Test execution time: sum 3528 ms, max 848 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 07:01:31 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 07:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 1 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 50, redundant 13
Fitness: max 0.991(5), min 0.931(1), ave 0.982
Test execution time: sum 4763 ms, max 780 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 07:01:42 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 07:01:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 12 seconds
Variants: generated 100, build-succeeded 10, build-failed 25, syntax-invalid 53, redundant 12
Fitness: max 0.991(5), min 0.836(1), ave 0.952
Test execution time: sum 5887 ms, max 894 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 07:01:52 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 07:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 18 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 55, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2002 ms, max 626 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 07:01:58 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 07:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 24 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 51, redundant 18
Fitness: max 0.991(4), min 0.836(1), ave 0.96
Test execution time: sum 3122 ms, max 856 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 07:02:04 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 07:02:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 35 seconds
Variants: generated 100, build-succeeded 12, build-failed 26, syntax-invalid 50, redundant 12
Fitness: max 0.991(9), min 0.966(1), ave 0.988
Test execution time: sum 6719 ms, max 815 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 07:02:16 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 07:02:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 43 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 52, redundant 17
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 3070 ms, max 820 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 07:02:23 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 07:02:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 48 seconds
Variants: generated 100, build-succeeded 3, build-failed 26, syntax-invalid 55, redundant 16
Fitness: max 0.983(2), min 0.845(1), ave 0.937
Test execution time: sum 1502 ms, max 597 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 07:02:28 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 07:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 57 seconds
Variants: generated 100, build-succeeded 8, build-failed 26, syntax-invalid 53, redundant 13
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 5043 ms, max 911 ms, min 466 ms
----------------------------------------------------------------

2023-08-07 07:02:38 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 07:02:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 7 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 49, redundant 14
Fitness: max 0.991(5), min 0.836(1), ave 0.971
Test execution time: sum 4981 ms, max 816 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:02:47 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 07:02:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 14 seconds
Variants: generated 100, build-succeeded 6, build-failed 28, syntax-invalid 55, redundant 11
Fitness: max 0.991(3), min 0.966(2), ave 0.981
Test execution time: sum 2989 ms, max 775 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 07:02:54 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 07:03:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 23 seconds
Variants: generated 100, build-succeeded 6, build-failed 32, syntax-invalid 52, redundant 10
Fitness: max 0.991(3), min 0.931(1), ave 0.977
Test execution time: sum 3773 ms, max 773 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 07:03:03 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 07:03:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 32 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 55, redundant 13
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 3990 ms, max 694 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 07:03:12 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 07:03:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 39 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 56, redundant 14
Fitness: max 0.991(1), min 0.845(1), ave 0.96
Test execution time: sum 3332 ms, max 783 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:03:19 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 07:03:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 49 seconds
Variants: generated 100, build-succeeded 9, build-failed 21, syntax-invalid 58, redundant 12
Fitness: max 0.991(4), min 0.966(2), ave 0.983
Test execution time: sum 5559 ms, max 868 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 07:03:29 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 07:03:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 57 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 56, redundant 14
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 3176 ms, max 894 ms, min 466 ms
----------------------------------------------------------------

2023-08-07 07:03:37 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 07:03:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 6 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 49, redundant 18
Fitness: max 0.991(5), min 0.966(1), ave 0.986
Test execution time: sum 5576 ms, max 794 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 07:03:47 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 07:04:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 20 seconds
Variants: generated 100, build-succeeded 14, build-failed 24, syntax-invalid 52, redundant 10
Fitness: max 1(1), min 0.914(1), ave 0.98
Test execution time: sum 8614 ms, max 871 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:04:00 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 07:04:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 29 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 53, redundant 14
Fitness: max 0.991(2), min 0.957(1), ave 0.981
Test execution time: sum 4260 ms, max 801 ms, min 549 ms
----------------------------------------------------------------

2023-08-07 07:04:09 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 07:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 36 seconds
Variants: generated 100, build-succeeded 4, build-failed 20, syntax-invalid 59, redundant 17
Fitness: max 0.991(2), min 0.931(1), ave 0.968
Test execution time: sum 2799 ms, max 745 ms, min 641 ms
----------------------------------------------------------------

2023-08-07 07:04:16 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 07:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 45 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 51, redundant 14
Fitness: max 0.991(2), min 0.914(1), ave 0.971
Test execution time: sum 3853 ms, max 857 ms, min 466 ms
----------------------------------------------------------------

2023-08-07 07:04:25 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 07:04:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 57 seconds
Variants: generated 100, build-succeeded 10, build-failed 24, syntax-invalid 52, redundant 14
Fitness: max 0.991(5), min 0.957(1), ave 0.983
Test execution time: sum 6568 ms, max 862 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 07:04:37 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 07:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 5 seconds
Variants: generated 100, build-succeeded 4, build-failed 27, syntax-invalid 53, redundant 16
Fitness: max 0.991(1), min 0.983(3), ave 0.985
Test execution time: sum 2725 ms, max 747 ms, min 647 ms
----------------------------------------------------------------

2023-08-07 07:04:45 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 07:04:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 14 seconds
Variants: generated 100, build-succeeded 7, build-failed 30, syntax-invalid 48, redundant 15
Fitness: max 0.991(5), min 0.966(1), ave 0.985
Test execution time: sum 4753 ms, max 837 ms, min 574 ms
----------------------------------------------------------------

2023-08-07 07:04:54 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 07:05:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 27 seconds
Variants: generated 100, build-succeeded 10, build-failed 29, syntax-invalid 52, redundant 9
Fitness: max 0.991(5), min 0.966(3), ave 0.982
Test execution time: sum 6933 ms, max 848 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 07:05:07 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 07:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 38 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 52, redundant 12
Fitness: max 0.991(6), min 0.966(1), ave 0.986
Test execution time: sum 6147 ms, max 840 ms, min 492 ms
----------------------------------------------------------------

2023-08-07 07:05:19 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 07:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 47 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 54, redundant 11
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 4051 ms, max 880 ms, min 515 ms
----------------------------------------------------------------

2023-08-07 07:05:28 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 07:05:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 54 seconds
Variants: generated 100, build-succeeded 3, build-failed 29, syntax-invalid 55, redundant 13
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1864 ms, max 685 ms, min 503 ms
----------------------------------------------------------------

2023-08-07 07:05:34 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 07:05:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 3 seconds
Variants: generated 100, build-succeeded 5, build-failed 31, syntax-invalid 49, redundant 15
Fitness: max 0.991(3), min 0.983(2), ave 0.988
Test execution time: sum 3396 ms, max 830 ms, min 572 ms
----------------------------------------------------------------

2023-08-07 07:05:43 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 07:05:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 13 seconds
Variants: generated 100, build-succeeded 7, build-failed 31, syntax-invalid 51, redundant 11
Fitness: max 0.991(4), min 0.983(3), ave 0.988
Test execution time: sum 4523 ms, max 775 ms, min 456 ms
----------------------------------------------------------------

2023-08-07 07:05:53 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 07:05:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 18 seconds
Variants: generated 100, build-succeeded 5, build-failed 18, syntax-invalid 57, redundant 20
Fitness: max 0.991(3), min 0.931(1), ave 0.978
Test execution time: sum 2796 ms, max 853 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 07:05:59 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 07:06:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 27 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 52, redundant 11
Fitness: max 0.991(5), min 0.836(1), ave 0.971
Test execution time: sum 4176 ms, max 628 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 07:06:07 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 07:06:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 34 seconds
Variants: generated 100, build-succeeded 7, build-failed 20, syntax-invalid 54, redundant 19
Fitness: max 0.991(4), min 0.966(1), ave 0.985
Test execution time: sum 3769 ms, max 792 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 07:06:14 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 07:06:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 42 seconds
Variants: generated 100, build-succeeded 8, build-failed 20, syntax-invalid 53, redundant 19
Fitness: max 0.991(4), min 0.966(2), ave 0.983
Test execution time: sum 4059 ms, max 676 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 07:06:22 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 07:06:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 51 seconds
Variants: generated 100, build-succeeded 11, build-failed 20, syntax-invalid 51, redundant 18
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 5137 ms, max 686 ms, min 392 ms
----------------------------------------------------------------

2023-08-07 07:06:31 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 07:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 58 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 50, redundant 13
Fitness: max 0.991(4), min 0.845(1), ave 0.957
Test execution time: sum 3301 ms, max 762 ms, min 391 ms
----------------------------------------------------------------

2023-08-07 07:06:38 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 07:06:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 4 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 54, redundant 16
Fitness: max 0.991(2), min 0.845(1), ave 0.955
Test execution time: sum 2663 ms, max 694 ms, min 391 ms
----------------------------------------------------------------

2023-08-07 07:06:45 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 07:06:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 13 seconds
Variants: generated 100, build-succeeded 10, build-failed 24, syntax-invalid 52, redundant 14
Fitness: max 0.991(5), min 0.983(5), ave 0.987
Test execution time: sum 5298 ms, max 833 ms, min 389 ms
----------------------------------------------------------------

2023-08-07 07:06:53 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 07:07:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 22 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4457 ms, max 833 ms, min 382 ms
----------------------------------------------------------------

2023-08-07 07:07:02 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 07:07:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 30 seconds
Variants: generated 100, build-succeeded 7, build-failed 26, syntax-invalid 51, redundant 16
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4136 ms, max 793 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:07:10 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 07:07:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 39 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 54, redundant 10
Fitness: max 0.991(5), min 0.983(2), ave 0.989
Test execution time: sum 3570 ms, max 703 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 07:07:20 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 07:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 52 seconds
Variants: generated 100, build-succeeded 14, build-failed 26, syntax-invalid 47, redundant 13
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 7189 ms, max 777 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 07:07:32 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 07:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 4 seconds
Variants: generated 100, build-succeeded 12, build-failed 32, syntax-invalid 49, redundant 7
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 6000 ms, max 775 ms, min 380 ms
----------------------------------------------------------------

2023-08-07 07:07:44 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 07:07:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 15 seconds
Variants: generated 100, build-succeeded 11, build-failed 30, syntax-invalid 53, redundant 6
Fitness: max 0.991(10), min 0.931(1), ave 0.986
Test execution time: sum 6144 ms, max 723 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 07:07:55 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 07:08:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 26 seconds
Variants: generated 100, build-succeeded 10, build-failed 28, syntax-invalid 49, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5745 ms, max 820 ms, min 387 ms
----------------------------------------------------------------

2023-08-07 07:08:07 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 07:08:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 35 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 51, redundant 13
Fitness: max 0.991(4), min 0.845(1), ave 0.966
Test execution time: sum 3665 ms, max 720 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 07:08:15 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 07:08:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 42 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 54, redundant 16
Fitness: max 0.991(4), min 0.966(2), ave 0.983
Test execution time: sum 3335 ms, max 826 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 07:08:22 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 07:08:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 54 seconds
Variants: generated 100, build-succeeded 13, build-failed 25, syntax-invalid 51, redundant 11
Fitness: max 1(2), min 0.957(1), ave 0.986
Test execution time: sum 7261 ms, max 878 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:08:34 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 07:08:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 4 seconds
Variants: generated 100, build-succeeded 9, build-failed 30, syntax-invalid 52, redundant 9
Fitness: max 0.991(7), min 0.966(1), ave 0.988
Test execution time: sum 5487 ms, max 722 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 07:08:45 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 07:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 13 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 51, redundant 11
Fitness: max 0.991(7), min 0.836(1), ave 0.958
Test execution time: sum 4627 ms, max 752 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:08:54 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 07:09:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 23 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 51, redundant 11
Fitness: max 0.991(8), min 0.983(1), ave 0.99
Test execution time: sum 4875 ms, max 782 ms, min 382 ms
----------------------------------------------------------------

2023-08-07 07:09:04 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 07:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 33 seconds
Variants: generated 100, build-succeeded 10, build-failed 21, syntax-invalid 53, redundant 16
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4821 ms, max 659 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 07:09:14 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 07:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 43 seconds
Variants: generated 100, build-succeeded 10, build-failed 26, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.991(9), ave 0.992
Test execution time: sum 5513 ms, max 765 ms, min 401 ms
----------------------------------------------------------------

2023-08-07 07:09:23 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 07:09:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 50 seconds
Variants: generated 100, build-succeeded 4, build-failed 27, syntax-invalid 53, redundant 16
Fitness: max 1(1), min 0.966(1), ave 0.985
Test execution time: sum 2368 ms, max 755 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 07:09:30 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 07:09:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 58 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 55, redundant 14
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3984 ms, max 895 ms, min 461 ms
----------------------------------------------------------------

2023-08-07 07:09:38 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 07:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 8 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 53, redundant 11
Fitness: max 0.991(6), min 0.974(1), ave 0.989
Test execution time: sum 3883 ms, max 820 ms, min 452 ms
----------------------------------------------------------------

2023-08-07 07:09:48 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 07:09:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 17 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 52, redundant 17
Fitness: max 0.991(7), min 0.983(1), ave 0.99
Test execution time: sum 4412 ms, max 693 ms, min 385 ms
----------------------------------------------------------------

2023-08-07 07:09:57 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 07:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 25 seconds
Variants: generated 100, build-succeeded 7, build-failed 22, syntax-invalid 56, redundant 15
Fitness: max 0.991(6), min 0.957(1), ave 0.986
Test execution time: sum 4225 ms, max 769 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 07:10:05 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 07:10:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 34 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 54, redundant 14
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 3076 ms, max 751 ms, min 473 ms
----------------------------------------------------------------

2023-08-07 07:10:14 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 07:10:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 43 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 52, redundant 13
Fitness: max 0.991(4), min 0.957(1), ave 0.982
Test execution time: sum 5120 ms, max 845 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 07:10:23 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 07:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 53 seconds
Variants: generated 100, build-succeeded 10, build-failed 23, syntax-invalid 54, redundant 13
Fitness: max 0.991(8), min 0.966(1), ave 0.988
Test execution time: sum 5832 ms, max 782 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 07:10:34 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 07:10:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 6 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 56, redundant 7
Fitness: max 1(1), min 0.888(1), ave 0.975
Test execution time: sum 5279 ms, max 926 ms, min 484 ms
----------------------------------------------------------------

2023-08-07 07:10:46 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 07:10:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 16 seconds
Variants: generated 100, build-succeeded 7, build-failed 24, syntax-invalid 54, redundant 15
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 4425 ms, max 803 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 07:10:56 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 07:11:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 28 seconds
Variants: generated 100, build-succeeded 10, build-failed 22, syntax-invalid 55, redundant 13
Fitness: max 1(2), min 0.966(1), ave 0.99
Test execution time: sum 6684 ms, max 856 ms, min 453 ms
----------------------------------------------------------------

2023-08-07 07:11:08 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 07:11:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 38 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 55, redundant 15
Fitness: max 0.991(5), min 0.957(1), ave 0.985
Test execution time: sum 5035 ms, max 842 ms, min 475 ms
----------------------------------------------------------------

2023-08-07 07:11:18 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 07:11:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 47 seconds
Variants: generated 100, build-succeeded 4, build-failed 33, syntax-invalid 55, redundant 8
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2522 ms, max 867 ms, min 519 ms
----------------------------------------------------------------

2023-08-07 07:11:27 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 07:11:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 3 seconds
Variants: generated 100, build-succeeded 14, build-failed 23, syntax-invalid 55, redundant 8
Fitness: max 0.991(6), min 0.836(1), ave 0.967
Test execution time: sum 8998 ms, max 788 ms, min 476 ms
----------------------------------------------------------------

2023-08-07 07:11:43 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 07:11:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 14 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 55, redundant 13
Fitness: max 0.991(5), min 0.974(1), ave 0.988
Test execution time: sum 4905 ms, max 870 ms, min 500 ms
----------------------------------------------------------------

2023-08-07 07:11:54 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 07:12:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 23 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.931(1), ave 0.97
Test execution time: sum 2545 ms, max 711 ms, min 520 ms
----------------------------------------------------------------

2023-08-07 07:12:03 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 07:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 34 seconds
Variants: generated 100, build-succeeded 7, build-failed 33, syntax-invalid 52, redundant 8
Fitness: max 0.991(4), min 0.966(1), ave 0.985
Test execution time: sum 4678 ms, max 842 ms, min 457 ms
----------------------------------------------------------------

2023-08-07 07:12:15 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 07:12:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 46 seconds
Variants: generated 100, build-succeeded 9, build-failed 17, syntax-invalid 52, redundant 22
Fitness: max 1(1), min 0.853(1), ave 0.975
Test execution time: sum 5683 ms, max 941 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 07:12:26 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 07:12:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 54 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 51, redundant 12
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 2580 ms, max 718 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 07:12:35 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 07:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 3 seconds
Variants: generated 100, build-succeeded 7, build-failed 33, syntax-invalid 53, redundant 7
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3951 ms, max 766 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:12:44 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 07:12:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 16 seconds
Variants: generated 100, build-succeeded 12, build-failed 25, syntax-invalid 51, redundant 12
Fitness: max 0.991(12), min 0.991(12), ave 0.991
Test execution time: sum 6973 ms, max 783 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 07:12:56 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 07:13:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 26 seconds
Variants: generated 100, build-succeeded 9, build-failed 31, syntax-invalid 53, redundant 7
Fitness: max 0.991(6), min 0.931(1), ave 0.983
Test execution time: sum 4890 ms, max 835 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 07:13:06 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 07:13:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 37 seconds
Variants: generated 100, build-succeeded 9, build-failed 30, syntax-invalid 52, redundant 9
Fitness: max 0.991(8), min 0.983(1), ave 0.99
Test execution time: sum 4765 ms, max 760 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 07:13:17 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 07:13:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 48 seconds
Variants: generated 100, build-succeeded 10, build-failed 27, syntax-invalid 53, redundant 10
Fitness: max 1(3), min 0.983(3), ave 0.991
Test execution time: sum 5163 ms, max 800 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:13:28 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 07:13:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 58 seconds
Variants: generated 100, build-succeeded 8, build-failed 26, syntax-invalid 54, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4590 ms, max 838 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 07:13:38 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 07:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 8 seconds
Variants: generated 100, build-succeeded 4, build-failed 32, syntax-invalid 54, redundant 10
Fitness: max 1(1), min 0.966(1), ave 0.987
Test execution time: sum 3159 ms, max 1047 ms, min 495 ms
----------------------------------------------------------------

2023-08-07 07:13:48 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 07:14:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 20 seconds
Variants: generated 100, build-succeeded 12, build-failed 20, syntax-invalid 54, redundant 14
Fitness: max 0.991(8), min 0.966(1), ave 0.987
Test execution time: sum 6253 ms, max 750 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 07:14:00 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 07:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 32 seconds
Variants: generated 100, build-succeeded 11, build-failed 24, syntax-invalid 53, redundant 12
Fitness: max 1(1), min 0.888(1), ave 0.982
Test execution time: sum 5848 ms, max 837 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 07:14:13 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 07:14:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 44 seconds
Variants: generated 100, build-succeeded 11, build-failed 28, syntax-invalid 51, redundant 10
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5747 ms, max 865 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 07:14:24 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 07:14:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 54 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 55, redundant 15
Fitness: max 0.991(3), min 0.957(1), ave 0.98
Test execution time: sum 3635 ms, max 751 ms, min 456 ms
----------------------------------------------------------------

2023-08-07 07:14:34 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 07:14:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 7 seconds
Variants: generated 100, build-succeeded 13, build-failed 24, syntax-invalid 54, redundant 9
Fitness: max 0.991(9), min 0.983(4), ave 0.989
Test execution time: sum 7332 ms, max 730 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 07:14:47 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 07:14:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 18 seconds
Variants: generated 100, build-succeeded 9, build-failed 21, syntax-invalid 55, redundant 15
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 5519 ms, max 830 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 07:14:58 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 07:15:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 29 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 54, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5130 ms, max 873 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 07:15:09 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 07:15:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 38 seconds
Variants: generated 100, build-succeeded 7, build-failed 21, syntax-invalid 52, redundant 20
Fitness: max 0.991(4), min 0.983(3), ave 0.988
Test execution time: sum 3783 ms, max 728 ms, min 387 ms
----------------------------------------------------------------

2023-08-07 07:15:18 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 07:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 49 seconds
Variants: generated 100, build-succeeded 9, build-failed 22, syntax-invalid 52, redundant 17
Fitness: max 0.991(7), min 0.983(2), ave 0.989
Test execution time: sum 5262 ms, max 881 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 07:15:29 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 07:15:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 4 seconds
Variants: generated 100, build-succeeded 14, build-failed 24, syntax-invalid 51, redundant 11
Fitness: max 0.991(10), min 0.983(4), ave 0.989
Test execution time: sum 8383 ms, max 788 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 07:15:44 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 07:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 16 seconds
Variants: generated 100, build-succeeded 9, build-failed 25, syntax-invalid 51, redundant 15
Fitness: max 0.991(8), min 0.983(1), ave 0.99
Test execution time: sum 5579 ms, max 745 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 07:15:56 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 07:16:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 24 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 53, redundant 13
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2355 ms, max 726 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 07:16:04 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-07 07:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 36 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.966(1), ave 0.987
Test execution time: sum 4844 ms, max 797 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 07:16:16 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-07 07:16:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 44 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 51, redundant 16
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 2784 ms, max 656 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 07:16:25 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-07 07:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 57 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 5522 ms, max 803 ms, min 455 ms
----------------------------------------------------------------

2023-08-07 07:16:37 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-07 07:16:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 8 seconds
Variants: generated 100, build-succeeded 7, build-failed 31, syntax-invalid 53, redundant 9
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 4601 ms, max 792 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 07:16:48 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-07 07:17:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 20 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 53, redundant 13
Fitness: max 1(1), min 0.966(1), ave 0.985
Test execution time: sum 3050 ms, max 961 ms, min 460 ms
----------------------------------------------------------------

2023-08-07 07:17:00 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-07 07:17:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 33 seconds
Variants: generated 100, build-succeeded 10, build-failed 22, syntax-invalid 53, redundant 15
Fitness: max 0.991(8), min 0.957(1), ave 0.987
Test execution time: sum 5977 ms, max 884 ms, min 467 ms
----------------------------------------------------------------

2023-08-07 07:17:13 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-07 07:17:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 44 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 53, redundant 14
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3440 ms, max 784 ms, min 523 ms
----------------------------------------------------------------

2023-08-07 07:17:24 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-07 07:17:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 53 seconds
Variants: generated 100, build-succeeded 4, build-failed 24, syntax-invalid 53, redundant 19
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 2370 ms, max 956 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:17:33 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-07 07:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 4 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 53, redundant 12
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 5142 ms, max 863 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 07:17:44 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-07 07:17:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 15 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 51, redundant 11
Fitness: max 1(1), min 0.974(1), ave 0.99
Test execution time: sum 5178 ms, max 824 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 07:17:56 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-07 07:18:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 27 seconds
Variants: generated 100, build-succeeded 7, build-failed 28, syntax-invalid 51, redundant 14
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4068 ms, max 775 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 07:18:07 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-07 07:18:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 41 seconds
Variants: generated 100, build-succeeded 11, build-failed 24, syntax-invalid 54, redundant 11
Fitness: max 1(1), min 0.931(1), ave 0.983
Test execution time: sum 7114 ms, max 761 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 07:18:21 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-07 07:18:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 55 seconds
Variants: generated 100, build-succeeded 12, build-failed 24, syntax-invalid 52, redundant 12
Fitness: max 0.991(7), min 0.974(1), ave 0.987
Test execution time: sum 7460 ms, max 781 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 07:18:36 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-07 07:18:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 10 seconds
Variants: generated 100, build-succeeded 11, build-failed 24, syntax-invalid 54, redundant 11
Fitness: max 1(1), min 0.836(1), ave 0.973
Test execution time: sum 6974 ms, max 830 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 07:18:50 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-07 07:19:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 23 seconds
Variants: generated 100, build-succeeded 9, build-failed 21, syntax-invalid 56, redundant 14
Fitness: max 1(1), min 0.983(4), ave 0.989
Test execution time: sum 6023 ms, max 736 ms, min 552 ms
----------------------------------------------------------------

2023-08-07 07:19:03 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-07 07:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 34 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 53, redundant 15
Fitness: max 0.991(2), min 0.966(1), ave 0.983
Test execution time: sum 5122 ms, max 809 ms, min 381 ms
----------------------------------------------------------------

2023-08-07 07:19:14 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-07 07:19:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 46 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 52, redundant 16
Fitness: max 0.991(7), min 0.966(1), ave 0.988
Test execution time: sum 4984 ms, max 855 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 07:19:26 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-07 07:19:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 1 seconds
Variants: generated 100, build-succeeded 13, build-failed 24, syntax-invalid 51, redundant 12
Fitness: max 0.991(8), min 0.957(1), ave 0.985
Test execution time: sum 7690 ms, max 794 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 07:19:41 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-07 07:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 10 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 52, redundant 15
Fitness: max 0.991(3), min 0.966(1), ave 0.985
Test execution time: sum 2420 ms, max 865 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 07:19:50 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-07 07:20:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 21 seconds
Variants: generated 100, build-succeeded 7, build-failed 22, syntax-invalid 56, redundant 15
Fitness: max 1(1), min 0.966(2), ave 0.985
Test execution time: sum 4192 ms, max 849 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 07:20:01 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-07 07:20:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 33 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 53, redundant 14
Fitness: max 0.991(7), min 0.983(1), ave 0.99
Test execution time: sum 4587 ms, max 754 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 07:20:14 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-07 07:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 43 seconds
Variants: generated 100, build-succeeded 3, build-failed 34, syntax-invalid 51, redundant 12
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1728 ms, max 772 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 07:20:23 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-07 07:20:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 55 seconds
Variants: generated 100, build-succeeded 7, build-failed 27, syntax-invalid 54, redundant 12
Fitness: max 0.991(5), min 0.922(1), ave 0.98
Test execution time: sum 4665 ms, max 814 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 07:20:35 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-07 07:20:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 6 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 51, redundant 12
Fitness: max 0.991(3), min 0.983(2), ave 0.988
Test execution time: sum 3282 ms, max 820 ms, min 491 ms
----------------------------------------------------------------

2023-08-07 07:20:46 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-07 07:21:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 20 seconds
Variants: generated 100, build-succeeded 11, build-failed 26, syntax-invalid 52, redundant 11
Fitness: max 0.991(8), min 0.957(1), ave 0.985
Test execution time: sum 7416 ms, max 915 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 07:21:01 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-07 07:21:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 36 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 55, redundant 7
Fitness: max 1(1), min 0.991(10), ave 0.992
Test execution time: sum 7540 ms, max 817 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 07:21:16 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-07 07:21:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 49 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 52, redundant 13
Fitness: max 0.991(2), min 0.983(4), ave 0.986
Test execution time: sum 4297 ms, max 892 ms, min 582 ms
----------------------------------------------------------------

2023-08-07 07:21:29 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-07 07:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 1 seconds
Variants: generated 100, build-succeeded 10, build-failed 27, syntax-invalid 55, redundant 8
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 5264 ms, max 739 ms, min 407 ms
----------------------------------------------------------------

2023-08-07 07:21:41 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-07 07:21:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 11 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 50, redundant 17
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3345 ms, max 652 ms, min 469 ms
----------------------------------------------------------------

2023-08-07 07:21:51 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-07 07:22:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 20 seconds
Variants: generated 100, build-succeeded 5, build-failed 33, syntax-invalid 52, redundant 10
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 2810 ms, max 700 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:22:00 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-07 07:22:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 30 seconds
Variants: generated 100, build-succeeded 5, build-failed 29, syntax-invalid 52, redundant 14
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3225 ms, max 795 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 07:22:10 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-07 07:22:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 41 seconds
Variants: generated 100, build-succeeded 8, build-failed 22, syntax-invalid 56, redundant 14
Fitness: max 0.991(5), min 0.983(3), ave 0.988
Test execution time: sum 4407 ms, max 807 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 07:22:21 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-07 07:22:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 52 seconds
Variants: generated 100, build-succeeded 7, build-failed 26, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4146 ms, max 915 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 07:22:33 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-07 07:22:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 2 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 56, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2731 ms, max 803 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 07:22:42 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-07 07:22:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 12 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 53, redundant 13
Fitness: max 0.991(1), min 0.853(1), ave 0.944
Test execution time: sum 2295 ms, max 724 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 07:22:52 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-07 07:23:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 26 seconds
Variants: generated 100, build-succeeded 11, build-failed 24, syntax-invalid 52, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 6386 ms, max 857 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 07:23:06 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-07 07:23:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 35 seconds
Variants: generated 100, build-succeeded 3, build-failed 35, syntax-invalid 51, redundant 11
Fitness: max 1(1), min 0.991(2), ave 0.994
Test execution time: sum 1351 ms, max 472 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 07:23:15 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-07 07:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 45 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 51, redundant 15
Fitness: max 0.991(1), min 0.966(2), ave 0.976
Test execution time: sum 2776 ms, max 831 ms, min 452 ms
----------------------------------------------------------------

2023-08-07 07:23:25 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-07 07:23:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 53 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 53, redundant 16
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1414 ms, max 515 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 07:23:33 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-07 07:23:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 2 seconds
Variants: generated 100, build-succeeded 3, build-failed 30, syntax-invalid 50, redundant 17
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 2308 ms, max 965 ms, min 669 ms
----------------------------------------------------------------

2023-08-07 07:23:43 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-07 07:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 13 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 51, redundant 15
Fitness: max 0.991(3), min 0.957(1), ave 0.983
Test execution time: sum 2448 ms, max 785 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 07:23:53 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-07 07:24:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 25 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 51, redundant 16
Fitness: max 0.991(5), min 0.922(1), ave 0.975
Test execution time: sum 4997 ms, max 730 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 07:24:05 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-07 07:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 37 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 53, redundant 9
Fitness: max 0.991(4), min 0.983(4), ave 0.987
Test execution time: sum 5078 ms, max 919 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 07:24:17 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-07 07:24:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 49 seconds
Variants: generated 100, build-succeeded 9, build-failed 17, syntax-invalid 53, redundant 21
Fitness: max 1(1), min 0.991(8), ave 0.992
Test execution time: sum 5447 ms, max 844 ms, min 447 ms
----------------------------------------------------------------

2023-08-07 07:24:29 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-07 07:24:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 59 seconds
Variants: generated 100, build-succeeded 3, build-failed 32, syntax-invalid 53, redundant 12
Fitness: max 1(2), min 0.905(1), ave 0.968
Test execution time: sum 2124 ms, max 944 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 07:24:39 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-07 07:24:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 11 seconds
Variants: generated 100, build-succeeded 8, build-failed 24, syntax-invalid 53, redundant 15
Fitness: max 1(1), min 0.836(1), ave 0.972
Test execution time: sum 4952 ms, max 801 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 07:24:51 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-07 07:25:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 23 seconds
Variants: generated 100, build-succeeded 8, build-failed 28, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4572 ms, max 749 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 07:25:03 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-07 07:25:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 35 seconds
Variants: generated 100, build-succeeded 6, build-failed 33, syntax-invalid 52, redundant 9
Fitness: max 0.991(2), min 0.957(1), ave 0.978
Test execution time: sum 3749 ms, max 790 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 07:25:15 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-07 07:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 46 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 52, redundant 16
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 3416 ms, max 781 ms, min 473 ms
----------------------------------------------------------------

2023-08-07 07:25:26 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-07 07:25:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 57 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.991(5), ave 0.993
Test execution time: sum 4047 ms, max 831 ms, min 492 ms
----------------------------------------------------------------

2023-08-07 07:25:37 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-07 07:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 6 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 53, redundant 13
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2287 ms, max 828 ms, min 460 ms
----------------------------------------------------------------

2023-08-07 07:25:47 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-07 07:25:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 19 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 57, redundant 12
Fitness: max 0.991(6), min 0.983(2), ave 0.989
Test execution time: sum 4598 ms, max 754 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 07:25:59 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-07 07:26:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 31 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 53, redundant 17
Fitness: max 0.991(4), min 0.983(3), ave 0.988
Test execution time: sum 4881 ms, max 946 ms, min 447 ms
----------------------------------------------------------------

2023-08-07 07:26:12 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-07 07:26:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 42 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 50, redundant 20
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 3550 ms, max 839 ms, min 586 ms
----------------------------------------------------------------

2023-08-07 07:26:22 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-07 07:26:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 52 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 52, redundant 16
Fitness: max 0.991(3), min 0.966(1), ave 0.984
Test execution time: sum 2804 ms, max 712 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 07:26:32 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-07 07:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 3 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 52, redundant 17
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3265 ms, max 863 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 07:26:43 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-07 07:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 15 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 53, redundant 14
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 5703 ms, max 821 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 07:26:56 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-07 07:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 25 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 55, redundant 14
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1719 ms, max 661 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 07:27:05 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-07 07:27:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 37 seconds
Variants: generated 100, build-succeeded 7, build-failed 30, syntax-invalid 53, redundant 10
Fitness: max 0.991(5), min 0.94(1), ave 0.983
Test execution time: sum 4073 ms, max 745 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 07:27:17 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-07 07:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 49 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 51, redundant 12
Fitness: max 0.991(4), min 0.845(1), ave 0.957
Test execution time: sum 4099 ms, max 864 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 07:27:29 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-07 07:27:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 1 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 54, redundant 11
Fitness: max 1(1), min 0.871(1), ave 0.973
Test execution time: sum 4373 ms, max 707 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 07:27:41 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-07 07:27:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 12 seconds
Variants: generated 100, build-succeeded 4, build-failed 32, syntax-invalid 53, redundant 11
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 2114 ms, max 606 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 07:27:52 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-07 07:28:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 21 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 50, redundant 19
Fitness: max 0.991(3), min 0.983(2), ave 0.988
Test execution time: sum 2932 ms, max 804 ms, min 440 ms
----------------------------------------------------------------

2023-08-07 07:28:01 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-07 07:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 29 seconds
Variants: generated 24, build-succeeded 6, build-failed 8, syntax-invalid 1, redundant 9
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3574 ms, max 819 ms, min 392 ms
----------------------------------------------------------------

2023-08-07 07:28:09 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v315)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v613)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v947)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1201)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,10 +289,10 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
-        if (divisor == 0d) {
+        if (isNaN) {
             // return isZero ? NaN : INF; // See MATH-657
             return isZero ? NaN : INF;
         }
@@ -913,7 +913,6 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
@@ -1180,6 +1179,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1739)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +287,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
-        if (divisor == 0d) {
+        if (isNaN) {
             // return isZero ? NaN : INF; // See MATH-657
             return isZero ? NaN : INF;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -913,7 +911,6 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:17 [main] [INFO]  PatchLogExporter - patch (v1824)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,11 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2237)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -913,7 +912,6 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v2517)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3021)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +912,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3096)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double real2 = 2.0 * real;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3103)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3112)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3144)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +909,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3163)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,6 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3539)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3673)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3714)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3812)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:18 [main] [INFO]  PatchLogExporter - patch (v3847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3892)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v3942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v4961)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +294,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5101)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5429)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +912,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5605)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v5746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v6630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double q = real / imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v7036)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8440)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v8725)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9345)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v9819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,11 +292,9 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11530)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +913,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v11912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12034)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12324)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12516)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:19 [main] [INFO]  PatchLogExporter - patch (v12846)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13347)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v13434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			final List<Complex> result=new ArrayList<Complex>();
+			MathUtils.checkNotNull(divisor);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +915,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer imAppendTo = new StringBuffer();
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v14931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer imAppendTo = new StringBuffer();
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15118)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,16 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer imAppendTo = new StringBuffer();
+		double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15706)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15726)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15801)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v15940)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +290,15 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			MathUtils.checkNotNull(divisor);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16142)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +290,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:20 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,10 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +290,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17245)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,14 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17327)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +289,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v17624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,10 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double imaginary2 = 2.0 * imaginary;
+			double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +291,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +915,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18125)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +289,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18328)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,10 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			StringBuffer imAppendTo = new StringBuffer();
+			double expReal = FastMath.exp(real);
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +291,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18504)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v18613)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19116)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19736)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +290,16 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -3073,7 +3073,6 @@
         rb += (y - ra * xa - ra * xb - rb * xa - rb * xb) / x;
 
         double temp = ra + rb;
-        rb = -(temp - ra - rb);
         ra = temp;
 
         if (ra == 0) { // Fix up the sign so atan works correctly
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v19901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20421)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,16 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
-        if (Double.isInfinite(divisor)) {
+        if (divisor == 0d)
+			return NaN;
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:21 [main] [INFO]  PatchLogExporter - patch (v20723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v20814)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,14 +288,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21543)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21636)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +911,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1454,8 +1454,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			double real2 = 2.0 * real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v21803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22136)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double expReal = FastMath.exp(real);
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +913,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22718)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -155,7 +155,6 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +912,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v22841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			MathUtils.checkNotNull(divisor);
+			StringBuffer ret = null;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +914,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23250)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,8 +910,9 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+        if (isNaN) {
+            double q = real / imaginary;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 07:28:22 [main] [INFO]  PatchLogExporter - patch (v23524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 07:28:22 [main] [INFO]  KGenProgMain - Summary
Reached generation = 237
Generated variants = 23524
Syntax valid variants = 12425
Build succeeded variants = 2622
Time elapsed = 47 minutes 42 seconds
Exit status = SUCCESS
