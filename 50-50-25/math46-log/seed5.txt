2023-08-07 02:49:02 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 02:49:02 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 02:49:02 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 02:49:03 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 5 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 02:49:25 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-07 02:49:26 [main] [INFO]  KGenProgMain - GA started
2023-08-07 02:49:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 02:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 50, build-succeeded 5, build-failed 27, syntax-invalid 2, redundant 16
Fitness: max 0.991(2), min 0.966(1), ave 0.983
Test execution time: sum 4306 ms, max 1243 ms, min 665 ms
----------------------------------------------------------------

2023-08-07 02:49:35 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 02:49:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 50, build-succeeded 5, build-failed 33, syntax-invalid 2, redundant 10
Fitness: max 0.991(3), min 0.966(1), ave 0.984
Test execution time: sum 3184 ms, max 805 ms, min 480 ms
----------------------------------------------------------------

2023-08-07 02:49:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 02:49:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 14, build-failed 32, syntax-invalid 10, redundant 44
Fitness: max 0.991(10), min 0.897(1), ave 0.979
Test execution time: sum 7486 ms, max 720 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 02:49:54 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 02:50:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 100, build-succeeded 23, build-failed 29, syntax-invalid 8, redundant 40
Fitness: max 0.991(16), min 0.966(6), ave 0.984
Test execution time: sum 11403 ms, max 656 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 02:50:11 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 02:50:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 2 seconds
Variants: generated 100, build-succeeded 26, build-failed 24, syntax-invalid 11, redundant 39
Fitness: max 1(3), min 0.966(4), ave 0.988
Test execution time: sum 12249 ms, max 530 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 02:50:29 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 02:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 20 seconds
Variants: generated 100, build-succeeded 25, build-failed 25, syntax-invalid 10, redundant 40
Fitness: max 0.991(17), min 0.966(6), ave 0.984
Test execution time: sum 13272 ms, max 912 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 02:50:47 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 02:51:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 37 seconds
Variants: generated 100, build-succeeded 24, build-failed 31, syntax-invalid 14, redundant 31
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 10862 ms, max 550 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 02:51:03 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 02:51:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 49 seconds
Variants: generated 100, build-succeeded 19, build-failed 23, syntax-invalid 13, redundant 45
Fitness: max 0.991(12), min 0.957(1), ave 0.984
Test execution time: sum 8546 ms, max 511 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 02:51:16 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 02:51:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 5 seconds
Variants: generated 100, build-succeeded 23, build-failed 32, syntax-invalid 15, redundant 30
Fitness: max 0.991(18), min 0.966(3), ave 0.987
Test execution time: sum 10451 ms, max 602 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 02:51:31 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 02:51:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 17 seconds
Variants: generated 100, build-succeeded 18, build-failed 28, syntax-invalid 21, redundant 33
Fitness: max 1(1), min 0.966(3), ave 0.986
Test execution time: sum 8130 ms, max 600 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 02:51:44 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 02:51:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 31 seconds
Variants: generated 100, build-succeeded 20, build-failed 23, syntax-invalid 13, redundant 44
Fitness: max 1(1), min 0.966(2), ave 0.988
Test execution time: sum 9309 ms, max 659 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 02:51:58 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 02:52:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 48 seconds
Variants: generated 100, build-succeeded 27, build-failed 28, syntax-invalid 20, redundant 25
Fitness: max 1(1), min 0.966(5), ave 0.987
Test execution time: sum 12101 ms, max 519 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 02:52:14 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 02:52:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 3 seconds
Variants: generated 100, build-succeeded 24, build-failed 26, syntax-invalid 27, redundant 23
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 10611 ms, max 502 ms, min 393 ms
----------------------------------------------------------------

2023-08-07 02:52:29 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 02:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 17 seconds
Variants: generated 100, build-succeeded 22, build-failed 31, syntax-invalid 21, redundant 26
Fitness: max 1(1), min 0.966(3), ave 0.988
Test execution time: sum 9850 ms, max 499 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 02:52:44 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 02:52:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 32 seconds
Variants: generated 100, build-succeeded 24, build-failed 24, syntax-invalid 28, redundant 24
Fitness: max 0.991(16), min 0.966(5), ave 0.985
Test execution time: sum 10666 ms, max 473 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 02:52:59 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 02:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 48 seconds
Variants: generated 100, build-succeeded 20, build-failed 26, syntax-invalid 23, redundant 31
Fitness: max 1(2), min 0.966(3), ave 0.987
Test execution time: sum 10367 ms, max 845 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 02:53:14 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 02:53:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 5 seconds
Variants: generated 100, build-succeeded 28, build-failed 27, syntax-invalid 24, redundant 21
Fitness: max 1(1), min 0.871(1), ave 0.985
Test execution time: sum 13634 ms, max 741 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 02:53:32 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 02:53:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 26 seconds
Variants: generated 100, build-succeeded 30, build-failed 29, syntax-invalid 20, redundant 21
Fitness: max 1(1), min 0.966(2), ave 0.988
Test execution time: sum 15249 ms, max 822 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 02:53:53 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 02:54:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 49 seconds
Variants: generated 100, build-succeeded 30, build-failed 24, syntax-invalid 23, redundant 23
Fitness: max 0.991(23), min 0.966(4), ave 0.987
Test execution time: sum 15828 ms, max 834 ms, min 383 ms
----------------------------------------------------------------

2023-08-07 02:54:15 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 02:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 13 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 18, redundant 13
Fitness: max 0.991(32), min 0.974(1), ave 0.991
Test execution time: sum 18120 ms, max 785 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 02:54:39 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 02:55:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 34 seconds
Variants: generated 100, build-succeeded 28, build-failed 24, syntax-invalid 20, redundant 28
Fitness: max 1(3), min 0.966(4), ave 0.986
Test execution time: sum 14854 ms, max 845 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 02:55:00 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 02:55:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 52 seconds
Variants: generated 100, build-succeeded 22, build-failed 31, syntax-invalid 25, redundant 22
Fitness: max 0.991(20), min 0.966(1), ave 0.989
Test execution time: sum 12317 ms, max 942 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 02:55:18 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 02:55:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 11 seconds
Variants: generated 100, build-succeeded 24, build-failed 30, syntax-invalid 27, redundant 19
Fitness: max 1(2), min 0.914(2), ave 0.981
Test execution time: sum 13455 ms, max 829 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 02:55:38 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 02:56:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 34 seconds
Variants: generated 100, build-succeeded 30, build-failed 28, syntax-invalid 25, redundant 17
Fitness: max 1(1), min 0.94(1), ave 0.986
Test execution time: sum 17604 ms, max 871 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 02:56:00 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 02:56:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 5 seconds
Variants: generated 100, build-succeeded 40, build-failed 25, syntax-invalid 23, redundant 12
Fitness: max 1(1), min 0.922(1), ave 0.988
Test execution time: sum 23502 ms, max 906 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 02:56:31 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 02:57:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 34 seconds
Variants: generated 100, build-succeeded 33, build-failed 27, syntax-invalid 28, redundant 12
Fitness: max 0.991(26), min 0.94(2), ave 0.985
Test execution time: sum 21146 ms, max 920 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 02:57:00 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 02:57:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 0 seconds
Variants: generated 100, build-succeeded 29, build-failed 26, syntax-invalid 27, redundant 18
Fitness: max 1(3), min 0.94(2), ave 0.988
Test execution time: sum 19348 ms, max 861 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 02:57:26 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 02:57:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 28 seconds
Variants: generated 100, build-succeeded 30, build-failed 26, syntax-invalid 30, redundant 14
Fitness: max 0.991(27), min 0.922(1), ave 0.988
Test execution time: sum 21027 ms, max 999 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 02:57:55 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 02:58:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 46 seconds
Variants: generated 100, build-succeeded 23, build-failed 17, syntax-invalid 37, redundant 23
Fitness: max 1(2), min 0.94(2), ave 0.986
Test execution time: sum 12766 ms, max 849 ms, min 385 ms
----------------------------------------------------------------

2023-08-07 02:58:13 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 02:58:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 9 seconds
Variants: generated 100, build-succeeded 31, build-failed 25, syntax-invalid 33, redundant 11
Fitness: max 0.991(26), min 0.836(1), ave 0.982
Test execution time: sum 17365 ms, max 860 ms, min 407 ms
----------------------------------------------------------------

2023-08-07 02:58:35 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 02:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 33 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 30, redundant 12
Fitness: max 1(1), min 0.922(1), ave 0.986
Test execution time: sum 17937 ms, max 737 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 02:58:59 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 02:59:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 50 seconds
Variants: generated 100, build-succeeded 19, build-failed 34, syntax-invalid 38, redundant 9
Fitness: max 0.991(17), min 0.94(1), ave 0.987
Test execution time: sum 11234 ms, max 807 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 02:59:17 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 02:59:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 12 seconds
Variants: generated 100, build-succeeded 27, build-failed 24, syntax-invalid 38, redundant 11
Fitness: max 0.991(23), min 0.905(1), ave 0.984
Test execution time: sum 16389 ms, max 813 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 02:59:39 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 03:00:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 36 seconds
Variants: generated 100, build-succeeded 27, build-failed 26, syntax-invalid 30, redundant 17
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 17498 ms, max 824 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 03:00:03 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 03:00:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 53 seconds
Variants: generated 100, build-succeeded 15, build-failed 30, syntax-invalid 43, redundant 12
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 9923 ms, max 909 ms, min 467 ms
----------------------------------------------------------------

2023-08-07 03:00:20 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 03:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 24 seconds
Variants: generated 100, build-succeeded 34, build-failed 18, syntax-invalid 34, redundant 14
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 23603 ms, max 932 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 03:00:51 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 03:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 48 seconds
Variants: generated 100, build-succeeded 29, build-failed 28, syntax-invalid 31, redundant 12
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 16785 ms, max 844 ms, min 396 ms
----------------------------------------------------------------

2023-08-07 03:01:14 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 03:01:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 7 seconds
Variants: generated 100, build-succeeded 20, build-failed 31, syntax-invalid 33, redundant 16
Fitness: max 0.991(18), min 0.966(1), ave 0.99
Test execution time: sum 12090 ms, max 828 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 03:01:33 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 03:01:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 24 seconds
Variants: generated 100, build-succeeded 18, build-failed 35, syntax-invalid 37, redundant 10
Fitness: max 0.991(17), min 0.983(1), ave 0.991
Test execution time: sum 10070 ms, max 802 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 03:01:50 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 03:02:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 41 seconds
Variants: generated 100, build-succeeded 18, build-failed 30, syntax-invalid 36, redundant 16
Fitness: max 1(2), min 0.991(16), ave 0.992
Test execution time: sum 10738 ms, max 916 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 03:02:07 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 03:02:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 55 seconds
Variants: generated 100, build-succeeded 12, build-failed 25, syntax-invalid 48, redundant 15
Fitness: max 0.991(11), min 0.966(1), ave 0.989
Test execution time: sum 7466 ms, max 781 ms, min 467 ms
----------------------------------------------------------------

2023-08-07 03:02:21 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 03:02:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 19 seconds
Variants: generated 100, build-succeeded 27, build-failed 23, syntax-invalid 32, redundant 18
Fitness: max 1(1), min 0.991(26), ave 0.992
Test execution time: sum 16982 ms, max 810 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 03:02:45 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 03:03:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 39 seconds
Variants: generated 100, build-succeeded 20, build-failed 31, syntax-invalid 38, redundant 11
Fitness: max 0.991(16), min 0.931(1), ave 0.987
Test execution time: sum 13204 ms, max 881 ms, min 519 ms
----------------------------------------------------------------

2023-08-07 03:03:06 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 03:03:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 1 seconds
Variants: generated 100, build-succeeded 21, build-failed 27, syntax-invalid 41, redundant 11
Fitness: max 0.991(20), min 0.974(1), ave 0.991
Test execution time: sum 13638 ms, max 925 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 03:03:27 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 03:03:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 21 seconds
Variants: generated 100, build-succeeded 20, build-failed 25, syntax-invalid 43, redundant 12
Fitness: max 0.991(18), min 0.974(1), ave 0.99
Test execution time: sum 13747 ms, max 821 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 03:03:48 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 03:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 42 seconds
Variants: generated 100, build-succeeded 20, build-failed 24, syntax-invalid 43, redundant 13
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 13800 ms, max 890 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 03:04:08 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 03:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 3 seconds
Variants: generated 100, build-succeeded 20, build-failed 35, syntax-invalid 36, redundant 9
Fitness: max 0.991(18), min 0.966(1), ave 0.99
Test execution time: sum 13609 ms, max 841 ms, min 483 ms
----------------------------------------------------------------

2023-08-07 03:04:30 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 03:04:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 22 seconds
Variants: generated 100, build-succeeded 17, build-failed 32, syntax-invalid 39, redundant 12
Fitness: max 0.991(14), min 0.974(1), ave 0.989
Test execution time: sum 10282 ms, max 872 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 03:04:48 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 03:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 37 seconds
Variants: generated 100, build-succeeded 14, build-failed 31, syntax-invalid 43, redundant 12
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 9000 ms, max 823 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 03:05:04 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 03:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 2 seconds
Variants: generated 100, build-succeeded 25, build-failed 25, syntax-invalid 38, redundant 12
Fitness: max 1(3), min 0.983(5), ave 0.991
Test execution time: sum 17001 ms, max 919 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 03:05:28 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 03:05:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 24 seconds
Variants: generated 100, build-succeeded 21, build-failed 26, syntax-invalid 45, redundant 8
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 14594 ms, max 932 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 03:05:51 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 03:06:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 39 seconds
Variants: generated 100, build-succeeded 11, build-failed 33, syntax-invalid 44, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 7342 ms, max 859 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 03:06:05 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 03:06:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 58 seconds
Variants: generated 100, build-succeeded 16, build-failed 28, syntax-invalid 45, redundant 11
Fitness: max 0.991(15), min 0.983(1), ave 0.991
Test execution time: sum 10447 ms, max 857 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 03:06:24 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 03:06:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 18 seconds
Variants: generated 100, build-succeeded 17, build-failed 30, syntax-invalid 47, redundant 6
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 11937 ms, max 997 ms, min 553 ms
----------------------------------------------------------------

2023-08-07 03:06:44 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 03:07:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 40 seconds
Variants: generated 100, build-succeeded 16, build-failed 40, syntax-invalid 40, redundant 4
Fitness: max 1(1), min 0.966(2), ave 0.988
Test execution time: sum 12529 ms, max 1034 ms, min 583 ms
----------------------------------------------------------------

2023-08-07 03:07:06 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 03:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 1 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 38, redundant 8
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 14621 ms, max 934 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 03:07:28 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 03:07:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 20 seconds
Variants: generated 100, build-succeeded 17, build-failed 27, syntax-invalid 48, redundant 8
Fitness: max 1(1), min 0.991(16), ave 0.992
Test execution time: sum 11583 ms, max 920 ms, min 484 ms
----------------------------------------------------------------

2023-08-07 03:07:47 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-07 03:08:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 38 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 43, redundant 8
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 9759 ms, max 900 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 03:08:05 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-07 03:08:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 55 seconds
Variants: generated 100, build-succeeded 16, build-failed 29, syntax-invalid 40, redundant 15
Fitness: max 1(1), min 0.966(2), ave 0.989
Test execution time: sum 10047 ms, max 940 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 03:08:21 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-07 03:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 12 seconds
Variants: generated 100, build-succeeded 17, build-failed 29, syntax-invalid 44, redundant 10
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 9916 ms, max 807 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 03:08:38 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-07 03:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 29 seconds
Variants: generated 100, build-succeeded 17, build-failed 29, syntax-invalid 44, redundant 10
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 10789 ms, max 923 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 03:08:55 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-07 03:09:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 42 seconds
Variants: generated 100, build-succeeded 12, build-failed 32, syntax-invalid 43, redundant 13
Fitness: max 0.991(11), min 0.966(1), ave 0.989
Test execution time: sum 7005 ms, max 756 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 03:09:09 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 03:09:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 1 seconds
Variants: generated 100, build-succeeded 19, build-failed 25, syntax-invalid 44, redundant 12
Fitness: max 0.991(17), min 0.974(1), ave 0.99
Test execution time: sum 11985 ms, max 862 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 03:09:28 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 03:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 22 seconds
Variants: generated 100, build-succeeded 18, build-failed 39, syntax-invalid 32, redundant 11
Fitness: max 0.991(16), min 0.966(2), ave 0.989
Test execution time: sum 11791 ms, max 896 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 03:09:48 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 03:10:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 41 seconds
Variants: generated 100, build-succeeded 15, build-failed 36, syntax-invalid 37, redundant 12
Fitness: max 0.991(13), min 0.966(1), ave 0.989
Test execution time: sum 10977 ms, max 905 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 03:10:08 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 03:10:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 1 seconds
Variants: generated 100, build-succeeded 19, build-failed 32, syntax-invalid 37, redundant 12
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 12680 ms, max 862 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 03:10:28 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 03:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 21 seconds
Variants: generated 100, build-succeeded 18, build-failed 29, syntax-invalid 44, redundant 9
Fitness: max 0.991(13), min 0.966(2), ave 0.987
Test execution time: sum 12032 ms, max 823 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 03:10:48 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 03:11:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 38 seconds
Variants: generated 100, build-succeeded 14, build-failed 33, syntax-invalid 46, redundant 7
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 9564 ms, max 925 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 03:11:04 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 03:11:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 54 seconds
Variants: generated 100, build-succeeded 16, build-failed 22, syntax-invalid 48, redundant 14
Fitness: max 0.991(15), min 0.983(1), ave 0.991
Test execution time: sum 9818 ms, max 829 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 03:11:20 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 03:11:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 10 seconds
Variants: generated 100, build-succeeded 11, build-failed 35, syntax-invalid 45, redundant 9
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 7866 ms, max 864 ms, min 481 ms
----------------------------------------------------------------

2023-08-07 03:11:36 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 03:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 21 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 47, redundant 20
Fitness: max 1(1), min 0.991(7), ave 0.992
Test execution time: sum 5249 ms, max 782 ms, min 470 ms
----------------------------------------------------------------

2023-08-07 03:11:47 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 03:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 37 seconds
Variants: generated 100, build-succeeded 13, build-failed 30, syntax-invalid 38, redundant 19
Fitness: max 0.991(11), min 0.966(1), ave 0.989
Test execution time: sum 8932 ms, max 919 ms, min 535 ms
----------------------------------------------------------------

2023-08-07 03:12:04 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 03:12:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 54 seconds
Variants: generated 100, build-succeeded 15, build-failed 31, syntax-invalid 45, redundant 9
Fitness: max 0.991(14), min 0.974(1), ave 0.99
Test execution time: sum 9848 ms, max 860 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 03:12:21 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 03:12:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 13 seconds
Variants: generated 100, build-succeeded 19, build-failed 26, syntax-invalid 46, redundant 9
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 12244 ms, max 859 ms, min 456 ms
----------------------------------------------------------------

2023-08-07 03:12:40 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 03:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 32 seconds
Variants: generated 100, build-succeeded 15, build-failed 34, syntax-invalid 40, redundant 11
Fitness: max 1(2), min 0.991(13), ave 0.993
Test execution time: sum 9692 ms, max 910 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 03:12:58 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 03:13:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 51 seconds
Variants: generated 100, build-succeeded 12, build-failed 31, syntax-invalid 45, redundant 12
Fitness: max 0.991(11), min 0.974(1), ave 0.99
Test execution time: sum 9673 ms, max 1072 ms, min 509 ms
----------------------------------------------------------------

2023-08-07 03:13:18 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 03:13:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 8 seconds
Variants: generated 100, build-succeeded 15, build-failed 33, syntax-invalid 43, redundant 9
Fitness: max 0.991(11), min 0.974(2), ave 0.988
Test execution time: sum 9019 ms, max 792 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 03:13:34 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 03:13:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 24 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 44, redundant 7
Fitness: max 0.991(14), min 0.991(14), ave 0.991
Test execution time: sum 8279 ms, max 743 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 03:13:50 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 03:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 41 seconds
Variants: generated 100, build-succeeded 14, build-failed 34, syntax-invalid 43, redundant 9
Fitness: max 0.991(11), min 0.966(1), ave 0.988
Test execution time: sum 8337 ms, max 851 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 03:14:07 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 03:14:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 55 seconds
Variants: generated 100, build-succeeded 10, build-failed 36, syntax-invalid 46, redundant 8
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 6248 ms, max 742 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 03:14:21 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 03:14:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 6 seconds
Variants: generated 100, build-succeeded 5, build-failed 38, syntax-invalid 46, redundant 11
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3026 ms, max 694 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 03:14:32 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 03:14:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 20 seconds
Variants: generated 100, build-succeeded 11, build-failed 28, syntax-invalid 49, redundant 12
Fitness: max 0.991(10), min 0.983(1), ave 0.991
Test execution time: sum 7369 ms, max 932 ms, min 525 ms
----------------------------------------------------------------

2023-08-07 03:14:47 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 03:15:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 33 seconds
Variants: generated 100, build-succeeded 9, build-failed 32, syntax-invalid 48, redundant 11
Fitness: max 0.991(8), min 0.966(1), ave 0.989
Test execution time: sum 5942 ms, max 863 ms, min 457 ms
----------------------------------------------------------------

2023-08-07 03:15:00 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 03:15:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 45 seconds
Variants: generated 100, build-succeeded 7, build-failed 31, syntax-invalid 50, redundant 12
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4223 ms, max 736 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 03:15:11 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 03:15:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 58 seconds
Variants: generated 100, build-succeeded 10, build-failed 31, syntax-invalid 44, redundant 15
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 5718 ms, max 699 ms, min 453 ms
----------------------------------------------------------------

2023-08-07 03:15:24 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 03:15:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 11 seconds
Variants: generated 100, build-succeeded 10, build-failed 26, syntax-invalid 52, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 6235 ms, max 772 ms, min 463 ms
----------------------------------------------------------------

2023-08-07 03:15:38 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 03:15:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 26 seconds
Variants: generated 100, build-succeeded 12, build-failed 30, syntax-invalid 49, redundant 9
Fitness: max 1(2), min 0.991(10), ave 0.993
Test execution time: sum 7802 ms, max 875 ms, min 468 ms
----------------------------------------------------------------

2023-08-07 03:15:53 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 03:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 35 seconds
Variants: generated 100, build-succeeded 3, build-failed 31, syntax-invalid 50, redundant 16
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 2027 ms, max 758 ms, min 543 ms
----------------------------------------------------------------

2023-08-07 03:16:02 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 03:16:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 49 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 53, redundant 9
Fitness: max 0.991(8), min 0.836(1), ave 0.974
Test execution time: sum 6440 ms, max 937 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 03:16:15 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 03:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 4 seconds
Variants: generated 100, build-succeeded 13, build-failed 28, syntax-invalid 52, redundant 7
Fitness: max 1(2), min 0.991(11), ave 0.993
Test execution time: sum 8084 ms, max 882 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 03:16:30 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 03:16:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 15 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.991(6), ave 0.993
Test execution time: sum 4655 ms, max 766 ms, min 509 ms
----------------------------------------------------------------

2023-08-07 03:16:42 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 03:16:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 27 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 52, redundant 11
Fitness: max 1(1), min 0.914(1), ave 0.983
Test execution time: sum 5614 ms, max 792 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 03:16:54 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 03:17:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 42 seconds
Variants: generated 100, build-succeeded 13, build-failed 23, syntax-invalid 48, redundant 16
Fitness: max 0.991(13), min 0.991(13), ave 0.991
Test execution time: sum 8234 ms, max 862 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 03:17:09 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 03:17:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 57 seconds
Variants: generated 100, build-succeeded 10, build-failed 30, syntax-invalid 51, redundant 9
Fitness: max 0.991(10), min 0.991(10), ave 0.991
Test execution time: sum 6588 ms, max 870 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 03:17:24 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 03:17:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 12 seconds
Variants: generated 100, build-succeeded 10, build-failed 27, syntax-invalid 50, redundant 13
Fitness: max 0.991(9), min 0.983(1), ave 0.991
Test execution time: sum 6509 ms, max 800 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 03:17:39 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 03:17:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 27 seconds
Variants: generated 100, build-succeeded 9, build-failed 31, syntax-invalid 51, redundant 9
Fitness: max 0.991(5), min 0.957(1), ave 0.984
Test execution time: sum 6042 ms, max 794 ms, min 519 ms
----------------------------------------------------------------

2023-08-07 03:17:53 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 03:18:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 39 seconds
Variants: generated 100, build-succeeded 7, build-failed 37, syntax-invalid 48, redundant 8
Fitness: max 0.991(4), min 0.94(1), ave 0.979
Test execution time: sum 4746 ms, max 808 ms, min 517 ms
----------------------------------------------------------------

2023-08-07 03:18:06 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 03:18:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 51 seconds
Variants: generated 100, build-succeeded 8, build-failed 32, syntax-invalid 49, redundant 11
Fitness: max 0.991(7), min 0.974(1), ave 0.989
Test execution time: sum 4759 ms, max 917 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 03:18:18 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 03:18:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 4 seconds
Variants: generated 100, build-succeeded 10, build-failed 23, syntax-invalid 55, redundant 12
Fitness: max 0.991(7), min 0.983(3), ave 0.989
Test execution time: sum 6604 ms, max 901 ms, min 452 ms
----------------------------------------------------------------

2023-08-07 03:18:31 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 03:18:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 18 seconds
Variants: generated 100, build-succeeded 10, build-failed 31, syntax-invalid 52, redundant 7
Fitness: max 0.991(5), min 0.914(1), ave 0.978
Test execution time: sum 6411 ms, max 842 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 03:18:44 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 03:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 30 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 51, redundant 14
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 3858 ms, max 892 ms, min 463 ms
----------------------------------------------------------------

2023-08-07 03:18:56 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 03:19:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 39 seconds
Variants: generated 100, build-succeeded 3, build-failed 29, syntax-invalid 53, redundant 15
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 2052 ms, max 936 ms, min 538 ms
----------------------------------------------------------------

2023-08-07 03:19:05 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 03:19:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 49 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 50, redundant 18
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 3388 ms, max 842 ms, min 447 ms
----------------------------------------------------------------

2023-08-07 03:19:15 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 03:19:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 0 seconds
Variants: generated 100, build-succeeded 5, build-failed 24, syntax-invalid 55, redundant 16
Fitness: max 0.991(3), min 0.845(1), ave 0.959
Test execution time: sum 3565 ms, max 919 ms, min 502 ms
----------------------------------------------------------------

2023-08-07 03:19:26 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 03:19:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 11 seconds
Variants: generated 100, build-succeeded 7, build-failed 28, syntax-invalid 54, redundant 11
Fitness: max 0.991(5), min 0.957(1), ave 0.983
Test execution time: sum 4662 ms, max 871 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 03:19:38 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 03:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 24 seconds
Variants: generated 100, build-succeeded 9, build-failed 20, syntax-invalid 56, redundant 15
Fitness: max 0.991(5), min 0.966(2), ave 0.983
Test execution time: sum 6462 ms, max 993 ms, min 466 ms
----------------------------------------------------------------

2023-08-07 03:19:50 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 03:20:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 38 seconds
Variants: generated 100, build-succeeded 10, build-failed 26, syntax-invalid 53, redundant 11
Fitness: max 0.991(6), min 0.983(4), ave 0.988
Test execution time: sum 6687 ms, max 887 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 03:20:04 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 03:20:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 48 seconds
Variants: generated 100, build-succeeded 6, build-failed 22, syntax-invalid 53, redundant 19
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3898 ms, max 793 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 03:20:14 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 03:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 56 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 55, redundant 13
Fitness: max 0.991(2), min 0.983(3), ave 0.986
Test execution time: sum 3066 ms, max 757 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 03:20:23 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 03:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 8 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 56, redundant 11
Fitness: max 0.991(5), min 0.966(1), ave 0.986
Test execution time: sum 5625 ms, max 778 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 03:20:34 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 03:20:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 21 seconds
Variants: generated 100, build-succeeded 9, build-failed 25, syntax-invalid 53, redundant 13
Fitness: max 0.991(5), min 0.94(1), ave 0.983
Test execution time: sum 5543 ms, max 907 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 03:20:48 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 03:20:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 32 seconds
Variants: generated 100, build-succeeded 7, build-failed 28, syntax-invalid 54, redundant 11
Fitness: max 0.991(5), min 0.931(1), ave 0.98
Test execution time: sum 4350 ms, max 783 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 03:20:59 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 03:21:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 43 seconds
Variants: generated 100, build-succeeded 7, build-failed 21, syntax-invalid 57, redundant 15
Fitness: max 0.991(3), min 0.836(1), ave 0.962
Test execution time: sum 4804 ms, max 894 ms, min 491 ms
----------------------------------------------------------------

2023-08-07 03:21:10 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 03:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 54 seconds
Variants: generated 100, build-succeeded 5, build-failed 35, syntax-invalid 50, redundant 10
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3743 ms, max 912 ms, min 645 ms
----------------------------------------------------------------

2023-08-07 03:21:20 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 03:21:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 7 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 52, redundant 11
Fitness: max 0.991(4), min 0.983(4), ave 0.987
Test execution time: sum 5953 ms, max 860 ms, min 649 ms
----------------------------------------------------------------

2023-08-07 03:21:33 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 03:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 15 seconds
Variants: generated 100, build-succeeded 2, build-failed 26, syntax-invalid 57, redundant 15
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 1502 ms, max 850 ms, min 652 ms
----------------------------------------------------------------

2023-08-07 03:21:41 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 03:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 30 seconds
Variants: generated 100, build-succeeded 13, build-failed 20, syntax-invalid 56, redundant 11
Fitness: max 1(1), min 0.931(1), ave 0.983
Test execution time: sum 8760 ms, max 832 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 03:21:57 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 03:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 41 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 53, redundant 12
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3721 ms, max 886 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 03:22:08 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 03:22:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 50 seconds
Variants: generated 100, build-succeeded 4, build-failed 28, syntax-invalid 57, redundant 11
Fitness: max 0.991(2), min 0.931(1), ave 0.972
Test execution time: sum 2468 ms, max 732 ms, min 443 ms
----------------------------------------------------------------

2023-08-07 03:22:16 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 03:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 1 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 54, redundant 13
Fitness: max 1(1), min 0.974(1), ave 0.99
Test execution time: sum 3005 ms, max 752 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 03:22:27 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 03:22:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 15 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 52, redundant 16
Fitness: max 0.991(6), min 0.922(1), ave 0.98
Test execution time: sum 5962 ms, max 954 ms, min 454 ms
----------------------------------------------------------------

2023-08-07 03:22:41 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 03:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 24 seconds
Variants: generated 100, build-succeeded 4, build-failed 25, syntax-invalid 58, redundant 13
Fitness: max 0.991(2), min 0.931(1), ave 0.972
Test execution time: sum 2259 ms, max 635 ms, min 486 ms
----------------------------------------------------------------

2023-08-07 03:22:51 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 03:23:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 34 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 56, redundant 16
Fitness: max 0.991(2), min 0.966(1), ave 0.981
Test execution time: sum 2991 ms, max 797 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 03:23:01 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 03:23:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 47 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 56, redundant 8
Fitness: max 1(1), min 0.931(1), ave 0.983
Test execution time: sum 5484 ms, max 851 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 03:23:13 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 03:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 59 seconds
Variants: generated 100, build-succeeded 8, build-failed 21, syntax-invalid 56, redundant 15
Fitness: max 1(2), min 0.957(1), ave 0.986
Test execution time: sum 4703 ms, max 816 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 03:23:25 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 03:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 11 seconds
Variants: generated 100, build-succeeded 10, build-failed 19, syntax-invalid 59, redundant 12
Fitness: max 1(2), min 0.983(3), ave 0.991
Test execution time: sum 6259 ms, max 1016 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 03:23:37 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 03:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 20 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 53, redundant 13
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2753 ms, max 783 ms, min 454 ms
----------------------------------------------------------------

2023-08-07 03:23:47 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 03:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 31 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 53, redundant 17
Fitness: max 0.991(4), min 0.983(2), ave 0.989
Test execution time: sum 4325 ms, max 808 ms, min 524 ms
----------------------------------------------------------------

2023-08-07 03:23:58 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 03:24:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 44 seconds
Variants: generated 100, build-succeeded 10, build-failed 21, syntax-invalid 55, redundant 14
Fitness: max 0.991(9), min 0.983(1), ave 0.991
Test execution time: sum 6285 ms, max 834 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 03:24:11 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 03:24:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 57 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 59, redundant 11
Fitness: max 0.991(5), min 0.931(1), ave 0.982
Test execution time: sum 4630 ms, max 969 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 03:24:23 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 03:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 6 seconds
Variants: generated 100, build-succeeded 3, build-failed 27, syntax-invalid 55, redundant 15
Fitness: max 0.991(1), min 0.836(1), ave 0.937
Test execution time: sum 2297 ms, max 860 ms, min 702 ms
----------------------------------------------------------------

2023-08-07 03:24:33 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 03:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 15 seconds
Variants: generated 100, build-succeeded 4, build-failed 24, syntax-invalid 53, redundant 19
Fitness: max 1(1), min 0.974(1), ave 0.987
Test execution time: sum 2402 ms, max 646 ms, min 498 ms
----------------------------------------------------------------

2023-08-07 03:24:41 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 03:24:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 25 seconds
Variants: generated 100, build-succeeded 6, build-failed 22, syntax-invalid 53, redundant 19
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 4030 ms, max 779 ms, min 495 ms
----------------------------------------------------------------

2023-08-07 03:24:51 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 03:25:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 33 seconds
Variants: generated 100, build-succeeded 3, build-failed 25, syntax-invalid 53, redundant 19
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1997 ms, max 855 ms, min 459 ms
----------------------------------------------------------------

2023-08-07 03:25:00 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 03:25:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 44 seconds
Variants: generated 100, build-succeeded 4, build-failed 27, syntax-invalid 52, redundant 17
Fitness: max 0.991(1), min 0.948(1), ave 0.968
Test execution time: sum 3084 ms, max 975 ms, min 542 ms
----------------------------------------------------------------

2023-08-07 03:25:10 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 03:25:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 51 seconds
Variants: generated 100, build-succeeded 3, build-failed 25, syntax-invalid 54, redundant 18
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1695 ms, max 665 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 03:25:18 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 03:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 2 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 56, redundant 14
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3422 ms, max 858 ms, min 511 ms
----------------------------------------------------------------

2023-08-07 03:25:28 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 03:25:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 13 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 54, redundant 13
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3616 ms, max 957 ms, min 504 ms
----------------------------------------------------------------

2023-08-07 03:25:40 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 03:25:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 28 seconds
Variants: generated 100, build-succeeded 7, build-failed 22, syntax-invalid 54, redundant 17
Fitness: max 0.991(7), min 0.991(7), ave 0.991
Test execution time: sum 5189 ms, max 898 ms, min 596 ms
----------------------------------------------------------------

2023-08-07 03:25:54 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 03:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 39 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 51, redundant 17
Fitness: max 0.991(4), min 0.948(1), ave 0.983
Test execution time: sum 3588 ms, max 848 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 03:26:06 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 03:26:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 47 seconds
Variants: generated 100, build-succeeded 1, build-failed 33, syntax-invalid 53, redundant 13
Fitness: max 0.836(1), min 0.836(1), ave 0.836
Test execution time: sum 485 ms, max 485 ms, min 485 ms
----------------------------------------------------------------

2023-08-07 03:26:14 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 03:26:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 57 seconds
Variants: generated 100, build-succeeded 5, build-failed 33, syntax-invalid 50, redundant 12
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 3112 ms, max 773 ms, min 466 ms
----------------------------------------------------------------

2023-08-07 03:26:23 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 03:26:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 7 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 56, redundant 13
Fitness: max 0.991(4), min 0.948(1), ave 0.983
Test execution time: sum 3138 ms, max 792 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 03:26:33 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 03:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 16 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 52, redundant 15
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2302 ms, max 798 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 03:26:43 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 03:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 30 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 51, redundant 11
Fitness: max 0.991(6), min 0.914(1), ave 0.981
Test execution time: sum 5449 ms, max 804 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 03:26:56 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 03:27:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 40 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 56, redundant 14
Fitness: max 1(1), min 0.974(1), ave 0.989
Test execution time: sum 4369 ms, max 800 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 03:27:07 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 03:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 51 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 55, redundant 8
Fitness: max 0.991(3), min 0.853(1), ave 0.962
Test execution time: sum 3440 ms, max 871 ms, min 443 ms
----------------------------------------------------------------

2023-08-07 03:27:18 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 03:27:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 2 seconds
Variants: generated 100, build-succeeded 4, build-failed 32, syntax-invalid 54, redundant 10
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2736 ms, max 776 ms, min 636 ms
----------------------------------------------------------------

2023-08-07 03:27:28 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 03:27:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 12 seconds
Variants: generated 100, build-succeeded 4, build-failed 33, syntax-invalid 50, redundant 13
Fitness: max 0.991(3), min 0.957(1), ave 0.983
Test execution time: sum 2796 ms, max 893 ms, min 497 ms
----------------------------------------------------------------

2023-08-07 03:27:38 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 03:27:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 23 seconds
Variants: generated 100, build-succeeded 6, build-failed 28, syntax-invalid 52, redundant 14
Fitness: max 0.991(5), min 0.845(1), ave 0.967
Test execution time: sum 3918 ms, max 791 ms, min 462 ms
----------------------------------------------------------------

2023-08-07 03:27:49 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 03:28:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 34 seconds
Variants: generated 100, build-succeeded 6, build-failed 28, syntax-invalid 54, redundant 12
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3885 ms, max 834 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 03:28:00 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 03:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 47 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 56, redundant 9
Fitness: max 0.991(6), min 0.983(3), ave 0.989
Test execution time: sum 5516 ms, max 769 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 03:28:13 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 03:28:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 0 seconds
Variants: generated 100, build-succeeded 10, build-failed 30, syntax-invalid 55, redundant 5
Fitness: max 0.991(7), min 0.957(1), ave 0.985
Test execution time: sum 6180 ms, max 835 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 03:28:27 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 03:28:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 14 seconds
Variants: generated 100, build-succeeded 10, build-failed 28, syntax-invalid 52, redundant 10
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 6522 ms, max 813 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 03:28:40 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 03:28:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 25 seconds
Variants: generated 100, build-succeeded 4, build-failed 31, syntax-invalid 55, redundant 10
Fitness: max 0.991(3), min 0.974(1), ave 0.987
Test execution time: sum 2504 ms, max 740 ms, min 475 ms
----------------------------------------------------------------

2023-08-07 03:28:51 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 03:29:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 39 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 55, redundant 14
Fitness: max 0.991(7), min 0.957(1), ave 0.987
Test execution time: sum 5741 ms, max 909 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 03:29:05 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 03:29:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 49 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 54, redundant 14
Fitness: max 1(2), min 0.931(1), ave 0.981
Test execution time: sum 3447 ms, max 851 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 03:29:16 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 03:29:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 57 seconds
Variants: generated 100, build-succeeded 3, build-failed 26, syntax-invalid 54, redundant 17
Fitness: max 0.991(1), min 0.983(2), ave 0.986
Test execution time: sum 1969 ms, max 793 ms, min 479 ms
----------------------------------------------------------------

2023-08-07 03:29:24 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 03:29:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 8 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 53, redundant 15
Fitness: max 0.991(4), min 0.845(1), ave 0.966
Test execution time: sum 3707 ms, max 749 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 03:29:35 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 03:29:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 17 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 55, redundant 11
Fitness: max 0.991(3), min 0.888(1), ave 0.966
Test execution time: sum 2157 ms, max 818 ms, min 440 ms
----------------------------------------------------------------

2023-08-07 03:29:44 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 03:29:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 25 seconds
Variants: generated 100, build-succeeded 2, build-failed 25, syntax-invalid 52, redundant 21
Fitness: max 0.991(1), min 0.974(1), ave 0.983
Test execution time: sum 1000 ms, max 562 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 03:29:52 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 03:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 36 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 53, redundant 10
Fitness: max 0.991(4), min 0.931(1), ave 0.979
Test execution time: sum 3486 ms, max 813 ms, min 506 ms
----------------------------------------------------------------

2023-08-07 03:30:02 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 03:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 45 seconds
Variants: generated 100, build-succeeded 5, build-failed 20, syntax-invalid 55, redundant 20
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 2810 ms, max 779 ms, min 454 ms
----------------------------------------------------------------

2023-08-07 03:30:11 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 03:30:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 57 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 53, redundant 12
Fitness: max 1(1), min 0.991(7), ave 0.992
Test execution time: sum 5229 ms, max 910 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 03:30:23 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 03:30:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 8 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 57, redundant 8
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3571 ms, max 855 ms, min 460 ms
----------------------------------------------------------------

2023-08-07 03:30:34 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 03:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 18 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 56, redundant 9
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3235 ms, max 873 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 03:30:44 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 03:30:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 29 seconds
Variants: generated 100, build-succeeded 5, build-failed 29, syntax-invalid 55, redundant 11
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3417 ms, max 904 ms, min 453 ms
----------------------------------------------------------------

2023-08-07 03:30:55 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 03:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 39 seconds
Variants: generated 100, build-succeeded 4, build-failed 32, syntax-invalid 54, redundant 10
Fitness: max 0.991(2), min 0.974(1), ave 0.985
Test execution time: sum 2450 ms, max 852 ms, min 473 ms
----------------------------------------------------------------

2023-08-07 03:31:06 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 03:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 48 seconds
Variants: generated 100, build-succeeded 3, build-failed 26, syntax-invalid 55, redundant 16
Fitness: max 0.991(1), min 0.931(1), ave 0.963
Test execution time: sum 1883 ms, max 713 ms, min 478 ms
----------------------------------------------------------------

2023-08-07 03:31:14 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 03:31:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 57 seconds
Variants: generated 100, build-succeeded 3, build-failed 26, syntax-invalid 56, redundant 15
Fitness: max 0.991(1), min 0.931(1), ave 0.968
Test execution time: sum 1647 ms, max 757 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 03:31:23 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 03:31:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 7 seconds
Variants: generated 100, build-succeeded 4, build-failed 35, syntax-invalid 50, redundant 11
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 2755 ms, max 800 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 03:31:33 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 03:31:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 19 seconds
Variants: generated 100, build-succeeded 8, build-failed 24, syntax-invalid 54, redundant 14
Fitness: max 0.991(8), min 0.991(8), ave 0.991
Test execution time: sum 5250 ms, max 815 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 03:31:45 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 03:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 32 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 51, redundant 11
Fitness: max 1(1), min 0.914(1), ave 0.983
Test execution time: sum 5456 ms, max 794 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 03:31:58 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-07 03:32:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 48 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 52, redundant 12
Fitness: max 0.991(7), min 0.845(1), ave 0.973
Test execution time: sum 6620 ms, max 1023 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 03:32:15 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-07 03:32:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 8 seconds
Variants: generated 100, build-succeeded 14, build-failed 22, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 9769 ms, max 1041 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 03:32:34 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-07 03:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 20 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 54, redundant 11
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3168 ms, max 795 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 03:32:46 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-07 03:32:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 29 seconds
Variants: generated 100, build-succeeded 2, build-failed 29, syntax-invalid 55, redundant 14
Fitness: max 0.991(1), min 0.983(1), ave 0.987
Test execution time: sum 1119 ms, max 648 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 03:32:55 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-07 03:33:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 38 seconds
Variants: generated 100, build-succeeded 5, build-failed 29, syntax-invalid 56, redundant 10
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 2758 ms, max 671 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 03:33:05 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-07 03:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 52 seconds
Variants: generated 100, build-succeeded 10, build-failed 32, syntax-invalid 55, redundant 3
Fitness: max 1(1), min 0.974(1), ave 0.991
Test execution time: sum 5993 ms, max 859 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 03:33:19 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-07 03:33:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 3 seconds
Variants: generated 100, build-succeeded 4, build-failed 28, syntax-invalid 54, redundant 14
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2823 ms, max 844 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 03:33:30 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-07 03:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 15 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 52, redundant 13
Fitness: max 1(1), min 0.974(1), ave 0.99
Test execution time: sum 3729 ms, max 814 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 03:33:41 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-07 03:33:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 28 seconds
Variants: generated 100, build-succeeded 8, build-failed 28, syntax-invalid 54, redundant 10
Fitness: max 0.991(4), min 0.966(1), ave 0.985
Test execution time: sum 5233 ms, max 801 ms, min 461 ms
----------------------------------------------------------------

2023-08-07 03:33:54 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-07 03:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 37 seconds
Variants: generated 100, build-succeeded 3, build-failed 34, syntax-invalid 51, redundant 12
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1940 ms, max 810 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 03:34:04 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-07 03:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 50 seconds
Variants: generated 100, build-succeeded 7, build-failed 26, syntax-invalid 54, redundant 13
Fitness: max 0.991(5), min 0.983(2), ave 0.989
Test execution time: sum 4665 ms, max 889 ms, min 486 ms
----------------------------------------------------------------

2023-08-07 03:34:16 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-07 03:34:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 3 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.991(6), ave 0.993
Test execution time: sum 4524 ms, max 760 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 03:34:30 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-07 03:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 17 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 54, redundant 8
Fitness: max 0.991(6), min 0.983(2), ave 0.989
Test execution time: sum 5191 ms, max 820 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 03:34:43 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-07 03:34:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 28 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 57, redundant 15
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3367 ms, max 884 ms, min 398 ms
----------------------------------------------------------------

2023-08-07 03:34:54 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-07 03:35:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 39 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 54, redundant 14
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 3039 ms, max 841 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 03:35:05 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-07 03:35:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 50 seconds
Variants: generated 100, build-succeeded 6, build-failed 35, syntax-invalid 53, redundant 6
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3214 ms, max 702 ms, min 457 ms
----------------------------------------------------------------

2023-08-07 03:35:16 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-07 03:35:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 2 seconds
Variants: generated 100, build-succeeded 6, build-failed 30, syntax-invalid 52, redundant 12
Fitness: max 1(1), min 0.991(5), ave 0.993
Test execution time: sum 4012 ms, max 889 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 03:35:28 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-07 03:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 12 seconds
Variants: generated 100, build-succeeded 3, build-failed 32, syntax-invalid 56, redundant 9
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 2434 ms, max 871 ms, min 774 ms
----------------------------------------------------------------

2023-08-07 03:35:38 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-07 03:35:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 25 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 57, redundant 10
Fitness: max 1(2), min 0.991(7), ave 0.993
Test execution time: sum 5587 ms, max 893 ms, min 457 ms
----------------------------------------------------------------

2023-08-07 03:35:51 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-07 03:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 37 seconds
Variants: generated 100, build-succeeded 6, build-failed 30, syntax-invalid 54, redundant 10
Fitness: max 1(2), min 0.991(4), ave 0.994
Test execution time: sum 3992 ms, max 903 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 03:36:04 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-07 03:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 50 seconds
Variants: generated 100, build-succeeded 8, build-failed 32, syntax-invalid 52, redundant 8
Fitness: max 0.991(6), min 0.957(1), ave 0.986
Test execution time: sum 4699 ms, max 856 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 03:36:17 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-07 03:36:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 6 seconds
Variants: generated 100, build-succeeded 10, build-failed 30, syntax-invalid 53, redundant 7
Fitness: max 0.991(9), min 0.983(1), ave 0.991
Test execution time: sum 6499 ms, max 883 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 03:36:32 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-07 03:36:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 21 seconds
Variants: generated 100, build-succeeded 9, build-failed 34, syntax-invalid 53, redundant 4
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 5259 ms, max 755 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 03:36:47 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-07 03:37:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 34 seconds
Variants: generated 100, build-succeeded 7, build-failed 30, syntax-invalid 54, redundant 9
Fitness: max 0.991(7), min 0.991(7), ave 0.991
Test execution time: sum 4495 ms, max 780 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 03:37:00 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-07 03:37:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 47 seconds
Variants: generated 100, build-succeeded 7, build-failed 36, syntax-invalid 54, redundant 3
Fitness: max 0.991(5), min 0.836(1), ave 0.968
Test execution time: sum 3944 ms, max 928 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 03:37:14 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-07 03:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 57 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 55, redundant 12
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2027 ms, max 651 ms, min 407 ms
----------------------------------------------------------------

2023-08-07 03:37:23 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-07 03:37:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 7 seconds
Variants: generated 100, build-succeeded 3, build-failed 34, syntax-invalid 53, redundant 10
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 1807 ms, max 789 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 03:37:33 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-07 03:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 15 seconds
Variants: generated 100, build-succeeded 2, build-failed 33, syntax-invalid 58, redundant 7
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 1361 ms, max 688 ms, min 673 ms
----------------------------------------------------------------

2023-08-07 03:37:42 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-07 03:37:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 24 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 54, redundant 15
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 2118 ms, max 793 ms, min 581 ms
----------------------------------------------------------------

2023-08-07 03:37:51 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-07 03:38:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 38 seconds
Variants: generated 100, build-succeeded 8, build-failed 28, syntax-invalid 56, redundant 8
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4953 ms, max 893 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 03:38:04 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-07 03:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 48 seconds
Variants: generated 100, build-succeeded 4, build-failed 28, syntax-invalid 58, redundant 10
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2237 ms, max 726 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 03:38:14 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-07 03:38:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 57 seconds
Variants: generated 100, build-succeeded 2, build-failed 22, syntax-invalid 59, redundant 17
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 1452 ms, max 745 ms, min 707 ms
----------------------------------------------------------------

2023-08-07 03:38:23 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-07 03:38:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 9 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 57, redundant 10
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 2968 ms, max 843 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 03:38:35 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-07 03:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 20 seconds
Variants: generated 48, build-succeeded 4, build-failed 30, syntax-invalid 4, redundant 10
Fitness: max 1(2), min 0.991(2), ave 0.996
Test execution time: sum 2868 ms, max 869 ms, min 592 ms
----------------------------------------------------------------

2023-08-07 03:38:46 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            throw new NullArgumentException(LocalizedFormats.REAL_FORMAT);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,7 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        double q = real / imaginary;
+		return "(" + real + ", " + imaginary + ")";
     }
 }
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v308)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v363)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v387)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.log(abs()), FastMath.atan2(imaginary, real));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v533)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v583)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v847)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v914)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1073)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:54 [main] [INFO]  PatchLogExporter - patch (v1132)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1160)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1443)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1461)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1585)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1663)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.log(abs()), FastMath.atan2(imaginary, real));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1903)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
+			throw new NullArgumentException(LocalizedFormats.REAL_FORMAT);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v1925)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2147)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2240)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2326)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1177,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2509)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -1180,6 +1179,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2920,8 +2920,6 @@
         yb = yb * epsA2 * epsA;
 
 
-        ya = epsA;
-
         temp = ya + yb;
         yb = -(temp - ya - yb);
         ya = temp;
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2528)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -1180,6 +1178,6 @@
     /** {@inheritDoc} */
     @Override
     public String toString() {
-        return "(" + real + ", " + imaginary + ")";
+        return null;
     }
 }
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:55 [main] [INFO]  PatchLogExporter - patch (v2541)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2701)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2874,7 +2874,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2717)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
+			final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v2904)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3211)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3514)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v3850)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4445)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
@@ -2874,7 +2873,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4805)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +291,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2874,7 +2874,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
@@ -2874,7 +2873,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:56 [main] [INFO]  PatchLogExporter - patch (v4842)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v4946)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2874,7 +2874,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2874,7 +2874,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
@@ -2874,7 +2873,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5322)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
@@ -2874,7 +2873,7 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
+            double absAsinh;
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5448)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5505)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
+			return createComplex(-real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5748)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5844)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v5941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(-real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6640)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(-real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +289,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v6913)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(-real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            final List<Complex> result=new ArrayList<Complex>();
+			return createComplex(real, -imaginary);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +265,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +290,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -813,7 +813,6 @@
        is less than 0.5 ULP */
         double z = 0.04168701738764507;
         z = z * epsilon + 0.1666666505023083;
-        z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
         z = z * epsilon + -3.940510424527919E-20;
 
@@ -1429,7 +1428,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7333)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1429,7 +1429,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v7806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return isZero ? NaN : INF;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8216)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return isZero ? NaN : INF;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8306)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8445)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -812,7 +812,6 @@
         /* Remez generated polynomial.  Converges on the interval [0, 2^-10], error
        is less than 0.5 ULP */
         double z = 0.04168701738764507;
-        z = z * epsilon + 0.1666666505023083;
         z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
         z = z * epsilon + -3.940510424527919E-20;
2023-08-07 03:38:57 [main] [INFO]  PatchLogExporter - patch (v8529)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +263,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return isZero ? NaN : INF;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8838)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			double expReal = FastMath.exp(real);
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return isZero ? NaN : INF;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -813,7 +813,6 @@
        is less than 0.5 ULP */
         double z = 0.04168701738764507;
         z = z * epsilon + 0.1666666505023083;
-        z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
         z = z * epsilon + -3.940510424527919E-20;
 
@@ -1429,7 +1428,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v8932)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +910,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return isZero ? NaN : INF;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -813,7 +813,6 @@
        is less than 0.5 ULP */
         double z = 0.04168701738764507;
         z = z * epsilon + 0.1666666505023083;
-        z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
         z = z * epsilon + -3.940510424527919E-20;
 
@@ -1429,7 +1428,6 @@
             lnza = -0.16624882440418567;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
-            lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2842,7 +2842,8 @@
         if (xa < 1.0) {
             idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
         } else {
-            double temp = 1.0/xa;
+            int result = 1;
+			double temp = 1.0/xa;
             idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
         }
         double epsA = xa - TANGENT_TABLE_A[idx];
@@ -2884,7 +2885,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2842,7 +2842,8 @@
         if (xa < 1.0) {
             idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
         } else {
-            double temp = 1.0/xa;
+            int result = 1;
+			double temp = 1.0/xa;
             idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
         }
         double epsA = xa - TANGENT_TABLE_A[idx];
@@ -2884,7 +2885,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v11834)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2842,7 +2842,8 @@
         if (xa < 1.0) {
             idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
         } else {
-            double temp = 1.0/xa;
+            int result = 1;
+			double temp = 1.0/xa;
             idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
         }
         double epsA = xa - TANGENT_TABLE_A[idx];
@@ -2884,7 +2885,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12217)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -299,7 +299,8 @@
      * @return square root of a
      */
     public static double sqrt(final double a) {
-        return Math.sqrt(a);
+        final double result;
+		return Math.sqrt(a);
     }
 
     /** Compute the hyperbolic cosine of a number.
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12303)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -265,7 +264,8 @@
         }
 
         final double c = divisor.getReal();
-        final double d = divisor.getImaginary();
+        StringBuffer ret = null;
+		final double d = divisor.getImaginary();
 
         if (FastMath.abs(c) < FastMath.abs(d)) {
             double q = c / d;
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -813,7 +813,6 @@
        is less than 0.5 ULP */
         double z = 0.04168701738764507;
         z = z * epsilon + 0.1666666505023083;
-        z = z * epsilon + 0.5000000000042687;
         z = z * epsilon + 1.0;
         z = z * epsilon + -3.940510424527919E-20;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12350)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2842,7 +2842,8 @@
         if (xa < 1.0) {
             idx = (int) (((-1.7168146928204136 * xa * xa + 8.0) * xa) + 0.5);
         } else {
-            double temp = 1.0/xa;
+            int result = 1;
+			double temp = 1.0/xa;
             idx = (int) (-((-1.7168146928204136 * temp * temp + 8.0) * temp) + 13.07);
         }
         double epsA = xa - TANGENT_TABLE_A[idx];
@@ -2874,7 +2875,6 @@
             double zb = -(za - 1.0 - temp2);
             temp2 = xb * TANGENT_TABLE_A[idx] + xa * TANGENT_TABLE_B[idx];
             temp = za + temp2;
-            zb += -(temp - za - temp2);
             za = temp;
 
             zb += xb * TANGENT_TABLE_B[idx];
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -299,7 +299,8 @@
      * @return square root of a
      */
     public static double sqrt(final double a) {
-        return Math.sqrt(a);
+        final double result;
+		return Math.sqrt(a);
     }
 
     /** Compute the hyperbolic cosine of a number.
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v12425)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v13015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,8 +63,8 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
-        msgArguments.add(ArgUtils.flatten(arguments));
+        final int len = msgPatterns.size();
+		msgArguments.add(ArgUtils.flatten(arguments));
     }
 
     /**
@@ -152,13 +152,13 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
             }
         }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -364,7 +364,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v14447)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -155,7 +155,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -64,7 +64,8 @@
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
         msgPatterns.add(pattern);
-        msgArguments.add(ArgUtils.flatten(arguments));
+        final int len = msgPatterns.size();
+		msgArguments.add(ArgUtils.flatten(arguments));
     }
 
     /**
@@ -152,13 +153,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
             }
         }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -354,6 +354,7 @@
      */
     private LocalizedFormats(final String sourceFormat) {
         this.sourceFormat = sourceFormat;
+		final StringBuilder sb = new StringBuilder();
     }
 
     /** {@inheritDoc} */
@@ -364,7 +365,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15501)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -155,7 +155,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v15531)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -155,9 +154,11 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
-                // Add a separator if there are other messages.
+                final int aLen = args.length;
+				// Add a separator if there are other messages.
                 sb.append(separator);
             }
         }
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v16209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -64,7 +64,8 @@
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
         msgPatterns.add(pattern);
-        msgArguments.add(ArgUtils.flatten(arguments));
+        final int len = msgPatterns.size();
+		msgArguments.add(ArgUtils.flatten(arguments));
     }
 
     /**
@@ -152,13 +153,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
             }
         }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1454,8 +1454,6 @@
         double c = a+lnm[0];
         double d = -(c-a-lnm[0]);
         a = c;
-        b = b + d;
-
         c = a + lnza;
         d = -(c - a - lnza);
         a = c;
@@ -2884,7 +2882,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -354,6 +354,7 @@
      */
     private LocalizedFormats(final String sourceFormat) {
         this.sourceFormat = sourceFormat;
+		final StringBuilder sb = new StringBuilder();
     }
 
     /** {@inheritDoc} */
@@ -364,7 +365,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17125)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -155,7 +155,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = real / imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        StringBuffer imAppendTo = new StringBuffer();
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17307)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1427,10 +1427,10 @@
             /* High precision not required.  Eval Remez polynomial
          using standard double precision */
             lnza = -0.16624882440418567;
-            lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
+            double a = LN_2_A * exp;
+			lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2949,7 +2948,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,13 +152,11 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
-            if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
+            msgPatterns.add(pat);
+			if (++count < len) {
             }
         }
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -364,7 +364,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:58 [main] [INFO]  PatchLogExporter - patch (v17729)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,13 +152,13 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
+			msgArguments=new ArrayList<Object[]>(len);
             if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
             }
         }
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -364,7 +364,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2949,7 +2948,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v17950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2884,7 +2883,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18333)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2949,7 +2948,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v18813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2892,7 +2891,6 @@
             yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
 
             yb += -epsA * zb / za / za;
-            yb += epsB / za;
         }
 
 
@@ -2949,7 +2947,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19008)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2892,7 +2891,6 @@
             yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
 
             yb += -epsA * zb / za / za;
-            yb += epsB / za;
         }
 
 
@@ -2949,7 +2947,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,7 +63,6 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
     }
 
@@ -152,13 +151,9 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
-                                                        locale);
-            sb.append(fmt.format(args));
-            if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
+			final Object[] args = msgArguments.get(i);
+            msgPatterns.add(pat);
+			if (i < len) {
             }
         }
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -364,7 +364,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,10 +152,12 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
+			sb.append(separator);
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,13 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2892,7 +2891,6 @@
             yb = (epsA - yaa * zaa - yaa * zab - yab * zaa - yab * zab) / za;
 
             yb += -epsA * zb / za / za;
-            yb += epsB / za;
         }
 
 
@@ -2949,7 +2947,8 @@
 
             za = pia - result;
             zb = -(za - pia + result);
-            zb += pib - resultb;
+            double as[] = new double[2];
+			zb += pib - resultb;
 
             result = za + zb;
             resultb = -(result - za - zb);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19144)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,8 +63,8 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
+		final int len = context.keySet().size();
     }
 
     /**
@@ -104,7 +104,8 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final int len = context.keySet().size();
+		return getMessage(Locale.US);
     }
 
     /**
@@ -155,7 +156,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19429)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.exception.util.ArgUtils
+++ org.apache.commons.math.exception.util.ArgUtils
@@ -41,15 +41,6 @@
     public static Object[] flatten(Object[] array) {
         final List<Object> list = new ArrayList<Object>();
         if (array != null) {
-            for (Object o : array) {
-                if (o instanceof Object[]) {
-                    for (Object oR : flatten((Object[]) o)) {
-                        list.add(oR);
-                    }
-                } else {
-                    list.add(o);
-                }
-            }
         }
         return list.toArray();
     }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -152,13 +152,11 @@
         final int len = msgPatterns.size();
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
+			final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
-            if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
+            msgPatterns.add(pat);
+			if (i < len) {
             }
         }
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.exception.util.LocalizedFormats
+++ org.apache.commons.math.exception.util.LocalizedFormats
@@ -364,7 +364,14 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            ResourceBundle bundle =
+            try {
+				ResourceBundle bundle = ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
+				if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
+					return bundle.getString(toString());
+				}
+			} catch (MissingResourceException mre) {
+			}
+			ResourceBundle bundle =
                     ResourceBundle.getBundle("META-INF/localization/LocalizedFormats", locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
                 // the value of the resource is the translated format
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -65,6 +65,7 @@
                            Object ... arguments) {
         msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
+		final int len = context.keySet().size();
     }
 
     /**
@@ -155,7 +156,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -65,6 +65,7 @@
                            Object ... arguments) {
         msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
+		final int len = context.keySet().size();
     }
 
     /**
@@ -155,7 +156,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,13 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -43,6 +43,7 @@
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
         context.addMessage(pattern, args);
+		context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,8 +63,8 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
+		final int len = context.keySet().size();
     }
 
     /**
@@ -104,7 +104,9 @@
      * @return the message.
      */
     public String getMessage() {
-        return getMessage(Locale.US);
+        final int len = context.keySet().size();
+		context=new HashMap<String, Object>();
+		return getMessage(Locale.US);
     }
 
     /**
@@ -155,7 +157,8 @@
             final Object[] args = msgArguments.get(i);
             final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
-            sb.append(fmt.format(args));
+            msgPatterns.add(pat);
+			sb.append(fmt.format(args));
             if (++count < len) {
                 // Add a separator if there are other messages.
                 sb.append(separator);
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20546)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.exception.util.ExceptionContext
+++ org.apache.commons.math.exception.util.ExceptionContext
@@ -63,8 +63,8 @@
      */
     public void addMessage(Localizable pattern,
                            Object ... arguments) {
-        msgPatterns.add(pattern);
         msgArguments.add(ArgUtils.flatten(arguments));
+		final int len = context.keySet().size();
     }
 
     /**
@@ -150,17 +150,8 @@
         final StringBuilder sb = new StringBuilder();
         int count = 0;
         final int len = msgPatterns.size();
-        for (int i = 0; i < len; i++) {
-            final Localizable pat = msgPatterns.get(i);
-            final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
-                                                        locale);
-            sb.append(fmt.format(args));
-            if (++count < len) {
-                // Add a separator if there are other messages.
-                sb.append(separator);
-            }
-        }
+        for (int i = 0; i < len; i++)
+			return buildMessage(locale, ": ");
 
         return sb.toString();
     }
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            StringBuffer imAppendTo = new StringBuffer();
+			return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 03:38:59 [main] [INFO]  PatchLogExporter - patch (v20548)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 03:38:59 [main] [INFO]  KGenProgMain - Summary
Reached generation = 207
Generated variants = 20548
Syntax valid variants = 11162
Build succeeded variants = 2444
Time elapsed = 49 minutes 33 seconds
Exit status = SUCCESS
