2023-08-07 06:05:55 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 06:05:55 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 06:05:55 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 06:05:55 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 8 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 06:06:17 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-07 06:06:17 [main] [INFO]  KGenProgMain - GA started
2023-08-07 06:06:17 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 06:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 50, build-succeeded 5, build-failed 25, syntax-invalid 1, redundant 19
Fitness: max 0.991(2), min 0.966(2), ave 0.979
Test execution time: sum 4427 ms, max 1188 ms, min 673 ms
----------------------------------------------------------------

2023-08-07 06:06:26 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 06:06:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 50, build-succeeded 6, build-failed 26, syntax-invalid 4, redundant 14
Fitness: max 1(1), min 0.966(1), ave 0.986
Test execution time: sum 4054 ms, max 796 ms, min 534 ms
----------------------------------------------------------------

2023-08-07 06:06:34 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 06:06:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 100, build-succeeded 10, build-failed 28, syntax-invalid 4, redundant 58
Fitness: max 0.991(8), min 0.966(2), ave 0.986
Test execution time: sum 5752 ms, max 725 ms, min 506 ms
----------------------------------------------------------------

2023-08-07 06:06:44 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 06:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 3, redundant 59
Fitness: max 1(1), min 0.966(5), ave 0.98
Test execution time: sum 5658 ms, max 669 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 06:06:54 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 06:07:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 seconds
Variants: generated 100, build-succeeded 17, build-failed 27, syntax-invalid 14, redundant 42
Fitness: max 0.991(10), min 0.836(1), ave 0.973
Test execution time: sum 8658 ms, max 629 ms, min 470 ms
----------------------------------------------------------------

2023-08-07 06:07:07 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 06:07:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 5 seconds
Variants: generated 100, build-succeeded 22, build-failed 22, syntax-invalid 20, redundant 36
Fitness: max 1(2), min 0.966(4), ave 0.986
Test execution time: sum 10850 ms, max 681 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 06:07:22 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 06:07:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 15 seconds
Variants: generated 100, build-succeeded 13, build-failed 29, syntax-invalid 22, redundant 36
Fitness: max 0.991(5), min 0.948(1), ave 0.976
Test execution time: sum 6200 ms, max 606 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:07:33 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 06:07:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 29 seconds
Variants: generated 100, build-succeeded 20, build-failed 28, syntax-invalid 22, redundant 30
Fitness: max 1(2), min 0.931(1), ave 0.98
Test execution time: sum 9600 ms, max 688 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 06:07:46 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 06:07:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 41 seconds
Variants: generated 100, build-succeeded 18, build-failed 28, syntax-invalid 34, redundant 20
Fitness: max 0.991(10), min 0.966(2), ave 0.985
Test execution time: sum 8830 ms, max 601 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 06:07:59 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 06:08:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 53 seconds
Variants: generated 100, build-succeeded 19, build-failed 21, syntax-invalid 37, redundant 23
Fitness: max 1(1), min 0.957(1), ave 0.982
Test execution time: sum 8616 ms, max 526 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:08:11 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 06:08:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 5 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 36, redundant 16
Fitness: max 1(1), min 0.983(7), ave 0.988
Test execution time: sum 8103 ms, max 592 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 06:08:23 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 06:08:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 18 seconds
Variants: generated 100, build-succeeded 17, build-failed 28, syntax-invalid 33, redundant 22
Fitness: max 1(2), min 0.966(3), ave 0.987
Test execution time: sum 8551 ms, max 830 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 06:08:36 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 06:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 34 seconds
Variants: generated 100, build-succeeded 20, build-failed 29, syntax-invalid 35, redundant 16
Fitness: max 1(1), min 0.957(1), ave 0.989
Test execution time: sum 11703 ms, max 799 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:08:52 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 06:09:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 48 seconds
Variants: generated 100, build-succeeded 21, build-failed 21, syntax-invalid 35, redundant 23
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 9616 ms, max 504 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:09:06 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 06:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 1 seconds
Variants: generated 100, build-succeeded 19, build-failed 29, syntax-invalid 35, redundant 17
Fitness: max 0.991(15), min 0.957(2), ave 0.986
Test execution time: sum 8798 ms, max 494 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 06:09:19 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 06:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 17 seconds
Variants: generated 100, build-succeeded 24, build-failed 25, syntax-invalid 26, redundant 25
Fitness: max 1(1), min 0.983(4), ave 0.99
Test execution time: sum 11213 ms, max 648 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:09:35 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 06:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 30 seconds
Variants: generated 100, build-succeeded 16, build-failed 32, syntax-invalid 32, redundant 20
Fitness: max 0.991(13), min 0.957(1), ave 0.987
Test execution time: sum 7423 ms, max 526 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 06:09:48 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 06:10:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 43 seconds
Variants: generated 100, build-succeeded 19, build-failed 28, syntax-invalid 37, redundant 16
Fitness: max 1(2), min 0.957(1), ave 0.99
Test execution time: sum 8905 ms, max 574 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 06:10:01 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 06:10:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 58 seconds
Variants: generated 100, build-succeeded 22, build-failed 35, syntax-invalid 25, redundant 18
Fitness: max 0.991(21), min 0.983(1), ave 0.991
Test execution time: sum 10181 ms, max 585 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 06:10:16 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 06:10:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 17 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 27, redundant 15
Fitness: max 1(2), min 0.974(1), ave 0.989
Test execution time: sum 13471 ms, max 846 ms, min 429 ms
----------------------------------------------------------------

2023-08-07 06:10:35 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 06:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 34 seconds
Variants: generated 100, build-succeeded 22, build-failed 39, syntax-invalid 25, redundant 14
Fitness: max 0.991(20), min 0.966(1), ave 0.99
Test execution time: sum 11865 ms, max 895 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 06:10:52 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 06:11:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 53 seconds
Variants: generated 100, build-succeeded 26, build-failed 26, syntax-invalid 27, redundant 21
Fitness: max 1(1), min 0.966(1), ave 0.987
Test execution time: sum 13647 ms, max 787 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:11:11 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 06:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 10 seconds
Variants: generated 100, build-succeeded 21, build-failed 30, syntax-invalid 30, redundant 19
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 12013 ms, max 808 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 06:11:28 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 06:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 29 seconds
Variants: generated 100, build-succeeded 25, build-failed 31, syntax-invalid 19, redundant 25
Fitness: max 1(2), min 0.966(2), ave 0.988
Test execution time: sum 14113 ms, max 829 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:11:47 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 06:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 46 seconds
Variants: generated 100, build-succeeded 19, build-failed 35, syntax-invalid 29, redundant 17
Fitness: max 0.991(16), min 0.845(1), ave 0.983
Test execution time: sum 10362 ms, max 916 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 06:12:04 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 06:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 0 seconds
Variants: generated 100, build-succeeded 17, build-failed 22, syntax-invalid 37, redundant 24
Fitness: max 0.991(10), min 0.914(1), ave 0.981
Test execution time: sum 9657 ms, max 853 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 06:12:18 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 06:12:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 13 seconds
Variants: generated 100, build-succeeded 15, build-failed 30, syntax-invalid 31, redundant 24
Fitness: max 0.991(11), min 0.974(1), ave 0.989
Test execution time: sum 8198 ms, max 786 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 06:12:31 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 06:12:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 24 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 48, redundant 14
Fitness: max 0.991(8), min 0.983(3), ave 0.989
Test execution time: sum 6353 ms, max 700 ms, min 454 ms
----------------------------------------------------------------

2023-08-07 06:12:41 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 06:12:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 37 seconds
Variants: generated 100, build-succeeded 16, build-failed 32, syntax-invalid 34, redundant 18
Fitness: max 0.991(12), min 0.974(1), ave 0.989
Test execution time: sum 9374 ms, max 888 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 06:12:55 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 06:13:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 53 seconds
Variants: generated 100, build-succeeded 17, build-failed 28, syntax-invalid 30, redundant 25
Fitness: max 0.991(17), min 0.991(17), ave 0.991
Test execution time: sum 9875 ms, max 875 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:13:10 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 06:13:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 9 seconds
Variants: generated 100, build-succeeded 21, build-failed 19, syntax-invalid 33, redundant 27
Fitness: max 1(2), min 0.974(1), ave 0.991
Test execution time: sum 11983 ms, max 792 ms, min 399 ms
----------------------------------------------------------------

2023-08-07 06:13:27 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 06:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 30 seconds
Variants: generated 100, build-succeeded 24, build-failed 29, syntax-invalid 29, redundant 18
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 14536 ms, max 970 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 06:13:48 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 06:14:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 48 seconds
Variants: generated 100, build-succeeded 19, build-failed 26, syntax-invalid 37, redundant 18
Fitness: max 0.991(19), min 0.991(19), ave 0.991
Test execution time: sum 12054 ms, max 934 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 06:14:06 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 06:14:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 8 seconds
Variants: generated 100, build-succeeded 22, build-failed 27, syntax-invalid 34, redundant 17
Fitness: max 0.991(19), min 0.983(3), ave 0.99
Test execution time: sum 13960 ms, max 876 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 06:14:26 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 06:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 32 seconds
Variants: generated 100, build-succeeded 23, build-failed 28, syntax-invalid 34, redundant 15
Fitness: max 0.991(19), min 0.983(4), ave 0.99
Test execution time: sum 15621 ms, max 866 ms, min 498 ms
----------------------------------------------------------------

2023-08-07 06:14:49 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 06:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 58 seconds
Variants: generated 100, build-succeeded 21, build-failed 34, syntax-invalid 35, redundant 10
Fitness: max 1(1), min 0.931(1), ave 0.987
Test execution time: sum 17430 ms, max 1072 ms, min 631 ms
----------------------------------------------------------------

2023-08-07 06:15:15 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 06:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 19 seconds
Variants: generated 100, build-succeeded 19, build-failed 34, syntax-invalid 32, redundant 15
Fitness: max 0.991(16), min 0.983(3), ave 0.99
Test execution time: sum 13416 ms, max 920 ms, min 576 ms
----------------------------------------------------------------

2023-08-07 06:15:36 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 06:15:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 40 seconds
Variants: generated 100, build-succeeded 21, build-failed 34, syntax-invalid 27, redundant 18
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 14834 ms, max 837 ms, min 548 ms
----------------------------------------------------------------

2023-08-07 06:15:57 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 06:16:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 6 seconds
Variants: generated 100, build-succeeded 24, build-failed 36, syntax-invalid 26, redundant 14
Fitness: max 1(2), min 0.983(3), ave 0.991
Test execution time: sum 17807 ms, max 996 ms, min 524 ms
----------------------------------------------------------------

2023-08-07 06:16:24 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 06:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 22 seconds
Variants: generated 100, build-succeeded 19, build-failed 36, syntax-invalid 27, redundant 18
Fitness: max 1(1), min 0.931(1), ave 0.987
Test execution time: sum 10483 ms, max 1036 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 06:16:40 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 06:16:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 35 seconds
Variants: generated 100, build-succeeded 15, build-failed 39, syntax-invalid 35, redundant 11
Fitness: max 0.991(14), min 0.983(1), ave 0.991
Test execution time: sum 7095 ms, max 701 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 06:16:52 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 06:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 47 seconds
Variants: generated 100, build-succeeded 15, build-failed 32, syntax-invalid 45, redundant 8
Fitness: max 1(1), min 0.957(1), ave 0.987
Test execution time: sum 7365 ms, max 765 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 06:17:05 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 06:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 1 seconds
Variants: generated 100, build-succeeded 21, build-failed 29, syntax-invalid 36, redundant 14
Fitness: max 0.991(18), min 0.983(3), ave 0.99
Test execution time: sum 9901 ms, max 560 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:17:19 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 06:17:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 15 seconds
Variants: generated 100, build-succeeded 20, build-failed 36, syntax-invalid 35, redundant 9
Fitness: max 1(3), min 0.966(1), ave 0.991
Test execution time: sum 9375 ms, max 535 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:17:33 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 06:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 26 seconds
Variants: generated 100, build-succeeded 14, build-failed 27, syntax-invalid 34, redundant 25
Fitness: max 1(4), min 0.983(1), ave 0.993
Test execution time: sum 6489 ms, max 555 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 06:17:44 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 06:17:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 39 seconds
Variants: generated 100, build-succeeded 19, build-failed 32, syntax-invalid 35, redundant 14
Fitness: max 0.991(16), min 0.983(3), ave 0.99
Test execution time: sum 8751 ms, max 492 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 06:17:57 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 06:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 53 seconds
Variants: generated 100, build-succeeded 18, build-failed 31, syntax-invalid 46, redundant 5
Fitness: max 1(1), min 0.957(1), ave 0.988
Test execution time: sum 9174 ms, max 806 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:18:11 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 06:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 3 seconds
Variants: generated 100, build-succeeded 12, build-failed 35, syntax-invalid 43, redundant 10
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 5846 ms, max 716 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:18:20 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 06:18:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 12 seconds
Variants: generated 100, build-succeeded 13, build-failed 29, syntax-invalid 42, redundant 16
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 6166 ms, max 538 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 06:18:30 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 06:18:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 27 seconds
Variants: generated 100, build-succeeded 22, build-failed 28, syntax-invalid 40, redundant 10
Fitness: max 0.991(16), min 0.983(6), ave 0.989
Test execution time: sum 10160 ms, max 508 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 06:18:44 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 06:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 38 seconds
Variants: generated 100, build-succeeded 16, build-failed 28, syntax-invalid 45, redundant 11
Fitness: max 1(1), min 0.983(6), ave 0.989
Test execution time: sum 6959 ms, max 479 ms, min 401 ms
----------------------------------------------------------------

2023-08-07 06:18:56 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 06:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 52 seconds
Variants: generated 100, build-succeeded 19, build-failed 23, syntax-invalid 44, redundant 14
Fitness: max 1(1), min 0.931(2), ave 0.982
Test execution time: sum 9494 ms, max 844 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 06:19:09 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 06:19:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 4 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 42, redundant 10
Fitness: max 0.991(14), min 0.983(3), ave 0.99
Test execution time: sum 7778 ms, max 531 ms, min 385 ms
----------------------------------------------------------------

2023-08-07 06:19:21 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 06:19:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 12 seconds
Variants: generated 100, build-succeeded 10, build-failed 29, syntax-invalid 45, redundant 16
Fitness: max 0.991(8), min 0.983(2), ave 0.99
Test execution time: sum 4462 ms, max 485 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 06:19:30 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 06:19:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 23 seconds
Variants: generated 100, build-succeeded 17, build-failed 25, syntax-invalid 45, redundant 13
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 7693 ms, max 506 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:19:41 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 06:19:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 33 seconds
Variants: generated 100, build-succeeded 12, build-failed 37, syntax-invalid 41, redundant 10
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 5491 ms, max 499 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 06:19:51 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 06:20:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 45 seconds
Variants: generated 100, build-succeeded 14, build-failed 27, syntax-invalid 46, redundant 13
Fitness: max 0.991(10), min 0.974(1), ave 0.988
Test execution time: sum 8008 ms, max 1044 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 06:20:03 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-07 06:20:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 59 seconds
Variants: generated 100, build-succeeded 17, build-failed 34, syntax-invalid 42, redundant 7
Fitness: max 0.991(15), min 0.966(1), ave 0.989
Test execution time: sum 8978 ms, max 883 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:20:17 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-07 06:20:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 15 seconds
Variants: generated 100, build-succeeded 21, build-failed 33, syntax-invalid 30, redundant 16
Fitness: max 0.991(20), min 0.983(1), ave 0.991
Test execution time: sum 10767 ms, max 714 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 06:20:33 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-07 06:20:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 29 seconds
Variants: generated 100, build-succeeded 16, build-failed 38, syntax-invalid 35, redundant 11
Fitness: max 0.991(14), min 0.983(2), ave 0.99
Test execution time: sum 8449 ms, max 826 ms, min 392 ms
----------------------------------------------------------------

2023-08-07 06:20:47 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-07 06:21:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 43 seconds
Variants: generated 100, build-succeeded 16, build-failed 34, syntax-invalid 38, redundant 12
Fitness: max 0.991(12), min 0.983(4), ave 0.989
Test execution time: sum 8603 ms, max 794 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 06:21:00 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-07 06:21:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 56 seconds
Variants: generated 100, build-succeeded 16, build-failed 35, syntax-invalid 36, redundant 13
Fitness: max 0.991(16), min 0.991(16), ave 0.991
Test execution time: sum 8560 ms, max 801 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 06:21:14 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 06:21:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 10 seconds
Variants: generated 100, build-succeeded 15, build-failed 38, syntax-invalid 37, redundant 10
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 8336 ms, max 885 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 06:21:28 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 06:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 21 seconds
Variants: generated 100, build-succeeded 10, build-failed 39, syntax-invalid 41, redundant 10
Fitness: max 0.991(9), min 0.983(1), ave 0.991
Test execution time: sum 5391 ms, max 684 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 06:21:38 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 06:21:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 37 seconds
Variants: generated 100, build-succeeded 19, build-failed 33, syntax-invalid 38, redundant 10
Fitness: max 1(2), min 0.983(3), ave 0.991
Test execution time: sum 10422 ms, max 820 ms, min 394 ms
----------------------------------------------------------------

2023-08-07 06:21:54 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 06:22:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 48 seconds
Variants: generated 100, build-succeeded 12, build-failed 32, syntax-invalid 47, redundant 9
Fitness: max 0.991(9), min 0.983(3), ave 0.989
Test execution time: sum 6748 ms, max 777 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 06:22:06 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 06:22:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 1 seconds
Variants: generated 100, build-succeeded 14, build-failed 37, syntax-invalid 37, redundant 12
Fitness: max 0.991(12), min 0.983(2), ave 0.99
Test execution time: sum 8139 ms, max 772 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 06:22:19 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 06:22:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 14 seconds
Variants: generated 100, build-succeeded 14, build-failed 36, syntax-invalid 43, redundant 7
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 7427 ms, max 856 ms, min 390 ms
----------------------------------------------------------------

2023-08-07 06:22:32 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 06:22:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 26 seconds
Variants: generated 100, build-succeeded 13, build-failed 32, syntax-invalid 47, redundant 8
Fitness: max 0.991(11), min 0.983(2), ave 0.99
Test execution time: sum 7088 ms, max 874 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:22:44 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 06:22:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 39 seconds
Variants: generated 100, build-succeeded 13, build-failed 37, syntax-invalid 44, redundant 6
Fitness: max 0.991(13), min 0.991(13), ave 0.991
Test execution time: sum 7595 ms, max 910 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:22:57 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 06:23:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 52 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 40, redundant 11
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 7491 ms, max 780 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:23:10 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 06:23:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 5 seconds
Variants: generated 100, build-succeeded 11, build-failed 33, syntax-invalid 47, redundant 9
Fitness: max 0.991(6), min 0.983(5), ave 0.987
Test execution time: sum 6040 ms, max 717 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 06:23:22 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 06:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 17 seconds
Variants: generated 100, build-succeeded 14, build-failed 37, syntax-invalid 43, redundant 6
Fitness: max 0.991(13), min 0.983(1), ave 0.991
Test execution time: sum 7779 ms, max 730 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 06:23:35 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 06:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 30 seconds
Variants: generated 100, build-succeeded 11, build-failed 34, syntax-invalid 46, redundant 9
Fitness: max 0.991(6), min 0.922(1), ave 0.982
Test execution time: sum 6735 ms, max 902 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:23:47 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 06:24:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 46 seconds
Variants: generated 100, build-succeeded 17, build-failed 29, syntax-invalid 48, redundant 6
Fitness: max 0.991(15), min 0.957(1), ave 0.989
Test execution time: sum 10424 ms, max 809 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 06:24:04 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 06:24:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 0 seconds
Variants: generated 100, build-succeeded 13, build-failed 30, syntax-invalid 46, redundant 11
Fitness: max 0.991(11), min 0.983(2), ave 0.99
Test execution time: sum 8190 ms, max 896 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 06:24:18 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 06:24:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 10 seconds
Variants: generated 100, build-succeeded 6, build-failed 44, syntax-invalid 43, redundant 7
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3908 ms, max 891 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 06:24:27 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 06:24:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 26 seconds
Variants: generated 100, build-succeeded 15, build-failed 30, syntax-invalid 50, redundant 5
Fitness: max 1(1), min 0.991(14), ave 0.992
Test execution time: sum 10012 ms, max 860 ms, min 480 ms
----------------------------------------------------------------

2023-08-07 06:24:44 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 06:24:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 38 seconds
Variants: generated 100, build-succeeded 8, build-failed 33, syntax-invalid 48, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5574 ms, max 865 ms, min 592 ms
----------------------------------------------------------------

2023-08-07 06:24:55 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 06:25:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 53 seconds
Variants: generated 100, build-succeeded 14, build-failed 29, syntax-invalid 47, redundant 10
Fitness: max 0.991(12), min 0.983(2), ave 0.99
Test execution time: sum 9077 ms, max 793 ms, min 489 ms
----------------------------------------------------------------

2023-08-07 06:25:11 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 06:25:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 7 seconds
Variants: generated 100, build-succeeded 10, build-failed 26, syntax-invalid 52, redundant 12
Fitness: max 1(2), min 0.983(2), ave 0.991
Test execution time: sum 6744 ms, max 866 ms, min 517 ms
----------------------------------------------------------------

2023-08-07 06:25:24 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 06:25:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 19 seconds
Variants: generated 100, build-succeeded 11, build-failed 28, syntax-invalid 56, redundant 5
Fitness: max 0.991(9), min 0.983(2), ave 0.99
Test execution time: sum 7428 ms, max 814 ms, min 572 ms
----------------------------------------------------------------

2023-08-07 06:25:37 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 06:25:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 31 seconds
Variants: generated 100, build-succeeded 9, build-failed 30, syntax-invalid 49, redundant 12
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 6008 ms, max 845 ms, min 485 ms
----------------------------------------------------------------

2023-08-07 06:25:49 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 06:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 42 seconds
Variants: generated 100, build-succeeded 7, build-failed 34, syntax-invalid 48, redundant 11
Fitness: max 1(2), min 0.991(5), ave 0.994
Test execution time: sum 4844 ms, max 780 ms, min 638 ms
----------------------------------------------------------------

2023-08-07 06:26:00 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 06:26:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 54 seconds
Variants: generated 100, build-succeeded 10, build-failed 24, syntax-invalid 56, redundant 10
Fitness: max 0.991(8), min 0.983(2), ave 0.99
Test execution time: sum 6712 ms, max 837 ms, min 472 ms
----------------------------------------------------------------

2023-08-07 06:26:11 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 06:26:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 6 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 52, redundant 10
Fitness: max 0.991(7), min 0.983(1), ave 0.99
Test execution time: sum 5667 ms, max 842 ms, min 575 ms
----------------------------------------------------------------

2023-08-07 06:26:23 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 06:26:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 15 seconds
Variants: generated 100, build-succeeded 6, build-failed 28, syntax-invalid 52, redundant 14
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3868 ms, max 1054 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 06:26:33 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 06:26:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 26 seconds
Variants: generated 100, build-succeeded 14, build-failed 23, syntax-invalid 50, redundant 13
Fitness: max 1(2), min 0.983(2), ave 0.991
Test execution time: sum 6969 ms, max 803 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 06:26:44 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 06:26:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 36 seconds
Variants: generated 100, build-succeeded 10, build-failed 28, syntax-invalid 50, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4905 ms, max 743 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 06:26:54 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 06:27:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 45 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 57, redundant 8
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4683 ms, max 767 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 06:27:03 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 06:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 53 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 51, redundant 17
Fitness: max 1(2), min 0.991(4), ave 0.994
Test execution time: sum 3162 ms, max 734 ms, min 400 ms
----------------------------------------------------------------

2023-08-07 06:27:10 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 06:27:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 5 seconds
Variants: generated 100, build-succeeded 13, build-failed 27, syntax-invalid 52, redundant 8
Fitness: max 0.991(11), min 0.983(2), ave 0.99
Test execution time: sum 7019 ms, max 821 ms, min 398 ms
----------------------------------------------------------------

2023-08-07 06:27:23 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 06:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 17 seconds
Variants: generated 100, build-succeeded 12, build-failed 30, syntax-invalid 50, redundant 8
Fitness: max 0.991(9), min 0.957(1), ave 0.987
Test execution time: sum 6065 ms, max 699 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 06:27:35 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 06:27:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 28 seconds
Variants: generated 100, build-succeeded 13, build-failed 24, syntax-invalid 54, redundant 9
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 6596 ms, max 693 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:27:46 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 06:27:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 38 seconds
Variants: generated 100, build-succeeded 10, build-failed 25, syntax-invalid 53, redundant 12
Fitness: max 0.991(8), min 0.983(2), ave 0.99
Test execution time: sum 5656 ms, max 854 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:27:56 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 06:28:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 46 seconds
Variants: generated 100, build-succeeded 6, build-failed 23, syntax-invalid 57, redundant 14
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 2865 ms, max 682 ms, min 396 ms
----------------------------------------------------------------

2023-08-07 06:28:04 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 06:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 51 seconds
Variants: generated 100, build-succeeded 2, build-failed 26, syntax-invalid 57, redundant 15
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 1020 ms, max 602 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 06:28:09 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 06:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 2 seconds
Variants: generated 100, build-succeeded 11, build-failed 25, syntax-invalid 53, redundant 11
Fitness: max 1(1), min 0.948(1), ave 0.982
Test execution time: sum 6408 ms, max 759 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:28:20 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 06:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 10 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 53, redundant 10
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 2623 ms, max 729 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 06:28:28 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 06:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 18 seconds
Variants: generated 100, build-succeeded 6, build-failed 32, syntax-invalid 53, redundant 9
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3047 ms, max 695 ms, min 429 ms
----------------------------------------------------------------

2023-08-07 06:28:35 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 06:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 27 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 55, redundant 10
Fitness: max 0.991(8), min 0.991(8), ave 0.991
Test execution time: sum 4522 ms, max 765 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:28:45 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 06:28:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 34 seconds
Variants: generated 100, build-succeeded 4, build-failed 32, syntax-invalid 52, redundant 12
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2317 ms, max 665 ms, min 499 ms
----------------------------------------------------------------

2023-08-07 06:28:52 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 06:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 40 seconds
Variants: generated 100, build-succeeded 3, build-failed 27, syntax-invalid 53, redundant 17
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1564 ms, max 638 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 06:28:58 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 06:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 48 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 54, redundant 13
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3220 ms, max 801 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 06:29:06 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 06:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 54 seconds
Variants: generated 100, build-succeeded 3, build-failed 26, syntax-invalid 56, redundant 15
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1602 ms, max 658 ms, min 469 ms
----------------------------------------------------------------

2023-08-07 06:29:12 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 06:29:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 59 seconds
Variants: generated 100, build-succeeded 1, build-failed 31, syntax-invalid 53, redundant 15
Fitness: max 0.991(1), min 0.991(1), ave 0.991
Test execution time: sum 471 ms, max 471 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 06:29:17 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 06:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 8 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 53, redundant 17
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 4296 ms, max 838 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 06:29:26 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 06:29:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 16 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 51, redundant 16
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3043 ms, max 659 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 06:29:34 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 06:29:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 26 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 53, redundant 10
Fitness: max 0.991(6), min 0.983(2), ave 0.989
Test execution time: sum 4577 ms, max 729 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 06:29:44 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 06:29:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 34 seconds
Variants: generated 100, build-succeeded 6, build-failed 19, syntax-invalid 56, redundant 19
Fitness: max 1(1), min 0.957(1), ave 0.986
Test execution time: sum 2879 ms, max 535 ms, min 429 ms
----------------------------------------------------------------

2023-08-07 06:29:52 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 06:29:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 40 seconds
Variants: generated 100, build-succeeded 3, build-failed 23, syntax-invalid 55, redundant 19
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1977 ms, max 815 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 06:29:58 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 06:30:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 49 seconds
Variants: generated 100, build-succeeded 7, build-failed 24, syntax-invalid 52, redundant 17
Fitness: max 0.991(6), min 0.948(1), ave 0.985
Test execution time: sum 3668 ms, max 718 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 06:30:07 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 06:30:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 55 seconds
Variants: generated 100, build-succeeded 3, build-failed 24, syntax-invalid 55, redundant 18
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1821 ms, max 852 ms, min 450 ms
----------------------------------------------------------------

2023-08-07 06:30:13 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 06:30:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 4 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 55, redundant 17
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 2629 ms, max 700 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 06:30:21 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 06:30:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 15 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 55, redundant 15
Fitness: max 1(1), min 0.991(6), ave 0.993
Test execution time: sum 5084 ms, max 949 ms, min 565 ms
----------------------------------------------------------------

2023-08-07 06:30:33 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 06:30:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 25 seconds
Variants: generated 100, build-succeeded 3, build-failed 33, syntax-invalid 54, redundant 10
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 2077 ms, max 779 ms, min 605 ms
----------------------------------------------------------------

2023-08-07 06:30:43 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 06:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 34 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 54, redundant 9
Fitness: max 0.991(5), min 0.983(1), ave 0.99
Test execution time: sum 3628 ms, max 793 ms, min 461 ms
----------------------------------------------------------------

2023-08-07 06:30:51 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 06:31:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 46 seconds
Variants: generated 100, build-succeeded 11, build-failed 27, syntax-invalid 55, redundant 7
Fitness: max 0.991(10), min 0.974(1), ave 0.99
Test execution time: sum 6875 ms, max 923 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 06:31:04 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 06:31:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 55 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 54, redundant 11
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3132 ms, max 935 ms, min 443 ms
----------------------------------------------------------------

2023-08-07 06:31:13 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 06:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 7 seconds
Variants: generated 100, build-succeeded 9, build-failed 29, syntax-invalid 53, redundant 9
Fitness: max 1(2), min 0.94(1), ave 0.987
Test execution time: sum 5215 ms, max 900 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 06:31:25 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 06:31:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 17 seconds
Variants: generated 100, build-succeeded 7, build-failed 28, syntax-invalid 54, redundant 11
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 4167 ms, max 770 ms, min 452 ms
----------------------------------------------------------------

2023-08-07 06:31:35 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 06:31:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 26 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 52, redundant 15
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 3148 ms, max 798 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 06:31:44 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 06:31:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 37 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 50, redundant 15
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4591 ms, max 897 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:31:55 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 06:32:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 46 seconds
Variants: generated 100, build-succeeded 5, build-failed 29, syntax-invalid 51, redundant 15
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 3089 ms, max 817 ms, min 486 ms
----------------------------------------------------------------

2023-08-07 06:32:04 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 06:32:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 56 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 52, redundant 17
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3354 ms, max 704 ms, min 473 ms
----------------------------------------------------------------

2023-08-07 06:32:13 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 06:32:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 5 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 53, redundant 14
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3398 ms, max 853 ms, min 477 ms
----------------------------------------------------------------

2023-08-07 06:32:23 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 06:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 15 seconds
Variants: generated 100, build-succeeded 4, build-failed 37, syntax-invalid 51, redundant 8
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 2511 ms, max 703 ms, min 596 ms
----------------------------------------------------------------

2023-08-07 06:32:33 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 06:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 27 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 50, redundant 12
Fitness: max 1(2), min 0.991(6), ave 0.994
Test execution time: sum 5674 ms, max 882 ms, min 610 ms
----------------------------------------------------------------

2023-08-07 06:32:45 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 06:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 36 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 51, redundant 15
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2309 ms, max 733 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 06:32:54 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 06:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 45 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 51, redundant 14
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 3102 ms, max 749 ms, min 459 ms
----------------------------------------------------------------

2023-08-07 06:33:03 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 06:33:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 55 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 52, redundant 12
Fitness: max 0.991(6), min 0.931(1), ave 0.983
Test execution time: sum 3945 ms, max 791 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 06:33:12 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 06:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 5 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 54, redundant 15
Fitness: max 0.991(8), min 0.991(8), ave 0.991
Test execution time: sum 4266 ms, max 712 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 06:33:23 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 06:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 15 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 50, redundant 14
Fitness: max 0.991(7), min 0.991(7), ave 0.991
Test execution time: sum 3950 ms, max 788 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 06:33:33 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 06:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 23 seconds
Variants: generated 100, build-succeeded 3, build-failed 32, syntax-invalid 52, redundant 13
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1603 ms, max 664 ms, min 454 ms
----------------------------------------------------------------

2023-08-07 06:33:41 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 06:33:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 34 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 52, redundant 11
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3911 ms, max 1020 ms, min 447 ms
----------------------------------------------------------------

2023-08-07 06:33:52 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 06:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 43 seconds
Variants: generated 100, build-succeeded 5, build-failed 31, syntax-invalid 53, redundant 11
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 2947 ms, max 713 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 06:34:01 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 06:34:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 54 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 51, redundant 13
Fitness: max 0.991(7), min 0.991(7), ave 0.991
Test execution time: sum 4015 ms, max 856 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 06:34:11 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 06:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 4 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 51, redundant 16
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3692 ms, max 791 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 06:34:22 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 06:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 11 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 52, redundant 17
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1470 ms, max 619 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 06:34:29 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 06:34:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 21 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 52, redundant 17
Fitness: max 1(2), min 0.991(4), ave 0.994
Test execution time: sum 3753 ms, max 766 ms, min 456 ms
----------------------------------------------------------------

2023-08-07 06:34:39 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 06:34:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 30 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 53, redundant 17
Fitness: max 1(1), min 0.991(5), ave 0.993
Test execution time: sum 3397 ms, max 798 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 06:34:48 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 06:34:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 40 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 52, redundant 16
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3739 ms, max 917 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 06:34:58 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 06:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 50 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 54, redundant 9
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3810 ms, max 781 ms, min 467 ms
----------------------------------------------------------------

2023-08-07 06:35:08 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 06:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 0 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 51, redundant 14
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3234 ms, max 856 ms, min 510 ms
----------------------------------------------------------------

2023-08-07 06:35:18 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 06:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 11 seconds
Variants: generated 100, build-succeeded 6, build-failed 28, syntax-invalid 51, redundant 15
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3662 ms, max 853 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 06:35:29 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 06:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 20 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 50, redundant 16
Fitness: max 0.991(3), min 0.974(1), ave 0.987
Test execution time: sum 2201 ms, max 748 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 06:35:38 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 06:35:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 31 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 51, redundant 17
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3689 ms, max 823 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 06:35:49 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 06:35:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 40 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 54, redundant 18
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 2950 ms, max 780 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 06:35:58 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 06:36:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 48 seconds
Variants: generated 100, build-succeeded 2, build-failed 25, syntax-invalid 52, redundant 21
Fitness: max 1(1), min 0.991(1), ave 0.996
Test execution time: sum 1394 ms, max 733 ms, min 661 ms
----------------------------------------------------------------

2023-08-07 06:36:05 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 06:36:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 57 seconds
Variants: generated 100, build-succeeded 5, build-failed 22, syntax-invalid 51, redundant 22
Fitness: max 1(1), min 0.991(4), ave 0.993
Test execution time: sum 3179 ms, max 847 ms, min 475 ms
----------------------------------------------------------------

2023-08-07 06:36:14 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 06:36:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 5 seconds
Variants: generated 100, build-succeeded 4, build-failed 24, syntax-invalid 52, redundant 20
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2170 ms, max 671 ms, min 459 ms
----------------------------------------------------------------

2023-08-07 06:36:23 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 06:36:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 15 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 52, redundant 17
Fitness: max 1(2), min 0.991(1), ave 0.997
Test execution time: sum 1846 ms, max 786 ms, min 486 ms
----------------------------------------------------------------

2023-08-07 06:36:32 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 06:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 22 seconds
Variants: generated 100, build-succeeded 2, build-failed 25, syntax-invalid 53, redundant 20
Fitness: max 1(1), min 0.991(1), ave 0.996
Test execution time: sum 1472 ms, max 834 ms, min 638 ms
----------------------------------------------------------------

2023-08-07 06:36:40 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 06:36:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 31 seconds
Variants: generated 100, build-succeeded 3, build-failed 29, syntax-invalid 53, redundant 15
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1727 ms, max 677 ms, min 475 ms
----------------------------------------------------------------

2023-08-07 06:36:49 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 06:37:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 43 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 51, redundant 13
Fitness: max 0.991(8), min 0.845(1), ave 0.975
Test execution time: sum 5406 ms, max 939 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 06:37:01 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 06:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 53 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 53, redundant 14
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2908 ms, max 882 ms, min 503 ms
----------------------------------------------------------------

2023-08-07 06:37:11 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 06:37:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 4 seconds
Variants: generated 100, build-succeeded 7, build-failed 20, syntax-invalid 56, redundant 17
Fitness: max 0.991(4), min 0.957(1), ave 0.983
Test execution time: sum 3943 ms, max 730 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 06:37:22 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 06:37:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 16 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 52, redundant 15
Fitness: max 0.991(8), min 0.991(8), ave 0.991
Test execution time: sum 4564 ms, max 697 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 06:37:34 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 06:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 28 seconds
Variants: generated 100, build-succeeded 6, build-failed 32, syntax-invalid 53, redundant 9
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3438 ms, max 749 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 06:37:45 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 06:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 42 seconds
Variants: generated 100, build-succeeded 11, build-failed 23, syntax-invalid 52, redundant 14
Fitness: max 1(3), min 0.94(1), ave 0.987
Test execution time: sum 6914 ms, max 848 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 06:38:00 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 06:38:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 51 seconds
Variants: generated 100, build-succeeded 3, build-failed 20, syntax-invalid 51, redundant 26
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 2028 ms, max 733 ms, min 570 ms
----------------------------------------------------------------

2023-08-07 06:38:08 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 06:38:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 3 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 51, redundant 16
Fitness: max 1(1), min 0.784(1), ave 0.964
Test execution time: sum 4528 ms, max 827 ms, min 455 ms
----------------------------------------------------------------

2023-08-07 06:38:21 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 06:38:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 11 seconds
Variants: generated 100, build-succeeded 3, build-failed 28, syntax-invalid 51, redundant 18
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1797 ms, max 850 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 06:38:29 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 06:38:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 22 seconds
Variants: generated 100, build-succeeded 7, build-failed 26, syntax-invalid 55, redundant 12
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3641 ms, max 826 ms, min 407 ms
----------------------------------------------------------------

2023-08-07 06:38:39 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 06:38:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 30 seconds
Variants: generated 100, build-succeeded 3, build-failed 29, syntax-invalid 53, redundant 15
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1764 ms, max 733 ms, min 474 ms
----------------------------------------------------------------

2023-08-07 06:38:48 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 06:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 38 seconds
Variants: generated 100, build-succeeded 3, build-failed 24, syntax-invalid 53, redundant 20
Fitness: max 0.991(2), min 0.983(1), ave 0.989
Test execution time: sum 1600 ms, max 668 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 06:38:56 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 06:39:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 48 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 50, redundant 18
Fitness: max 1(2), min 0.991(3), ave 0.995
Test execution time: sum 3348 ms, max 921 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 06:39:05 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 06:39:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 57 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 51, redundant 16
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 2378 ms, max 712 ms, min 524 ms
----------------------------------------------------------------

2023-08-07 06:39:15 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 06:39:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 5 seconds
Variants: generated 100, build-succeeded 3, build-failed 27, syntax-invalid 53, redundant 17
Fitness: max 1(1), min 0.991(2), ave 0.994
Test execution time: sum 1661 ms, max 694 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 06:39:23 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 06:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 14 seconds
Variants: generated 100, build-succeeded 4, build-failed 19, syntax-invalid 53, redundant 24
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 2429 ms, max 706 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 06:39:32 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 06:39:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 23 seconds
Variants: generated 100, build-succeeded 3, build-failed 27, syntax-invalid 52, redundant 18
Fitness: max 0.991(3), min 0.991(3), ave 0.991
Test execution time: sum 1958 ms, max 691 ms, min 581 ms
----------------------------------------------------------------

2023-08-07 06:39:40 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 06:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 33 seconds
Variants: generated 100, build-succeeded 4, build-failed 26, syntax-invalid 54, redundant 16
Fitness: max 1(2), min 0.991(2), ave 0.996
Test execution time: sum 2389 ms, max 739 ms, min 472 ms
----------------------------------------------------------------

2023-08-07 06:39:51 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 06:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 42 seconds
Variants: generated 47, build-succeeded 2, build-failed 25, syntax-invalid 6, redundant 14
Fitness: max 1(1), min 0.991(1), ave 0.996
Test execution time: sum 1389 ms, max 855 ms, min 534 ms
----------------------------------------------------------------

2023-08-07 06:40:00 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:07 [main] [INFO]  PatchLogExporter - patch (v75)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v237)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v452)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v453)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v690)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,9 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +294,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v994)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1061)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1077)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1176)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,10 +288,10 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
-        if (divisor == 0d) {
+        if (real == 0.0 && imaginary == 0.0) {
             // return isZero ? NaN : INF; // See MATH-657
             return isZero ? NaN : INF;
         }
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1230)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:08 [main] [INFO]  PatchLogExporter - patch (v1251)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1480)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1690)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1855)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v1879)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2143)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2192)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2277)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2279)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v2987)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3097)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3490)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,11 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3712)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3772)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +912,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v3875)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4093)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:09 [main] [INFO]  PatchLogExporter - patch (v4241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4288)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4317)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4318)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +292,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
@@ -912,7 +910,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4335)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4351)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4663)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4706)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,13 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v4976)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5063)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            int sign = 0;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5393)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v5497)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,13 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6184)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v6344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7667)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,8 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +293,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		double q = real / imaginary;
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +914,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7730)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7922)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v7941)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:10 [main] [INFO]  PatchLogExporter - patch (v8182)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +911,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8206)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,15 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        MathUtils.checkNotNull(divisor);
+		double imaginary2 = 2.0 * imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -912,7 +912,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8616)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,10 +289,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8642)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,17 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double imaginary2 = 2.0 * imaginary;
+			final List<Complex> result=new ArrayList<Complex>();
+			sign = 1;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8713)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,12 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,16 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double imaginary2 = 2.0 * imaginary;
+			sign = 1;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8931)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,16 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double imaginary2 = 2.0 * imaginary;
+			final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v8945)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9223)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +908,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9648)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.exception.MathIllegalArgumentException
+++ org.apache.commons.math.exception.MathIllegalArgumentException
@@ -42,7 +42,6 @@
      */
     public MathIllegalArgumentException(Localizable pattern,
                                         Object ... args) {
-        context.addMessage(pattern, args);
     }
 
     /** {@inheritDoc} */
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v9826)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10610)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v10811)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11309)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11823)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double imaginary2 = 2.0 * imaginary;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v11827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12042)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +290,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -912,7 +909,7 @@
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (isNaN) {
             return createComplex(0.0, 0.0);
         }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +290,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:11 [main] [INFO]  PatchLogExporter - patch (v12333)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12611)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v12828)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13820)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13834)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v13901)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14525)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v14848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,20 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			double real2 = 2.0 * real;
+			double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15036)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15137)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:12 [main] [INFO]  PatchLogExporter - patch (v15806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15817)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v15821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16016)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2857,7 +2857,6 @@
         temp = xa * HEX_40000000;
         double ya = xa + temp - temp;
         double yb = xb + xa - ya;
-        xa = ya;
         xb += yb;
 
         //if (idx > 8 || idx == 0)
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,14 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			StringBuffer imAppendTo = new StringBuffer();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16505)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,19 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v16734)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +286,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +286,18 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            MathUtils.checkNotNull(divisor);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = real / imaginary;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17019)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (real == 0.0 && imaginary == 0.0) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,13 +286,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 06:40:13 [main] [INFO]  PatchLogExporter - patch (v17147)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 06:40:13 [main] [INFO]  KGenProgMain - Summary
Reached generation = 173
Generated variants = 17147
Syntax valid variants = 9523
Build succeeded variants = 1901
Time elapsed = 33 minutes 55 seconds
Exit status = SUCCESS
