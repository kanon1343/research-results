2023-08-07 00:50:53 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-07 00:50:53 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-07 00:50:53 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-07 00:50:54 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/fse/Downloads/kGenProg/example/math46/kgenprog-46.toml (set by command line)
rootDir = /Users/fse/Downloads/kGenProg/example/math46 (set in config file)
productPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/main] (set in config file)
testPaths = [/Users/fse/Downloads/kGenProg/example/math46/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.complex.ComplexTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 3 (set by command line)
scope = PACKAGE
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/fse/Desktop/afterResearch
version = 1.8.2
================================================================
2023-08-07 00:51:18 [main] [INFO]  KGenProgMain - initial failed tests (2/116)
org.apache.commons.math.complex.ComplexTest.testDivideZero: expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>
org.apache.commons.math.complex.ComplexTest.testAtanI: null

2023-08-07 00:51:19 [main] [INFO]  KGenProgMain - GA started
2023-08-07 00:51:19 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-07 00:51:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 50, build-succeeded 2, build-failed 28, syntax-invalid 3, redundant 17
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 2485 ms, max 1373 ms, min 1112 ms
----------------------------------------------------------------

2023-08-07 00:51:26 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-07 00:51:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 50, build-succeeded 6, build-failed 27, syntax-invalid 0, redundant 17
Fitness: max 0.991(5), min 0.966(1), ave 0.987
Test execution time: sum 4659 ms, max 1110 ms, min 496 ms
----------------------------------------------------------------

2023-08-07 00:51:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-07 00:51:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 100, build-succeeded 12, build-failed 26, syntax-invalid 11, redundant 51
Fitness: max 0.991(9), min 0.966(3), ave 0.985
Test execution time: sum 6359 ms, max 710 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 00:51:46 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-07 00:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 100, build-succeeded 21, build-failed 24, syntax-invalid 15, redundant 40
Fitness: max 0.991(8), min 0.966(12), ave 0.976
Test execution time: sum 10268 ms, max 601 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 00:52:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-07 00:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 2 seconds
Variants: generated 100, build-succeeded 29, build-failed 31, syntax-invalid 11, redundant 29
Fitness: max 0.991(16), min 0.922(1), ave 0.98
Test execution time: sum 14868 ms, max 629 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 00:52:21 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-07 00:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 19 seconds
Variants: generated 100, build-succeeded 26, build-failed 25, syntax-invalid 15, redundant 34
Fitness: max 0.991(13), min 0.836(1), ave 0.976
Test execution time: sum 12608 ms, max 744 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 00:52:39 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-07 00:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 35 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 15, redundant 31
Fitness: max 1(2), min 0.966(5), ave 0.986
Test execution time: sum 10783 ms, max 575 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 00:52:54 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-07 00:53:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 48 seconds
Variants: generated 100, build-succeeded 19, build-failed 18, syntax-invalid 27, redundant 36
Fitness: max 1(3), min 0.957(3), ave 0.985
Test execution time: sum 8865 ms, max 574 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 00:53:07 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-07 00:53:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 2 seconds
Variants: generated 100, build-succeeded 23, build-failed 23, syntax-invalid 28, redundant 26
Fitness: max 0.991(14), min 0.957(1), ave 0.983
Test execution time: sum 10655 ms, max 546 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 00:53:22 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-07 00:53:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 21 seconds
Variants: generated 100, build-succeeded 31, build-failed 26, syntax-invalid 23, redundant 20
Fitness: max 1(1), min 0.957(2), ave 0.987
Test execution time: sum 14352 ms, max 647 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 00:53:40 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-07 00:53:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 39 seconds
Variants: generated 100, build-succeeded 29, build-failed 25, syntax-invalid 26, redundant 20
Fitness: max 1(1), min 0.922(1), ave 0.984
Test execution time: sum 13213 ms, max 516 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 00:53:59 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-07 00:54:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 58 seconds
Variants: generated 100, build-succeeded 28, build-failed 28, syntax-invalid 26, redundant 18
Fitness: max 1(1), min 0.957(1), ave 0.982
Test execution time: sum 13228 ms, max 838 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 00:54:17 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-07 00:54:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 12 seconds
Variants: generated 100, build-succeeded 21, build-failed 27, syntax-invalid 21, redundant 31
Fitness: max 0.991(18), min 0.966(2), ave 0.989
Test execution time: sum 9674 ms, max 521 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 00:54:32 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-07 00:54:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 34 seconds
Variants: generated 100, build-succeeded 34, build-failed 25, syntax-invalid 28, redundant 13
Fitness: max 1(2), min 0.957(1), ave 0.987
Test execution time: sum 16073 ms, max 744 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 00:54:53 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-07 00:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 52 seconds
Variants: generated 100, build-succeeded 28, build-failed 25, syntax-invalid 30, redundant 17
Fitness: max 0.991(23), min 0.957(1), ave 0.987
Test execution time: sum 12804 ms, max 536 ms, min 401 ms
----------------------------------------------------------------

2023-08-07 00:55:11 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-07 00:55:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 12 seconds
Variants: generated 100, build-succeeded 33, build-failed 18, syntax-invalid 31, redundant 18
Fitness: max 0.991(28), min 0.957(1), ave 0.988
Test execution time: sum 15234 ms, max 517 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 00:55:32 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-07 00:55:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 35 seconds
Variants: generated 100, build-succeeded 31, build-failed 31, syntax-invalid 29, redundant 9
Fitness: max 0.991(18), min 0.957(3), ave 0.983
Test execution time: sum 16889 ms, max 920 ms, min 409 ms
----------------------------------------------------------------

2023-08-07 00:55:55 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-07 00:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 59 seconds
Variants: generated 100, build-succeeded 32, build-failed 31, syntax-invalid 26, redundant 11
Fitness: max 1(2), min 0.957(2), ave 0.985
Test execution time: sum 17126 ms, max 816 ms, min 389 ms
----------------------------------------------------------------

2023-08-07 00:56:19 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-07 00:56:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 21 seconds
Variants: generated 100, build-succeeded 27, build-failed 24, syntax-invalid 32, redundant 17
Fitness: max 1(1), min 0.957(4), ave 0.981
Test execution time: sum 14986 ms, max 823 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 00:56:40 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-07 00:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 40 seconds
Variants: generated 100, build-succeeded 24, build-failed 26, syntax-invalid 29, redundant 21
Fitness: max 1(2), min 0.966(2), ave 0.988
Test execution time: sum 13608 ms, max 946 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 00:56:59 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-07 00:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 3 seconds
Variants: generated 100, build-succeeded 28, build-failed 27, syntax-invalid 31, redundant 14
Fitness: max 1(2), min 0.974(1), ave 0.991
Test execution time: sum 16116 ms, max 864 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 00:57:22 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-07 00:57:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 20 seconds
Variants: generated 100, build-succeeded 20, build-failed 27, syntax-invalid 42, redundant 11
Fitness: max 1(3), min 0.862(1), ave 0.984
Test execution time: sum 11201 ms, max 770 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 00:57:39 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-07 00:58:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 42 seconds
Variants: generated 100, build-succeeded 27, build-failed 29, syntax-invalid 28, redundant 16
Fitness: max 0.991(23), min 0.922(1), ave 0.988
Test execution time: sum 16535 ms, max 882 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 00:58:02 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-07 00:58:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 1 seconds
Variants: generated 100, build-succeeded 21, build-failed 26, syntax-invalid 35, redundant 18
Fitness: max 0.991(19), min 0.974(1), ave 0.99
Test execution time: sum 12791 ms, max 893 ms, min 424 ms
----------------------------------------------------------------

2023-08-07 00:58:20 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-07 00:58:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 24 seconds
Variants: generated 100, build-succeeded 25, build-failed 33, syntax-invalid 34, redundant 8
Fitness: max 0.991(21), min 0.966(2), ave 0.988
Test execution time: sum 16674 ms, max 869 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 00:58:44 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-07 00:59:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 48 seconds
Variants: generated 100, build-succeeded 25, build-failed 22, syntax-invalid 39, redundant 14
Fitness: max 1(1), min 0.922(1), ave 0.987
Test execution time: sum 16816 ms, max 794 ms, min 457 ms
----------------------------------------------------------------

2023-08-07 00:59:08 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-07 00:59:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 14 seconds
Variants: generated 100, build-succeeded 27, build-failed 24, syntax-invalid 34, redundant 15
Fitness: max 1(1), min 0.957(2), ave 0.987
Test execution time: sum 17701 ms, max 830 ms, min 456 ms
----------------------------------------------------------------

2023-08-07 00:59:33 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-07 00:59:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 36 seconds
Variants: generated 100, build-succeeded 22, build-failed 18, syntax-invalid 46, redundant 14
Fitness: max 0.991(19), min 0.957(1), ave 0.989
Test execution time: sum 15045 ms, max 836 ms, min 500 ms
----------------------------------------------------------------

2023-08-07 00:59:56 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-07 01:00:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 4 seconds
Variants: generated 100, build-succeeded 26, build-failed 27, syntax-invalid 39, redundant 8
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 18681 ms, max 1155 ms, min 499 ms
----------------------------------------------------------------

2023-08-07 01:00:23 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-07 01:00:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 27 seconds
Variants: generated 100, build-succeeded 24, build-failed 19, syntax-invalid 41, redundant 16
Fitness: max 0.991(22), min 0.966(1), ave 0.99
Test execution time: sum 16146 ms, max 876 ms, min 467 ms
----------------------------------------------------------------

2023-08-07 01:00:47 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-07 01:01:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 50 seconds
Variants: generated 100, build-succeeded 29, build-failed 25, syntax-invalid 33, redundant 13
Fitness: max 1(1), min 0.957(2), ave 0.988
Test execution time: sum 15929 ms, max 993 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 01:01:10 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-07 01:01:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 9 seconds
Variants: generated 100, build-succeeded 26, build-failed 25, syntax-invalid 36, redundant 13
Fitness: max 0.991(25), min 0.983(1), ave 0.991
Test execution time: sum 12837 ms, max 704 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 01:01:28 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-07 01:01:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 28 seconds
Variants: generated 100, build-succeeded 21, build-failed 31, syntax-invalid 37, redundant 11
Fitness: max 1(1), min 0.991(20), ave 0.992
Test execution time: sum 11928 ms, max 874 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 01:01:47 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-07 01:02:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 50 seconds
Variants: generated 100, build-succeeded 31, build-failed 29, syntax-invalid 30, redundant 10
Fitness: max 0.991(29), min 0.983(2), ave 0.991
Test execution time: sum 16606 ms, max 852 ms, min 390 ms
----------------------------------------------------------------

2023-08-07 01:02:10 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-07 01:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 14 seconds
Variants: generated 100, build-succeeded 30, build-failed 29, syntax-invalid 29, redundant 12
Fitness: max 0.991(29), min 0.914(1), ave 0.989
Test execution time: sum 16453 ms, max 843 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 01:02:33 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-07 01:02:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 31 seconds
Variants: generated 100, build-succeeded 20, build-failed 24, syntax-invalid 42, redundant 14
Fitness: max 1(1), min 0.957(1), ave 0.987
Test execution time: sum 10227 ms, max 790 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 01:02:50 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-07 01:03:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 minutes 49 seconds
Variants: generated 100, build-succeeded 20, build-failed 32, syntax-invalid 36, redundant 12
Fitness: max 0.991(19), min 0.957(1), ave 0.99
Test execution time: sum 11694 ms, max 857 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 01:03:09 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-07 01:03:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 12 seconds
Variants: generated 100, build-succeeded 25, build-failed 23, syntax-invalid 39, redundant 13
Fitness: max 0.991(23), min 0.957(1), ave 0.989
Test execution time: sum 15525 ms, max 896 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 01:03:31 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-07 01:03:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 36 seconds
Variants: generated 100, build-succeeded 29, build-failed 21, syntax-invalid 33, redundant 17
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 16428 ms, max 770 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 01:03:55 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-07 01:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 5 seconds
Variants: generated 100, build-succeeded 35, build-failed 24, syntax-invalid 33, redundant 8
Fitness: max 1(2), min 0.966(2), ave 0.99
Test execution time: sum 21204 ms, max 854 ms, min 400 ms
----------------------------------------------------------------

2023-08-07 01:04:25 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-07 01:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 30 seconds
Variants: generated 100, build-succeeded 26, build-failed 28, syntax-invalid 37, redundant 9
Fitness: max 0.991(24), min 0.966(1), ave 0.99
Test execution time: sum 16556 ms, max 867 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 01:04:49 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-07 01:05:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 minutes 51 seconds
Variants: generated 100, build-succeeded 20, build-failed 34, syntax-invalid 34, redundant 12
Fitness: max 0.991(17), min 0.957(1), ave 0.988
Test execution time: sum 13144 ms, max 867 ms, min 463 ms
----------------------------------------------------------------

2023-08-07 01:05:11 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-07 01:05:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 12 seconds
Variants: generated 100, build-succeeded 20, build-failed 30, syntax-invalid 33, redundant 17
Fitness: max 0.991(18), min 0.974(2), ave 0.99
Test execution time: sum 13465 ms, max 828 ms, min 485 ms
----------------------------------------------------------------

2023-08-07 01:05:31 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-07 01:05:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 32 seconds
Variants: generated 100, build-succeeded 17, build-failed 28, syntax-invalid 45, redundant 10
Fitness: max 1(1), min 0.957(2), ave 0.987
Test execution time: sum 11927 ms, max 901 ms, min 548 ms
----------------------------------------------------------------

2023-08-07 01:05:51 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-07 01:06:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 minutes 49 seconds
Variants: generated 100, build-succeeded 15, build-failed 29, syntax-invalid 41, redundant 15
Fitness: max 1(1), min 0.845(1), ave 0.982
Test execution time: sum 10548 ms, max 862 ms, min 552 ms
----------------------------------------------------------------

2023-08-07 01:06:09 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-07 01:06:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 2 seconds
Variants: generated 100, build-succeeded 9, build-failed 31, syntax-invalid 42, redundant 18
Fitness: max 0.991(8), min 0.974(1), ave 0.989
Test execution time: sum 6367 ms, max 854 ms, min 624 ms
----------------------------------------------------------------

2023-08-07 01:06:22 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-07 01:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 15 seconds
Variants: generated 100, build-succeeded 14, build-failed 32, syntax-invalid 38, redundant 16
Fitness: max 0.991(14), min 0.991(14), ave 0.991
Test execution time: sum 7604 ms, max 832 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 01:06:35 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-07 01:06:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 31 seconds
Variants: generated 100, build-succeeded 17, build-failed 33, syntax-invalid 39, redundant 11
Fitness: max 0.991(16), min 0.931(1), ave 0.988
Test execution time: sum 9747 ms, max 938 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 01:06:50 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-07 01:07:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 minutes 42 seconds
Variants: generated 100, build-succeeded 10, build-failed 30, syntax-invalid 42, redundant 18
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5528 ms, max 723 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 01:07:01 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-07 01:07:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 0 seconds
Variants: generated 100, build-succeeded 23, build-failed 35, syntax-invalid 29, redundant 13
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 12098 ms, max 769 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 01:07:19 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-07 01:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 13 seconds
Variants: generated 100, build-succeeded 12, build-failed 40, syntax-invalid 39, redundant 9
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 6362 ms, max 701 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 01:07:32 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-07 01:07:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 26 seconds
Variants: generated 100, build-succeeded 13, build-failed 33, syntax-invalid 40, redundant 14
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 7449 ms, max 846 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 01:07:45 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-07 01:08:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 42 seconds
Variants: generated 100, build-succeeded 17, build-failed 36, syntax-invalid 36, redundant 11
Fitness: max 1(2), min 0.966(1), ave 0.991
Test execution time: sum 9723 ms, max 770 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 01:08:01 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-07 01:08:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 56 seconds
Variants: generated 100, build-succeeded 15, build-failed 34, syntax-invalid 46, redundant 5
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 8240 ms, max 821 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 01:08:16 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-07 01:08:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 10 seconds
Variants: generated 100, build-succeeded 14, build-failed 35, syntax-invalid 41, redundant 10
Fitness: max 1(1), min 0.966(2), ave 0.988
Test execution time: sum 8355 ms, max 775 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 01:08:30 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-07 01:08:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 23 seconds
Variants: generated 100, build-succeeded 10, build-failed 32, syntax-invalid 44, redundant 14
Fitness: max 1(1), min 0.974(1), ave 0.989
Test execution time: sum 5556 ms, max 777 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 01:08:42 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-07 01:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 35 seconds
Variants: generated 100, build-succeeded 11, build-failed 35, syntax-invalid 43, redundant 11
Fitness: max 1(1), min 0.991(10), ave 0.992
Test execution time: sum 6811 ms, max 823 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 01:08:54 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-07 01:09:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 51 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 38, redundant 14
Fitness: max 1(1), min 0.974(1), ave 0.99
Test execution time: sum 10219 ms, max 895 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 01:09:11 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-07 01:09:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 7 seconds
Variants: generated 100, build-succeeded 11, build-failed 31, syntax-invalid 46, redundant 12
Fitness: max 0.991(8), min 0.888(1), ave 0.979
Test execution time: sum 7794 ms, max 1108 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 01:09:27 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-07 01:09:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 23 seconds
Variants: generated 100, build-succeeded 14, build-failed 28, syntax-invalid 46, redundant 12
Fitness: max 1(1), min 0.966(1), ave 0.99
Test execution time: sum 8736 ms, max 846 ms, min 408 ms
----------------------------------------------------------------

2023-08-07 01:09:42 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-07 01:09:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 35 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 46, redundant 18
Fitness: max 0.991(8), min 0.966(1), ave 0.989
Test execution time: sum 5721 ms, max 813 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 01:09:54 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-07 01:10:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 46 seconds
Variants: generated 100, build-succeeded 7, build-failed 31, syntax-invalid 48, redundant 14
Fitness: max 0.991(5), min 0.983(2), ave 0.989
Test execution time: sum 4091 ms, max 743 ms, min 421 ms
----------------------------------------------------------------

2023-08-07 01:10:05 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-07 01:10:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 59 seconds
Variants: generated 100, build-succeeded 11, build-failed 35, syntax-invalid 43, redundant 11
Fitness: max 0.991(7), min 0.974(1), ave 0.987
Test execution time: sum 7144 ms, max 800 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 01:10:19 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-07 01:10:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 14 seconds
Variants: generated 100, build-succeeded 11, build-failed 33, syntax-invalid 45, redundant 11
Fitness: max 0.991(9), min 0.983(2), ave 0.99
Test execution time: sum 7759 ms, max 946 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 01:10:33 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-07 01:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 30 seconds
Variants: generated 100, build-succeeded 13, build-failed 35, syntax-invalid 42, redundant 10
Fitness: max 1(2), min 0.991(11), ave 0.993
Test execution time: sum 8513 ms, max 900 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:10:49 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-07 01:11:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 44 seconds
Variants: generated 100, build-succeeded 11, build-failed 35, syntax-invalid 45, redundant 9
Fitness: max 1(2), min 0.966(2), ave 0.985
Test execution time: sum 7797 ms, max 803 ms, min 561 ms
----------------------------------------------------------------

2023-08-07 01:11:03 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-07 01:11:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 58 seconds
Variants: generated 100, build-succeeded 12, build-failed 25, syntax-invalid 51, redundant 12
Fitness: max 0.991(5), min 0.966(2), ave 0.983
Test execution time: sum 8668 ms, max 887 ms, min 558 ms
----------------------------------------------------------------

2023-08-07 01:11:18 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-07 01:11:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 14 seconds
Variants: generated 100, build-succeeded 11, build-failed 35, syntax-invalid 44, redundant 10
Fitness: max 0.991(8), min 0.966(2), ave 0.985
Test execution time: sum 7829 ms, max 840 ms, min 529 ms
----------------------------------------------------------------

2023-08-07 01:11:33 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-07 01:11:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 25 seconds
Variants: generated 100, build-succeeded 8, build-failed 37, syntax-invalid 45, redundant 10
Fitness: max 0.991(6), min 0.974(1), ave 0.988
Test execution time: sum 4424 ms, max 792 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 01:11:44 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-07 01:11:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 32 seconds
Variants: generated 100, build-succeeded 4, build-failed 30, syntax-invalid 49, redundant 17
Fitness: max 0.991(1), min 0.914(1), ave 0.966
Test execution time: sum 2267 ms, max 761 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 01:11:52 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-07 01:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 39 seconds
Variants: generated 100, build-succeeded 3, build-failed 29, syntax-invalid 50, redundant 18
Fitness: max 1(1), min 0.991(2), ave 0.994
Test execution time: sum 1721 ms, max 734 ms, min 478 ms
----------------------------------------------------------------

2023-08-07 01:11:58 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-07 01:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 48 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 50, redundant 15
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 4500 ms, max 799 ms, min 428 ms
----------------------------------------------------------------

2023-08-07 01:12:07 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-07 01:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 59 seconds
Variants: generated 100, build-succeeded 9, build-failed 32, syntax-invalid 46, redundant 13
Fitness: max 0.991(8), min 0.983(1), ave 0.99
Test execution time: sum 5709 ms, max 827 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 01:12:18 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-07 01:12:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 9 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 54, redundant 9
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 4647 ms, max 934 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 01:12:29 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-07 01:12:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 20 seconds
Variants: generated 100, build-succeeded 8, build-failed 31, syntax-invalid 54, redundant 7
Fitness: max 1(1), min 0.836(1), ave 0.96
Test execution time: sum 4845 ms, max 833 ms, min 451 ms
----------------------------------------------------------------

2023-08-07 01:12:40 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-07 01:12:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 30 seconds
Variants: generated 100, build-succeeded 9, build-failed 30, syntax-invalid 48, redundant 13
Fitness: max 0.991(8), min 0.957(1), ave 0.988
Test execution time: sum 5343 ms, max 893 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 01:12:50 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-07 01:13:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 46 seconds
Variants: generated 100, build-succeeded 16, build-failed 26, syntax-invalid 43, redundant 15
Fitness: max 0.991(14), min 0.983(2), ave 0.99
Test execution time: sum 9793 ms, max 834 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 01:13:06 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-07 01:13:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 2 seconds
Variants: generated 100, build-succeeded 16, build-failed 25, syntax-invalid 41, redundant 18
Fitness: max 0.991(12), min 0.922(1), ave 0.984
Test execution time: sum 8559 ms, max 795 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 01:13:21 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-07 01:13:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 14 seconds
Variants: generated 100, build-succeeded 10, build-failed 33, syntax-invalid 40, redundant 17
Fitness: max 0.991(7), min 0.931(1), ave 0.984
Test execution time: sum 6096 ms, max 865 ms, min 450 ms
----------------------------------------------------------------

2023-08-07 01:13:34 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-07 01:13:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 28 seconds
Variants: generated 100, build-succeeded 11, build-failed 34, syntax-invalid 42, redundant 13
Fitness: max 0.991(8), min 0.966(3), ave 0.984
Test execution time: sum 6764 ms, max 816 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 01:13:47 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-07 01:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 38 seconds
Variants: generated 100, build-succeeded 8, build-failed 36, syntax-invalid 47, redundant 9
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4691 ms, max 798 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:13:58 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-07 01:14:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 53 seconds
Variants: generated 100, build-succeeded 14, build-failed 29, syntax-invalid 44, redundant 13
Fitness: max 0.991(11), min 0.966(2), ave 0.986
Test execution time: sum 7941 ms, max 965 ms, min 397 ms
----------------------------------------------------------------

2023-08-07 01:14:12 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-07 01:14:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 8 seconds
Variants: generated 100, build-succeeded 12, build-failed 32, syntax-invalid 45, redundant 11
Fitness: max 1(2), min 0.983(1), ave 0.992
Test execution time: sum 7819 ms, max 819 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 01:14:27 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-07 01:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 19 seconds
Variants: generated 100, build-succeeded 8, build-failed 32, syntax-invalid 49, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4377 ms, max 796 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 01:14:38 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-07 01:14:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 35 seconds
Variants: generated 100, build-succeeded 13, build-failed 32, syntax-invalid 43, redundant 12
Fitness: max 0.991(9), min 0.957(1), ave 0.985
Test execution time: sum 8251 ms, max 850 ms, min 450 ms
----------------------------------------------------------------

2023-08-07 01:14:54 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-07 01:15:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 49 seconds
Variants: generated 100, build-succeeded 9, build-failed 36, syntax-invalid 44, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 6184 ms, max 908 ms, min 458 ms
----------------------------------------------------------------

2023-08-07 01:15:09 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-07 01:15:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 4 seconds
Variants: generated 100, build-succeeded 10, build-failed 29, syntax-invalid 53, redundant 8
Fitness: max 0.991(7), min 0.853(1), ave 0.974
Test execution time: sum 6484 ms, max 853 ms, min 477 ms
----------------------------------------------------------------

2023-08-07 01:15:24 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-07 01:15:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 20 seconds
Variants: generated 100, build-succeeded 10, build-failed 32, syntax-invalid 45, redundant 13
Fitness: max 1(1), min 0.845(1), ave 0.973
Test execution time: sum 6741 ms, max 840 ms, min 501 ms
----------------------------------------------------------------

2023-08-07 01:15:40 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-07 01:15:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 34 seconds
Variants: generated 100, build-succeeded 10, build-failed 28, syntax-invalid 50, redundant 12
Fitness: max 1(1), min 0.983(2), ave 0.991
Test execution time: sum 7175 ms, max 873 ms, min 533 ms
----------------------------------------------------------------

2023-08-07 01:15:54 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-07 01:16:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 46 seconds
Variants: generated 100, build-succeeded 5, build-failed 30, syntax-invalid 55, redundant 10
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 3371 ms, max 765 ms, min 559 ms
----------------------------------------------------------------

2023-08-07 01:16:05 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-07 01:16:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 59 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 52, redundant 12
Fitness: max 0.991(7), min 0.914(1), ave 0.982
Test execution time: sum 6702 ms, max 873 ms, min 582 ms
----------------------------------------------------------------

2023-08-07 01:16:18 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-07 01:16:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 13 seconds
Variants: generated 100, build-succeeded 10, build-failed 31, syntax-invalid 50, redundant 9
Fitness: max 1(2), min 0.966(1), ave 0.988
Test execution time: sum 6863 ms, max 839 ms, min 552 ms
----------------------------------------------------------------

2023-08-07 01:16:33 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-07 01:16:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 27 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 48, redundant 15
Fitness: max 0.991(7), min 0.974(1), ave 0.989
Test execution time: sum 6425 ms, max 829 ms, min 631 ms
----------------------------------------------------------------

2023-08-07 01:16:47 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-07 01:16:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 38 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 52, redundant 15
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3441 ms, max 911 ms, min 575 ms
----------------------------------------------------------------

2023-08-07 01:16:57 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-07 01:17:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 48 seconds
Variants: generated 100, build-succeeded 8, build-failed 26, syntax-invalid 58, redundant 8
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4596 ms, max 805 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 01:17:07 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-07 01:17:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 58 seconds
Variants: generated 100, build-succeeded 8, build-failed 30, syntax-invalid 52, redundant 10
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4655 ms, max 801 ms, min 393 ms
----------------------------------------------------------------

2023-08-07 01:17:18 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-07 01:17:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 9 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 57, redundant 11
Fitness: max 1(1), min 0.931(1), ave 0.985
Test execution time: sum 5002 ms, max 924 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 01:17:28 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-07 01:17:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 17 seconds
Variants: generated 100, build-succeeded 4, build-failed 31, syntax-invalid 52, redundant 13
Fitness: max 0.991(3), min 0.983(1), ave 0.989
Test execution time: sum 1997 ms, max 671 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 01:17:37 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-07 01:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 26 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 56, redundant 14
Fitness: max 0.991(4), min 0.966(1), ave 0.984
Test execution time: sum 3799 ms, max 769 ms, min 448 ms
----------------------------------------------------------------

2023-08-07 01:17:45 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-07 01:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 35 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 53, redundant 15
Fitness: max 0.991(3), min 0.845(1), ave 0.96
Test execution time: sum 3102 ms, max 808 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 01:17:54 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-07 01:18:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 43 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 51, redundant 16
Fitness: max 0.991(2), min 0.974(1), ave 0.984
Test execution time: sum 2521 ms, max 768 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 01:18:03 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-07 01:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 52 seconds
Variants: generated 100, build-succeeded 6, build-failed 29, syntax-invalid 51, redundant 14
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3193 ms, max 726 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 01:18:12 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-07 01:18:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 2 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 54, redundant 14
Fitness: max 1(1), min 0.957(3), ave 0.978
Test execution time: sum 3932 ms, max 790 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 01:18:22 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-07 01:18:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 13 seconds
Variants: generated 100, build-succeeded 9, build-failed 30, syntax-invalid 56, redundant 5
Fitness: max 0.991(6), min 0.966(1), ave 0.986
Test execution time: sum 5047 ms, max 795 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 01:18:33 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-07 01:18:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 24 seconds
Variants: generated 100, build-succeeded 7, build-failed 24, syntax-invalid 56, redundant 13
Fitness: max 0.991(4), min 0.957(1), ave 0.98
Test execution time: sum 4137 ms, max 742 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 01:18:43 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-07 01:18:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 34 seconds
Variants: generated 100, build-succeeded 8, build-failed 24, syntax-invalid 56, redundant 12
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 4961 ms, max 770 ms, min 471 ms
----------------------------------------------------------------

2023-08-07 01:18:53 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-07 01:19:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 40 seconds
Variants: generated 100, build-succeeded 1, build-failed 32, syntax-invalid 53, redundant 14
Fitness: max 0.991(1), min 0.991(1), ave 0.991
Test execution time: sum 626 ms, max 626 ms, min 626 ms
----------------------------------------------------------------

2023-08-07 01:19:00 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-07 01:19:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 51 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 56, redundant 13
Fitness: max 0.991(5), min 0.845(1), ave 0.969
Test execution time: sum 4644 ms, max 763 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 01:19:10 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-07 01:19:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 0 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 55, redundant 13
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 3637 ms, max 724 ms, min 404 ms
----------------------------------------------------------------

2023-08-07 01:19:19 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-07 01:19:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 9 seconds
Variants: generated 100, build-succeeded 6, build-failed 23, syntax-invalid 58, redundant 13
Fitness: max 0.991(4), min 0.966(2), ave 0.983
Test execution time: sum 3299 ms, max 683 ms, min 420 ms
----------------------------------------------------------------

2023-08-07 01:19:28 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-07 01:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 17 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 59, redundant 10
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3116 ms, max 696 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 01:19:37 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-07 01:19:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 27 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 58, redundant 10
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 3922 ms, max 802 ms, min 400 ms
----------------------------------------------------------------

2023-08-07 01:19:47 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-07 01:19:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 38 seconds
Variants: generated 100, build-succeeded 9, build-failed 20, syntax-invalid 53, redundant 18
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 5241 ms, max 822 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 01:19:57 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-07 01:20:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 49 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 55, redundant 12
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4504 ms, max 681 ms, min 414 ms
----------------------------------------------------------------

2023-08-07 01:20:08 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-07 01:20:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 0 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 50, redundant 15
Fitness: max 0.991(9), min 0.991(9), ave 0.991
Test execution time: sum 5081 ms, max 922 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 01:20:20 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-07 01:20:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 10 seconds
Variants: generated 100, build-succeeded 4, build-failed 25, syntax-invalid 56, redundant 15
Fitness: max 0.991(4), min 0.991(4), ave 0.991
Test execution time: sum 1996 ms, max 676 ms, min 400 ms
----------------------------------------------------------------

2023-08-07 01:20:29 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-07 01:20:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 20 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 54, redundant 13
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 3491 ms, max 813 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 01:20:39 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-07 01:20:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 31 seconds
Variants: generated 100, build-succeeded 9, build-failed 21, syntax-invalid 59, redundant 11
Fitness: max 0.991(3), min 0.845(1), ave 0.958
Test execution time: sum 4962 ms, max 741 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 01:20:51 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-07 01:21:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 45 seconds
Variants: generated 100, build-succeeded 12, build-failed 19, syntax-invalid 52, redundant 17
Fitness: max 1(1), min 0.974(1), ave 0.989
Test execution time: sum 6122 ms, max 698 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 01:21:04 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-07 01:21:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 55 seconds
Variants: generated 100, build-succeeded 6, build-failed 21, syntax-invalid 53, redundant 20
Fitness: max 0.991(3), min 0.966(2), ave 0.98
Test execution time: sum 3771 ms, max 778 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:21:14 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-07 01:21:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 6 seconds
Variants: generated 100, build-succeeded 8, build-failed 25, syntax-invalid 56, redundant 11
Fitness: max 0.991(5), min 0.845(1), ave 0.971
Test execution time: sum 4294 ms, max 709 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 01:21:26 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-07 01:21:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 15 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 57, redundant 15
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 2606 ms, max 769 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 01:21:34 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-07 01:21:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 28 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 54, redundant 9
Fitness: max 0.991(5), min 0.845(1), ave 0.963
Test execution time: sum 5092 ms, max 884 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 01:21:47 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-07 01:21:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 38 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 56, redundant 14
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3465 ms, max 839 ms, min 546 ms
----------------------------------------------------------------

2023-08-07 01:21:58 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-07 01:22:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 49 seconds
Variants: generated 100, build-succeeded 7, build-failed 21, syntax-invalid 56, redundant 16
Fitness: max 0.991(6), min 0.922(1), ave 0.982
Test execution time: sum 4138 ms, max 745 ms, min 425 ms
----------------------------------------------------------------

2023-08-07 01:22:08 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-07 01:22:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 57 seconds
Variants: generated 100, build-succeeded 2, build-failed 28, syntax-invalid 58, redundant 12
Fitness: max 0.983(1), min 0.957(1), ave 0.97
Test execution time: sum 1359 ms, max 858 ms, min 501 ms
----------------------------------------------------------------

2023-08-07 01:22:17 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-07 01:22:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 5 seconds
Variants: generated 100, build-succeeded 2, build-failed 26, syntax-invalid 53, redundant 19
Fitness: max 0.991(1), min 0.983(1), ave 0.987
Test execution time: sum 1471 ms, max 860 ms, min 611 ms
----------------------------------------------------------------

2023-08-07 01:22:25 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-07 01:22:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 17 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 56, redundant 12
Fitness: max 0.991(5), min 0.931(1), ave 0.981
Test execution time: sum 4298 ms, max 749 ms, min 667 ms
----------------------------------------------------------------

2023-08-07 01:22:36 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-07 01:22:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 28 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 54, redundant 15
Fitness: max 0.991(3), min 0.966(1), ave 0.984
Test execution time: sum 3800 ms, max 841 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 01:22:47 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-07 01:23:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 42 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 56, redundant 8
Fitness: max 1(1), min 0.914(1), ave 0.981
Test execution time: sum 6051 ms, max 872 ms, min 437 ms
----------------------------------------------------------------

2023-08-07 01:23:01 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-07 01:23:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 52 seconds
Variants: generated 100, build-succeeded 4, build-failed 31, syntax-invalid 56, redundant 9
Fitness: max 0.991(2), min 0.983(2), ave 0.987
Test execution time: sum 2899 ms, max 854 ms, min 514 ms
----------------------------------------------------------------

2023-08-07 01:23:12 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-07 01:23:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 6 seconds
Variants: generated 100, build-succeeded 9, build-failed 23, syntax-invalid 56, redundant 12
Fitness: max 0.991(9), min 0.991(9), ave 0.991
Test execution time: sum 6118 ms, max 873 ms, min 497 ms
----------------------------------------------------------------

2023-08-07 01:23:25 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-07 01:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 18 seconds
Variants: generated 100, build-succeeded 5, build-failed 31, syntax-invalid 55, redundant 9
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3512 ms, max 948 ms, min 526 ms
----------------------------------------------------------------

2023-08-07 01:23:37 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-07 01:23:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 30 seconds
Variants: generated 100, build-succeeded 6, build-failed 22, syntax-invalid 54, redundant 18
Fitness: max 0.991(5), min 0.845(1), ave 0.967
Test execution time: sum 4269 ms, max 831 ms, min 524 ms
----------------------------------------------------------------

2023-08-07 01:23:49 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-07 01:24:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 45 seconds
Variants: generated 100, build-succeeded 9, build-failed 22, syntax-invalid 57, redundant 12
Fitness: max 0.991(7), min 0.914(1), ave 0.981
Test execution time: sum 6133 ms, max 874 ms, min 513 ms
----------------------------------------------------------------

2023-08-07 01:24:04 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-07 01:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 1 seconds
Variants: generated 100, build-succeeded 11, build-failed 20, syntax-invalid 54, redundant 15
Fitness: max 0.991(9), min 0.983(2), ave 0.99
Test execution time: sum 7309 ms, max 791 ms, min 468 ms
----------------------------------------------------------------

2023-08-07 01:24:20 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-07 01:24:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 12 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 56, redundant 12
Fitness: max 0.991(4), min 0.966(1), ave 0.986
Test execution time: sum 2932 ms, max 846 ms, min 441 ms
----------------------------------------------------------------

2023-08-07 01:24:31 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-07 01:24:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 23 seconds
Variants: generated 100, build-succeeded 6, build-failed 27, syntax-invalid 54, redundant 13
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 3271 ms, max 720 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 01:24:42 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-07 01:24:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 35 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 55, redundant 9
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4252 ms, max 821 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 01:24:55 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-07 01:25:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 46 seconds
Variants: generated 100, build-succeeded 5, build-failed 32, syntax-invalid 56, redundant 7
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 2685 ms, max 754 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:25:06 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-07 01:25:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 58 seconds
Variants: generated 100, build-succeeded 10, build-failed 23, syntax-invalid 54, redundant 13
Fitness: max 0.991(6), min 0.966(1), ave 0.984
Test execution time: sum 5506 ms, max 725 ms, min 412 ms
----------------------------------------------------------------

2023-08-07 01:25:18 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-07 01:25:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 11 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 54, redundant 11
Fitness: max 0.991(6), min 0.888(1), ave 0.976
Test execution time: sum 5277 ms, max 760 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 01:25:31 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-07 01:25:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 26 seconds
Variants: generated 100, build-succeeded 12, build-failed 27, syntax-invalid 51, redundant 10
Fitness: max 1(3), min 0.991(9), ave 0.994
Test execution time: sum 7300 ms, max 920 ms, min 433 ms
----------------------------------------------------------------

2023-08-07 01:25:46 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-07 01:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 37 seconds
Variants: generated 100, build-succeeded 5, build-failed 33, syntax-invalid 52, redundant 10
Fitness: max 0.991(3), min 0.931(1), ave 0.974
Test execution time: sum 2984 ms, max 779 ms, min 446 ms
----------------------------------------------------------------

2023-08-07 01:25:56 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-07 01:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 49 seconds
Variants: generated 100, build-succeeded 6, build-failed 32, syntax-invalid 51, redundant 11
Fitness: max 0.991(5), min 0.966(1), ave 0.987
Test execution time: sum 3966 ms, max 881 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 01:26:08 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-07 01:26:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 1 seconds
Variants: generated 100, build-succeeded 6, build-failed 32, syntax-invalid 54, redundant 8
Fitness: max 0.991(5), min 0.914(1), ave 0.978
Test execution time: sum 3754 ms, max 882 ms, min 434 ms
----------------------------------------------------------------

2023-08-07 01:26:21 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-07 01:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 9 seconds
Variants: generated 100, build-succeeded 4, build-failed 20, syntax-invalid 57, redundant 19
Fitness: max 0.991(2), min 0.948(1), ave 0.974
Test execution time: sum 2296 ms, max 775 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 01:26:29 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-07 01:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 20 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 53, redundant 14
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3023 ms, max 878 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:26:40 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-07 01:26:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 28 seconds
Variants: generated 100, build-succeeded 2, build-failed 24, syntax-invalid 59, redundant 15
Fitness: max 0.991(2), min 0.991(2), ave 0.991
Test execution time: sum 932 ms, max 521 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 01:26:48 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-07 01:26:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 38 seconds
Variants: generated 100, build-succeeded 5, build-failed 23, syntax-invalid 56, redundant 16
Fitness: max 0.991(3), min 0.922(1), ave 0.976
Test execution time: sum 2676 ms, max 722 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:26:57 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-07 01:27:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 49 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 56, redundant 14
Fitness: max 0.991(3), min 0.845(1), ave 0.948
Test execution time: sum 4002 ms, max 816 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 01:27:08 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-07 01:27:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 1 seconds
Variants: generated 100, build-succeeded 7, build-failed 24, syntax-invalid 52, redundant 17
Fitness: max 0.991(5), min 0.957(1), ave 0.983
Test execution time: sum 4344 ms, max 827 ms, min 418 ms
----------------------------------------------------------------

2023-08-07 01:27:21 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-07 01:27:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 10 seconds
Variants: generated 100, build-succeeded 4, build-failed 27, syntax-invalid 54, redundant 15
Fitness: max 0.991(2), min 0.966(1), ave 0.981
Test execution time: sum 2446 ms, max 851 ms, min 445 ms
----------------------------------------------------------------

2023-08-07 01:27:30 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-07 01:27:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 22 seconds
Variants: generated 100, build-succeeded 8, build-failed 23, syntax-invalid 54, redundant 15
Fitness: max 0.991(5), min 0.914(1), ave 0.97
Test execution time: sum 4503 ms, max 732 ms, min 430 ms
----------------------------------------------------------------

2023-08-07 01:27:42 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-07 01:27:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 37 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 52, redundant 13
Fitness: max 0.991(7), min 0.974(1), ave 0.989
Test execution time: sum 5293 ms, max 769 ms, min 455 ms
----------------------------------------------------------------

2023-08-07 01:27:56 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-07 01:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 50 seconds
Variants: generated 100, build-succeeded 8, build-failed 27, syntax-invalid 56, redundant 9
Fitness: max 1(1), min 0.922(1), ave 0.983
Test execution time: sum 4903 ms, max 747 ms, min 440 ms
----------------------------------------------------------------

2023-08-07 01:28:09 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-07 01:28:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 4 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 51, redundant 14
Fitness: max 1(1), min 0.991(8), ave 0.992
Test execution time: sum 5944 ms, max 862 ms, min 415 ms
----------------------------------------------------------------

2023-08-07 01:28:23 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-07 01:28:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 17 seconds
Variants: generated 100, build-succeeded 8, build-failed 28, syntax-invalid 52, redundant 12
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 4612 ms, max 804 ms, min 459 ms
----------------------------------------------------------------

2023-08-07 01:28:36 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-07 01:28:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 26 seconds
Variants: generated 100, build-succeeded 3, build-failed 24, syntax-invalid 54, redundant 19
Fitness: max 0.991(2), min 0.966(1), ave 0.983
Test execution time: sum 1720 ms, max 680 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 01:28:46 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-07 01:28:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 38 seconds
Variants: generated 100, build-succeeded 5, build-failed 28, syntax-invalid 52, redundant 15
Fitness: max 0.991(3), min 0.966(1), ave 0.984
Test execution time: sum 3606 ms, max 829 ms, min 606 ms
----------------------------------------------------------------

2023-08-07 01:28:57 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-07 01:29:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 45 seconds
Variants: generated 100, build-succeeded 0, build-failed 26, syntax-invalid 56, redundant 18
Fitness: max --, min --, ave NaN
Test execution time: sum 0 ms, max -- ms, min -- ms
----------------------------------------------------------------

2023-08-07 01:29:04 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-07 01:29:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 55 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 59, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 3557 ms, max 864 ms, min 432 ms
----------------------------------------------------------------

2023-08-07 01:29:14 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-07 01:29:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 8 seconds
Variants: generated 100, build-succeeded 8, build-failed 21, syntax-invalid 56, redundant 15
Fitness: max 1(1), min 0.931(1), ave 0.983
Test execution time: sum 4875 ms, max 900 ms, min 447 ms
----------------------------------------------------------------

2023-08-07 01:29:27 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-07 01:29:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 19 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 54, redundant 16
Fitness: max 0.991(5), min 0.991(5), ave 0.991
Test execution time: sum 3176 ms, max 799 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 01:29:38 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-07 01:29:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 31 seconds
Variants: generated 100, build-succeeded 7, build-failed 20, syntax-invalid 56, redundant 17
Fitness: max 1(1), min 0.966(1), ave 0.988
Test execution time: sum 3958 ms, max 723 ms, min 410 ms
----------------------------------------------------------------

2023-08-07 01:29:50 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-07 01:30:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 42 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 52, redundant 16
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 4022 ms, max 763 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 01:30:02 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-07 01:30:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 55 seconds
Variants: generated 100, build-succeeded 6, build-failed 25, syntax-invalid 53, redundant 16
Fitness: max 0.991(4), min 0.974(1), ave 0.987
Test execution time: sum 3598 ms, max 831 ms, min 459 ms
----------------------------------------------------------------

2023-08-07 01:30:14 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-07 01:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 6 seconds
Variants: generated 100, build-succeeded 5, build-failed 25, syntax-invalid 53, redundant 17
Fitness: max 0.991(4), min 0.974(1), ave 0.988
Test execution time: sum 2935 ms, max 772 ms, min 426 ms
----------------------------------------------------------------

2023-08-07 01:30:26 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-07 01:30:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 20 seconds
Variants: generated 100, build-succeeded 7, build-failed 27, syntax-invalid 55, redundant 11
Fitness: max 0.991(5), min 0.888(1), ave 0.975
Test execution time: sum 4663 ms, max 804 ms, min 429 ms
----------------------------------------------------------------

2023-08-07 01:30:40 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-07 01:30:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 34 seconds
Variants: generated 100, build-succeeded 8, build-failed 17, syntax-invalid 57, redundant 18
Fitness: max 0.991(7), min 0.983(1), ave 0.99
Test execution time: sum 5046 ms, max 884 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 01:30:53 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-07 01:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 47 seconds
Variants: generated 100, build-succeeded 8, build-failed 24, syntax-invalid 55, redundant 13
Fitness: max 0.991(6), min 0.966(1), ave 0.987
Test execution time: sum 4728 ms, max 807 ms, min 419 ms
----------------------------------------------------------------

2023-08-07 01:31:06 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-07 01:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 59 seconds
Variants: generated 100, build-succeeded 6, build-failed 30, syntax-invalid 54, redundant 10
Fitness: max 0.991(4), min 0.983(2), ave 0.989
Test execution time: sum 3617 ms, max 813 ms, min 406 ms
----------------------------------------------------------------

2023-08-07 01:31:18 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-07 01:31:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 8 seconds
Variants: generated 100, build-succeeded 2, build-failed 32, syntax-invalid 50, redundant 16
Fitness: max 0.991(1), min 0.931(1), ave 0.961
Test execution time: sum 1147 ms, max 682 ms, min 465 ms
----------------------------------------------------------------

2023-08-07 01:31:28 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-07 01:31:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 20 seconds
Variants: generated 100, build-succeeded 6, build-failed 26, syntax-invalid 54, redundant 14
Fitness: max 0.991(4), min 0.983(2), ave 0.989
Test execution time: sum 3624 ms, max 797 ms, min 468 ms
----------------------------------------------------------------

2023-08-07 01:31:40 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-07 01:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 34 seconds
Variants: generated 100, build-succeeded 8, build-failed 31, syntax-invalid 53, redundant 8
Fitness: max 0.991(7), min 0.957(1), ave 0.987
Test execution time: sum 4783 ms, max 922 ms, min 439 ms
----------------------------------------------------------------

2023-08-07 01:31:53 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-07 01:32:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 45 seconds
Variants: generated 100, build-succeeded 4, build-failed 28, syntax-invalid 53, redundant 15
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2634 ms, max 905 ms, min 449 ms
----------------------------------------------------------------

2023-08-07 01:32:04 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-07 01:32:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 59 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 52, redundant 11
Fitness: max 1(1), min 0.991(7), ave 0.992
Test execution time: sum 4777 ms, max 803 ms, min 443 ms
----------------------------------------------------------------

2023-08-07 01:32:18 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-07 01:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 12 seconds
Variants: generated 100, build-succeeded 6, build-failed 30, syntax-invalid 51, redundant 13
Fitness: max 1(1), min 0.914(1), ave 0.98
Test execution time: sum 3766 ms, max 775 ms, min 438 ms
----------------------------------------------------------------

2023-08-07 01:32:31 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-07 01:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 24 seconds
Variants: generated 100, build-succeeded 7, build-failed 27, syntax-invalid 56, redundant 10
Fitness: max 0.991(4), min 0.966(1), ave 0.984
Test execution time: sum 4187 ms, max 709 ms, min 431 ms
----------------------------------------------------------------

2023-08-07 01:32:44 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-07 01:32:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 36 seconds
Variants: generated 100, build-succeeded 4, build-failed 27, syntax-invalid 53, redundant 16
Fitness: max 0.991(3), min 0.948(1), ave 0.981
Test execution time: sum 2762 ms, max 783 ms, min 576 ms
----------------------------------------------------------------

2023-08-07 01:32:56 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-07 01:33:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 52 seconds
Variants: generated 100, build-succeeded 12, build-failed 21, syntax-invalid 56, redundant 11
Fitness: max 0.991(12), min 0.991(12), ave 0.991
Test execution time: sum 7271 ms, max 959 ms, min 443 ms
----------------------------------------------------------------

2023-08-07 01:33:11 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-07 01:33:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 7 seconds
Variants: generated 100, build-succeeded 8, build-failed 32, syntax-invalid 52, redundant 8
Fitness: max 0.991(7), min 0.914(1), ave 0.982
Test execution time: sum 4283 ms, max 787 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 01:33:26 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-07 01:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 22 seconds
Variants: generated 100, build-succeeded 10, build-failed 29, syntax-invalid 51, redundant 10
Fitness: max 1(2), min 0.983(2), ave 0.991
Test execution time: sum 5778 ms, max 772 ms, min 444 ms
----------------------------------------------------------------

2023-08-07 01:33:41 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-07 01:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 41 seconds
Variants: generated 100, build-succeeded 11, build-failed 24, syntax-invalid 53, redundant 12
Fitness: max 1(2), min 0.948(1), ave 0.988
Test execution time: sum 7771 ms, max 1027 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 01:34:01 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-07 01:34:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 56 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 55, redundant 15
Fitness: max 0.991(6), min 0.991(6), ave 0.991
Test execution time: sum 4122 ms, max 849 ms, min 535 ms
----------------------------------------------------------------

2023-08-07 01:34:15 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-07 01:34:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 9 seconds
Variants: generated 100, build-succeeded 7, build-failed 25, syntax-invalid 59, redundant 9
Fitness: max 1(1), min 0.991(6), ave 0.993
Test execution time: sum 3946 ms, max 759 ms, min 435 ms
----------------------------------------------------------------

2023-08-07 01:34:28 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-07 01:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 26 seconds
Variants: generated 100, build-succeeded 11, build-failed 25, syntax-invalid 54, redundant 10
Fitness: max 0.991(7), min 0.957(1), ave 0.986
Test execution time: sum 6734 ms, max 774 ms, min 423 ms
----------------------------------------------------------------

2023-08-07 01:34:45 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-07 01:35:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 40 seconds
Variants: generated 100, build-succeeded 6, build-failed 33, syntax-invalid 54, redundant 7
Fitness: max 1(1), min 0.966(1), ave 0.989
Test execution time: sum 4393 ms, max 798 ms, min 684 ms
----------------------------------------------------------------

2023-08-07 01:35:00 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-07 01:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 55 seconds
Variants: generated 100, build-succeeded 9, build-failed 24, syntax-invalid 51, redundant 16
Fitness: max 0.991(9), min 0.991(9), ave 0.991
Test execution time: sum 5369 ms, max 836 ms, min 402 ms
----------------------------------------------------------------

2023-08-07 01:35:15 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-07 01:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 9 seconds
Variants: generated 100, build-succeeded 5, build-failed 26, syntax-invalid 54, redundant 15
Fitness: max 1(1), min 0.948(1), ave 0.984
Test execution time: sum 3722 ms, max 848 ms, min 608 ms
----------------------------------------------------------------

2023-08-07 01:35:29 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-07 01:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 24 seconds
Variants: generated 100, build-succeeded 7, build-failed 23, syntax-invalid 56, redundant 14
Fitness: max 0.991(6), min 0.966(1), ave 0.988
Test execution time: sum 3881 ms, max 692 ms, min 413 ms
----------------------------------------------------------------

2023-08-07 01:35:43 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-07 01:35:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 37 seconds
Variants: generated 100, build-succeeded 7, build-failed 29, syntax-invalid 52, redundant 12
Fitness: max 1(1), min 0.845(1), ave 0.972
Test execution time: sum 4110 ms, max 875 ms, min 395 ms
----------------------------------------------------------------

2023-08-07 01:35:56 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-07 01:36:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 52 seconds
Variants: generated 100, build-succeeded 9, build-failed 26, syntax-invalid 54, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 5499 ms, max 882 ms, min 416 ms
----------------------------------------------------------------

2023-08-07 01:36:11 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-07 01:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 6 seconds
Variants: generated 100, build-succeeded 6, build-failed 31, syntax-invalid 50, redundant 13
Fitness: max 0.991(4), min 0.922(1), ave 0.978
Test execution time: sum 3627 ms, max 850 ms, min 440 ms
----------------------------------------------------------------

2023-08-07 01:36:25 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-07 01:36:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 21 seconds
Variants: generated 100, build-succeeded 9, build-failed 28, syntax-invalid 52, redundant 11
Fitness: max 0.991(5), min 0.948(1), ave 0.98
Test execution time: sum 5192 ms, max 849 ms, min 411 ms
----------------------------------------------------------------

2023-08-07 01:36:41 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-07 01:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 37 seconds
Variants: generated 100, build-succeeded 9, build-failed 27, syntax-invalid 53, redundant 11
Fitness: max 1(2), min 0.991(7), ave 0.993
Test execution time: sum 5641 ms, max 814 ms, min 450 ms
----------------------------------------------------------------

2023-08-07 01:36:56 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-07 01:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 52 seconds
Variants: generated 100, build-succeeded 7, build-failed 33, syntax-invalid 53, redundant 7
Fitness: max 0.991(6), min 0.983(1), ave 0.99
Test execution time: sum 4269 ms, max 794 ms, min 427 ms
----------------------------------------------------------------

2023-08-07 01:37:11 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-07 01:37:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 6 seconds
Variants: generated 100, build-succeeded 5, build-failed 31, syntax-invalid 51, redundant 13
Fitness: max 0.991(4), min 0.983(1), ave 0.99
Test execution time: sum 3226 ms, max 892 ms, min 403 ms
----------------------------------------------------------------

2023-08-07 01:37:26 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-07 01:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 23 seconds
Variants: generated 100, build-succeeded 9, build-failed 25, syntax-invalid 52, redundant 14
Fitness: max 0.991(7), min 0.922(1), ave 0.982
Test execution time: sum 5052 ms, max 863 ms, min 390 ms
----------------------------------------------------------------

2023-08-07 01:37:42 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-07 01:37:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 39 seconds
Variants: generated 100, build-succeeded 10, build-failed 22, syntax-invalid 55, redundant 13
Fitness: max 0.991(7), min 0.957(1), ave 0.984
Test execution time: sum 5352 ms, max 807 ms, min 422 ms
----------------------------------------------------------------

2023-08-07 01:37:59 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-07 01:38:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 53 seconds
Variants: generated 100, build-succeeded 5, build-failed 21, syntax-invalid 54, redundant 20
Fitness: max 0.991(3), min 0.966(1), ave 0.983
Test execution time: sum 2551 ms, max 624 ms, min 436 ms
----------------------------------------------------------------

2023-08-07 01:38:13 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-07 01:38:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 7 seconds
Variants: generated 100, build-succeeded 5, build-failed 27, syntax-invalid 57, redundant 11
Fitness: max 1(1), min 0.983(1), ave 0.991
Test execution time: sum 2953 ms, max 702 ms, min 472 ms
----------------------------------------------------------------

2023-08-07 01:38:27 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-07 01:38:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 23 seconds
Variants: generated 100, build-succeeded 6, build-failed 24, syntax-invalid 59, redundant 11
Fitness: max 1(1), min 0.983(2), ave 0.99
Test execution time: sum 4068 ms, max 929 ms, min 417 ms
----------------------------------------------------------------

2023-08-07 01:38:42 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-07 01:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 36 seconds
Variants: generated 100, build-succeeded 4, build-failed 29, syntax-invalid 54, redundant 13
Fitness: max 0.991(3), min 0.905(1), ave 0.97
Test execution time: sum 2407 ms, max 708 ms, min 496 ms
----------------------------------------------------------------

2023-08-07 01:38:56 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-07 01:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 50 seconds
Variants: generated 100, build-succeeded 4, build-failed 25, syntax-invalid 54, redundant 17
Fitness: max 1(1), min 0.991(3), ave 0.994
Test execution time: sum 2414 ms, max 856 ms, min 464 ms
----------------------------------------------------------------

2023-08-07 01:39:09 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-07 01:39:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 9 seconds
Variants: generated 100, build-succeeded 13, build-failed 24, syntax-invalid 54, redundant 9
Fitness: max 0.991(9), min 0.983(4), ave 0.989
Test execution time: sum 7777 ms, max 806 ms, min 405 ms
----------------------------------------------------------------

2023-08-07 01:39:28 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-07 01:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 15 seconds
Variants: generated 8, build-succeeded 6, build-failed 1, syntax-invalid 0, redundant 1
Fitness: max 1(1), min 0.948(1), ave 0.984
Test execution time: sum 3570 ms, max 808 ms, min 442 ms
----------------------------------------------------------------

2023-08-07 01:39:34 [main] [INFO]  KGenProgMain - GA stopped
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0, 0.0)));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v614)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0, 0.0)));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v624)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v935)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final double c = divisor.getReal();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0, 0.0)));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:42 [main] [INFO]  PatchLogExporter - patch (v1045)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1220)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return this.add(I).divide(I.subtract(this)).log().multiply(I.divide(createComplex(2.0, 0.0)));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double real2 = 2.0 * real;
+			double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1849)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v1911)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double real2 = 2.0 * real;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2005)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,12 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -251,13 +251,12 @@
     public Complex divide(Complex divisor)
         throws NullArgumentException {
         MathUtils.checkNotNull(divisor);
-        if (isNaN || divisor.isNaN) {
+        if (isNaN) {
             return NaN;
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
+					-FastMath.sin(real) * MathUtils.sinh(imaginary));
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2042)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2422)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +287,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:43 [main] [INFO]  PatchLogExporter - patch (v2726)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,8 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double real2 = 2.0 * real;
+			return createComplex(0.0, 0.0);
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v2907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +910,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3149)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2884,7 +2875,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3742)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,14 +288,13 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -749,15 +749,7 @@
                 return 0.0;
             }
 
-            if (intVal > 709) {
-                /* This will produce a subnormal output */
-                final double result = exp(x+40.19140625, extra, hiPrec) / 285040095144011776.0;
-                if (hiPrec != null) {
-                    hiPrec[0] /= 285040095144011776.0;
-                    hiPrec[1] /= 285040095144011776.0;
-                }
-                return result;
-            }
+            if (intVal > 709)
 
             if (intVal == 709) {
                 /* exp(1.494140625) is nearly a machine number... */
@@ -1430,7 +1422,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v3841)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4338)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4812)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v4939)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,17 +289,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (imaginary == 0.0) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5121)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5308)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -289,13 +289,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isNaN) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            MathUtils.checkNotNull(divisor);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5607)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -289,17 +288,17 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (divisor == 0d) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isNaN) {
+            double real2 = 2.0 * real;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:44 [main] [INFO]  PatchLogExporter - patch (v5816)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6319)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6358)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6421)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +293,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v6919)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -292,14 +291,13 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7209)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,7 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,10 +293,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7347)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v7936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -256,8 +256,6 @@
         }
 
         if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8105)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8108)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
@@ -2884,7 +2883,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8225)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +293,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8417)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            final List<Complex> result=new ArrayList<Complex>();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8640)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +913,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v8722)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9030)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9337)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            StringBuffer imAppendTo = new StringBuffer();
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9430)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,13 +291,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v9507)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,6 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
+			double imaginary2 = 2.0 * imaginary;
             return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
@@ -293,13 +292,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +912,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,10 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10138)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
@@ -913,7 +911,7 @@
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return createComplex(0.0, 0.0);
+            double imaginary2 = 2.0 * imaginary;
         }
 
         double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v10409)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,13 +291,13 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double real2 = 2.0 * real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11149)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11234)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:45 [main] [INFO]  PatchLogExporter - patch (v11528)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v11715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v12807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -289,12 +288,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13724)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v13819)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14112)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -125,7 +125,8 @@
             if (imaginary == 0.0) {
                 return FastMath.abs(real);
             }
-            double q = real / imaginary;
+            double real2 = 2.0 * real;
+			double q = real / imaginary;
             return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);
         } else {
             if (real == 0.0) {
@@ -255,9 +256,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,13 +292,14 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
-        return createComplex(real / divisor,
+        double q = imaginary / real;
+		return createComplex(real / divisor,
                              imaginary  / divisor);
     }
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1430,7 +1430,6 @@
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
-            lnza = lnza * epsilon + -0.5;
             lnza = lnza * epsilon + 1.0;
             lnza = lnza * epsilon;
         }
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v14126)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -292,10 +290,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15444)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v15536)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			double imaginary2 = 2.0 * imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16028)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16146)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            final List<Complex> result=new ArrayList<Complex>();
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16311)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v16403)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -292,10 +289,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17420)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -292,10 +291,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17506)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer ret = null;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v17627)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2936,7 +2935,8 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
+        ya = temp;
+		zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double real2 = 2.0 * real;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:46 [main] [INFO]  PatchLogExporter - patch (v18227)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -292,10 +289,8 @@
         if (isNaN || Double.isNaN(divisor)) {
             return NaN;
         }
-        if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
-        }
+        if (divisor == 0d)
+			return NaN;
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
         }
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2936,7 +2935,8 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
+        ya = temp;
+		zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18249)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,10 +290,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
-        if (Double.isInfinite(divisor)) {
+        if (isInfinite()) {
             return !isInfinite() ? ZERO : NaN;
         }
         return createComplex(real / divisor,
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18402)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
+			int sign = 0;
+			double q = imaginary / real;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18606)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double imaginary2 = 2.0 * imaginary;
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double q = real / imaginary;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v18802)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +291,10 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double real2 = 2.0 * real;
+			double expReal = FastMath.exp(real);
+			StringBuffer ret = null;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19017)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1427,7 +1427,8 @@
             /* High precision not required.  Eval Remez polynomial
          using standard double precision */
             lnza = -0.16624882440418567;
-            lnza = lnza * epsilon + 0.19999954120254515;
+            double q0 = 0.0;
+			lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
             lnza = lnza * epsilon + -0.5;
@@ -2884,7 +2885,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2936,7 +2936,8 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
+        ya = temp;
+		zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
@@ -2947,7 +2948,6 @@
             final double pia = 1.5707963267948966*2.0;
             final double pib = 6.123233995736766E-17*2.0;
 
-            za = pia - result;
             zb = -(za - pia + result);
             zb += pib - resultb;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19137)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1424,9 +1424,7 @@
             lnza = aa + ab;
             lnzb = -(lnza - aa - ab);
         } else {
-            /* High precision not required.  Eval Remez polynomial
-         using standard double precision */
-            lnza = -0.16624882440418567;
+            double result;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
@@ -2884,7 +2882,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2936,7 +2933,8 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
+        ya = temp;
+		zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19408)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,9 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double q = imaginary / real;
+			double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +275,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +293,8 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v19428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -250,14 +250,11 @@
      */
     public Complex divide(Complex divisor)
         throws NullArgumentException {
-        MathUtils.checkNotNull(divisor);
         if (isNaN || divisor.isNaN) {
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +272,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +290,7 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -1424,9 +1424,7 @@
             lnza = aa + ab;
             lnzb = -(lnza - aa - ab);
         } else {
-            /* High precision not required.  Eval Remez polynomial
-         using standard double precision */
-            lnza = -0.16624882440418567;
+            double result;
             lnza = lnza * epsilon + 0.19999954120254515;
             lnza = lnza * epsilon + -0.2499999997677497;
             lnza = lnza * epsilon + 0.3333333333332802;
@@ -1463,6 +1461,7 @@
 
         c = a + LN_2_B*exp;
         d = -(c - a - LN_2_B*exp);
+		int idx;
         a = c;
         b = b + d;
 
@@ -2884,7 +2883,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
@@ -2936,7 +2934,8 @@
         double za = EIGHTHS[idx] + ya;
         double zb = -(za - EIGHTHS[idx] - ya);
         temp = za + yb;
-        zb += -(temp - za - yb);
+        ya = temp;
+		zb += -(temp - za - yb);
         za = temp;
 
         result = za + zb;
@@ -2948,7 +2947,7 @@
             final double pib = 6.123233995736766E-17*2.0;
 
             za = pia - result;
-            zb = -(za - pia + result);
+            final double factb = 1.997844754509471E-9;
             zb += pib - resultb;
 
             result = za + zb;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20015)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -289,12 +287,11 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20138)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,7 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +273,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -289,12 +287,12 @@
      * @see #divide(Complex)
      */
     public Complex divide(double divisor) {
-        if (isNaN || Double.isNaN(divisor)) {
+        if (isInfinite()) {
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            int sign = 0;
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20332)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
+++ org.apache.commons.math.stat.correlation.StorelessBivariateCovariance
@@ -73,4 +73,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.special.Erf
+++ org.apache.commons.math.special.Erf
@@ -127,4 +127,3 @@
                 erf(x2) - erf(x1);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -286,4 +286,3 @@
         return test(values, begin, length, allowEmpty);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.optimization.direct.CMAESOptimizer
+++ org.apache.commons.math.optimization.direct.CMAESOptimizer
@@ -1394,4 +1394,3 @@
         return new Array2DRowRealMatrix(d, false);
     }
 }
-
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.complex.Complex
+++ org.apache.commons.math.complex.Complex
@@ -255,9 +255,8 @@
             return NaN;
         }
 
-        if (divisor.isZero) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+        if (isInfinite()) {
+            double expReal = FastMath.exp(real);
         }
 
         if (divisor.isInfinite() && !isInfinite()) {
@@ -275,7 +274,7 @@
         } else {
             double q = d / c;
             double denominator = d * q + c;
-            return createComplex((imaginary * q + real) / denominator,
+			return createComplex((imaginary * q + real) / denominator,
                 (imaginary - real * q) / denominator);
         }
     }
@@ -293,8 +292,9 @@
             return NaN;
         }
         if (divisor == 0d) {
-            // return isZero ? NaN : INF; // See MATH-657
-            return isZero ? NaN : INF;
+            StringBuffer imAppendTo = new StringBuffer();
+			double expReal = FastMath.exp(real);
+			return NaN;
         }
         if (Double.isInfinite(divisor)) {
             return !isInfinite() ? ZERO : NaN;
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.util.FastMath
+++ org.apache.commons.math.util.FastMath
@@ -2884,7 +2884,6 @@
             final double yaa = (ya + temp) - temp;
             final double yab = ya - yaa;
 
-            temp = za * HEX_40000000;
             final double zaa = (za + temp) - temp;
             final double zab = za - zaa;
 
2023-08-07 01:39:47 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-07 01:39:47 [main] [INFO]  KGenProgMain - Summary
Reached generation = 207
Generated variants = 20508
Syntax valid variants = 10876
Build succeeded variants = 2381
Time elapsed = 48 minutes 28 seconds
Exit status = SUCCESS
