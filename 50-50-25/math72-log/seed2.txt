2023-08-01 21:47:48 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-01 21:47:48 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-01 21:47:48 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-01 21:47:48 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-01 21:48:05 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-01 21:48:05 [main] [INFO]  KGenProgMain - GA started
2023-08-01 21:48:05 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-01 21:48:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 50, build-succeeded 13, build-failed 22, syntax-invalid 8, redundant 7
Fitness: max 0.833(7), min 0.167(2), ave 0.679
Test execution time: sum 2032 ms, max 298 ms, min 77 ms
----------------------------------------------------------------

2023-08-01 21:48:11 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-01 21:48:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 50, build-succeeded 13, build-failed 32, syntax-invalid 1, redundant 4
Fitness: max 0.833(7), min 0.167(1), ave 0.705
Test execution time: sum 1170 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-01 21:48:16 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-01 21:48:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, build-succeeded 38, build-failed 22, syntax-invalid 6, redundant 34
Fitness: max 0.833(24), min 0.167(1), ave 0.75
Test execution time: sum 2759 ms, max 231 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 21:48:22 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-01 21:48:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 100, build-succeeded 32, build-failed 28, syntax-invalid 8, redundant 32
Fitness: max 1(1), min 0.167(3), ave 0.771
Test execution time: sum 2322 ms, max 192 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 21:48:29 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-01 21:48:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 21, build-failed 26, syntax-invalid 12, redundant 41
Fitness: max 1(1), min 0.167(1), ave 0.786
Test execution time: sum 1497 ms, max 201 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 21:48:34 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-01 21:48:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 100, build-succeeded 39, build-failed 28, syntax-invalid 3, redundant 30
Fitness: max 0.833(33), min 0.167(5), ave 0.744
Test execution time: sum 2620 ms, max 148 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:48:41 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-01 21:48:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 6, redundant 27
Fitness: max 0.833(26), min 0.167(7), ave 0.691
Test execution time: sum 2176 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:48:47 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-01 21:48:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 seconds
Variants: generated 100, build-succeeded 32, build-failed 29, syntax-invalid 7, redundant 32
Fitness: max 0.833(27), min 0.167(4), ave 0.745
Test execution time: sum 2040 ms, max 129 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:48:52 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-01 21:48:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 8, redundant 26
Fitness: max 0.833(32), min 0.167(2), ave 0.784
Test execution time: sum 2314 ms, max 150 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:48:58 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-01 21:49:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 seconds
Variants: generated 100, build-succeeded 26, build-failed 33, syntax-invalid 22, redundant 19
Fitness: max 0.833(25), min 0.5(1), ave 0.821
Test execution time: sum 1736 ms, max 198 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:49:04 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-01 22:04:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 5 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 17, redundant 11
Fitness: max 0.833(39), min 0.167(6), ave 0.74
Test execution time: sum 903227 ms, max 900116 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:04:11 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-01 22:04:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 13 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 6, redundant 13
Fitness: max 0.833(43), min 0.167(4), ave 0.777
Test execution time: sum 2896 ms, max 167 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:04:18 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-01 22:04:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 21 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 11, redundant 10
Fitness: max 0.833(47), min 0.167(2), ave 0.797
Test execution time: sum 3431 ms, max 199 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:04:27 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-01 22:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 8, redundant 6
Fitness: max 1(1), min 0.167(3), ave 0.788
Test execution time: sum 3325 ms, max 162 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:04:35 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-01 22:04:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 36 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 20, redundant 8
Fitness: max 0.833(38), min 0.667(3), ave 0.821
Test execution time: sum 2671 ms, max 195 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:04:41 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-01 22:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 43 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 10, redundant 11
Fitness: max 0.833(46), min 0.167(5), ave 0.756
Test execution time: sum 3293 ms, max 145 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:04:49 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-01 22:04:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 12, redundant 14
Fitness: max 0.833(39), min 0.167(6), ave 0.736
Test execution time: sum 3125 ms, max 134 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:04:57 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-01 22:05:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 minutes 57 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 20, redundant 7
Fitness: max 0.833(38), min 0.167(2), ave 0.786
Test execution time: sum 2628 ms, max 150 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:05:03 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-01 22:05:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 4 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 14, redundant 11
Fitness: max 0.833(38), min 0.167(4), ave 0.73
Test execution time: sum 2923 ms, max 121 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:10 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-01 22:05:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 11 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 14, redundant 15
Fitness: max 0.833(37), min 0.167(5), ave 0.728
Test execution time: sum 2861 ms, max 123 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:05:17 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-01 22:05:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 18 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 13, redundant 12
Fitness: max 1(1), min 0.167(3), ave 0.763
Test execution time: sum 2912 ms, max 203 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:05:24 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-01 22:05:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.167(5), ave 0.761
Test execution time: sum 3282 ms, max 127 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:05:32 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-01 22:05:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 34 seconds
Variants: generated 100, build-succeeded 47, build-failed 24, syntax-invalid 18, redundant 11
Fitness: max 0.833(39), min 0.167(4), ave 0.759
Test execution time: sum 3011 ms, max 141 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:05:40 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-01 22:05:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 41 seconds
Variants: generated 100, build-succeeded 45, build-failed 26, syntax-invalid 18, redundant 11
Fitness: max 0.833(37), min 0.167(6), ave 0.733
Test execution time: sum 2806 ms, max 124 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:47 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-01 22:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 14, redundant 5
Fitness: max 0.833(43), min 0.167(6), ave 0.729
Test execution time: sum 3372 ms, max 130 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:55 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-01 22:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 11, redundant 9
Fitness: max 1(1), min 0.167(11), ave 0.696
Test execution time: sum 3684 ms, max 189 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:06:03 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-01 22:06:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 11, redundant 2
Fitness: max 0.833(37), min 0.167(11), ave 0.676
Test execution time: sum 3055 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:11 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-01 22:06:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 13 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 15, redundant 5
Fitness: max 1(1), min 0.167(10), ave 0.711
Test execution time: sum 3431 ms, max 129 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:19 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-01 22:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 6, redundant 7
Fitness: max 1(1), min 0.167(5), ave 0.773
Test execution time: sum 3301 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:06:26 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-01 22:06:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 28 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 11, redundant 2
Fitness: max 0.833(48), min 0.167(9), ave 0.722
Test execution time: sum 3714 ms, max 145 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:34 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-01 22:06:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 34 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 15, redundant 11
Fitness: max 0.833(35), min 0.167(8), ave 0.709
Test execution time: sum 2536 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:40 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-01 22:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 42 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 11, redundant 3
Fitness: max 0.833(45), min 0.167(5), ave 0.76
Test execution time: sum 3207 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:48 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-01 22:06:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.167(6), ave 0.757
Test execution time: sum 3425 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:06:56 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-01 22:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 minutes 58 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 19, redundant 4
Fitness: max 0.833(46), min 0.167(3), ave 0.783
Test execution time: sum 3350 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:07:03 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-01 22:07:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 4 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 17, redundant 10
Fitness: max 0.833(39), min 0.167(4), ave 0.771
Test execution time: sum 2626 ms, max 75 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:07:10 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-01 22:07:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 12 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0.167(3), ave 0.783
Test execution time: sum 3366 ms, max 211 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:07:18 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-01 22:07:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 19 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 14, redundant 10
Fitness: max 0.833(41), min 0.167(6), ave 0.742
Test execution time: sum 3008 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:07:25 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-01 22:07:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 27 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 15, redundant 6
Fitness: max 0.833(46), min 0.167(2), ave 0.806
Test execution time: sum 3094 ms, max 202 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:07:33 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-01 22:07:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 34 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 16, redundant 8
Fitness: max 1(1), min 0.167(1), ave 0.816
Test execution time: sum 2784 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:07:40 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-01 22:07:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 41 seconds
Variants: generated 100, build-succeeded 40, build-failed 36, syntax-invalid 19, redundant 5
Fitness: max 0.833(35), min 0.167(3), ave 0.771
Test execution time: sum 2655 ms, max 198 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:07:47 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-01 22:07:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 49 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 16, redundant 6
Fitness: max 0.833(49), min 0.167(3), ave 0.785
Test execution time: sum 3260 ms, max 84 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:07:55 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-01 22:08:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 55 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 22, redundant 6
Fitness: max 0.833(34), min 0.167(5), ave 0.74
Test execution time: sum 2443 ms, max 69 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:08:01 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-01 22:08:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 3 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0.833(40), min 0.167(3), ave 0.78
Test execution time: sum 2732 ms, max 169 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:08:09 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-01 22:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 11 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 0.833(46), min 0.167(5), ave 0.761
Test execution time: sum 3319 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:08:17 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-01 22:08:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 20 seconds
Variants: generated 100, build-succeeded 50, build-failed 23, syntax-invalid 17, redundant 10
Fitness: max 0.833(36), min 0.167(11), ave 0.673
Test execution time: sum 3200 ms, max 205 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:08:26 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-01 22:08:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 27 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 18, redundant 6
Fitness: max 0.833(41), min 0.167(8), ave 0.719
Test execution time: sum 2989 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:08:33 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-01 22:08:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 35 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 13, redundant 8
Fitness: max 0.833(38), min 0.167(6), ave 0.73
Test execution time: sum 3076 ms, max 230 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:08:41 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-01 22:08:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 44 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.833(45), min 0.167(9), ave 0.72
Test execution time: sum 3340 ms, max 84 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:08:49 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-01 22:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 51 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 18, redundant 9
Fitness: max 1(1), min 0.167(3), ave 0.786
Test execution time: sum 2906 ms, max 74 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:08:57 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-01 22:09:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 13, redundant 7
Fitness: max 1(1), min 0.167(7), ave 0.739
Test execution time: sum 3175 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:09:06 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-01 22:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 12, redundant 5
Fitness: max 0.833(52), min 0.167(5), ave 0.767
Test execution time: sum 3646 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:09:14 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-01 22:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 17 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.167(5), ave 0.759
Test execution time: sum 3392 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:09:23 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-01 22:09:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 10, redundant 7
Fitness: max 0.833(46), min 0.167(4), ave 0.778
Test execution time: sum 2992 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:09:31 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-01 22:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 10, redundant 8
Fitness: max 1(1), min 0.167(7), ave 0.744
Test execution time: sum 3336 ms, max 143 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:09:40 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-01 22:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 42 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.751
Test execution time: sum 3485 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:09:48 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-01 22:09:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 51 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 10, redundant 6
Fitness: max 0.833(47), min 0.167(2), ave 0.798
Test execution time: sum 3386 ms, max 194 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:09:57 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-01 22:10:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 0 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 11, redundant 3
Fitness: max 0.833(55), min 0.167(3), ave 0.794
Test execution time: sum 3539 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:10:06 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-01 22:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 0.833(52), min 0.167(1), ave 0.807
Test execution time: sum 3575 ms, max 191 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:10:15 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-01 22:10:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 17 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 15, redundant 7
Fitness: max 0.833(46), min 0.167(2), ave 0.8
Test execution time: sum 2973 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:10:23 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-01 22:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 26 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 18, redundant 11
Fitness: max 0.833(42), min 0.167(1), ave 0.808
Test execution time: sum 3013 ms, max 195 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:10:32 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-01 22:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 33 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 15, redundant 12
Fitness: max 0.833(45), min 0.667(1), ave 0.83
Test execution time: sum 2709 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:10:39 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-01 22:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 9, redundant 9
Fitness: max 0.833(49), min 0.167(1), ave 0.8
Test execution time: sum 3337 ms, max 75 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:10:48 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-01 22:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 16, redundant 2
Fitness: max 0.833(52), min 0.167(1), ave 0.806
Test execution time: sum 3384 ms, max 138 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:10:57 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-01 22:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.833(45), min 0.167(6), ave 0.75
Test execution time: sum 3153 ms, max 78 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:11:06 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-01 22:11:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 15, redundant 6
Fitness: max 0.833(50), min 0.167(2), ave 0.798
Test execution time: sum 3499 ms, max 188 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:11:15 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-01 22:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 16 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 24, redundant 7
Fitness: max 0.833(36), min 0.167(1), ave 0.799
Test execution time: sum 2326 ms, max 81 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:11:22 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-01 22:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 25 seconds
Variants: generated 100, build-succeeded 46, build-failed 24, syntax-invalid 26, redundant 4
Fitness: max 1(1), min 0.167(6), ave 0.736
Test execution time: sum 2935 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:11:31 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-01 22:11:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 33 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 17, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.788
Test execution time: sum 3056 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:11:39 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-01 22:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 21, redundant 2
Fitness: max 1(2), min 0.167(2), ave 0.804
Test execution time: sum 3120 ms, max 70 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:11:48 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-01 22:11:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 10, redundant 5
Fitness: max 0.833(48), min 0.167(6), ave 0.754
Test execution time: sum 3558 ms, max 136 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:11:58 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-01 22:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.167(3), ave 0.79
Test execution time: sum 3261 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:12:07 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-01 22:12:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 10 seconds
Variants: generated 100, build-succeeded 49, build-failed 25, syntax-invalid 17, redundant 9
Fitness: max 0.833(42), min 0.167(5), ave 0.759
Test execution time: sum 3063 ms, max 140 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:12:16 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-01 22:12:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 19 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 13, redundant 7
Fitness: max 0.833(42), min 0.167(4), ave 0.763
Test execution time: sum 2922 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:12:25 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-01 22:12:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 29 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 16, redundant 7
Fitness: max 0.833(49), min 0.167(3), ave 0.79
Test execution time: sum 3468 ms, max 212 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:12:34 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-01 22:12:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 37 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 15, redundant 1
Fitness: max 0.833(44), min 0.167(4), ave 0.771
Test execution time: sum 3029 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:12:43 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-01 22:12:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 16, redundant 4
Fitness: max 0.833(45), min 0.667(3), ave 0.823
Test execution time: sum 3126 ms, max 154 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:12:53 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-01 22:13:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 56 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 0.833(49), min 0.167(5), ave 0.77
Test execution time: sum 3151 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:13:02 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-01 22:13:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 8 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 1, redundant 5
Fitness: max 0.833(59), min 0.167(2), ave 0.805
Test execution time: sum 4007 ms, max 138 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:13:14 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-01 22:13:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 9, redundant 1
Fitness: max 0.833(52), min 0.167(1), ave 0.815
Test execution time: sum 3307 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:13:23 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-01 22:13:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 0.833(50), min 0(1), ave 0.792
Test execution time: sum 3681 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:13:34 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-01 22:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.833(52), min 0(1), ave 0.789
Test execution time: sum 3367 ms, max 80 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:13:44 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-01 22:13:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 10, redundant 6
Fitness: max 0.833(53), min 0.167(2), ave 0.798
Test execution time: sum 3714 ms, max 199 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:13:55 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-01 22:14:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 0 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 11, redundant 1
Fitness: max 0.833(49), min 0.167(5), ave 0.766
Test execution time: sum 3420 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:14:06 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-01 22:14:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 11 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0.833(47), min 0.167(3), ave 0.786
Test execution time: sum 3422 ms, max 145 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:14:17 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-01 22:14:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.812
Test execution time: sum 3392 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:14:27 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-01 22:14:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 33 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 11, redundant 2
Fitness: max 0.833(56), min 0.167(2), ave 0.806
Test execution time: sum 3787 ms, max 135 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:14:39 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-01 22:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 44 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 3, redundant 5
Fitness: max 1(1), min 0.167(4), ave 0.781
Test execution time: sum 3689 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:14:50 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-01 22:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.833(54), min 0.167(2), ave 0.807
Test execution time: sum 3632 ms, max 135 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:15:01 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-01 22:15:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 12, redundant 5
Fitness: max 0.833(52), min 0.5(1), ave 0.818
Test execution time: sum 3406 ms, max 72 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:15:12 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-01 22:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 19 seconds
Variants: generated 100, build-succeeded 70, build-failed 26, syntax-invalid 3, redundant 1
Fitness: max 0.833(60), min 0.167(5), ave 0.771
Test execution time: sum 4365 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:15:25 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-01 22:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 30 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0.833(54), min 0.167(2), ave 0.802
Test execution time: sum 3582 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:15:36 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-01 22:15:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 8, redundant 9
Fitness: max 0.833(48), min 0.167(2), ave 0.796
Test execution time: sum 3336 ms, max 129 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:15:47 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-01 22:15:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 10, redundant 5
Fitness: max 0.833(56), min 0.667(3), ave 0.825
Test execution time: sum 3478 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:15:58 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-01 22:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 4 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 10, redundant 5
Fitness: max 0.833(54), min 0.167(2), ave 0.793
Test execution time: sum 3858 ms, max 138 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:16:10 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-01 22:16:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 10, redundant 5
Fitness: max 1(2), min 0.667(2), ave 0.833
Test execution time: sum 3390 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:16:20 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-01 22:16:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 27 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 8, redundant 3
Fitness: max 0.833(54), min 0.167(1), ave 0.813
Test execution time: sum 3636 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:16:32 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-01 22:16:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 38 seconds
Variants: generated 100, build-succeeded 67, build-failed 27, syntax-invalid 3, redundant 3
Fitness: max 0.833(61), min 0.167(1), ave 0.806
Test execution time: sum 3978 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:16:44 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-01 22:31:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 4, redundant 2
Fitness: max 0.833(57), min 0.167(2), ave 0.804
Test execution time: sum 904015 ms, max 900118 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:31:57 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-01 22:32:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 3 seconds
Variants: generated 100, build-succeeded 68, build-failed 24, syntax-invalid 6, redundant 2
Fitness: max 0.833(61), min 0.167(2), ave 0.797
Test execution time: sum 4076 ms, max 95 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:32:09 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-01 22:32:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 15 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 5, redundant 9
Fitness: max 0.833(52), min 0.167(4), ave 0.782
Test execution time: sum 3689 ms, max 137 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:32:21 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-01 22:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 10, redundant 2
Fitness: max 0.833(50), min 0.167(4), ave 0.782
Test execution time: sum 3242 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:32:32 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-01 22:32:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.833(48), min 0.167(1), ave 0.806
Test execution time: sum 3250 ms, max 70 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:32:42 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-01 22:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 48 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 8, redundant 5
Fitness: max 0.833(54), min 0.167(3), ave 0.786
Test execution time: sum 3899 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:32:54 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-01 22:33:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 0 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 0.833(60), min 0.667(2), ave 0.828
Test execution time: sum 3708 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:33:06 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-01 22:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 6, redundant 6
Fitness: max 0.833(49), min 0.167(2), ave 0.799
Test execution time: sum 3564 ms, max 202 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:33:17 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-01 22:33:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 8, redundant 5
Fitness: max 0.833(52), min 0.167(2), ave 0.791
Test execution time: sum 3521 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:33:29 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-01 22:33:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 33 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 17, redundant 4
Fitness: max 0.833(47), min 0.167(1), ave 0.799
Test execution time: sum 3248 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:33:39 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-01 22:33:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 45 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 17, redundant 5
Fitness: max 0.833(43), min 0.167(1), ave 0.798
Test execution time: sum 3015 ms, max 138 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:33:51 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-01 22:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 56 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 15, redundant 3
Fitness: max 1(2), min 0.167(3), ave 0.79
Test execution time: sum 3098 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:34:01 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-01 22:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 7 seconds
Variants: generated 100, build-succeeded 58, build-failed 21, syntax-invalid 14, redundant 7
Fitness: max 0.833(52), min 0.167(2), ave 0.799
Test execution time: sum 3729 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:34:13 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-01 22:34:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 12, redundant 1
Fitness: max 1(2), min 0.167(3), ave 0.797
Test execution time: sum 3648 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:34:25 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-01 22:34:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 9, redundant 7
Fitness: max 0.833(50), min 0(1), ave 0.763
Test execution time: sum 3416 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:34:37 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-01 22:34:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 44 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 12, redundant 5
Fitness: max 0.833(51), min 0.167(2), ave 0.798
Test execution time: sum 3689 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:34:50 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-01 22:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.802
Test execution time: sum 3092 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:35:01 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-01 22:35:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 15, redundant 1
Fitness: max 0.833(47), min 0.167(2), ave 0.798
Test execution time: sum 3243 ms, max 89 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:35:12 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-01 22:35:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 13, redundant 1
Fitness: max 0.833(50), min 0(2), ave 0.734
Test execution time: sum 3770 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:35:25 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-01 22:35:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 16, redundant 6
Fitness: max 0.833(42), min 0.167(2), ave 0.777
Test execution time: sum 3006 ms, max 83 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:35:37 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-01 22:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 42 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 14, redundant 5
Fitness: max 0.833(47), min 0(1), ave 0.8
Test execution time: sum 3313 ms, max 82 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:35:48 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-01 22:36:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 56 seconds
Variants: generated 100, build-succeeded 52, build-failed 37, syntax-invalid 8, redundant 3
Fitness: max 0.833(47), min 0.167(2), ave 0.798
Test execution time: sum 3391 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:36:01 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-01 22:36:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0.833(55), min 0.167(5), ave 0.778
Test execution time: sum 3632 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:36:14 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-01 22:36:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 22 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0.833(55), min 0.167(2), ave 0.794
Test execution time: sum 3993 ms, max 139 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:36:28 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-01 22:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 34 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 9, redundant 6
Fitness: max 0.833(52), min 0.167(3), ave 0.782
Test execution time: sum 3621 ms, max 91 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:36:40 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-01 22:36:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 47 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 8, redundant 5
Fitness: max 0.833(54), min 0.167(1), ave 0.816
Test execution time: sum 3722 ms, max 84 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:36:52 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-01 22:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 1 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 7, redundant 1
Fitness: max 0.833(62), min 0.167(2), ave 0.806
Test execution time: sum 4230 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:37:07 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-01 22:37:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 14 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 10, redundant 1
Fitness: max 0.833(59), min 0.167(4), ave 0.789
Test execution time: sum 3867 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:37:19 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-01 22:37:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 27 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 13, redundant 0
Fitness: max 0.833(53), min 0.167(5), ave 0.77
Test execution time: sum 3905 ms, max 144 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:37:33 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-01 22:37:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 41 seconds
Variants: generated 100, build-succeeded 66, build-failed 25, syntax-invalid 6, redundant 3
Fitness: max 0.833(59), min 0.167(4), ave 0.785
Test execution time: sum 3998 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:37:47 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-01 22:38:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 55 seconds
Variants: generated 100, build-succeeded 68, build-failed 27, syntax-invalid 4, redundant 1
Fitness: max 0.833(59), min 0.167(7), ave 0.76
Test execution time: sum 4426 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:38:01 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-01 22:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 8 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 8, redundant 4
Fitness: max 0.833(50), min 0.167(6), ave 0.759
Test execution time: sum 3417 ms, max 81 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:38:14 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-01 22:38:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.833(53), min 0.167(4), ave 0.782
Test execution time: sum 3673 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:38:27 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-01 22:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 34 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 0.833(50), min 0.167(3), ave 0.789
Test execution time: sum 3583 ms, max 190 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:38:40 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-01 22:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 48 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 5, redundant 2
Fitness: max 1(2), min 0.167(5), ave 0.776
Test execution time: sum 4085 ms, max 104 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:38:54 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-01 22:39:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0.833(50), min 0.167(3), ave 0.782
Test execution time: sum 3725 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:39:08 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-01 22:39:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 15 seconds
Variants: generated 100, build-succeeded 64, build-failed 22, syntax-invalid 9, redundant 5
Fitness: max 0.833(51), min 0.167(7), ave 0.745
Test execution time: sum 3820 ms, max 80 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:39:21 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-01 22:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 18, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.793
Test execution time: sum 3495 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:39:34 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-01 22:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 42 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 12, redundant 4
Fitness: max 0.833(54), min 0.167(6), ave 0.765
Test execution time: sum 3833 ms, max 136 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:39:48 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-01 22:40:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 55 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 0.833(52), min 0.167(4), ave 0.777
Test execution time: sum 3597 ms, max 91 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:40:01 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-01 22:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 10 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 6, redundant 5
Fitness: max 0.833(55), min 0.167(2), ave 0.802
Test execution time: sum 3932 ms, max 136 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:40:16 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-01 22:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 23 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 8, redundant 0
Fitness: max 0.833(57), min 0.167(1), ave 0.814
Test execution time: sum 3673 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:40:29 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-01 22:40:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 38 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 6, redundant 2
Fitness: max 0.833(61), min 0.167(1), ave 0.818
Test execution time: sum 4242 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:40:44 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-01 22:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 52 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 6, redundant 2
Fitness: max 0.833(55), min 0.167(7), ave 0.757
Test execution time: sum 3908 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:40:58 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-01 22:41:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 6 seconds
Variants: generated 100, build-succeeded 67, build-failed 24, syntax-invalid 5, redundant 4
Fitness: max 0.833(58), min 0.167(7), ave 0.756
Test execution time: sum 4307 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:41:12 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-01 22:56:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 9, redundant 4
Fitness: max 0.833(47), min 0.167(4), ave 0.775
Test execution time: sum 903763 ms, max 900171 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:56:26 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-01 22:56:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 34 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 8, redundant 6
Fitness: max 0.833(58), min 0.167(5), ave 0.777
Test execution time: sum 3984 ms, max 84 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:56:40 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-01 22:56:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 49 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 3, redundant 2
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4044 ms, max 221 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:56:55 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-01 22:57:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 3 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 4, redundant 4
Fitness: max 0.833(59), min 0.167(4), ave 0.785
Test execution time: sum 3987 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:57:09 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-01 22:57:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 17 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 12, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.807
Test execution time: sum 3668 ms, max 121 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:57:23 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-01 22:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 9, redundant 5
Fitness: max 0.833(51), min 0(2), ave 0.737
Test execution time: sum 3646 ms, max 85 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:57:37 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-01 22:57:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 45 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0.833(55), min 0.167(4), ave 0.786
Test execution time: sum 3840 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:57:51 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-01 22:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 6, redundant 2
Fitness: max 0.833(51), min 0.167(5), ave 0.765
Test execution time: sum 3809 ms, max 121 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:58:05 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-01 22:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 13 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 8, redundant 1
Fitness: max 0.833(51), min 0.167(3), ave 0.785
Test execution time: sum 3599 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:58:19 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-01 22:58:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 28 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 9, redundant 1
Fitness: max 1(1), min 0.167(3), ave 0.799
Test execution time: sum 4222 ms, max 224 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:58:34 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-01 22:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.788
Test execution time: sum 3817 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:58:48 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-01 22:59:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0.833(51), min 0.167(4), ave 0.783
Test execution time: sum 3777 ms, max 150 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:59:03 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-01 22:59:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 11 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 11, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3261 ms, max 86 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 22:59:16 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-01 22:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 25 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 7, redundant 0
Fitness: max 1(2), min 0.167(2), ave 0.812
Test execution time: sum 3962 ms, max 80 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:59:31 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-01 22:59:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 39 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 10, redundant 6
Fitness: max 0.833(54), min 0.167(3), ave 0.79
Test execution time: sum 3713 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:59:45 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-01 23:00:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 54 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 4, redundant 2
Fitness: max 0.833(60), min 0.167(1), ave 0.812
Test execution time: sum 3883 ms, max 80 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:00:00 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-01 23:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 10 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 9, redundant 4
Fitness: max 0.833(54), min 0.167(2), ave 0.802
Test execution time: sum 904250 ms, max 900121 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:15:15 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-01 23:15:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 24 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 7, redundant 5
Fitness: max 0.833(52), min 0.167(2), ave 0.801
Test execution time: sum 3534 ms, max 96 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:15:30 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-01 23:15:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 40 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 4272 ms, max 132 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:15:46 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-01 23:16:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 55 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0.167(5), ave 0.77
Test execution time: sum 3823 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:16:01 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-01 23:16:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 9 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 9, redundant 3
Fitness: max 0.833(55), min 0.167(1), ave 0.813
Test execution time: sum 3650 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:16:15 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-01 23:16:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 26 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 3, redundant 5
Fitness: max 0.833(57), min 0.167(5), ave 0.771
Test execution time: sum 4136 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:16:32 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-01 23:16:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 41 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 6, redundant 1
Fitness: max 0.833(54), min 0.167(3), ave 0.79
Test execution time: sum 3814 ms, max 86 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:16:47 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-01 23:17:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 56 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 10, redundant 6
Fitness: max 0.833(51), min 0.167(5), ave 0.77
Test execution time: sum 3706 ms, max 142 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:17:02 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-01 23:17:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 11 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 10, redundant 4
Fitness: max 0.833(58), min 0.167(3), ave 0.792
Test execution time: sum 4000 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:17:17 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-01 23:17:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 27 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 10, redundant 3
Fitness: max 0.833(60), min 0.167(2), ave 0.81
Test execution time: sum 4199 ms, max 200 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:17:33 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-01 23:17:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 43 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 5, redundant 6
Fitness: max 0.833(57), min 0.167(8), ave 0.751
Test execution time: sum 4059 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:17:49 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-01 23:33:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 58 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0.833(50), min 0.167(3), ave 0.786
Test execution time: sum 903759 ms, max 900134 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:33:04 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-01 23:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 13 seconds
Variants: generated 100, build-succeeded 62, build-failed 21, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(6), ave 0.755
Test execution time: sum 3896 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:33:19 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-01 23:33:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 29 seconds
Variants: generated 100, build-succeeded 69, build-failed 19, syntax-invalid 7, redundant 5
Fitness: max 0.833(61), min 0.167(4), ave 0.785
Test execution time: sum 4235 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:33:34 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-01 23:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.833(51), min 0.667(2), ave 0.827
Test execution time: sum 3452 ms, max 137 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:33:50 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-01 23:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 59 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 7, redundant 2
Fitness: max 0.833(55), min 0.167(5), ave 0.772
Test execution time: sum 3772 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:34:04 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-01 23:34:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 15 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 7, redundant 2
Fitness: max 0.833(55), min 0.167(5), ave 0.772
Test execution time: sum 4159 ms, max 202 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:34:21 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-01 23:34:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 30 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 9, redundant 6
Fitness: max 0.833(54), min 0.167(6), ave 0.765
Test execution time: sum 3781 ms, max 80 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:34:36 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-01 23:34:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 15, redundant 2
Fitness: max 1(1), min 0.167(4), ave 0.774
Test execution time: sum 3575 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:34:51 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-01 23:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 2 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.833(51), min 0.167(5), ave 0.767
Test execution time: sum 3838 ms, max 138 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:35:08 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-01 23:35:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 17 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.833(47), min 0.167(4), ave 0.777
Test execution time: sum 3258 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:35:23 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-01 23:35:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 8, redundant 4
Fitness: max 0.833(52), min 0.167(3), ave 0.79
Test execution time: sum 3843 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:35:40 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-01 23:35:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0.833(51), min 0.167(3), ave 0.787
Test execution time: sum 3544 ms, max 78 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:35:55 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-01 23:36:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 7 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 5, redundant 6
Fitness: max 0.833(51), min 0.167(6), ave 0.754
Test execution time: sum 4267 ms, max 123 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:36:13 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-01 23:36:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 0.833(49), min 0.167(5), ave 0.766
Test execution time: sum 3507 ms, max 83 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:36:28 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-01 23:36:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 0.833(55), min 0.167(1), ave 0.811
Test execution time: sum 3824 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:36:44 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-01 23:37:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 55 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 5, redundant 3
Fitness: max 1(1), min 0.167(4), ave 0.791
Test execution time: sum 4127 ms, max 141 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:37:01 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-01 23:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 11 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 1(2), min 0.167(5), ave 0.774
Test execution time: sum 3703 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:37:17 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-01 23:37:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 28 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 0.833(50), min 0.167(2), ave 0.808
Test execution time: sum 3536 ms, max 140 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:37:34 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-01 23:37:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 44 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 11, redundant 6
Fitness: max 0.833(55), min 0.167(2), ave 0.805
Test execution time: sum 3696 ms, max 82 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:37:50 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-01 23:38:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 2 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 6, redundant 9
Fitness: max 0.833(56), min 0.167(4), ave 0.785
Test execution time: sum 4217 ms, max 207 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:38:08 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-01 23:38:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 18 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 7, redundant 10
Fitness: max 0.833(51), min 0.167(3), ave 0.789
Test execution time: sum 3524 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:38:24 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-01 23:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 34 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 0.833(53), min 0.167(4), ave 0.787
Test execution time: sum 3525 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:38:40 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-01 23:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 52 seconds
Variants: generated 100, build-succeeded 73, build-failed 18, syntax-invalid 2, redundant 7
Fitness: max 0.833(58), min 0.167(11), ave 0.719
Test execution time: sum 4637 ms, max 129 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:38:57 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-01 23:39:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 8 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 6, redundant 2
Fitness: max 0.833(57), min 0.167(8), ave 0.749
Test execution time: sum 4146 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:39:14 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-01 23:39:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 26 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 0.833(56), min 0.167(4), ave 0.785
Test execution time: sum 4019 ms, max 197 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:39:31 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-01 23:39:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 42 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 5, redundant 3
Fitness: max 0.833(57), min 0.167(3), ave 0.792
Test execution time: sum 3973 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:39:48 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-01 23:40:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 0 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 1, redundant 5
Fitness: max 0.833(60), min 0.167(2), ave 0.81
Test execution time: sum 4086 ms, max 161 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:40:06 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-01 23:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 16 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 7, redundant 6
Fitness: max 0.833(56), min 0.167(2), ave 0.801
Test execution time: sum 3785 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:40:22 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-01 23:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 34 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 6, redundant 6
Fitness: max 0.833(55), min 0.167(5), ave 0.774
Test execution time: sum 4144 ms, max 180 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:40:40 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-01 23:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 50 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 3724 ms, max 72 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:40:56 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-01 23:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 7 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 7, redundant 4
Fitness: max 0.833(51), min 0.167(1), ave 0.812
Test execution time: sum 3589 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:41:13 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-01 23:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 25 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 4, redundant 4
Fitness: max 0.833(59), min 0.167(5), ave 0.775
Test execution time: sum 4113 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:41:31 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-01 23:41:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 44 seconds
Variants: generated 100, build-succeeded 66, build-failed 28, syntax-invalid 4, redundant 2
Fitness: max 0.833(62), min 0.167(2), ave 0.808
Test execution time: sum 4475 ms, max 138 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:41:50 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-01 23:42:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 14, redundant 3
Fitness: max 0.833(40), min 0.167(5), ave 0.748
Test execution time: sum 3110 ms, max 90 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:42:06 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-01 23:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 18 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 6, redundant 3
Fitness: max 0.833(60), min 0.167(2), ave 0.807
Test execution time: sum 4057 ms, max 76 ms, min 59 ms
----------------------------------------------------------------

2023-08-01 23:42:24 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-01 23:42:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 10, redundant 3
Fitness: max 0.833(54), min 0.167(5), ave 0.769
Test execution time: sum 3981 ms, max 133 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:42:41 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-01 23:42:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.833(48), min 0.167(6), ave 0.751
Test execution time: sum 3599 ms, max 74 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:42:58 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-01 23:43:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 3585 ms, max 130 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:43:15 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-01 23:43:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 27 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 9, redundant 3
Fitness: max 0.833(57), min 0.167(6), ave 0.768
Test execution time: sum 3902 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:43:33 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-01 23:43:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 11, redundant 4
Fitness: max 0.833(48), min 0.167(6), ave 0.753
Test execution time: sum 3800 ms, max 135 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:43:51 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-01 23:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 2 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 8, redundant 5
Fitness: max 0.833(50), min 0.167(6), ave 0.757
Test execution time: sum 3653 ms, max 80 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:44:08 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-01 23:44:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 12, redundant 4
Fitness: max 0.833(48), min 0.167(6), ave 0.743
Test execution time: sum 3809 ms, max 75 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:44:26 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-01 23:44:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 12, redundant 1
Fitness: max 0.833(51), min 0.167(2), ave 0.801
Test execution time: sum 3437 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 23:44:44 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-01 23:45:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 55 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 7, redundant 4
Fitness: max 0.833(50), min 0.167(9), ave 0.73
Test execution time: sum 3793 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:45:01 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-01 23:45:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 14 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.833(55), min 0.167(4), ave 0.786
Test execution time: sum 3853 ms, max 125 ms, min 59 ms
----------------------------------------------------------------

2023-08-01 23:45:20 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-01 23:45:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 33 seconds
Variants: generated 100, build-succeeded 68, build-failed 30, syntax-invalid 2, redundant 0
Fitness: max 0.833(58), min 0.167(6), ave 0.765
Test execution time: sum 4294 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:45:39 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-01 23:45:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 53 seconds
Variants: generated 100, build-succeeded 71, build-failed 24, syntax-invalid 2, redundant 3
Fitness: max 0.833(62), min 0.167(7), ave 0.763
Test execution time: sum 4559 ms, max 133 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:45:58 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-01 23:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 11, redundant 3
Fitness: max 0.833(45), min 0.167(2), ave 0.788
Test execution time: sum 3226 ms, max 78 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:46:16 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-01 23:46:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 28 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 14, redundant 2
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3554 ms, max 135 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:46:34 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-01 23:46:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 47 seconds
Variants: generated 100, build-succeeded 70, build-failed 25, syntax-invalid 5, redundant 0
Fitness: max 0.833(61), min 0.167(5), ave 0.774
Test execution time: sum 4360 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:46:53 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-01 23:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 6 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.808
Test execution time: sum 3928 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:47:12 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-01 23:47:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 24 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 8, redundant 2
Fitness: max 0.833(54), min 0.167(7), ave 0.755
Test execution time: sum 3769 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:47:30 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-01 23:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 44 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 4, redundant 1
Fitness: max 0.833(61), min 0.167(2), ave 0.808
Test execution time: sum 4267 ms, max 137 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:47:50 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-01 23:48:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 2, redundant 4
Fitness: max 0.833(55), min 0.167(3), ave 0.792
Test execution time: sum 3781 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:48:09 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-01 23:48:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 7, redundant 5
Fitness: max 0.833(60), min 0.167(2), ave 0.81
Test execution time: sum 4177 ms, max 126 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:48:29 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-01 23:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 seconds
Variants: generated 100, build-succeeded 59, build-failed 35, syntax-invalid 5, redundant 1
Fitness: max 0.833(53), min 0.167(5), ave 0.774
Test execution time: sum 3639 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:48:48 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-01 23:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 2 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 5, redundant 5
Fitness: max 0.833(52), min 0.167(10), ave 0.721
Test execution time: sum 4291 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:49:08 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-01 23:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 21 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 5, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.774
Test execution time: sum 3780 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:49:27 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-01 23:49:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 42 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 2, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.815
Test execution time: sum 4318 ms, max 128 ms, min 59 ms
----------------------------------------------------------------

2023-08-01 23:49:47 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-01 23:50:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 5, redundant 3
Fitness: max 0.833(54), min 0.167(4), ave 0.785
Test execution time: sum 3643 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:50:06 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-01 23:50:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 21 seconds
Variants: generated 100, build-succeeded 67, build-failed 28, syntax-invalid 5, redundant 0
Fitness: max 1(1), min 0.167(2), ave 0.806
Test execution time: sum 4545 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:50:27 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-01 23:50:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 9, redundant 3
Fitness: max 0.833(52), min 0.167(3), ave 0.797
Test execution time: sum 3434 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:50:46 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-01 23:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 0 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0.167(4), ave 0.786
Test execution time: sum 4213 ms, max 127 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:51:06 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-01 23:51:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 19 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 6, redundant 2
Fitness: max 0.833(48), min 0.167(5), ave 0.759
Test execution time: sum 3679 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:51:25 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-01 23:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 37 seconds
Variants: generated 100, build-succeeded 51, build-failed 39, syntax-invalid 4, redundant 6
Fitness: max 0.833(44), min 0.167(4), ave 0.771
Test execution time: sum 3353 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:51:43 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-01 23:52:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 58 seconds
Variants: generated 100, build-succeeded 71, build-failed 20, syntax-invalid 6, redundant 3
Fitness: max 0.833(56), min 0.167(9), ave 0.732
Test execution time: sum 4497 ms, max 139 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:52:04 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-01 23:52:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 2, redundant 8
Fitness: max 0.833(50), min 0.167(1), ave 0.804
Test execution time: sum 3615 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:52:23 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-01 23:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 38 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 3, redundant 4
Fitness: max 0.833(57), min 0.167(5), ave 0.776
Test execution time: sum 4182 ms, max 127 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:52:44 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-01 23:53:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 57 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 7, redundant 5
Fitness: max 0.833(56), min 0.167(2), ave 0.801
Test execution time: sum 3920 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-01 23:53:03 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-01 23:53:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 7, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.77
Test execution time: sum 3967 ms, max 139 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 23:53:24 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-01 23:53:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 37 seconds
Variants: generated 100, build-succeeded 67, build-failed 23, syntax-invalid 6, redundant 4
Fitness: max 0.833(59), min 0.167(7), ave 0.761
Test execution time: sum 4183 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-01 23:53:43 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-01 23:54:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 8, redundant 1
Fitness: max 1(1), min 0.167(6), ave 0.765
Test execution time: sum 3766 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:54:03 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-01 23:54:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 8, redundant 4
Fitness: max 0.833(50), min 0.167(2), ave 0.8
Test execution time: sum 3483 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:54:22 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-01 23:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 6 minutes 37 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.167(7), ave 0.762
Test execution time: sum 4532 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-01 23:54:43 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-02 00:10:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 57 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 11, redundant 3
Fitness: max 0.833(52), min 0.167(5), ave 0.773
Test execution time: sum 903745 ms, max 900113 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:10:03 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-02 00:10:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 18 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 5, redundant 4
Fitness: max 0.833(53), min 0.167(5), ave 0.772
Test execution time: sum 4097 ms, max 140 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:10:24 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-02 00:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 38 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 5, redundant 2
Fitness: max 0.833(57), min 0.167(3), ave 0.794
Test execution time: sum 4000 ms, max 82 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:10:44 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-02 00:11:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 59 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 4, redundant 3
Fitness: max 0.833(59), min 0.167(2), ave 0.799
Test execution time: sum 4391 ms, max 196 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:11:05 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-02 00:11:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 20 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 2, redundant 2
Fitness: max 0.833(57), min 0.167(5), ave 0.769
Test execution time: sum 4121 ms, max 92 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:11:26 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-02 00:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 41 seconds
Variants: generated 100, build-succeeded 69, build-failed 27, syntax-invalid 2, redundant 2
Fitness: max 0.833(61), min 0.167(5), ave 0.778
Test execution time: sum 4629 ms, max 136 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:11:47 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-02 00:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 2 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 3, redundant 4
Fitness: max 0.833(57), min 0.167(3), ave 0.786
Test execution time: sum 4093 ms, max 92 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:12:08 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-02 00:12:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 23 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 5, redundant 1
Fitness: max 0.833(56), min 0.167(4), ave 0.785
Test execution time: sum 4082 ms, max 134 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:12:29 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-02 00:12:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 44 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 5, redundant 2
Fitness: max 0.833(54), min 0.167(9), ave 0.736
Test execution time: sum 4210 ms, max 78 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:12:50 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-02 00:13:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 5 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 5, redundant 2
Fitness: max 1(1), min 0.167(2), ave 0.812
Test execution time: sum 4165 ms, max 145 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:13:11 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-02 00:13:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 25 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 7, redundant 3
Fitness: max 0.833(60), min 0.167(2), ave 0.81
Test execution time: sum 4004 ms, max 77 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:13:31 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-02 00:13:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 47 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 4, redundant 4
Fitness: max 0.833(57), min 0.167(7), ave 0.758
Test execution time: sum 4288 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:13:53 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-02 00:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 8 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 4, redundant 4
Fitness: max 0.833(58), min 0.167(2), ave 0.792
Test execution time: sum 4084 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:14:14 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-02 00:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 30 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 6, redundant 4
Fitness: max 0.833(61), min 0.167(5), ave 0.775
Test execution time: sum 4527 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:14:36 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-02 00:14:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 50 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 6, redundant 5
Fitness: max 0.833(55), min 0.167(8), ave 0.744
Test execution time: sum 4095 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:14:56 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-02 00:15:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 12 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 5, redundant 2
Fitness: max 0.833(58), min 0.167(3), ave 0.784
Test execution time: sum 4387 ms, max 131 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:15:18 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-02 00:15:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 33 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 5, redundant 2
Fitness: max 0.833(56), min 0.167(2), ave 0.803
Test execution time: sum 3841 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:15:39 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 00:16:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 55 seconds
Variants: generated 100, build-succeeded 67, build-failed 22, syntax-invalid 5, redundant 6
Fitness: max 0.833(55), min 0.167(8), ave 0.744
Test execution time: sum 4402 ms, max 144 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:16:01 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 00:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 16 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 6, redundant 3
Fitness: max 0.833(55), min 0.167(6), ave 0.765
Test execution time: sum 4007 ms, max 82 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:16:22 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 00:16:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 39 seconds
Variants: generated 100, build-succeeded 69, build-failed 26, syntax-invalid 4, redundant 1
Fitness: max 0.833(58), min 0.167(10), ave 0.734
Test execution time: sum 4633 ms, max 143 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:16:45 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 00:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 0 seconds
Variants: generated 100, build-succeeded 65, build-failed 29, syntax-invalid 1, redundant 5
Fitness: max 0.833(51), min 0.167(8), ave 0.736
Test execution time: sum 4092 ms, max 82 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 00:17:06 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 00:17:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 23 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 2, redundant 2
Fitness: max 0.833(58), min 0.167(6), ave 0.768
Test execution time: sum 4322 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:17:29 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 00:17:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 45 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 2, redundant 2
Fitness: max 0.833(57), min 0.167(6), ave 0.763
Test execution time: sum 4192 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:17:51 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 00:18:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 8 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 2, redundant 4
Fitness: max 1(1), min 0.167(6), ave 0.761
Test execution time: sum 4138 ms, max 116 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:18:14 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 00:18:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 29 seconds
Variants: generated 100, build-succeeded 67, build-failed 21, syntax-invalid 8, redundant 4
Fitness: max 0.833(57), min 0.167(8), ave 0.749
Test execution time: sum 4249 ms, max 80 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:18:35 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 00:18:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 52 seconds
Variants: generated 100, build-succeeded 68, build-failed 20, syntax-invalid 5, redundant 7
Fitness: max 1(1), min 0.167(6), ave 0.765
Test execution time: sum 4523 ms, max 145 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:18:58 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 00:19:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 14 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 1(1), min 0.167(5), ave 0.78
Test execution time: sum 4023 ms, max 81 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:19:20 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 00:19:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 37 seconds
Variants: generated 100, build-succeeded 70, build-failed 23, syntax-invalid 3, redundant 4
Fitness: max 0.833(57), min 0.167(8), ave 0.743
Test execution time: sum 4670 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:19:43 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 00:20:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 59 seconds
Variants: generated 100, build-succeeded 66, build-failed 28, syntax-invalid 5, redundant 1
Fitness: max 0.833(58), min 0.167(5), ave 0.775
Test execution time: sum 4156 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:20:04 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 00:20:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 21 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 8, redundant 2
Fitness: max 1(1), min 0.167(3), ave 0.8
Test execution time: sum 4274 ms, max 140 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:20:27 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 00:20:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 43 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 5, redundant 1
Fitness: max 0.833(58), min 0.167(4), ave 0.786
Test execution time: sum 4019 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 00:20:49 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 00:21:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 7 seconds
Variants: generated 100, build-succeeded 70, build-failed 21, syntax-invalid 3, redundant 6
Fitness: max 0.833(62), min 0.167(6), ave 0.771
Test execution time: sum 4751 ms, max 244 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:21:13 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 00:21:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 5, redundant 4
Fitness: max 0.833(57), min 0.167(1), ave 0.819
Test execution time: sum 3800 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:21:34 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 00:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 52 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 5, redundant 2
Fitness: max 0.833(58), min 0.167(6), ave 0.768
Test execution time: sum 4324 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:21:57 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 00:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 12 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 11, redundant 3
Fitness: max 0.833(53), min 0.167(3), ave 0.795
Test execution time: sum 3617 ms, max 80 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:22:18 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 00:22:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 4, redundant 3
Fitness: max 0.833(54), min 0.167(5), ave 0.766
Test execution time: sum 4230 ms, max 124 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:22:41 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 00:23:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 3, redundant 2
Fitness: max 0.833(57), min 0.167(3), ave 0.795
Test execution time: sum 3984 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:23:03 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 00:23:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 21 seconds
Variants: generated 100, build-succeeded 62, build-failed 34, syntax-invalid 4, redundant 0
Fitness: max 0.833(57), min 0.167(5), ave 0.78
Test execution time: sum 4153 ms, max 161 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:23:26 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 00:23:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 43 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 2, redundant 5
Fitness: max 0.833(53), min 0.167(4), ave 0.775
Test execution time: sum 4153 ms, max 100 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:23:49 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 00:24:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 5 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.833(45), min 0.167(9), ave 0.72
Test execution time: sum 3648 ms, max 138 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:24:11 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 00:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 0.833(51), min 0.167(5), ave 0.772
Test execution time: sum 3695 ms, max 82 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:24:33 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 00:24:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 50 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 4, redundant 5
Fitness: max 0.833(51), min 0.167(3), ave 0.781
Test execution time: sum 4213 ms, max 137 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 00:24:56 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 00:25:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 13 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 4, redundant 3
Fitness: max 0.833(57), min 0.167(7), ave 0.755
Test execution time: sum 4339 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:25:18 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 00:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 36 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 4, redundant 5
Fitness: max 1(1), min 0.167(5), ave 0.784
Test execution time: sum 4284 ms, max 137 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:25:42 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 00:26:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 59 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 3, redundant 5
Fitness: max 0.833(59), min 0.167(3), ave 0.801
Test execution time: sum 4075 ms, max 78 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:26:05 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 00:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 23 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 0.833(51), min 0.167(3), ave 0.787
Test execution time: sum 3930 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:26:29 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 00:26:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 3935 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:26:50 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 00:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.833(48), min 0.167(6), ave 0.754
Test execution time: sum 3867 ms, max 133 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:27:13 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 00:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 29 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 4, redundant 2
Fitness: max 0.833(49), min 0.167(7), ave 0.743
Test execution time: sum 3936 ms, max 77 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 00:27:35 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 00:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 9, redundant 1
Fitness: max 0.833(52), min 0.167(3), ave 0.788
Test execution time: sum 4046 ms, max 225 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:27:58 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 00:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 14 seconds
Variants: generated 100, build-succeeded 66, build-failed 23, syntax-invalid 7, redundant 4
Fitness: max 0.833(54), min 0.167(9), ave 0.732
Test execution time: sum 4259 ms, max 73 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:28:20 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 00:28:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 38 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 0.833(53), min 0.167(8), ave 0.743
Test execution time: sum 4176 ms, max 118 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:28:44 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 00:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 1 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 2, redundant 4
Fitness: max 0.833(53), min 0.167(4), ave 0.773
Test execution time: sum 4060 ms, max 82 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:29:06 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 00:29:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 25 seconds
Variants: generated 100, build-succeeded 70, build-failed 23, syntax-invalid 6, redundant 1
Fitness: max 0.833(57), min 0.167(6), ave 0.76
Test execution time: sum 4712 ms, max 127 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:29:31 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 00:29:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 49 seconds
Variants: generated 100, build-succeeded 65, build-failed 29, syntax-invalid 1, redundant 5
Fitness: max 1(3), min 0.167(5), ave 0.769
Test execution time: sum 4203 ms, max 76 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:29:55 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 00:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 8, redundant 7
Fitness: max 0.833(51), min 0.167(4), ave 0.775
Test execution time: sum 4135 ms, max 211 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 00:30:18 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 00:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 6, redundant 4
Fitness: max 0.833(58), min 0.167(4), ave 0.786
Test execution time: sum 4195 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:30:41 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 00:31:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 59 seconds
Variants: generated 100, build-succeeded 69, build-failed 23, syntax-invalid 5, redundant 3
Fitness: max 1(2), min 0.167(4), ave 0.79
Test execution time: sum 4690 ms, max 135 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:31:05 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 00:31:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 12, redundant 2
Fitness: max 0.833(49), min 0.167(3), ave 0.784
Test execution time: sum 3781 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:31:27 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 00:31:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 45 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 5, redundant 9
Fitness: max 0.833(56), min 0.167(2), ave 0.806
Test execution time: sum 4128 ms, max 132 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:31:51 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 00:32:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0.833(50), min 0.167(7), ave 0.746
Test execution time: sum 4000 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:32:14 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 00:32:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 6, redundant 1
Fitness: max 0.833(59), min 0.167(4), ave 0.791
Test execution time: sum 4390 ms, max 209 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:32:38 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 00:33:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 54 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 0.833(51), min 0.167(2), ave 0.803
Test execution time: sum 3655 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:33:00 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 00:33:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0.833(54), min 0.167(1), ave 0.81
Test execution time: sum 3997 ms, max 136 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:33:24 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 00:33:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 42 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 4, redundant 1
Fitness: max 1(1), min 0.167(4), ave 0.792
Test execution time: sum 4402 ms, max 82 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:33:48 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 00:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 7 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 3, redundant 6
Fitness: max 0.833(55), min 0.167(1), ave 0.816
Test execution time: sum 3993 ms, max 184 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:34:13 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 00:34:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 31 seconds
Variants: generated 100, build-succeeded 65, build-failed 33, syntax-invalid 0, redundant 2
Fitness: max 0.833(56), min 0.167(7), ave 0.754
Test execution time: sum 4348 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:34:37 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 00:35:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 56 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 7, redundant 3
Fitness: max 0.833(54), min 0.167(5), ave 0.77
Test execution time: sum 4277 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:35:02 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 00:35:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 20 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 2, redundant 2
Fitness: max 0.833(54), min 0.167(2), ave 0.787
Test execution time: sum 4363 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:35:26 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 00:35:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 45 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 6, redundant 1
Fitness: max 0.833(51), min 0.167(4), ave 0.769
Test execution time: sum 4170 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:35:50 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 00:36:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 10 seconds
Variants: generated 100, build-succeeded 70, build-failed 26, syntax-invalid 1, redundant 3
Fitness: max 0.833(65), min 0.167(4), ave 0.793
Test execution time: sum 4735 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:36:15 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 00:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 11, redundant 4
Fitness: max 0.833(51), min 0.167(4), ave 0.77
Test execution time: sum 3947 ms, max 139 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:36:40 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 00:37:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 58 seconds
Variants: generated 100, build-succeeded 68, build-failed 23, syntax-invalid 6, redundant 3
Fitness: max 0.833(60), min 0.167(7), ave 0.76
Test execution time: sum 4499 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:37:04 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 00:52:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0.833(50), min 0.167(7), ave 0.749
Test execution time: sum 904181 ms, max 900118 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:52:30 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 00:52:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 49 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 8, redundant 1
Fitness: max 0.833(58), min 0.167(3), ave 0.796
Test execution time: sum 4225 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:52:55 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 00:53:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 14 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.167(4), ave 0.788
Test execution time: sum 4148 ms, max 125 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:53:20 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 00:53:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0.167(6), ave 0.761
Test execution time: sum 3810 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:53:44 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 00:54:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 11, redundant 4
Fitness: max 0.833(51), min 0.167(8), ave 0.74
Test execution time: sum 4272 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:54:08 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 00:54:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 27 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 7, redundant 1
Fitness: max 0.833(52), min 0.167(9), ave 0.732
Test execution time: sum 4257 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:54:33 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-02 00:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 52 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 7, redundant 4
Fitness: max 0.833(57), min 0.167(5), ave 0.776
Test execution time: sum 4474 ms, max 191 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:54:58 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-02 00:55:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 18 seconds
Variants: generated 100, build-succeeded 71, build-failed 19, syntax-invalid 5, redundant 5
Fitness: max 0.833(65), min 0.167(5), ave 0.784
Test execution time: sum 4706 ms, max 81 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 00:55:24 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-02 00:55:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 43 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 7, redundant 0
Fitness: max 0.833(53), min 0.167(4), ave 0.781
Test execution time: sum 4197 ms, max 153 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 00:55:49 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-02 00:56:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 9 seconds
Variants: generated 100, build-succeeded 66, build-failed 23, syntax-invalid 8, redundant 3
Fitness: max 0.833(53), min 0.167(7), ave 0.747
Test execution time: sum 4565 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:56:15 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-02 00:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 35 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 3, redundant 3
Fitness: max 0.833(62), min 0.167(1), ave 0.823
Test execution time: sum 4325 ms, max 204 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:56:41 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-02 00:57:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 1 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 3, redundant 4
Fitness: max 0.833(60), min 0.167(5), ave 0.78
Test execution time: sum 4444 ms, max 109 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:57:07 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-02 00:57:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 27 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 6, redundant 4
Fitness: max 1(1), min 0.167(6), ave 0.763
Test execution time: sum 4576 ms, max 147 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:57:33 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-02 00:57:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 53 seconds
Variants: generated 100, build-succeeded 64, build-failed 31, syntax-invalid 3, redundant 2
Fitness: max 0.833(57), min 0.167(6), ave 0.768
Test execution time: sum 4329 ms, max 78 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:57:59 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-02 00:58:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 19 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 4, redundant 3
Fitness: max 0.833(57), min 0.167(4), ave 0.788
Test execution time: sum 4191 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 00:58:24 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-02 00:58:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 44 seconds
Variants: generated 100, build-succeeded 63, build-failed 33, syntax-invalid 3, redundant 1
Fitness: max 0.833(60), min 0.167(3), ave 0.802
Test execution time: sum 4286 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 00:58:50 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-02 00:59:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 10 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 2, redundant 4
Fitness: max 0.833(61), min 0.167(1), ave 0.82
Test execution time: sum 4367 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 00:59:16 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-02 00:59:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 37 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 3, redundant 4
Fitness: max 0.833(59), min 0.167(4), ave 0.787
Test execution time: sum 4586 ms, max 83 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 00:59:43 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-02 01:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 4 seconds
Variants: generated 100, build-succeeded 71, build-failed 22, syntax-invalid 5, redundant 2
Fitness: max 0.833(59), min 0.167(7), ave 0.754
Test execution time: sum 4926 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:00:10 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-02 01:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 30 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 4, redundant 6
Fitness: max 0.833(56), min 0.167(4), ave 0.783
Test execution time: sum 4366 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:00:36 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-02 01:01:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 56 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 5, redundant 3
Fitness: max 0.833(58), min 0.167(5), ave 0.78
Test execution time: sum 4272 ms, max 133 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:01:02 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-02 01:01:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 21 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 8, redundant 1
Fitness: max 0.833(54), min 0.167(3), ave 0.79
Test execution time: sum 4061 ms, max 77 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:01:27 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-02 01:01:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 48 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 0.833(55), min 0.167(5), ave 0.776
Test execution time: sum 4298 ms, max 215 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:01:54 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-02 01:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 14 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 6, redundant 4
Fitness: max 0.833(54), min 0.167(10), ave 0.725
Test execution time: sum 4607 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:02:20 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-02 01:02:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 41 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 5, redundant 1
Fitness: max 0.833(54), min 0.167(6), ave 0.76
Test execution time: sum 4465 ms, max 141 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:02:47 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-02 01:03:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 8 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 2, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.803
Test execution time: sum 4646 ms, max 97 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:03:14 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-02 01:03:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 36 seconds
Variants: generated 100, build-succeeded 66, build-failed 23, syntax-invalid 7, redundant 4
Fitness: max 0.833(60), min 0.167(4), ave 0.785
Test execution time: sum 4595 ms, max 142 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:03:42 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-02 01:04:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(6), ave 0.762
Test execution time: sum 3779 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:04:07 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-02 01:04:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 27 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 10, redundant 2
Fitness: max 0.833(54), min 0.167(4), ave 0.781
Test execution time: sum 4256 ms, max 143 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 01:04:33 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-02 01:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 10, redundant 1
Fitness: max 0.833(56), min 0.167(3), ave 0.793
Test execution time: sum 4320 ms, max 98 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:05:00 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-02 01:05:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 6, redundant 1
Fitness: max 0.833(55), min 0.167(3), ave 0.797
Test execution time: sum 4148 ms, max 177 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 01:05:27 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-02 01:05:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 47 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 8, redundant 3
Fitness: max 0.833(55), min 0.167(7), ave 0.758
Test execution time: sum 4175 ms, max 78 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:05:53 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-02 01:06:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 13 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 14, redundant 4
Fitness: max 0.833(49), min 0.167(9), ave 0.727
Test execution time: sum 4279 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:06:19 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-02 01:06:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 0.833(46), min 0.167(7), ave 0.742
Test execution time: sum 3860 ms, max 83 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:06:45 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-02 01:07:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 13, redundant 4
Fitness: max 0.833(51), min 0.167(7), ave 0.753
Test execution time: sum 4038 ms, max 140 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:07:12 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-02 01:07:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.167(8), ave 0.746
Test execution time: sum 4194 ms, max 97 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:07:38 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-02 01:08:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 19, redundant 2
Fitness: max 0.833(45), min 0.167(4), ave 0.775
Test execution time: sum 3655 ms, max 144 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:08:04 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-02 01:08:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 13, redundant 4
Fitness: max 0.833(48), min 0.167(5), ave 0.767
Test execution time: sum 3735 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:08:29 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-02 01:08:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 12, redundant 1
Fitness: max 0.833(53), min 0.167(3), ave 0.793
Test execution time: sum 4136 ms, max 139 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:08:56 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-02 01:09:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 0.833(47), min 0.167(7), ave 0.745
Test execution time: sum 3755 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:09:21 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-02 01:09:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 42 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0.833(51), min 0.167(3), ave 0.792
Test execution time: sum 3953 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:09:48 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-02 01:10:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 7 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 16, redundant 4
Fitness: max 0.833(45), min 0.167(5), ave 0.761
Test execution time: sum 3452 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:10:13 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-02 01:10:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 8, redundant 2
Fitness: max 0.833(59), min 0.167(4), ave 0.789
Test execution time: sum 4469 ms, max 141 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:10:41 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-02 01:11:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 1 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 8, redundant 6
Fitness: max 0.833(53), min 0.167(6), ave 0.754
Test execution time: sum 4209 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:11:07 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-02 01:11:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 28 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 0.833(47), min 0.167(7), ave 0.745
Test execution time: sum 3843 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:11:34 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-02 01:12:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 9, redundant 0
Fitness: max 0.833(51), min 0.167(3), ave 0.783
Test execution time: sum 4025 ms, max 76 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:12:00 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-02 01:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 21 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 11, redundant 5
Fitness: max 0.833(51), min 0.167(7), ave 0.753
Test execution time: sum 4021 ms, max 147 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:12:27 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-02 01:12:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 48 seconds
Variants: generated 100, build-succeeded 62, build-failed 21, syntax-invalid 11, redundant 6
Fitness: max 0.833(51), min 0.167(7), ave 0.737
Test execution time: sum 4211 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:12:54 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-02 01:13:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 17 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 7, redundant 2
Fitness: max 0.833(55), min 0.167(8), ave 0.746
Test execution time: sum 4649 ms, max 148 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:13:22 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-02 01:13:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 44 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 6, redundant 4
Fitness: max 0.833(56), min 0.167(6), ave 0.765
Test execution time: sum 4317 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:13:50 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-02 01:14:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 12 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 7, redundant 6
Fitness: max 0.833(55), min 0.167(6), ave 0.763
Test execution time: sum 4386 ms, max 139 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:14:18 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-02 01:14:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 39 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 7, redundant 1
Fitness: max 0.833(58), min 0.167(6), ave 0.766
Test execution time: sum 4433 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 01:14:45 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-02 01:15:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 7 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0.833(49), min 0.167(9), ave 0.729
Test execution time: sum 4128 ms, max 124 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:15:13 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-02 01:15:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 32, syntax-invalid 3, redundant 1
Fitness: max 0.833(59), min 0.167(3), ave 0.797
Test execution time: sum 4474 ms, max 83 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:15:41 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-02 01:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 4 seconds
Variants: generated 100, build-succeeded 67, build-failed 30, syntax-invalid 3, redundant 0
Fitness: max 0.833(61), min 0.167(5), ave 0.781
Test execution time: sum 4664 ms, max 143 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:16:10 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-02 01:16:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 32 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 7, redundant 1
Fitness: max 0.833(60), min 0.167(5), ave 0.779
Test execution time: sum 4643 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:16:38 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-02 01:17:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 1 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 8, redundant 3
Fitness: max 0.833(56), min 0.167(7), ave 0.756
Test execution time: sum 4564 ms, max 141 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:17:07 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-02 01:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 29 seconds
Variants: generated 100, build-succeeded 67, build-failed 28, syntax-invalid 3, redundant 2
Fitness: max 1(1), min 0.167(5), ave 0.769
Test execution time: sum 4676 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:17:35 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-02 01:18:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 58 seconds
Variants: generated 100, build-succeeded 68, build-failed 26, syntax-invalid 4, redundant 2
Fitness: max 0.833(60), min 0.167(7), ave 0.76
Test execution time: sum 4648 ms, max 131 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:18:04 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-02 01:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 26 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 5, redundant 4
Fitness: max 0.833(56), min 0.167(6), ave 0.766
Test execution time: sum 4460 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:18:32 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-02 01:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 55 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 5, redundant 3
Fitness: max 0.833(58), min 0.167(2), ave 0.802
Test execution time: sum 4430 ms, max 145 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:19:01 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-02 01:19:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 25 seconds
Variants: generated 100, build-succeeded 68, build-failed 29, syntax-invalid 1, redundant 2
Fitness: max 0.833(62), min 0.167(1), ave 0.809
Test execution time: sum 4886 ms, max 83 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:19:31 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-02 01:20:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 54 seconds
Variants: generated 100, build-succeeded 65, build-failed 31, syntax-invalid 2, redundant 2
Fitness: max 0.833(55), min 0.167(6), ave 0.762
Test execution time: sum 4578 ms, max 142 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:20:00 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-02 01:20:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 22 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 4, redundant 4
Fitness: max 0.833(53), min 0.167(4), ave 0.784
Test execution time: sum 4136 ms, max 85 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:20:27 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-02 01:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 50 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 3, redundant 8
Fitness: max 0.833(56), min 0.167(5), ave 0.779
Test execution time: sum 4212 ms, max 141 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:20:56 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-02 01:21:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 18 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 7, redundant 4
Fitness: max 0.833(54), min 0.167(8), ave 0.746
Test execution time: sum 4358 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:21:24 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-02 01:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 47 seconds
Variants: generated 100, build-succeeded 69, build-failed 26, syntax-invalid 2, redundant 3
Fitness: max 0.833(59), min 0.167(5), ave 0.771
Test execution time: sum 4848 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:21:53 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-02 01:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 16 seconds
Variants: generated 100, build-succeeded 69, build-failed 25, syntax-invalid 2, redundant 4
Fitness: max 0.833(58), min 0.167(6), ave 0.763
Test execution time: sum 4885 ms, max 80 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:22:22 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-02 01:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 45 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 6, redundant 2
Fitness: max 0.833(56), min 0.167(4), ave 0.787
Test execution time: sum 4276 ms, max 136 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:22:51 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-02 01:23:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 13 seconds
Variants: generated 100, build-succeeded 68, build-failed 24, syntax-invalid 3, redundant 5
Fitness: max 0.833(59), min 0.167(7), ave 0.76
Test execution time: sum 4804 ms, max 79 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:23:19 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-02 01:23:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 42 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 8, redundant 4
Fitness: max 0.833(53), min 0.167(10), ave 0.726
Test execution time: sum 4562 ms, max 147 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:23:48 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-02 01:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 11 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 4, redundant 1
Fitness: max 0.833(56), min 0.167(7), ave 0.756
Test execution time: sum 4664 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:24:17 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-02 01:24:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 40 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 0.833(56), min 0.167(5), ave 0.775
Test execution time: sum 4556 ms, max 213 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:24:46 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-02 01:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 10 seconds
Variants: generated 100, build-succeeded 68, build-failed 27, syntax-invalid 4, redundant 1
Fitness: max 1(1), min 0.167(9), ave 0.745
Test execution time: sum 905064 ms, max 900112 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:40:16 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-02 01:40:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 40 seconds
Variants: generated 100, build-succeeded 67, build-failed 29, syntax-invalid 1, redundant 3
Fitness: max 0.833(57), min 0.167(8), ave 0.746
Test execution time: sum 4783 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:40:46 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-02 01:41:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 10 seconds
Variants: generated 100, build-succeeded 69, build-failed 24, syntax-invalid 4, redundant 3
Fitness: max 0.833(59), min 0.167(7), ave 0.758
Test execution time: sum 4970 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:41:16 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-02 01:41:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 3, redundant 5
Fitness: max 0.833(48), min 0.167(10), ave 0.718
Test execution time: sum 4131 ms, max 123 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:41:45 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-02 01:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 9 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 6, redundant 1
Fitness: max 0.833(52), min 0.167(9), ave 0.733
Test execution time: sum 4533 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:42:15 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-02 01:42:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 37 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 6, redundant 8
Fitness: max 1(1), min 0.167(3), ave 0.798
Test execution time: sum 3889 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 01:42:43 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-02 01:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 7 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 5, redundant 3
Fitness: max 0.833(56), min 0.167(6), ave 0.769
Test execution time: sum 4511 ms, max 133 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:43:13 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-02 01:43:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 36 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 12, redundant 1
Fitness: max 0.833(51), min 0.167(10), ave 0.722
Test execution time: sum 4380 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:43:42 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-02 01:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 6 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 7, redundant 1
Fitness: max 0.833(54), min 0.167(6), ave 0.762
Test execution time: sum 4504 ms, max 142 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 01:44:12 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-02 01:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 9, redundant 1
Fitness: max 0.833(47), min 0.167(7), ave 0.743
Test execution time: sum 4231 ms, max 99 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:44:41 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-02 01:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 5 seconds
Variants: generated 100, build-succeeded 68, build-failed 21, syntax-invalid 9, redundant 2
Fitness: max 0.833(56), min 0.167(12), ave 0.716
Test execution time: sum 4867 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:45:11 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-02 01:45:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 33, syntax-invalid 3, redundant 2
Fitness: max 0.833(54), min 0.167(5), ave 0.769
Test execution time: sum 4662 ms, max 225 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:45:42 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-02 01:46:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 6 seconds
Variants: generated 100, build-succeeded 66, build-failed 25, syntax-invalid 6, redundant 3
Fitness: max 0.833(55), min 0.167(11), ave 0.722
Test execution time: sum 4638 ms, max 84 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:46:11 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-02 01:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 4004 ms, max 140 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 01:46:41 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-02 01:47:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 13, redundant 1
Fitness: max 0.833(43), min 0.167(7), ave 0.73
Test execution time: sum 4105 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:47:10 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-02 01:47:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 9, redundant 7
Fitness: max 0.833(53), min 0.167(5), ave 0.776
Test execution time: sum 4370 ms, max 141 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:47:40 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-02 01:48:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 4, redundant 6
Fitness: max 0.833(56), min 0.167(5), ave 0.777
Test execution time: sum 4712 ms, max 220 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:48:10 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-02 01:48:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 seconds
Variants: generated 100, build-succeeded 52, build-failed 40, syntax-invalid 8, redundant 0
Fitness: max 0.833(44), min 0.167(4), ave 0.769
Test execution time: sum 3932 ms, max 153 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:48:41 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-02 01:49:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 7, redundant 1
Fitness: max 0.833(52), min 0.167(6), ave 0.764
Test execution time: sum 4280 ms, max 153 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:49:11 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-02 01:49:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 12, redundant 2
Fitness: max 1(1), min 0.167(8), ave 0.733
Test execution time: sum 4278 ms, max 212 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:49:41 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-02 01:50:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 9, redundant 3
Fitness: max 0.833(52), min 0.167(3), ave 0.792
Test execution time: sum 4311 ms, max 148 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:50:11 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-02 01:50:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 36 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 13, redundant 1
Fitness: max 0.833(47), min 0.167(5), ave 0.769
Test execution time: sum 3999 ms, max 155 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:50:42 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-02 01:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 7 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.167(4), ave 0.786
Test execution time: sum 4698 ms, max 136 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:51:13 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-02 01:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 37 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 10, redundant 5
Fitness: max 0.833(52), min 0.167(3), ave 0.797
Test execution time: sum 4093 ms, max 140 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:51:43 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-02 01:52:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 8 seconds
Variants: generated 100, build-succeeded 67, build-failed 20, syntax-invalid 9, redundant 4
Fitness: max 0.833(52), min 0.167(6), ave 0.751
Test execution time: sum 4936 ms, max 142 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:52:14 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-02 01:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 38 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 14, redundant 0
Fitness: max 1(1), min 0.167(2), ave 0.798
Test execution time: sum 3961 ms, max 133 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:52:44 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-02 01:53:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 11, redundant 6
Fitness: max 0.833(52), min 0.167(4), ave 0.78
Test execution time: sum 4453 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:53:14 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-02 01:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 40 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 5, redundant 3
Fitness: max 0.833(50), min 0.167(6), ave 0.757
Test execution time: sum 4628 ms, max 224 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:53:46 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-02 01:54:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 11 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 6, redundant 1
Fitness: max 0.833(58), min 0.167(6), ave 0.769
Test execution time: sum 4823 ms, max 217 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:54:17 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-02 01:54:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 41 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 18, redundant 1
Fitness: max 0.833(53), min 0.167(2), ave 0.809
Test execution time: sum 4035 ms, max 145 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:54:47 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-02 01:55:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 17, redundant 1
Fitness: max 1(1), min 0.167(3), ave 0.792
Test execution time: sum 4060 ms, max 146 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:55:16 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-02 01:55:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 42 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 9, redundant 1
Fitness: max 0.833(56), min 0.167(4), ave 0.787
Test execution time: sum 4579 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:55:48 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-02 01:56:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 12 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 14, redundant 2
Fitness: max 0.833(44), min 0.167(8), ave 0.723
Test execution time: sum 4148 ms, max 145 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 01:56:18 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-02 01:56:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 43 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 9, redundant 7
Fitness: max 0.833(50), min 0.167(7), ave 0.746
Test execution time: sum 4605 ms, max 146 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:56:49 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-02 01:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 16 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 4, redundant 1
Fitness: max 0.833(57), min 0.167(3), ave 0.798
Test execution time: sum 4538 ms, max 144 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 01:57:22 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-02 01:57:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 48 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.833(51), min 0.167(4), ave 0.779
Test execution time: sum 4308 ms, max 133 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:57:53 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-02 01:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 20 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 3, redundant 1
Fitness: max 0.833(61), min 0.167(3), ave 0.79
Test execution time: sum 4844 ms, max 145 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:58:26 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-02 01:58:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 52 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 5, redundant 3
Fitness: max 0.833(53), min 0.167(4), ave 0.784
Test execution time: sum 4298 ms, max 149 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 01:58:58 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-02 01:59:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 4, redundant 1
Fitness: max 0.833(59), min 0.167(2), ave 0.811
Test execution time: sum 4501 ms, max 134 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 01:59:30 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-02 02:00:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 58 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.167(6), ave 0.767
Test execution time: sum 4821 ms, max 152 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:00:03 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-02 02:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 10, redundant 7
Fitness: max 0.833(50), min 0.167(6), ave 0.759
Test execution time: sum 4457 ms, max 171 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:00:36 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-02 02:01:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 4 seconds
Variants: generated 100, build-succeeded 63, build-failed 22, syntax-invalid 6, redundant 9
Fitness: max 0.833(58), min 0.167(3), ave 0.794
Test execution time: sum 4894 ms, max 153 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 02:01:10 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-02 02:01:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 37 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 12, redundant 5
Fitness: max 0.833(54), min 0.167(3), ave 0.796
Test execution time: sum 4566 ms, max 154 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:01:43 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-02 02:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 8, redundant 6
Fitness: max 0.833(50), min 0.167(5), ave 0.769
Test execution time: sum 4300 ms, max 148 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:02:15 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-02 02:02:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 42 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 7, redundant 1
Fitness: max 0.833(57), min 0.167(5), ave 0.774
Test execution time: sum 4892 ms, max 137 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:02:47 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-02 02:03:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 14 seconds
Variants: generated 100, build-succeeded 66, build-failed 21, syntax-invalid 11, redundant 2
Fitness: max 1(1), min 0.167(10), ave 0.727
Test execution time: sum 4877 ms, max 128 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 02:03:20 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-02 02:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 45 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 16, redundant 2
Fitness: max 0.833(47), min 0.167(5), ave 0.765
Test execution time: sum 4057 ms, max 136 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:03:51 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-02 02:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 15 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 18, redundant 4
Fitness: max 0.833(44), min 0.167(2), ave 0.801
Test execution time: sum 3653 ms, max 217 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 02:04:20 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-02 02:04:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 48 seconds
Variants: generated 100, build-succeeded 66, build-failed 23, syntax-invalid 10, redundant 1
Fitness: max 1(1), min 0.167(6), ave 0.773
Test execution time: sum 5222 ms, max 163 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:04:54 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-02 02:05:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 20 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 14, redundant 2
Fitness: max 0.833(49), min 0.167(2), ave 0.804
Test execution time: sum 4084 ms, max 154 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:05:26 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-02 02:05:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 14, redundant 1
Fitness: max 0.833(44), min 0.167(7), ave 0.736
Test execution time: sum 4262 ms, max 148 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:05:57 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-02 02:06:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 25 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 11, redundant 2
Fitness: max 0.833(52), min 0.167(5), ave 0.769
Test execution time: sum 4610 ms, max 139 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:06:31 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-02 02:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 57 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 11, redundant 1
Fitness: max 1(1), min 0.167(4), ave 0.782
Test execution time: sum 4198 ms, max 138 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 02:07:03 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-02 02:07:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 29 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 11, redundant 1
Fitness: max 0.833(56), min 0.167(6), ave 0.767
Test execution time: sum 4744 ms, max 150 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:07:35 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-02 02:08:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 3 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 8, redundant 2
Fitness: max 0.833(58), min 0.167(6), ave 0.762
Test execution time: sum 5220 ms, max 149 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:08:09 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-02 02:08:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 11, redundant 2
Fitness: max 0.833(54), min 0.167(6), ave 0.763
Test execution time: sum 4754 ms, max 149 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:08:42 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-02 02:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 10, redundant 1
Fitness: max 0.833(50), min 0.167(5), ave 0.769
Test execution time: sum 4262 ms, max 165 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:09:14 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-02 02:09:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 42 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.167(7), ave 0.75
Test execution time: sum 4640 ms, max 155 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:09:47 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-02 02:10:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 16 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 4549 ms, max 154 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:10:21 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-02 02:10:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 22 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 5, redundant 4
Fitness: max 0.833(53), min 0.167(4), ave 0.782
Test execution time: sum 4542 ms, max 142 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:10:55 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-02 02:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 24 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 8, redundant 1
Fitness: max 0.833(57), min 0.167(5), ave 0.774
Test execution time: sum 4936 ms, max 154 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:11:29 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-02 02:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 23 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 5, redundant 6
Fitness: max 0.833(54), min 0.167(3), ave 0.791
Test execution time: sum 4508 ms, max 142 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 02:12:04 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-02 02:12:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 24 minutes 31 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 0.833(55), min 0.167(5), ave 0.778
Test execution time: sum 4496 ms, max 160 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:12:37 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-02 02:13:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 5 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 7, redundant 4
Fitness: max 0.833(55), min 0.167(8), ave 0.746
Test execution time: sum 4921 ms, max 151 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:13:11 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-02 02:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 38 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 10, redundant 2
Fitness: max 0.833(57), min 0.167(3), ave 0.794
Test execution time: sum 4757 ms, max 149 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 02:13:44 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-02 02:14:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 12 seconds
Variants: generated 100, build-succeeded 61, build-failed 35, syntax-invalid 4, redundant 0
Fitness: max 0.833(55), min 0.167(3), ave 0.792
Test execution time: sum 4680 ms, max 149 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:14:18 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-02 02:14:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 26 minutes 47 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 4, redundant 2
Fitness: max 0.833(54), min 0.167(7), ave 0.751
Test execution time: sum 4779 ms, max 159 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:14:53 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-02 02:15:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 22 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 8, redundant 1
Fitness: max 0.833(61), min 0.167(2), ave 0.81
Test execution time: sum 4977 ms, max 154 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 02:15:28 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-02 02:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 27 minutes 56 seconds
Variants: generated 100, build-succeeded 69, build-failed 22, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.802
Test execution time: sum 5253 ms, max 150 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 02:16:02 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-02 02:16:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 28 minutes 30 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 8, redundant 2
Fitness: max 0.833(58), min 0.167(6), ave 0.765
Test execution time: sum 4963 ms, max 148 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 02:16:36 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-02 02:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 14, redundant 7
Fitness: max 0.833(51), min 0.167(2), ave 0.801
Test execution time: sum 3960 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:17:08 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-02 02:17:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 37 seconds
Variants: generated 100, build-succeeded 73, build-failed 20, syntax-invalid 4, redundant 3
Fitness: max 0.833(62), min 0.167(7), ave 0.76
Test execution time: sum 5300 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 02:17:43 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-02 02:18:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 12 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 5, redundant 3
Fitness: max 0.833(58), min 0.167(7), ave 0.762
Test execution time: sum 4666 ms, max 147 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:18:17 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-02 02:18:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 48 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 3, redundant 4
Fitness: max 0.833(58), min 0.167(3), ave 0.794
Test execution time: sum 4507 ms, max 136 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:18:54 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-02 02:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 23 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 7, redundant 1
Fitness: max 0.833(55), min 0.167(5), ave 0.772
Test execution time: sum 4260 ms, max 146 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:19:29 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-02 02:20:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 31 minutes 59 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 5, redundant 2
Fitness: max 0.833(57), min 0.167(6), ave 0.765
Test execution time: sum 4503 ms, max 134 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:20:05 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-02 02:20:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 32 minutes 33 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 11, redundant 2
Fitness: max 0.833(57), min 0.167(5), ave 0.773
Test execution time: sum 4273 ms, max 211 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:20:39 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-02 02:21:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 7 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 7, redundant 2
Fitness: max 0.833(58), min 0.167(3), ave 0.796
Test execution time: sum 4347 ms, max 218 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:21:13 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-02 02:21:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 33 minutes 42 seconds
Variants: generated 100, build-succeeded 64, build-failed 31, syntax-invalid 4, redundant 1
Fitness: max 0.833(56), min 0.167(5), ave 0.773
Test execution time: sum 4365 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:21:48 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-02 02:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 16 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 5, redundant 2
Fitness: max 0.833(58), min 0.167(5), ave 0.78
Test execution time: sum 4280 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 02:22:22 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-02 02:22:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 49 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 9, redundant 0
Fitness: max 0.833(54), min 0.167(8), ave 0.745
Test execution time: sum 4281 ms, max 134 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:22:55 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-02 02:23:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 14, redundant 1
Fitness: max 0.833(51), min 0.167(5), ave 0.767
Test execution time: sum 3967 ms, max 120 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:23:27 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-02 02:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 35 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 4, redundant 2
Fitness: max 0.833(54), min 0.167(3), ave 0.788
Test execution time: sum 4174 ms, max 148 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:24:00 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-02 02:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 minutes 27 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 4, redundant 4
Fitness: max 1(1), min 0.167(3), ave 0.798
Test execution time: sum 4113 ms, max 130 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:24:33 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-02 02:25:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 1 seconds
Variants: generated 100, build-succeeded 65, build-failed 32, syntax-invalid 3, redundant 0
Fitness: max 0.833(57), min 0.167(5), ave 0.774
Test execution time: sum 4457 ms, max 195 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:25:07 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-02 02:25:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 37 minutes 35 seconds
Variants: generated 100, build-succeeded 64, build-failed 32, syntax-invalid 3, redundant 1
Fitness: max 0.833(56), min 0.167(5), ave 0.771
Test execution time: sum 4338 ms, max 156 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:25:41 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-02 02:26:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 6, redundant 4
Fitness: max 0.833(53), min 0.167(5), ave 0.769
Test execution time: sum 4161 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:26:16 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-02 02:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 45 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 3, redundant 2
Fitness: max 0.833(59), min 0.167(5), ave 0.777
Test execution time: sum 4524 ms, max 141 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:26:51 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-02 02:27:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 20 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 7, redundant 3
Fitness: max 0.833(56), min 0.167(11), ave 0.723
Test execution time: sum 4627 ms, max 125 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:27:26 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-02 02:28:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 39 minutes 55 seconds
Variants: generated 100, build-succeeded 66, build-failed 30, syntax-invalid 2, redundant 2
Fitness: max 0.833(60), min 0.167(5), ave 0.78
Test execution time: sum 4329 ms, max 86 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 02:28:01 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-02 02:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 40 minutes 32 seconds
Variants: generated 100, build-succeeded 67, build-failed 28, syntax-invalid 2, redundant 3
Fitness: max 1(1), min 0.167(7), ave 0.761
Test execution time: sum 4608 ms, max 128 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:28:37 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-02 02:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 9, redundant 4
Fitness: max 0.833(51), min 0.167(9), ave 0.731
Test execution time: sum 4099 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 02:29:11 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-02 02:29:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 39 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 6, redundant 2
Fitness: max 0.833(53), min 0.167(8), ave 0.74
Test execution time: sum 4370 ms, max 128 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:29:45 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-02 02:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 12 seconds
Variants: generated 100, build-succeeded 66, build-failed 21, syntax-invalid 9, redundant 4
Fitness: max 0.833(54), min 0.167(9), ave 0.732
Test execution time: sum 4229 ms, max 116 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 02:30:18 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-02 02:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 42 minutes 46 seconds
Variants: generated 100, build-succeeded 68, build-failed 23, syntax-invalid 7, redundant 2
Fitness: max 0.833(59), min 0.167(7), ave 0.76
Test execution time: sum 4446 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:30:51 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-02 02:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 20 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 4, redundant 6
Fitness: max 0.833(57), min 0.167(6), ave 0.768
Test execution time: sum 4259 ms, max 144 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:31:25 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-02 02:32:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 43 minutes 54 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 4, redundant 3
Fitness: max 0.833(54), min 0.167(7), ave 0.749
Test execution time: sum 4435 ms, max 147 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:32:00 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-02 02:32:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 44 minutes 28 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 5, redundant 3
Fitness: max 0.833(53), min 0.167(8), ave 0.742
Test execution time: sum 4160 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:32:34 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-02 02:33:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 3 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 4, redundant 2
Fitness: max 0.833(54), min 0.167(5), ave 0.77
Test execution time: sum 4176 ms, max 133 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:33:09 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-02 02:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 39 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 3, redundant 2
Fitness: max 0.833(57), min 0.167(3), ave 0.798
Test execution time: sum 4113 ms, max 130 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 02:33:45 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-02 02:34:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 14 seconds
Variants: generated 100, build-succeeded 66, build-failed 25, syntax-invalid 5, redundant 4
Fitness: max 0.833(58), min 0.167(5), ave 0.773
Test execution time: sum 4509 ms, max 153 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:34:20 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-02 02:34:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 49 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 7, redundant 3
Fitness: max 0.833(56), min 0.167(5), ave 0.772
Test execution time: sum 4426 ms, max 141 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:34:55 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-02 02:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 25 seconds
Variants: generated 100, build-succeeded 67, build-failed 29, syntax-invalid 2, redundant 2
Fitness: max 0.833(60), min 0.167(5), ave 0.779
Test execution time: sum 4652 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:35:30 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-02 02:36:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 47 minutes 59 seconds
Variants: generated 100, build-succeeded 65, build-failed 30, syntax-invalid 3, redundant 2
Fitness: max 0.833(60), min 0.167(4), ave 0.79
Test execution time: sum 4294 ms, max 134 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:36:05 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-02 02:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 34 seconds
Variants: generated 100, build-succeeded 71, build-failed 24, syntax-invalid 4, redundant 1
Fitness: max 0.833(63), min 0.167(6), ave 0.772
Test execution time: sum 4747 ms, max 125 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:36:40 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-02 02:37:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 6 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 8, redundant 1
Fitness: max 0.833(50), min 0.167(7), ave 0.742
Test execution time: sum 4107 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:37:12 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-02 02:37:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 40 seconds
Variants: generated 100, build-succeeded 68, build-failed 24, syntax-invalid 3, redundant 5
Fitness: max 0.833(58), min 0.167(4), ave 0.779
Test execution time: sum 4481 ms, max 149 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:37:46 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-02 02:38:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 14 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 6, redundant 6
Fitness: max 0.833(57), min 0.167(5), ave 0.778
Test execution time: sum 4317 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:38:19 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-02 02:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 50 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 5, redundant 10
Fitness: max 0.833(51), min 0.167(2), ave 0.803
Test execution time: sum 3687 ms, max 81 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 02:38:52 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-02 02:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 20 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 9, redundant 3
Fitness: max 0.833(54), min 0.167(3), ave 0.784
Test execution time: sum 4243 ms, max 128 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:39:26 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-02 02:40:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 55 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 6, redundant 0
Fitness: max 0.833(58), min 0.167(3), ave 0.796
Test execution time: sum 4315 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:40:01 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v205)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v205)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                int i = 0;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1221)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1221)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1221)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1221)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +162,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -240,7 +236,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if (Math.abs(y2) < Math.abs(y1)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v1944)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +162,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +177,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                checkResultComputed();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2022)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2406)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2406)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2406)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2406)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2406)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -240,7 +237,7 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
+            if (Math.abs(y2) < Math.abs(y1)) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
+        maximalIterationCount = defaultMaximalIterationCount;
+		this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2617)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +224,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -100,7 +100,6 @@
      */
     protected void checkResultComputed() throws IllegalStateException {
         if (!resultComputed) {
-            throw MathRuntimeException.createIllegalStateException("no result available");
         }
     }
 
@@ -140,7 +139,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,7 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v2738)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,8 +59,6 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3114)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +224,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -162,7 +163,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3439)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -227,7 +225,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v3731)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +224,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,7 +244,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4730)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4845)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4845)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4845)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4845)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v4845)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -227,7 +226,10 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5038)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x1 = min;
             return result;
         }
 
@@ -167,6 +166,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -227,7 +227,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5203)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5203)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5203)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5203)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5203)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -227,7 +226,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5324)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5324)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5324)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5324)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v5324)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +225,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		double delta;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,9 +63,7 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6519)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -227,7 +225,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -162,7 +163,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6642)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,8 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +226,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,6 +246,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		double delta;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -163,6 +167,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
+		double delta;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6708)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -227,7 +226,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6715)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6715)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6715)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6715)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6715)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            double oldx = Double.POSITIVE_INFINITY;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +166,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +226,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,6 +246,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v6918)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +165,9 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,7 +182,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +227,9 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,7 +247,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v8540)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int numIterations = 0;
             return result;
         }
 
@@ -167,6 +166,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +188,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +227,11 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9324)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9324)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9324)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9324)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9324)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,7 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -109,10 +109,10 @@
             return result;
         }
 
-        // return the first endpoint if it is good enough
+        int iterationCount = 0;
+		// return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +123,9 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.defaultFunctionValueAccuracy = 1.0e-15;
             return result;
         }
 
@@ -167,6 +168,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -181,8 +183,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -232,7 +234,9 @@
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9344)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9344)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9344)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9344)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v9344)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,7 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,10 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
+		clearResult();
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,6 +168,7 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.iterationCount = iterationCount;
 
         double ret = Double.NaN;
 
@@ -232,7 +234,8 @@
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
@@ -245,6 +248,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,14 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10705)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,7 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        this.resultComputed = true;
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,14 +180,18 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +247,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:04 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,15 +180,17 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +228,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,6 +247,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10909)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,15 +180,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,12 +227,15 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
@@ -245,6 +248,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v10934)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,9 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -182,14 +182,18 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                clearResult();
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,12 +231,14 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
@@ -245,6 +251,7 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,8 +139,14 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v11213)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +188,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +246,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13027)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,14 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13027)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13027)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +186,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,12 +226,14 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
@@ -245,6 +246,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13037)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13037)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v13037)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,12 +226,15 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
+                i++;
+				// use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
@@ -245,6 +247,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15026)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,16 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15026)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15026)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15026)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15026)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +236,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +247,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,15 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15149)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +188,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +247,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15436)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,16 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15436)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15436)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15436)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15436)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,7 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +188,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +236,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +247,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15441)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,16 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15441)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15441)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15441)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15441)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +237,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +248,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,17 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15934)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v15934)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +227,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -235,6 +236,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +248,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -163,7 +167,8 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.resultComputed = false;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16014)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +188,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +230,10 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		y1 = f.value(x1);
+		y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -235,6 +241,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +252,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16930)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16930)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16930)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16930)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v16930)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -123,8 +122,8 @@
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
+		clearResult();
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +189,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +240,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +251,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v17522)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,19 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v17522)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v17522)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v17522)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v17522)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,9 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -177,7 +177,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
@@ -189,7 +189,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -227,7 +230,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,6 +249,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18304)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18304)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18304)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18304)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18304)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +187,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +244,20 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18409)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18409)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18409)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18409)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18409)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +187,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +248,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18414)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,15 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18414)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18414)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18414)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v18414)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +188,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,8 +238,11 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
+				setResult(x1, i);
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +251,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,16 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -65,7 +65,6 @@
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v19707)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +186,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +235,9 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
+				x2 = x0;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +248,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,22 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v20508)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -227,7 +225,8 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
         double delta = x1 - x0;
-        double oldDelta = delta;
+        y1 = f.value(x1);
+		double oldDelta = delta;
 
         int i = 0;
         while (i < maximalIterationCount) {
@@ -245,6 +244,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v21822)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,18 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v21822)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v21822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v21822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v21822)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,9 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -235,8 +234,11 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.resultComputed = false;
+				this.resultComputed = false;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +247,17 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +188,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,8 +236,10 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.resultComputed = false;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +248,23 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22629)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,16 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22629)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22629)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22629)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +237,7 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				double r2 = y1 / y2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +248,19 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22848)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22848)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v22848)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +188,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +248,23 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23014)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(min) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,9 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +190,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +239,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +251,20 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23701)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,17 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23701)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23701)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23701)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23701)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,8 +238,10 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +250,18 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23909)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v23909)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (f.value(min) == 0.0) {
             return result;
         }
 
@@ -124,7 +123,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.resultComputed = false;
+			int i = 0;
             return result;
         }
 
@@ -189,7 +189,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,8 +237,10 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +249,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v24112)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,14 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v24112)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v24112)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v24112)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v24112)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,9 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +181,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +188,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,6 +238,8 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
+				x2 = x0;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
@@ -245,6 +250,19 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v25130)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v25130)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v25130)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v25130)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v25130)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,9 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +189,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,16 +237,37 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                x0 = x1;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26513)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26513)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +239,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +250,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26706)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,8 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26706)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26706)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26706)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26706)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double x0 = min;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,10 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +191,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -241,10 +247,32 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                x0 = x1;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26804)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26804)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26804)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26804)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v26804)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
-            return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +187,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -235,8 +238,13 @@
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
+				x2 = x0;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +253,22 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v27132)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v27132)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v27132)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v27132)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v27132)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,8 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +188,13 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +241,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +252,29 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,15 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,12 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +192,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +251,24 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28821)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28821)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28821)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v28821)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,9 +165,10 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
-        double ret = Double.NaN;
-
         double yMin = f.value(min);
         double yMax = f.value(max);
 
@@ -189,7 +188,9 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +237,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +247,30 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29609)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,14 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29609)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29609)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29609)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29609)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,9 +165,10 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
-        double ret = Double.NaN;
-
         double yMin = f.value(min);
         double yMax = f.value(max);
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +187,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +237,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +247,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29623)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,8 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -100,7 +102,6 @@
      */
     protected void checkResultComputed() throws IllegalStateException {
         if (!resultComputed) {
-            throw MathRuntimeException.createIllegalStateException("no result available");
         }
     }
 
@@ -140,7 +141,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29623)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29623)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29623)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29623)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
-            return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            checkResultComputed();
             return result;
         }
 
@@ -168,7 +167,12 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +185,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +192,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +243,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +254,22 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29639)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29639)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29639)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29639)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29639)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,10 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +182,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +189,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +250,28 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29944)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29944)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29944)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29944)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29944)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,14 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +194,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +255,22 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29949)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -163,7 +168,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29949)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29949)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29949)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v29949)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            clearResult();
             return result;
         }
 
@@ -168,7 +167,11 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +184,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +191,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +242,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +252,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v30630)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v30630)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v30630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v30630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:05 [main] [INFO]  PatchLogExporter - patch (v30630)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,15 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +195,14 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,6 +258,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v31827)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v31827)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v31827)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v31827)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v31827)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,14 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +186,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +193,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +245,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +255,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v32750)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v32750)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v32750)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v32750)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v32750)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,17 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +197,13 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +250,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
+				y1 = f.value(x1);
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +261,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34014)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,8 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +142,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34014)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,17 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +197,13 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +250,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +260,22 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34233)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34233)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34233)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34233)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v34233)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,16 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +196,13 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +249,12 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +263,23 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v35038)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v35038)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v35038)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v35038)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v35038)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,16 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +188,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +195,17 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +252,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
+				y1 = f.value(x1);
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +264,20 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v37204)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -72,6 +72,7 @@
                                        final int defaultMaximalIterationCount,
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
         if (f == null) {
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
@@ -140,7 +141,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v37204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v37204)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v37204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v37204)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,9 +165,13 @@
 
         clearResult();
         verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
-        double ret = Double.NaN;
-
         double yMin = f.value(min);
         double yMax = f.value(max);
 
@@ -189,7 +191,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -234,9 +239,13 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				oldDelta = x2 - x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +254,31 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v38815)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v38815)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v38815)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v38815)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v38815)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,15 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +195,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +245,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +256,35 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				this.iterationCount = iterationCount;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v39331)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v39331)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v39331)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v39331)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v39331)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,17 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +197,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +247,8 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +257,30 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40148)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40148)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40148)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +168,20 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +202,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +253,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +269,28 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v40716)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,20 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -181,7 +193,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double x1;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +202,10 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +252,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +268,27 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41322)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41322)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41322)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41322)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41322)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,23 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +204,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +255,15 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +272,25 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41823)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41823)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41823)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41823)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v41823)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,16 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.iterationCount = iterationCount;
+			double p;
+			this.f = f;
+			this.f = f;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +169,17 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +200,11 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +251,10 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +263,34 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43350)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43350)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43350)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43350)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43350)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,16 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +196,14 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +250,11 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +263,36 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,9 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43647)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v43647)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +167,18 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +199,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +251,16 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +269,28 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44048)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,10 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44048)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44048)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44048)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44048)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -167,8 +165,17 @@
 
         clearResult();
         verifyInterval(min, max);
+		this.defaultFunctionValueAccuracy = 1.0e-15;
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -183,13 +190,21 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +251,9 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +262,34 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44646)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,13 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44646)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44646)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44646)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v44646)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +165,13 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +192,17 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +249,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +265,32 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v45602)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,11 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
@@ -162,7 +166,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v45602)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v45602)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v45602)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v45602)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +165,20 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -183,13 +193,19 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				return max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +252,14 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +268,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47119)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -140,7 +140,14 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47119)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            verifySequence(min, initial, max);
+			verifySequence(min, initial, max);
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +168,20 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +202,12 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +254,19 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +275,22 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47844)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -140,7 +139,12 @@
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
         this.iterationCount = iterationCount;
-        this.resultComputed = true;
+        this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.iterationCount = 0;
+		this.resultComputed = true;
     }
 
     /**
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47844)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47844)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47844)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:40:06 [main] [INFO]  PatchLogExporter - patch (v47844)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.f = f;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -168,7 +166,22 @@
         clearResult();
         verifyInterval(min, max);
 
-        double ret = Double.NaN;
+        verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		verifyInterval(min, max);
+		double ret = Double.NaN;
 
         double yMin = f.value(min);
         double yMax = f.value(max);
@@ -189,7 +202,13 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			clearResult();
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -236,7 +255,20 @@
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
-                y0 = y1;
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				y0 = y1;
                 y1 = y2;
                 y2 = y0;
             }
@@ -245,6 +277,21 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
+				y0 = y1;
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:40:06 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 45792
Build succeeded variants = 29683
Time elapsed = 4 hours 52 minutes 0 seconds
Exit status = FAILURE (maximum generation)
