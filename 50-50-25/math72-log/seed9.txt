2023-08-03 03:58:06 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-03 03:58:06 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-03 03:58:06 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-03 03:58:06 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 9 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-03 03:58:24 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-03 03:58:24 [main] [INFO]  KGenProgMain - GA started
2023-08-03 03:58:24 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-03 03:58:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 50, build-succeeded 11, build-failed 33, syntax-invalid 3, redundant 3
Fitness: max 0.833(9), min 0.167(1), ave 0.758
Test execution time: sum 1667 ms, max 276 ms, min 85 ms
----------------------------------------------------------------

2023-08-03 03:58:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-03 03:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 50, build-succeeded 5, build-failed 35, syntax-invalid 2, redundant 8
Fitness: max 0.833(4), min 0.167(1), ave 0.7
Test execution time: sum 521 ms, max 136 ms, min 84 ms
----------------------------------------------------------------

2023-08-03 03:58:33 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-03 03:58:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, build-succeeded 26, build-failed 30, syntax-invalid 9, redundant 35
Fitness: max 0.833(16), min 0.167(9), ave 0.596
Test execution time: sum 2180 ms, max 198 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 03:58:39 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-03 03:58:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 100, build-succeeded 22, build-failed 34, syntax-invalid 6, redundant 38
Fitness: max 0.833(19), min 0.167(1), ave 0.788
Test execution time: sum 1540 ms, max 140 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 03:58:44 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-03 03:58:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 100, build-succeeded 32, build-failed 23, syntax-invalid 1, redundant 44
Fitness: max 1(1), min 0.167(2), ave 0.786
Test execution time: sum 2251 ms, max 142 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 03:58:51 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-03 03:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 100, build-succeeded 35, build-failed 28, syntax-invalid 9, redundant 28
Fitness: max 0.833(28), min 0.167(5), ave 0.724
Test execution time: sum 2318 ms, max 156 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 03:58:56 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-03 03:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 100, build-succeeded 40, build-failed 25, syntax-invalid 10, redundant 25
Fitness: max 0.833(36), min 0.167(2), ave 0.787
Test execution time: sum 2506 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 03:59:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-03 03:59:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 14, redundant 19
Fitness: max 1(1), min 0.167(3), ave 0.761
Test execution time: sum 2457 ms, max 241 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 03:59:08 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-03 03:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 seconds
Variants: generated 100, build-succeeded 36, build-failed 27, syntax-invalid 14, redundant 23
Fitness: max 0.833(28), min 0.167(2), ave 0.755
Test execution time: sum 2221 ms, max 149 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 03:59:14 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-03 03:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 6, redundant 30
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 1756 ms, max 118 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 03:59:19 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-03 03:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 1 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 5, redundant 25
Fitness: max 0.833(35), min 0.167(1), ave 0.796
Test execution time: sum 2523 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 03:59:26 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-03 03:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 7 seconds
Variants: generated 100, build-succeeded 32, build-failed 32, syntax-invalid 13, redundant 23
Fitness: max 0.833(25), min 0.167(2), ave 0.755
Test execution time: sum 2013 ms, max 122 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 03:59:31 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-03 03:59:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 14 seconds
Variants: generated 100, build-succeeded 39, build-failed 18, syntax-invalid 13, redundant 30
Fitness: max 0.833(34), min 0.167(5), ave 0.748
Test execution time: sum 2692 ms, max 187 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 03:59:39 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-03 03:59:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 19 seconds
Variants: generated 100, build-succeeded 35, build-failed 32, syntax-invalid 11, redundant 22
Fitness: max 1(1), min 0.167(1), ave 0.795
Test execution time: sum 2133 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 03:59:44 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-03 03:59:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 26 seconds
Variants: generated 100, build-succeeded 39, build-failed 27, syntax-invalid 9, redundant 25
Fitness: max 1(1), min 0.167(3), ave 0.752
Test execution time: sum 2529 ms, max 231 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 03:59:50 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-03 03:59:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 33 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 11, redundant 10
Fitness: max 0.833(42), min 0.167(1), ave 0.808
Test execution time: sum 2923 ms, max 188 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 03:59:57 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-03 04:00:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 12, redundant 6
Fitness: max 0.833(49), min 0.167(3), ave 0.777
Test execution time: sum 3381 ms, max 118 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:00:05 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-03 04:00:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 47 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 18, redundant 14
Fitness: max 0.833(37), min 0.167(3), ave 0.783
Test execution time: sum 2453 ms, max 119 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:00:11 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-03 04:00:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 54 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.167(3), ave 0.777
Test execution time: sum 2799 ms, max 189 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:00:19 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-03 04:00:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 11, redundant 10
Fitness: max 0.833(40), min 0.167(7), ave 0.734
Test execution time: sum 2892 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:00:26 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-03 04:00:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 15, redundant 6
Fitness: max 0.833(47), min 0.167(6), ave 0.755
Test execution time: sum 3374 ms, max 124 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:00:34 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-03 04:00:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 15 seconds
Variants: generated 100, build-succeeded 43, build-failed 26, syntax-invalid 21, redundant 10
Fitness: max 0.833(35), min 0.167(4), ave 0.744
Test execution time: sum 2572 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:00:40 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-03 04:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 22 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 23, redundant 10
Fitness: max 0.833(34), min 0.167(1), ave 0.806
Test execution time: sum 2313 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:00:46 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-03 04:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 29 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 24, redundant 3
Fitness: max 0.833(39), min 0.167(4), ave 0.759
Test execution time: sum 2835 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:00:53 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-03 04:01:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 36 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 20, redundant 3
Fitness: max 0.833(38), min 0.167(4), ave 0.763
Test execution time: sum 2761 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:01:00 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-03 04:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 14, redundant 9
Fitness: max 0.833(42), min 0.167(4), ave 0.757
Test execution time: sum 3015 ms, max 193 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:01:07 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-03 04:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 50 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 9, redundant 12
Fitness: max 0.833(39), min 0.167(7), ave 0.706
Test execution time: sum 3065 ms, max 90 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:01:14 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-03 04:01:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 10, redundant 5
Fitness: max 0.833(50), min 0.167(4), ave 0.768
Test execution time: sum 3531 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:01:23 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-03 04:01:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 15, redundant 5
Fitness: max 1(2), min 0.167(2), ave 0.793
Test execution time: sum 3454 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:01:30 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-03 04:01:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 18, redundant 4
Fitness: max 0.833(40), min 0.167(1), ave 0.794
Test execution time: sum 2893 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:01:38 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-03 04:01:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 21 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 0.833(42), min 0.167(2), ave 0.782
Test execution time: sum 2900 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:01:45 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-03 04:01:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 28 seconds
Variants: generated 100, build-succeeded 43, build-failed 25, syntax-invalid 24, redundant 8
Fitness: max 0.833(33), min 0.167(4), ave 0.733
Test execution time: sum 2637 ms, max 137 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:01:53 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-03 04:02:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 36 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 20, redundant 4
Fitness: max 0.833(43), min 0.5(3), ave 0.806
Test execution time: sum 2834 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:02:00 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-03 04:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 44 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.833(49), min 0.167(3), ave 0.772
Test execution time: sum 3562 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:02:09 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-03 04:02:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.806
Test execution time: sum 3330 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:02:17 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-03 04:02:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 12, redundant 4
Fitness: max 0.833(47), min 0.167(4), ave 0.77
Test execution time: sum 3328 ms, max 125 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:02:26 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-03 04:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 9 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 22, redundant 2
Fitness: max 1(1), min 0.167(6), ave 0.739
Test execution time: sum 3160 ms, max 73 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:02:33 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-03 04:02:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 17 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 15, redundant 8
Fitness: max 0.833(47), min 0.167(2), ave 0.801
Test execution time: sum 3192 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:02:42 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-03 04:02:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 26 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.833(52), min 0.167(2), ave 0.793
Test execution time: sum 3569 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:02:50 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-03 04:03:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 35 seconds
Variants: generated 100, build-succeeded 60, build-failed 20, syntax-invalid 15, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 3664 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:03:00 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-03 04:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 16, redundant 0
Fitness: max 0.833(46), min 0.167(2), ave 0.794
Test execution time: sum 3040 ms, max 79 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:03:08 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-03 04:03:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 53 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0.833(47), min 0.167(4), ave 0.76
Test execution time: sum 3704 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:03:17 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-03 04:03:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.833(48), min 0.167(3), ave 0.78
Test execution time: sum 3437 ms, max 74 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:03:25 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-03 04:03:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 0.833(48), min 0.167(1), ave 0.81
Test execution time: sum 3170 ms, max 166 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:03:34 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-03 04:03:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 17 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 20, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.773
Test execution time: sum 2976 ms, max 71 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:03:42 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-03 04:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 26 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 18, redundant 3
Fitness: max 0.833(40), min 0.5(1), ave 0.808
Test execution time: sum 2853 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:03:51 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-03 04:03:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 12, redundant 10
Fitness: max 1(3), min 0.167(2), ave 0.792
Test execution time: sum 3088 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:03:59 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-03 04:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 16, redundant 6
Fitness: max 0.833(50), min 0.167(1), ave 0.814
Test execution time: sum 3278 ms, max 195 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:04:08 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-03 04:04:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 50 seconds
Variants: generated 100, build-succeeded 43, build-failed 23, syntax-invalid 28, redundant 6
Fitness: max 0.833(40), min 0.5(1), ave 0.818
Test execution time: sum 2542 ms, max 73 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:04:15 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-03 04:04:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 minutes 59 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 19, redundant 5
Fitness: max 0.833(46), min 0.167(1), ave 0.81
Test execution time: sum 3241 ms, max 210 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:04:23 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-03 04:04:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 21, redundant 6
Fitness: max 1(1), min 0.167(3), ave 0.793
Test execution time: sum 2746 ms, max 87 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:04:31 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-03 04:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 16 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.167(1), ave 0.804
Test execution time: sum 3478 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:04:40 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-03 04:04:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 24 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 15, redundant 11
Fitness: max 1(1), min 0.167(2), ave 0.788
Test execution time: sum 2865 ms, max 79 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:04:48 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-03 04:04:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 33 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 20, redundant 3
Fitness: max 0.833(43), min 0.167(3), ave 0.779
Test execution time: sum 3052 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:04:57 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-03 04:05:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.833(49), min 0.167(1), ave 0.811
Test execution time: sum 3082 ms, max 72 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:05:06 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-03 04:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0.833(55), min 0.167(2), ave 0.807
Test execution time: sum 3543 ms, max 135 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:05:16 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-03 04:05:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 10, redundant 3
Fitness: max 0.833(52), min 0.667(2), ave 0.827
Test execution time: sum 3313 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:05:25 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-03 04:05:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 11 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 0.833(55), min 0.167(1), ave 0.819
Test execution time: sum 3532 ms, max 139 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:05:35 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-03 04:05:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 9, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.818
Test execution time: sum 3234 ms, max 71 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:05:44 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-03 04:05:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0.833(51), min 0.167(1), ave 0.814
Test execution time: sum 3233 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:05:54 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-03 04:06:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 14, redundant 5
Fitness: max 0.833(50), min 0.167(1), ave 0.82
Test execution time: sum 3098 ms, max 81 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:06:03 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-03 04:06:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 48 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 13, redundant 3
Fitness: max 0.833(47), min 0.167(1), ave 0.81
Test execution time: sum 3149 ms, max 185 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:06:13 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-03 04:06:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 minutes 57 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 9, redundant 6
Fitness: max 0.833(46), min 0.167(4), ave 0.776
Test execution time: sum 3079 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:06:22 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-03 04:06:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 5, redundant 4
Fitness: max 0.833(51), min 0.167(4), ave 0.774
Test execution time: sum 3698 ms, max 186 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:06:32 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-03 04:06:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.167(3), ave 0.787
Test execution time: sum 3417 ms, max 79 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:06:42 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-03 04:06:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 27 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 10, redundant 9
Fitness: max 0.833(45), min 0.167(2), ave 0.802
Test execution time: sum 3117 ms, max 233 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:06:51 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-03 04:07:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 36 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 4, redundant 9
Fitness: max 0.833(55), min 0.5(1), ave 0.817
Test execution time: sum 3640 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:07:01 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-03 04:07:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 10, redundant 9
Fitness: max 1(1), min 0.167(1), ave 0.802
Test execution time: sum 3062 ms, max 183 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:07:10 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-03 04:07:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 minutes 54 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 10, redundant 8
Fitness: max 0.833(49), min 0.167(3), ave 0.779
Test execution time: sum 3432 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:07:19 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-03 04:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 4 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 8, redundant 7
Fitness: max 0.833(48), min 0.167(2), ave 0.796
Test execution time: sum 3604 ms, max 189 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:07:29 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-03 04:07:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 12 seconds
Variants: generated 100, build-succeeded 43, build-failed 33, syntax-invalid 17, redundant 7
Fitness: max 0.833(37), min 0.167(4), ave 0.764
Test execution time: sum 2579 ms, max 87 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:07:36 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-03 04:07:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 13, redundant 7
Fitness: max 0.833(52), min 0.167(3), ave 0.789
Test execution time: sum 3602 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:07:46 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-03 04:07:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 20, syntax-invalid 21, redundant 10
Fitness: max 0.833(43), min 0.167(3), ave 0.779
Test execution time: sum 2865 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:07:54 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-03 04:08:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 0.833(41), min 0.167(6), ave 0.739
Test execution time: sum 3141 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:08:03 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-03 04:23:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 48 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 18, redundant 6
Fitness: max 0.833(39), min 0.167(3), ave 0.777
Test execution time: sum 902900 ms, max 900137 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:23:12 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-03 04:23:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 55 seconds
Variants: generated 100, build-succeeded 39, build-failed 26, syntax-invalid 25, redundant 10
Fitness: max 0.833(34), min 0.167(4), ave 0.761
Test execution time: sum 2292 ms, max 80 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:23:19 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-03 04:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 4 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 22, redundant 3
Fitness: max 0.833(44), min 0.167(2), ave 0.804
Test execution time: sum 3111 ms, max 221 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:23:29 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-03 04:23:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 13 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 15, redundant 3
Fitness: max 0.833(51), min 0.167(4), ave 0.776
Test execution time: sum 3399 ms, max 81 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:23:38 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-03 04:23:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 14, redundant 7
Fitness: max 0.833(45), min 0.167(6), ave 0.75
Test execution time: sum 3375 ms, max 201 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:23:48 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-03 04:23:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 14, redundant 6
Fitness: max 0.833(43), min 0.167(2), ave 0.78
Test execution time: sum 3006 ms, max 91 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:23:57 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-03 04:24:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 41 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 17, redundant 5
Fitness: max 0.833(39), min 0.167(4), ave 0.764
Test execution time: sum 2858 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:24:05 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-03 04:24:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 10, redundant 6
Fitness: max 0.833(41), min 0.167(2), ave 0.788
Test execution time: sum 3001 ms, max 142 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:24:15 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-03 04:24:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 0 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 0.833(51), min 0.167(5), ave 0.772
Test execution time: sum 3425 ms, max 74 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:24:25 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-03 04:24:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 19, redundant 2
Fitness: max 0.833(44), min 0.167(6), ave 0.752
Test execution time: sum 3176 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:24:34 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-03 04:24:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 17, redundant 3
Fitness: max 0.833(48), min 0.167(1), ave 0.808
Test execution time: sum 3176 ms, max 88 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:24:43 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-03 04:24:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 16, redundant 6
Fitness: max 0.833(48), min 0.167(3), ave 0.792
Test execution time: sum 3325 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:24:54 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-03 04:25:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.799
Test execution time: sum 3536 ms, max 75 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:25:04 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-03 04:25:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 0.833(49), min 0.167(4), ave 0.779
Test execution time: sum 3586 ms, max 140 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:25:15 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-03 04:25:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 0 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 13, redundant 5
Fitness: max 0.833(53), min 0.167(1), ave 0.802
Test execution time: sum 3517 ms, max 79 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:25:24 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-03 04:25:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 11 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 17, redundant 1
Fitness: max 0.833(53), min 0.167(1), ave 0.802
Test execution time: sum 3844 ms, max 189 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:25:35 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-03 04:25:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 20 seconds
Variants: generated 100, build-succeeded 57, build-failed 21, syntax-invalid 19, redundant 3
Fitness: max 0.833(50), min 0.167(3), ave 0.787
Test execution time: sum 3388 ms, max 89 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:25:45 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-03 04:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 11, redundant 9
Fitness: max 0.833(46), min 0.167(4), ave 0.769
Test execution time: sum 3549 ms, max 194 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:25:56 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-03 04:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 10, redundant 7
Fitness: max 0.833(47), min 0.167(3), ave 0.785
Test execution time: sum 3196 ms, max 88 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:26:06 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-03 04:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 53 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0.167(5), ave 0.76
Test execution time: sum 3865 ms, max 144 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:26:18 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-03 04:26:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 4 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 6, redundant 1
Fitness: max 0.833(54), min 0.167(3), ave 0.79
Test execution time: sum 3714 ms, max 91 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:26:28 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-03 04:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0.833(51), min 0.167(2), ave 0.798
Test execution time: sum 3596 ms, max 98 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:26:39 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-03 04:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 9, redundant 3
Fitness: max 0.833(52), min 0.167(2), ave 0.806
Test execution time: sum 3537 ms, max 230 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:26:51 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-03 04:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 8, redundant 7
Fitness: max 0.833(54), min 0.167(3), ave 0.794
Test execution time: sum 3567 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:27:01 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-03 04:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 49 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 9, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.811
Test execution time: sum 3999 ms, max 203 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:27:14 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-03 04:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 0 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0.833(52), min 0.167(3), ave 0.792
Test execution time: sum 3462 ms, max 85 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:27:25 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-03 04:27:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 12 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.167(4), ave 0.79
Test execution time: sum 4009 ms, max 81 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:27:36 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-03 04:27:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 25 seconds
Variants: generated 100, build-succeeded 67, build-failed 25, syntax-invalid 4, redundant 4
Fitness: max 0.833(61), min 0.167(2), ave 0.801
Test execution time: sum 4269 ms, max 134 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:27:49 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-03 04:28:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 37 seconds
Variants: generated 100, build-succeeded 65, build-failed 20, syntax-invalid 11, redundant 4
Fitness: max 0.833(55), min 0.167(3), ave 0.779
Test execution time: sum 4058 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:28:01 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-03 04:28:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 11, redundant 2
Fitness: max 0.833(55), min 0.167(2), ave 0.805
Test execution time: sum 3976 ms, max 227 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:28:14 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-03 04:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 1 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 8, redundant 6
Fitness: max 0.833(54), min 0.167(5), ave 0.767
Test execution time: sum 3762 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:28:25 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-03 04:28:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 1(1), min 0.167(1), ave 0.812
Test execution time: sum 3296 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:28:36 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-03 04:28:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 23 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 13, redundant 1
Fitness: max 0.833(50), min 0.167(4), ave 0.778
Test execution time: sum 3567 ms, max 133 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:28:47 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-03 04:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 14, redundant 1
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3234 ms, max 87 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:28:58 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-03 04:29:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 46 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 3538 ms, max 134 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:29:10 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-03 04:29:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 57 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 7, redundant 1
Fitness: max 0.833(53), min 0.167(3), ave 0.793
Test execution time: sum 3436 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-03 04:29:22 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-03 04:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 17, redundant 2
Fitness: max 1(1), min 0.167(3), ave 0.784
Test execution time: sum 3282 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:29:33 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-03 04:29:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 13, redundant 0
Fitness: max 0.833(51), min 0.167(3), ave 0.788
Test execution time: sum 3471 ms, max 129 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:29:44 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-03 04:29:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 31 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 15, redundant 1
Fitness: max 0.833(45), min 0.167(3), ave 0.782
Test execution time: sum 3141 ms, max 80 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:29:55 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-03 04:30:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 42 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 20, redundant 2
Fitness: max 0.833(45), min 0.167(3), ave 0.787
Test execution time: sum 3136 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:30:06 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-03 04:30:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 9, redundant 8
Fitness: max 0.833(50), min 0.167(6), ave 0.747
Test execution time: sum 3718 ms, max 193 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:30:18 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-03 04:30:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 4 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 18, redundant 1
Fitness: max 0.833(41), min 0.167(2), ave 0.791
Test execution time: sum 2831 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:30:28 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-03 04:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 13, redundant 6
Fitness: max 0.833(50), min 0.167(5), ave 0.764
Test execution time: sum 3769 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:30:41 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-03 04:30:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 18, redundant 6
Fitness: max 0.833(46), min 0.167(1), ave 0.813
Test execution time: sum 2979 ms, max 83 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:30:51 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-03 04:31:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 10, redundant 3
Fitness: max 0.833(49), min 0.167(2), ave 0.807
Test execution time: sum 3078 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:31:02 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-03 04:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.792
Test execution time: sum 3547 ms, max 131 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:31:14 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-03 04:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 0 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.794
Test execution time: sum 3094 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:31:25 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-03 04:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 12 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0.833(52), min 0.167(1), ave 0.812
Test execution time: sum 3462 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:31:36 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-03 04:31:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 16, redundant 5
Fitness: max 0.833(47), min 0.167(1), ave 0.799
Test execution time: sum 3277 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:31:48 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-03 04:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 13, redundant 3
Fitness: max 0.833(45), min 0.667(3), ave 0.823
Test execution time: sum 2833 ms, max 71 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:31:59 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-03 04:32:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0.167(3), ave 0.784
Test execution time: sum 3260 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:32:10 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-03 04:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 0.833(46), min 0.167(3), ave 0.788
Test execution time: sum 3223 ms, max 201 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:32:22 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-03 04:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 9 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 21, redundant 4
Fitness: max 0.833(46), min 0.167(3), ave 0.788
Test execution time: sum 3087 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:32:33 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-03 04:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 21 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0.833(49), min 0.167(1), ave 0.805
Test execution time: sum 3463 ms, max 140 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:32:45 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-03 04:32:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 31 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 24, redundant 4
Fitness: max 0.833(43), min 0.167(1), ave 0.815
Test execution time: sum 2734 ms, max 74 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:32:56 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-03 04:33:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 23, redundant 1
Fitness: max 0.833(45), min 0.167(5), ave 0.763
Test execution time: sum 3232 ms, max 74 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:33:07 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-03 04:33:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 minutes 55 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 21, redundant 1
Fitness: max 0.833(43), min 0.167(4), ave 0.777
Test execution time: sum 3023 ms, max 119 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:33:19 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-03 04:33:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 6 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 20, redundant 4
Fitness: max 0.833(44), min 0.5(2), ave 0.81
Test execution time: sum 3022 ms, max 85 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:33:30 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-03 04:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 17 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 25, redundant 1
Fitness: max 0.833(37), min 0.167(1), ave 0.808
Test execution time: sum 2437 ms, max 71 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:33:41 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-03 04:33:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 12, redundant 6
Fitness: max 1(1), min 0.167(2), ave 0.805
Test execution time: sum 3668 ms, max 125 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:33:54 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-03 04:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 42 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.795
Test execution time: sum 3464 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:34:06 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-03 04:34:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 13, redundant 3
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3403 ms, max 192 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:34:20 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-03 04:34:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 16, redundant 4
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3202 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:34:32 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-03 04:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 19 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0.833(43), min 0.167(1), ave 0.799
Test execution time: sum 3097 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:34:44 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-03 04:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 33 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 13, redundant 1
Fitness: max 0.833(51), min 0.167(2), ave 0.802
Test execution time: sum 3434 ms, max 135 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:34:57 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-03 04:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 43 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 26, redundant 2
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 2691 ms, max 77 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:35:08 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-03 04:35:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 54 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 22, redundant 3
Fitness: max 0.833(41), min 0.167(2), ave 0.802
Test execution time: sum 2725 ms, max 74 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:35:19 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-03 04:35:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 18, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.821
Test execution time: sum 3339 ms, max 140 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:35:32 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-03 04:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 19 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 18, redundant 3
Fitness: max 0.833(45), min 0.5(1), ave 0.819
Test execution time: sum 2961 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:35:43 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-03 04:35:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 22, syntax-invalid 24, redundant 6
Fitness: max 0.833(41), min 0.167(4), ave 0.767
Test execution time: sum 2977 ms, max 74 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:35:55 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-03 04:36:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 0.833(48), min 0.167(4), ave 0.78
Test execution time: sum 3441 ms, max 143 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:36:08 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-03 04:36:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 18, redundant 2
Fitness: max 0.833(47), min 0.167(2), ave 0.801
Test execution time: sum 3159 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:36:20 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-03 04:36:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 8 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 20, redundant 5
Fitness: max 0.833(44), min 0.167(2), ave 0.801
Test execution time: sum 3058 ms, max 75 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:36:32 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-03 04:36:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 20 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 23, redundant 4
Fitness: max 1(1), min 0.167(3), ave 0.789
Test execution time: sum 2869 ms, max 201 ms, min 55 ms
----------------------------------------------------------------

2023-08-03 04:36:44 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-03 04:36:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 31 seconds
Variants: generated 100, build-succeeded 38, build-failed 27, syntax-invalid 25, redundant 10
Fitness: max 0.833(36), min 0.167(1), ave 0.807
Test execution time: sum 2302 ms, max 84 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:36:55 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-03 04:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 43 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 18, redundant 1
Fitness: max 1(2), min 0.167(3), ave 0.778
Test execution time: sum 3305 ms, max 70 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:37:08 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-03 04:37:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 11, redundant 4
Fitness: max 1(2), min 0.167(2), ave 0.804
Test execution time: sum 3638 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:37:22 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-03 04:37:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 17, redundant 1
Fitness: max 0.833(49), min 0.167(1), ave 0.814
Test execution time: sum 3244 ms, max 87 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:37:35 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-03 04:37:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 13, redundant 6
Fitness: max 0.833(52), min 0.167(2), ave 0.809
Test execution time: sum 3563 ms, max 129 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:37:49 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-03 04:38:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 0.833(52), min 0.5(3), ave 0.807
Test execution time: sum 3541 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:38:03 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-03 04:38:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 minutes 52 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 13, redundant 4
Fitness: max 0.833(55), min 0.167(2), ave 0.807
Test execution time: sum 3605 ms, max 76 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:38:17 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-03 04:38:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 7 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 17, redundant 2
Fitness: max 1(2), min 0.167(2), ave 0.809
Test execution time: sum 3053 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:38:31 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-03 04:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 21 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 5, redundant 2
Fitness: max 0.833(59), min 0.167(2), ave 0.811
Test execution time: sum 3658 ms, max 72 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:38:46 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-03 04:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 0.833(54), min 0.167(1), ave 0.816
Test execution time: sum 3725 ms, max 123 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:39:00 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-03 04:39:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 minutes 49 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 16, redundant 2
Fitness: max 0.833(49), min 0.167(1), ave 0.82
Test execution time: sum 3130 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:39:14 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-03 04:39:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 3 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 0.833(48), min 0.167(3), ave 0.794
Test execution time: sum 3255 ms, max 72 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:39:27 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-03 04:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0.5(2), ave 0.815
Test execution time: sum 3494 ms, max 124 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:39:42 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-03 04:39:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0.833(58), min 0.167(2), ave 0.811
Test execution time: sum 3750 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:39:57 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-03 04:40:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 7, redundant 2
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 3679 ms, max 153 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:40:12 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-03 04:40:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 2 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 9, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.811
Test execution time: sum 3352 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:40:26 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-03 04:40:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 5, redundant 4
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4124 ms, max 180 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:40:42 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-03 04:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 31 seconds
Variants: generated 100, build-succeeded 45, build-failed 41, syntax-invalid 13, redundant 1
Fitness: max 0.833(43), min 0.667(2), ave 0.826
Test execution time: sum 2792 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:40:56 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-03 04:41:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 13, redundant 0
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3459 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:41:10 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-03 04:41:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 2 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.833(59), min 0.167(1), ave 0.82
Test execution time: sum 3867 ms, max 129 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:41:26 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-03 04:41:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 15 seconds
Variants: generated 100, build-succeeded 44, build-failed 39, syntax-invalid 15, redundant 2
Fitness: max 1(1), min 0.833(43), ave 0.837
Test execution time: sum 2762 ms, max 88 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:41:40 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-03 04:41:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 37, syntax-invalid 11, redundant 2
Fitness: max 0.833(48), min 0.167(1), ave 0.813
Test execution time: sum 3394 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:41:55 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-03 04:42:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 minutes 45 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 0.833(52), min 0.167(3), ave 0.797
Test execution time: sum 3473 ms, max 87 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:42:10 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-03 04:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 18, redundant 2
Fitness: max 1(2), min 0(1), ave 0.774
Test execution time: sum 3532 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:42:24 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-03 04:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0.833(51), min 0.167(1), ave 0.821
Test execution time: sum 3347 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:42:40 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-03 04:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 8, redundant 2
Fitness: max 1(1), min 0.167(3), ave 0.801
Test execution time: sum 3446 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-03 04:42:54 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-03 04:43:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 8, redundant 7
Fitness: max 0.833(51), min 0.667(2), ave 0.827
Test execution time: sum 3558 ms, max 125 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:43:10 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-03 04:43:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0.833(57), min 0.167(1), ave 0.822
Test execution time: sum 3540 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:43:25 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-03 04:43:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 17 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.833(58), min 0.667(1), ave 0.831
Test execution time: sum 3994 ms, max 177 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:43:41 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-03 04:43:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.819
Test execution time: sum 3632 ms, max 86 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:43:57 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-03 04:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 minutes 47 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 12, redundant 2
Fitness: max 0.833(54), min 0.167(2), ave 0.81
Test execution time: sum 3681 ms, max 76 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:44:12 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-03 04:44:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 4 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 5, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.825
Test execution time: sum 3684 ms, max 128 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:44:28 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-03 04:44:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.833(52), min 0.167(2), ave 0.794
Test execution time: sum 3739 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:44:43 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-03 04:44:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 34 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 18, redundant 3
Fitness: max 0.833(43), min 0.167(4), ave 0.761
Test execution time: sum 3371 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:44:59 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-03 04:45:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.816
Test execution time: sum 3591 ms, max 87 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:45:14 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-03 04:45:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 12, redundant 3
Fitness: max 0.833(53), min 0.167(1), ave 0.807
Test execution time: sum 3918 ms, max 119 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:45:31 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-03 04:45:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 21 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 14, redundant 2
Fitness: max 0.833(46), min 0.167(4), ave 0.78
Test execution time: sum 3121 ms, max 80 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:45:45 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-03 04:46:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 13, redundant 7
Fitness: max 0.833(48), min 0.167(1), ave 0.817
Test execution time: sum 3257 ms, max 82 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:46:00 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-03 04:46:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 8, redundant 3
Fitness: max 0.833(56), min 0.167(2), ave 0.808
Test execution time: sum 3852 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:46:17 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-03 04:46:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 7 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.833(53), min 0.167(2), ave 0.809
Test execution time: sum 3435 ms, max 77 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:46:32 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-03 04:46:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 24 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 15, redundant 2
Fitness: max 0.833(53), min 0.167(1), ave 0.821
Test execution time: sum 3695 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:46:48 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-03 04:47:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 39 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 16, redundant 5
Fitness: max 0.833(43), min 0.167(3), ave 0.785
Test execution time: sum 2950 ms, max 79 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:47:03 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-03 04:47:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 55 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0.833(61), min 0.833(61), ave 0.833
Test execution time: sum 4006 ms, max 88 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:47:20 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-03 04:47:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 12 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 8, redundant 2
Fitness: max 0.833(61), min 0.167(2), ave 0.812
Test execution time: sum 4065 ms, max 117 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:47:37 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-03 04:47:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 7, redundant 3
Fitness: max 0.833(56), min 0.167(1), ave 0.822
Test execution time: sum 3736 ms, max 78 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:47:53 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-03 04:48:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 46 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0.833(59), min 0.667(1), ave 0.831
Test execution time: sum 3883 ms, max 129 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:48:10 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-03 04:48:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 39, syntax-invalid 5, redundant 0
Fitness: max 0.833(54), min 0.667(2), ave 0.827
Test execution time: sum 3587 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:48:26 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-03 04:48:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 8, redundant 2
Fitness: max 0.833(55), min 0.167(2), ave 0.802
Test execution time: sum 3844 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:48:43 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-03 04:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 5, redundant 7
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3350 ms, max 77 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:48:59 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-03 04:49:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 50 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 16, redundant 3
Fitness: max 0.833(56), min 0.167(1), ave 0.816
Test execution time: sum 3888 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:49:16 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-03 04:49:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 11, redundant 2
Fitness: max 0.833(52), min 0.167(1), ave 0.818
Test execution time: sum 3316 ms, max 76 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:49:32 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-03 04:49:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 23 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0.833(51), min 0.167(2), ave 0.808
Test execution time: sum 3482 ms, max 75 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:49:48 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-03 04:50:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 40 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 14, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.821
Test execution time: sum 3275 ms, max 128 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:50:04 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-03 04:50:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 15, redundant 3
Fitness: max 0.833(52), min 0.167(2), ave 0.804
Test execution time: sum 3544 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:50:20 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-03 04:50:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 12 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 21, redundant 3
Fitness: max 0.833(39), min 0.167(5), ave 0.754
Test execution time: sum 3168 ms, max 141 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:50:37 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-03 04:50:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 28 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 18, redundant 4
Fitness: max 0.833(38), min 0.167(5), ave 0.75
Test execution time: sum 2746 ms, max 80 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:50:52 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-03 04:51:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 45 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 6, redundant 4
Fitness: max 0.833(61), min 0.167(2), ave 0.81
Test execution time: sum 4172 ms, max 75 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:51:09 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-03 04:51:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.833(52), min 0.167(5), ave 0.771
Test execution time: sum 3837 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:51:27 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-03 04:51:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 11, redundant 3
Fitness: max 0.833(49), min 0.167(3), ave 0.792
Test execution time: sum 3366 ms, max 100 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:51:44 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-03 04:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 37 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 12, redundant 1
Fitness: max 0.833(46), min 0.167(6), ave 0.75
Test execution time: sum 3641 ms, max 170 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:52:01 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-03 04:52:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 53 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0.833(45), min 0.167(4), ave 0.779
Test execution time: sum 3121 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:52:17 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-03 04:52:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 14, redundant 2
Fitness: max 0.833(48), min 0.167(4), ave 0.773
Test execution time: sum 3769 ms, max 134 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:52:35 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-03 04:52:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 27 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 15, redundant 2
Fitness: max 0.833(52), min 0.167(2), ave 0.806
Test execution time: sum 3472 ms, max 87 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:52:51 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-03 04:53:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 43 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 17, redundant 3
Fitness: max 0.833(43), min 0.167(1), ave 0.815
Test execution time: sum 2871 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:53:07 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-03 04:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 14, redundant 3
Fitness: max 0.833(42), min 0.167(5), ave 0.759
Test execution time: sum 3181 ms, max 203 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:53:24 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-03 04:53:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 12, redundant 1
Fitness: max 0.833(51), min 0.167(4), ave 0.778
Test execution time: sum 3649 ms, max 84 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:53:41 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-03 04:53:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 35 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 12, redundant 2
Fitness: max 0.833(56), min 0.167(2), ave 0.805
Test execution time: sum 3949 ms, max 128 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:53:59 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-03 04:54:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 9, redundant 1
Fitness: max 0.833(52), min 0.167(2), ave 0.804
Test execution time: sum 3544 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:54:16 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-03 04:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 8, redundant 2
Fitness: max 0.833(56), min 0.167(2), ave 0.81
Test execution time: sum 3974 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:54:35 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-03 04:54:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 28 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0.833(50), min 0.167(4), ave 0.779
Test execution time: sum 3442 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 04:54:52 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-03 04:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 46 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 11, redundant 0
Fitness: max 0.833(58), min 0.167(4), ave 0.79
Test execution time: sum 4240 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:55:11 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-03 04:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 4 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 5, redundant 4
Fitness: max 0.833(53), min 0.167(3), ave 0.795
Test execution time: sum 3602 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:55:28 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-03 04:55:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 22 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 8, redundant 1
Fitness: max 0.833(59), min 0.167(1), ave 0.822
Test execution time: sum 4001 ms, max 95 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:55:47 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-03 04:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 40 seconds
Variants: generated 100, build-succeeded 49, build-failed 38, syntax-invalid 11, redundant 2
Fitness: max 0.833(47), min 0.167(2), ave 0.806
Test execution time: sum 3344 ms, max 129 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 04:56:04 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-03 04:56:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0.833(54), min 0.167(3), ave 0.794
Test execution time: sum 3750 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 04:56:22 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-03 04:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 10, redundant 2
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3764 ms, max 137 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 04:56:41 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-03 04:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 7, redundant 2
Fitness: max 0.833(56), min 0.167(3), ave 0.794
Test execution time: sum 3852 ms, max 83 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 04:56:59 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-03 05:12:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0.833(55), min 0.167(5), ave 0.778
Test execution time: sum 904238 ms, max 900126 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:12:18 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-03 05:12:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 7, redundant 2
Fitness: max 0.833(53), min 0.167(4), ave 0.778
Test execution time: sum 3878 ms, max 95 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 05:12:36 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-03 05:12:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 14 minutes 32 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 8, redundant 2
Fitness: max 0.833(60), min 0.167(2), ave 0.807
Test execution time: sum 4332 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:12:56 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-03 05:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 51 seconds
Variants: generated 100, build-succeeded 64, build-failed 26, syntax-invalid 4, redundant 6
Fitness: max 0.833(60), min 0.167(2), ave 0.805
Test execution time: sum 904256 ms, max 900119 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:28:15 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-03 05:28:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 11 seconds
Variants: generated 100, build-succeeded 70, build-failed 24, syntax-invalid 5, redundant 1
Fitness: max 0.833(67), min 0.167(2), ave 0.812
Test execution time: sum 4865 ms, max 228 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:28:36 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-03 05:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 0.833(56), min 0.167(2), ave 0.802
Test execution time: sum 3674 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 05:28:54 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-03 05:29:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 47 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 17, redundant 3
Fitness: max 0.833(49), min 0.833(49), ave 0.833
Test execution time: sum 3287 ms, max 79 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:29:11 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-03 05:29:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 15, redundant 1
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3331 ms, max 133 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:29:29 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-03 05:29:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 23 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 6, redundant 2
Fitness: max 0.833(58), min 0.333(1), ave 0.825
Test execution time: sum 3818 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:29:47 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-03 05:30:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 43 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 5, redundant 4
Fitness: max 0.833(60), min 0.167(1), ave 0.815
Test execution time: sum 4223 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:30:07 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-03 05:30:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 9, redundant 3
Fitness: max 0.833(57), min 0.167(1), ave 0.816
Test execution time: sum 3721 ms, max 81 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:30:26 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-03 05:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 9, redundant 6
Fitness: max 0.833(55), min 0.167(5), ave 0.778
Test execution time: sum 904200 ms, max 900134 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:45:46 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-03 05:46:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 39 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 16, redundant 5
Fitness: max 0.833(46), min 0.167(1), ave 0.819
Test execution time: sum 2982 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:46:03 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-03 05:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 57 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0.833(50), min 0.5(1), ave 0.827
Test execution time: sum 3345 ms, max 73 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:46:21 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-03 05:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 37, syntax-invalid 4, redundant 4
Fitness: max 0.833(51), min 0.167(4), ave 0.785
Test execution time: sum 3544 ms, max 124 ms, min 57 ms
----------------------------------------------------------------

2023-08-03 05:46:41 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-03 05:47:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 36 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 6, redundant 1
Fitness: max 0.833(58), min 0.167(3), ave 0.796
Test execution time: sum 4038 ms, max 89 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 05:47:00 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-03 05:47:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 55 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.833(50), min 0.167(3), ave 0.78
Test execution time: sum 3685 ms, max 130 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:47:19 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-03 05:47:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 15 seconds
Variants: generated 100, build-succeeded 63, build-failed 33, syntax-invalid 3, redundant 1
Fitness: max 0.833(61), min 0.167(1), ave 0.82
Test execution time: sum 4056 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 05:47:39 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-03 05:47:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 6, redundant 7
Fitness: max 0.833(59), min 0.167(2), ave 0.809
Test execution time: sum 4261 ms, max 174 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:47:59 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-03 05:48:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 3, redundant 3
Fitness: max 0.833(59), min 0.5(2), ave 0.82
Test execution time: sum 3993 ms, max 83 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:48:19 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-03 05:48:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 13 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 11, redundant 3
Fitness: max 0.833(50), min 0.167(3), ave 0.793
Test execution time: sum 3731 ms, max 122 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 05:48:38 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-03 05:48:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 33 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 6, redundant 1
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3786 ms, max 85 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:48:57 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-03 05:49:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 53 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.833(56), min 0.167(2), ave 0.808
Test execution time: sum 4113 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 05:49:17 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-03 05:49:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 11 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 11, redundant 5
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3476 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:49:36 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-03 05:49:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 6, redundant 7
Fitness: max 0.833(57), min 0.833(57), ave 0.833
Test execution time: sum 3919 ms, max 128 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:49:56 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-03 05:50:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 6, redundant 2
Fitness: max 0.833(58), min 0.167(1), ave 0.806
Test execution time: sum 3983 ms, max 82 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:50:15 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-03 05:50:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 11 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 10, redundant 4
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3827 ms, max 133 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 05:50:35 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-03 05:50:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 37, syntax-invalid 3, redundant 4
Fitness: max 0.833(53), min 0.167(1), ave 0.812
Test execution time: sum 3612 ms, max 88 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:50:54 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-03 05:51:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 5, redundant 3
Fitness: max 0.833(55), min 0.167(2), ave 0.805
Test execution time: sum 4012 ms, max 130 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:51:15 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-03 05:51:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 10 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 3, redundant 3
Fitness: max 0.833(59), min 0.167(3), ave 0.799
Test execution time: sum 4037 ms, max 80 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 05:51:35 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-03 05:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 31 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 4, redundant 3
Fitness: max 0.833(59), min 0.167(1), ave 0.82
Test execution time: sum 4171 ms, max 132 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 05:51:56 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-03 05:52:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 50 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 8, redundant 1
Fitness: max 0.833(54), min 0.167(4), ave 0.785
Test execution time: sum 3781 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 05:52:15 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-03 06:07:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 11 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 0.833(55), min 0.167(3), ave 0.794
Test execution time: sum 904373 ms, max 900114 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:07:35 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-03 06:07:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 30 seconds
Variants: generated 100, build-succeeded 67, build-failed 22, syntax-invalid 7, redundant 4
Fitness: max 0.833(65), min 0.167(2), ave 0.813
Test execution time: sum 4359 ms, max 86 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 06:07:54 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-03 06:08:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 9 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 14, redundant 5
Fitness: max 0.833(46), min 0.167(4), ave 0.778
Test execution time: sum 3452 ms, max 83 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 06:08:13 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-03 06:08:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 10 seconds
Variants: generated 100, build-succeeded 67, build-failed 27, syntax-invalid 4, redundant 2
Fitness: max 0.833(63), min 0.167(1), ave 0.813
Test execution time: sum 4365 ms, max 125 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:08:34 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-03 06:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 30 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.167(4), ave 0.789
Test execution time: sum 4504 ms, max 110 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 06:08:55 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-03 06:09:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 10 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 16, redundant 1
Fitness: max 0.833(45), min 0.167(5), ave 0.763
Test execution time: sum 3558 ms, max 144 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:09:14 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-03 06:09:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 8 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 19, redundant 2
Fitness: max 0.833(43), min 0.667(1), ave 0.83
Test execution time: sum 2988 ms, max 92 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:09:32 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-03 06:09:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 29 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 12, redundant 2
Fitness: max 0.833(56), min 0.167(4), ave 0.785
Test execution time: sum 4293 ms, max 129 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:09:53 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-03 06:10:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 11 minutes 48 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 11, redundant 1
Fitness: max 0.833(57), min 0.167(1), ave 0.814
Test execution time: sum 3796 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:10:13 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-03 06:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 7 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 15, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.796
Test execution time: sum 3566 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:10:32 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-03 06:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 27 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 14, redundant 3
Fitness: max 0.833(50), min 0.167(2), ave 0.8
Test execution time: sum 3618 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:10:52 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-03 06:11:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 minutes 47 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 15, redundant 3
Fitness: max 0.833(55), min 0.167(2), ave 0.805
Test execution time: sum 3917 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:11:11 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-03 06:11:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 6 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0.833(42), min 0.167(4), ave 0.765
Test execution time: sum 3262 ms, max 180 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 06:11:30 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-03 06:11:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 24 seconds
Variants: generated 100, build-succeeded 44, build-failed 26, syntax-invalid 25, redundant 5
Fitness: max 0.833(40), min 0.167(2), ave 0.795
Test execution time: sum 2875 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-03 06:11:48 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-03 06:12:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 20, redundant 1
Fitness: max 0.833(46), min 0.167(3), ave 0.778
Test execution time: sum 3820 ms, max 228 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:12:08 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-03 06:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.812
Test execution time: sum 3516 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:12:27 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-03 06:12:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 23 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 13, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.804
Test execution time: sum 3408 ms, max 78 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:12:47 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-03 06:13:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 19, redundant 6
Fitness: max 0.833(49), min 0.167(2), ave 0.807
Test execution time: sum 3446 ms, max 130 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:13:07 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-03 06:13:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 14, redundant 3
Fitness: max 0.833(52), min 0.167(3), ave 0.795
Test execution time: sum 3649 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:13:26 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-03 06:13:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0.833(49), min 0.167(2), ave 0.799
Test execution time: sum 3831 ms, max 143 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:13:47 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-03 06:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 42 seconds
Variants: generated 100, build-succeeded 58, build-failed 19, syntax-invalid 19, redundant 4
Fitness: max 0.833(52), min 0.167(4), ave 0.782
Test execution time: sum 3767 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:14:07 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-03 06:14:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 3 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 12, redundant 3
Fitness: max 0.833(55), min 0.167(1), ave 0.816
Test execution time: sum 4034 ms, max 78 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:14:28 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-03 06:14:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 24 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 16, redundant 2
Fitness: max 0.833(50), min 0.167(2), ave 0.798
Test execution time: sum 3841 ms, max 179 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:14:48 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-03 06:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 44 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 10, redundant 3
Fitness: max 0.833(53), min 0.5(1), ave 0.819
Test execution time: sum 3773 ms, max 80 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:15:08 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-03 06:15:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 4 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 17, redundant 5
Fitness: max 0.833(42), min 0.167(6), ave 0.75
Test execution time: sum 3259 ms, max 127 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:15:28 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-03 06:15:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 24 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.833(53), min 0.167(2), ave 0.798
Test execution time: sum 3701 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:15:49 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-03 06:16:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 45 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.167(5), ave 0.758
Test execution time: sum 3614 ms, max 208 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:16:10 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-03 06:16:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 5 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 20, redundant 4
Fitness: max 0.833(48), min 0.167(2), ave 0.798
Test execution time: sum 3455 ms, max 84 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:16:29 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-03 06:16:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 12, redundant 2
Fitness: max 1(1), min 0.167(2), ave 0.795
Test execution time: sum 4029 ms, max 85 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:16:50 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-03 06:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 47 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 4001 ms, max 123 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:17:11 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-03 06:17:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 16, redundant 1
Fitness: max 0.833(53), min 0.167(3), ave 0.795
Test execution time: sum 3762 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:17:32 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-03 06:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 27 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 16, redundant 4
Fitness: max 0.833(45), min 0.167(3), ave 0.783
Test execution time: sum 3409 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:17:52 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-03 06:18:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 49 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 3922 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:18:13 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-03 06:18:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 10 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 13, redundant 5
Fitness: max 0.833(59), min 0.167(1), ave 0.82
Test execution time: sum 4217 ms, max 129 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:18:35 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-03 06:18:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 30 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 15, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.812
Test execution time: sum 3533 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:18:55 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-03 06:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 48 seconds
Variants: generated 100, build-succeeded 47, build-failed 23, syntax-invalid 25, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.809
Test execution time: sum 3177 ms, max 114 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:19:13 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-03 06:19:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 22, syntax-invalid 19, redundant 3
Fitness: max 1(1), min 0.167(4), ave 0.771
Test execution time: sum 3778 ms, max 146 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:19:34 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-03 06:19:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 16, redundant 2
Fitness: max 0.833(53), min 0.167(3), ave 0.793
Test execution time: sum 3888 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:19:55 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-03 06:20:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 51 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 18, redundant 4
Fitness: max 0.833(49), min 0.167(2), ave 0.807
Test execution time: sum 3691 ms, max 244 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:20:16 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-03 06:20:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 12 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 16, redundant 0
Fitness: max 1(1), min 0.167(4), ave 0.785
Test execution time: sum 3552 ms, max 82 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:20:36 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-03 06:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 31 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 25, redundant 0
Fitness: max 0.833(42), min 0.167(2), ave 0.793
Test execution time: sum 3151 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:20:56 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-03 06:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 51 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 23, redundant 2
Fitness: max 0.833(41), min 0.167(5), ave 0.755
Test execution time: sum 3152 ms, max 134 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:21:15 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-03 06:21:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 10 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 25, redundant 3
Fitness: max 0.833(39), min 0.167(2), ave 0.791
Test execution time: sum 2829 ms, max 83 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:21:34 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-03 06:21:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 29 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 25, redundant 1
Fitness: max 0.833(44), min 0.167(1), ave 0.819
Test execution time: sum 3255 ms, max 128 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:21:54 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-03 06:22:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 49 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 18, redundant 5
Fitness: max 0.833(44), min 0.167(3), ave 0.788
Test execution time: sum 3164 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:22:14 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-03 06:22:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 23, syntax-invalid 23, redundant 2
Fitness: max 0.833(44), min 0.167(5), ave 0.756
Test execution time: sum 3469 ms, max 103 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:22:34 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-03 06:22:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 30 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 22, redundant 5
Fitness: max 0.833(36), min 0.167(5), ave 0.748
Test execution time: sum 2971 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:22:54 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-03 06:23:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 50 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 20, redundant 7
Fitness: max 0.833(41), min 0.167(2), ave 0.784
Test execution time: sum 3115 ms, max 84 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:23:14 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-03 06:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 12 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 15, redundant 2
Fitness: max 1(1), min 0.167(2), ave 0.808
Test execution time: sum 3777 ms, max 131 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:23:37 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-03 06:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 14, redundant 2
Fitness: max 0.833(52), min 0.167(6), ave 0.761
Test execution time: sum 3939 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:23:58 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-03 06:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 55 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 16, redundant 5
Fitness: max 0.833(42), min 0.167(3), ave 0.784
Test execution time: sum 3212 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:24:20 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-03 06:24:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 16 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 20, redundant 2
Fitness: max 0.833(45), min 0.167(4), ave 0.768
Test execution time: sum 3467 ms, max 132 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:24:40 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-03 06:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 36 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 18, redundant 3
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3338 ms, max 80 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:25:01 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-03 06:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 19, redundant 1
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3618 ms, max 127 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:25:23 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-03 06:25:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 21 seconds
Variants: generated 100, build-succeeded 63, build-failed 20, syntax-invalid 16, redundant 1
Fitness: max 1(1), min 0.167(4), ave 0.786
Test execution time: sum 4114 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:25:45 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-03 06:26:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 42 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 16, redundant 3
Fitness: max 0.833(43), min 0.167(1), ave 0.806
Test execution time: sum 3374 ms, max 76 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:26:06 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-03 06:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 18, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 3693 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:26:29 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-03 06:26:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 26 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 23, redundant 4
Fitness: max 0.833(47), min 0.833(47), ave 0.833
Test execution time: sum 3238 ms, max 80 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:26:51 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-03 06:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 13, redundant 0
Fitness: max 1(1), min 0.167(3), ave 0.801
Test execution time: sum 3851 ms, max 135 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:27:14 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-03 06:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 13 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 12, redundant 4
Fitness: max 0.833(49), min 0.167(2), ave 0.794
Test execution time: sum 3630 ms, max 78 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:27:37 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-03 06:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 38 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 9, redundant 5
Fitness: max 0.833(61), min 0.5(1), ave 0.825
Test execution time: sum 4363 ms, max 132 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:28:02 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-03 06:28:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 2 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 11, redundant 2
Fitness: max 1(1), min 0.167(3), ave 0.796
Test execution time: sum 4173 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:28:26 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-03 06:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3743 ms, max 132 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:28:49 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-03 06:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 48 seconds
Variants: generated 100, build-succeeded 57, build-failed 21, syntax-invalid 17, redundant 5
Fitness: max 0.833(56), min 0.667(1), ave 0.83
Test execution time: sum 3778 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:29:12 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-03 06:29:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 4004 ms, max 130 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:29:36 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-03 06:29:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0.5(1), ave 0.827
Test execution time: sum 3605 ms, max 93 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:29:59 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-03 06:30:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 21, redundant 1
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3889 ms, max 79 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:30:23 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-03 06:30:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 21 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0.833(45), min 0.167(2), ave 0.805
Test execution time: sum 3210 ms, max 143 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:30:46 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-03 06:31:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 43 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 17, redundant 7
Fitness: max 0.833(40), min 0.167(4), ave 0.773
Test execution time: sum 2936 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:31:08 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-03 06:31:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 16, redundant 0
Fitness: max 0.833(50), min 0.167(2), ave 0.802
Test execution time: sum 3781 ms, max 128 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:31:32 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-03 06:31:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 31 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 13, redundant 6
Fitness: max 0.833(48), min 0.667(1), ave 0.83
Test execution time: sum 3257 ms, max 81 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:31:56 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-03 06:32:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 17, redundant 4
Fitness: max 0.833(49), min 0.167(1), ave 0.817
Test execution time: sum 3663 ms, max 136 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:32:20 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-03 06:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 17 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 20, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.814
Test execution time: sum 2954 ms, max 86 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:32:41 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-03 06:33:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 41 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.167(1), ave 0.823
Test execution time: sum 3376 ms, max 76 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:33:05 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-03 06:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 6 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.801
Test execution time: sum 3925 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:33:31 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-03 06:33:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 31 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 15, redundant 2
Fitness: max 0.833(50), min 0.167(4), ave 0.777
Test execution time: sum 3799 ms, max 78 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:33:55 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-03 06:34:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 55 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 17, redundant 4
Fitness: max 0.833(51), min 0.167(3), ave 0.789
Test execution time: sum 3917 ms, max 151 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:34:20 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-03 06:34:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 18, redundant 4
Fitness: max 0.833(49), min 0.167(4), ave 0.783
Test execution time: sum 3552 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:34:43 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-03 06:35:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 44 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 10, redundant 3
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3878 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:35:09 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-03 06:35:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 8 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 0.833(52), min 0.167(2), ave 0.809
Test execution time: sum 3625 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:35:32 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-03 06:35:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 34 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 13, redundant 4
Fitness: max 0.833(55), min 0.5(1), ave 0.819
Test execution time: sum 4203 ms, max 127 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:35:59 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-03 06:36:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 58 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 18, redundant 3
Fitness: max 0.833(47), min 0.167(2), ave 0.794
Test execution time: sum 3392 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:36:22 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-03 06:36:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 21 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.167(3), ave 0.785
Test execution time: sum 3337 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:36:45 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-03 06:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 47 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 10, redundant 7
Fitness: max 0.833(55), min 0.167(3), ave 0.794
Test execution time: sum 4066 ms, max 128 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:37:11 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-03 06:37:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 11 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 13, redundant 7
Fitness: max 0.833(50), min 0.167(6), ave 0.756
Test execution time: sum 3893 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:37:36 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-03 06:38:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 38 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.805
Test execution time: sum 4205 ms, max 225 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:38:02 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-03 06:38:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 3 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.833(52), min 0.167(1), ave 0.807
Test execution time: sum 3797 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:38:27 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-03 06:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 18, redundant 3
Fitness: max 0.833(48), min 0.167(4), ave 0.772
Test execution time: sum 3877 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:38:52 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-03 06:39:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 21, syntax-invalid 17, redundant 7
Fitness: max 0.833(49), min 0.167(3), ave 0.785
Test execution time: sum 3682 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:39:17 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-03 06:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 15, redundant 2
Fitness: max 0.833(52), min 0.167(4), ave 0.786
Test execution time: sum 4100 ms, max 131 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:39:42 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-03 06:40:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 42 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 17, redundant 2
Fitness: max 0.833(41), min 0.167(5), ave 0.755
Test execution time: sum 3112 ms, max 82 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:40:06 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-03 06:40:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 12, redundant 4
Fitness: max 0.833(46), min 0.167(5), ave 0.766
Test execution time: sum 3661 ms, max 82 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:40:32 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-03 06:40:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 33 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 12, redundant 5
Fitness: max 0.833(53), min 0.167(5), ave 0.774
Test execution time: sum 4021 ms, max 139 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:40:58 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-03 06:41:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 57 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 16, redundant 0
Fitness: max 0.833(46), min 0.167(5), ave 0.766
Test execution time: sum 3502 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:41:22 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-03 06:41:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 23 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 12, redundant 7
Fitness: max 0.833(54), min 0.167(1), ave 0.816
Test execution time: sum 3963 ms, max 135 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:41:48 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-03 06:42:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 49 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 12, redundant 6
Fitness: max 0.833(53), min 0.167(3), ave 0.795
Test execution time: sum 3900 ms, max 86 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:42:13 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-03 06:42:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 15 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.833(47), min 0.167(5), ave 0.767
Test execution time: sum 3804 ms, max 133 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:42:39 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-03 06:43:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 41 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 9, redundant 4
Fitness: max 0.833(57), min 0.167(5), ave 0.78
Test execution time: sum 4158 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:43:06 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-03 06:43:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 7 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 15, redundant 10
Fitness: max 0.833(45), min 0.167(5), ave 0.767
Test execution time: sum 3558 ms, max 142 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:43:31 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-03 06:43:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 8, redundant 8
Fitness: max 0.833(49), min 0.167(6), ave 0.761
Test execution time: sum 3665 ms, max 84 ms, min 59 ms
----------------------------------------------------------------

2023-08-03 06:43:58 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-03 06:44:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 10, redundant 1
Fitness: max 0.833(50), min 0.167(2), ave 0.802
Test execution time: sum 3877 ms, max 132 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 06:44:26 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-03 06:44:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 27 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0.833(47), min 0.167(3), ave 0.783
Test execution time: sum 3596 ms, max 85 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:44:51 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-03 06:45:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 21, redundant 5
Fitness: max 0.833(43), min 0.167(1), ave 0.802
Test execution time: sum 3364 ms, max 78 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:45:15 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-03 06:45:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 16 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 17, redundant 8
Fitness: max 0.833(42), min 0.5(2), ave 0.815
Test execution time: sum 3115 ms, max 139 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:45:40 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-03 06:46:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 42 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 0.833(47), min 0.167(4), ave 0.779
Test execution time: sum 3595 ms, max 83 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:46:06 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-03 06:46:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 9, redundant 1
Fitness: max 0.833(50), min 0.167(8), ave 0.741
Test execution time: sum 3982 ms, max 120 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:46:34 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-03 06:47:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 12, redundant 5
Fitness: max 0.833(46), min 0.167(2), ave 0.803
Test execution time: sum 3366 ms, max 86 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:47:00 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-03 06:47:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 7, redundant 7
Fitness: max 0.833(53), min 0.167(5), ave 0.772
Test execution time: sum 4321 ms, max 142 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:47:29 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-03 06:47:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 21, syntax-invalid 10, redundant 9
Fitness: max 1(1), min 0.167(2), ave 0.814
Test execution time: sum 4131 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:47:57 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-03 06:48:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 7, redundant 6
Fitness: max 0.833(54), min 0.167(3), ave 0.794
Test execution time: sum 4284 ms, max 148 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:48:26 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-03 06:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 29 seconds
Variants: generated 100, build-succeeded 67, build-failed 24, syntax-invalid 7, redundant 2
Fitness: max 0.833(59), min 0.167(3), ave 0.791
Test execution time: sum 4565 ms, max 80 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:48:54 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-03 06:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 6, redundant 5
Fitness: max 0.833(59), min 0.167(1), ave 0.82
Test execution time: sum 4257 ms, max 145 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:49:24 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-03 06:49:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 26 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 3750 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:49:51 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-03 06:50:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 56 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 4484 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:50:20 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-03 06:50:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 24 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 9, redundant 2
Fitness: max 0.833(49), min 0.167(2), ave 0.796
Test execution time: sum 3792 ms, max 85 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 06:50:49 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-03 06:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 52 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 11, redundant 5
Fitness: max 0.833(44), min 0.167(3), ave 0.791
Test execution time: sum 3351 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:51:17 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-03 06:51:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 10, redundant 1
Fitness: max 1(1), min 0.167(3), ave 0.8
Test execution time: sum 3698 ms, max 83 ms, min 60 ms
----------------------------------------------------------------

2023-08-03 06:51:45 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-03 06:52:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 49 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 0.833(55), min 0.167(1), ave 0.819
Test execution time: sum 4110 ms, max 142 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 06:52:14 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-03 06:52:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0.833(46), min 0.167(2), ave 0.789
Test execution time: sum 3628 ms, max 88 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:52:42 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-03 06:53:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 15, redundant 5
Fitness: max 0.833(49), min 0.167(3), ave 0.789
Test execution time: sum 3794 ms, max 132 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:53:10 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-03 06:53:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 15 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4110 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:53:39 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-03 06:54:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 16, redundant 5
Fitness: max 0.833(51), min 0.167(1), ave 0.821
Test execution time: sum 3782 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:54:07 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-03 06:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 12 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 6, redundant 6
Fitness: max 0.833(60), min 0.167(2), ave 0.81
Test execution time: sum 4367 ms, max 83 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 06:54:36 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-03 06:55:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 7, redundant 7
Fitness: max 0.833(58), min 0.667(1), ave 0.831
Test execution time: sum 4296 ms, max 140 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 06:55:06 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-03 06:55:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 9 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 12, redundant 7
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3635 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:55:33 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-03 06:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 39 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 7, redundant 5
Fitness: max 0.833(59), min 0.167(2), ave 0.807
Test execution time: sum 4567 ms, max 143 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:56:04 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-03 06:56:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 9 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 6, redundant 8
Fitness: max 0.833(58), min 0.167(3), ave 0.798
Test execution time: sum 4247 ms, max 83 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:56:33 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-03 06:57:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0.833(51), min 0.167(3), ave 0.796
Test execution time: sum 3982 ms, max 219 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:57:03 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-03 06:57:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 6 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 8, redundant 8
Fitness: max 0.833(47), min 0.167(4), ave 0.779
Test execution time: sum 3580 ms, max 87 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:57:31 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-03 06:58:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 8, redundant 13
Fitness: max 0.833(46), min 0.167(5), ave 0.762
Test execution time: sum 3941 ms, max 132 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:58:00 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-03 06:58:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 6, redundant 14
Fitness: max 0.833(42), min 0.167(3), ave 0.773
Test execution time: sum 3462 ms, max 87 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:58:29 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-03 06:58:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 9, redundant 16
Fitness: max 0.833(46), min 0.167(2), ave 0.806
Test execution time: sum 3508 ms, max 81 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 06:58:58 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-03 06:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 2 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 11, redundant 13
Fitness: max 0.833(46), min 0.167(1), ave 0.819
Test execution time: sum 3313 ms, max 134 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 06:59:26 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-03 06:59:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 3, redundant 10
Fitness: max 0.833(55), min 0.167(2), ave 0.803
Test execution time: sum 4138 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 06:59:56 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-03 07:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 4, redundant 16
Fitness: max 0.833(53), min 0.167(1), ave 0.821
Test execution time: sum 3840 ms, max 136 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:00:27 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-03 07:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 13, redundant 10
Fitness: max 0.833(43), min 0.167(3), ave 0.78
Test execution time: sum 903662 ms, max 900134 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:15:56 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-03 07:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 6, redundant 10
Fitness: max 0.833(58), min 0.5(1), ave 0.825
Test execution time: sum 4418 ms, max 142 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:16:27 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-03 07:16:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 32 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 6, redundant 14
Fitness: max 0.833(48), min 0.667(1), ave 0.83
Test execution time: sum 3416 ms, max 88 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:16:56 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-03 07:17:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 2 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 4, redundant 10
Fitness: max 0.833(56), min 0.167(2), ave 0.81
Test execution time: sum 4264 ms, max 134 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:17:27 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-03 07:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 10, redundant 15
Fitness: max 0.833(47), min 0.167(2), ave 0.796
Test execution time: sum 3689 ms, max 81 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 07:17:55 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-03 07:18:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 2 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 6, redundant 11
Fitness: max 0.833(55), min 0.167(1), ave 0.814
Test execution time: sum 4385 ms, max 142 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:18:26 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-03 07:18:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 31 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 12, redundant 7
Fitness: max 0.833(54), min 0.167(1), ave 0.818
Test execution time: sum 3802 ms, max 85 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:18:55 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-03 07:19:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 13, redundant 7
Fitness: max 0.833(52), min 0.167(3), ave 0.797
Test execution time: sum 4172 ms, max 211 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:19:24 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-03 07:19:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 28 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 11, redundant 12
Fitness: max 0.833(46), min 0.5(1), ave 0.82
Test execution time: sum 3372 ms, max 85 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:19:52 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-03 07:20:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 15, redundant 7
Fitness: max 0.833(47), min 0.167(2), ave 0.801
Test execution time: sum 3637 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:20:20 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-03 07:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 26 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 7, redundant 9
Fitness: max 0.833(50), min 0.167(2), ave 0.802
Test execution time: sum 3810 ms, max 128 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:20:50 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-03 07:21:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 8, redundant 3
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4321 ms, max 105 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:21:21 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-03 07:21:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 22, syntax-invalid 20, redundant 4
Fitness: max 0.833(48), min 0.167(4), ave 0.778
Test execution time: sum 3946 ms, max 236 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:21:49 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-03 07:22:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 55 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 12, redundant 7
Fitness: max 0.833(49), min 0.5(1), ave 0.821
Test execution time: sum 3658 ms, max 84 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:22:20 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-03 07:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 24 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 16, redundant 8
Fitness: max 0.833(44), min 0.667(2), ave 0.826
Test execution time: sum 3439 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:22:48 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-03 07:23:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 52 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 15, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.804
Test execution time: sum 3580 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:23:17 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-03 07:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 23 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 14, redundant 3
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3926 ms, max 145 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:23:47 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-03 07:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.833(54), min 0.5(1), ave 0.822
Test execution time: sum 3910 ms, max 83 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:24:17 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-03 07:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 11, redundant 3
Fitness: max 0.833(53), min 0.667(6), ave 0.816
Test execution time: sum 4302 ms, max 124 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:24:48 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-03 07:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 14, redundant 4
Fitness: max 0.833(51), min 0.667(3), ave 0.824
Test execution time: sum 3728 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:25:17 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-03 07:25:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 24 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 11, redundant 4
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3849 ms, max 134 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:25:49 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-03 07:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 16, redundant 4
Fitness: max 0.833(53), min 0.167(1), ave 0.821
Test execution time: sum 3866 ms, max 92 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:26:18 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-03 07:26:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 26 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 10, redundant 2
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4577 ms, max 223 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:26:50 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-03 07:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 19, redundant 3
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3565 ms, max 82 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:27:18 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-03 07:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 26 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 10, redundant 4
Fitness: max 0.833(59), min 0.167(1), ave 0.815
Test execution time: sum 4586 ms, max 137 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:27:50 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-03 07:28:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 58 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 9, redundant 2
Fitness: max 0.833(60), min 0.167(2), ave 0.807
Test execution time: sum 4400 ms, max 87 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:28:22 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-03 07:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 15, redundant 3
Fitness: max 0.833(54), min 0.667(4), ave 0.822
Test execution time: sum 4215 ms, max 133 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:28:54 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-03 07:29:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3774 ms, max 89 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:29:26 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-03 07:29:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 18, redundant 4
Fitness: max 0.833(47), min 0.167(1), ave 0.813
Test execution time: sum 3735 ms, max 130 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:29:56 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-03 07:30:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 0 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0.833(46), min 0.667(3), ave 0.823
Test execution time: sum 3350 ms, max 85 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:30:25 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-03 07:30:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 32 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 15, redundant 2
Fitness: max 0.833(54), min 0.667(4), ave 0.822
Test execution time: sum 4324 ms, max 134 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:30:56 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-03 07:31:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 12, redundant 2
Fitness: max 0.833(54), min 0.667(5), ave 0.819
Test execution time: sum 4088 ms, max 85 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:31:27 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-03 07:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 35 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 11, redundant 5
Fitness: max 0.833(57), min 0.167(1), ave 0.819
Test execution time: sum 4372 ms, max 135 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:31:59 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-03 07:32:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 15, redundant 1
Fitness: max 0.833(53), min 0.667(5), ave 0.819
Test execution time: sum 3997 ms, max 83 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:32:30 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-03 07:33:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 38 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 15, redundant 3
Fitness: max 0.833(54), min 0.167(2), ave 0.799
Test execution time: sum 4408 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:33:02 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-03 07:33:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 13, redundant 2
Fitness: max 0.833(54), min 0.167(1), ave 0.818
Test execution time: sum 3933 ms, max 87 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:33:35 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-03 07:34:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 11, redundant 3
Fitness: max 0.833(58), min 0.167(1), ave 0.819
Test execution time: sum 4550 ms, max 142 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:34:09 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-03 07:34:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0.833(51), min 0.167(1), ave 0.812
Test execution time: sum 3879 ms, max 89 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:34:41 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-03 07:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 19, redundant 5
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3991 ms, max 218 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:35:13 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-03 07:35:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 21 seconds
Variants: generated 100, build-succeeded 67, build-failed 15, syntax-invalid 12, redundant 6
Fitness: max 0.833(61), min 0.167(2), ave 0.803
Test execution time: sum 4661 ms, max 81 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:35:46 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-03 07:36:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 54 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 4106 ms, max 144 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 07:36:18 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-03 07:36:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 28 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 11, redundant 3
Fitness: max 0.833(59), min 0.5(2), ave 0.817
Test execution time: sum 4520 ms, max 85 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:36:52 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-03 07:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 59 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 20, redundant 8
Fitness: max 0.833(42), min 0.5(1), ave 0.822
Test execution time: sum 3432 ms, max 218 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:37:23 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-03 07:37:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.818
Test execution time: sum 3871 ms, max 87 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:37:56 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-03 07:38:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 6 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 16, redundant 4
Fitness: max 0.833(53), min 0.667(2), ave 0.827
Test execution time: sum 4248 ms, max 140 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:38:30 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-03 07:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.833(52), min 0.167(1), ave 0.812
Test execution time: sum 3976 ms, max 90 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:39:02 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-03 07:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 13 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 10, redundant 1
Fitness: max 0.833(57), min 0.167(3), ave 0.796
Test execution time: sum 4703 ms, max 145 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:39:37 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-03 07:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.667(3), ave 0.824
Test execution time: sum 3936 ms, max 93 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:40:11 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-03 07:40:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 23 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 9, redundant 1
Fitness: max 0.833(49), min 0.167(2), ave 0.786
Test execution time: sum 4463 ms, max 147 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:40:47 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-03 07:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 55 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 0.833(53), min 0.667(2), ave 0.827
Test execution time: sum 3853 ms, max 84 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:41:19 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-03 07:41:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 28 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 16, redundant 5
Fitness: max 0.833(43), min 0.167(1), ave 0.806
Test execution time: sum 3663 ms, max 150 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 07:41:53 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-03 07:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 15, redundant 4
Fitness: max 0.833(54), min 0.667(2), ave 0.827
Test execution time: sum 4018 ms, max 89 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:42:25 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-03 07:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 34 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 0.833(51), min 0.667(4), ave 0.821
Test execution time: sum 4214 ms, max 141 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 07:42:59 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-03 07:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 6 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 19, redundant 3
Fitness: max 0.833(44), min 0.667(1), ave 0.83
Test execution time: sum 3329 ms, max 87 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 07:43:30 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-03 07:44:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 15, redundant 4
Fitness: max 0.833(48), min 0.667(3), ave 0.824
Test execution time: sum 3962 ms, max 153 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:44:03 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-03 07:44:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 8 seconds
Variants: generated 100, build-succeeded 48, build-failed 25, syntax-invalid 20, redundant 7
Fitness: max 0.833(44), min 0.167(1), ave 0.809
Test execution time: sum 3399 ms, max 82 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:44:33 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-03 07:45:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 22, syntax-invalid 21, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.794
Test execution time: sum 4143 ms, max 143 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:45:04 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-03 07:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 10 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 20, redundant 6
Fitness: max 0.833(39), min 0.667(6), ave 0.811
Test execution time: sum 3197 ms, max 90 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:45:34 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-03 07:46:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 15, redundant 3
Fitness: max 0.833(54), min 0.667(4), ave 0.822
Test execution time: sum 4328 ms, max 128 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:46:08 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-03 07:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 16 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 11, redundant 1
Fitness: max 0.833(55), min 0.667(1), ave 0.83
Test execution time: sum 3918 ms, max 83 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:46:41 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-03 07:47:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 19, redundant 2
Fitness: max 0.833(47), min 0.167(4), ave 0.775
Test execution time: sum 4143 ms, max 131 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:47:14 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-03 07:47:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 25 seconds
Variants: generated 100, build-succeeded 64, build-failed 22, syntax-invalid 8, redundant 6
Fitness: max 0.833(56), min 0.167(1), ave 0.805
Test execution time: sum 4618 ms, max 87 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:47:49 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-03 07:48:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 12, redundant 2
Fitness: max 0.833(54), min 0.167(2), ave 0.795
Test execution time: sum 4617 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-03 07:48:25 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-03 07:48:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 19, redundant 1
Fitness: max 0.833(47), min 0.167(2), ave 0.796
Test execution time: sum 3810 ms, max 85 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:48:57 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-03 07:49:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 5 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 20, redundant 1
Fitness: max 0.833(41), min 0.667(3), ave 0.822
Test execution time: sum 3409 ms, max 156 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:49:30 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-03 07:50:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.819
Test execution time: sum 4134 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:50:04 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-03 07:50:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 16 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 14, redundant 0
Fitness: max 0.833(56), min 0.167(1), ave 0.807
Test execution time: sum 4723 ms, max 138 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:50:40 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-03 07:51:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 49 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 15, redundant 4
Fitness: max 0.833(49), min 0.167(2), ave 0.797
Test execution time: sum 3935 ms, max 83 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:51:14 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-03 07:51:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 17, redundant 4
Fitness: max 0.833(48), min 0.5(1), ave 0.814
Test execution time: sum 4038 ms, max 150 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 07:51:48 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-03 07:52:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 0 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.833(56), min 0.167(1), ave 0.811
Test execution time: sum 4405 ms, max 88 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:52:25 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-03 07:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 15, redundant 2
Fitness: max 0.833(52), min 0.167(2), ave 0.797
Test execution time: sum 4411 ms, max 147 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:53:00 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-03 07:53:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 11 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 14, redundant 4
Fitness: max 0.833(45), min 0.667(2), ave 0.826
Test execution time: sum 3518 ms, max 90 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:53:35 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-03 07:54:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 46 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 14, redundant 5
Fitness: max 0.833(53), min 0.667(4), ave 0.822
Test execution time: sum 4289 ms, max 151 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:54:11 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-03 07:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 21 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 13, redundant 4
Fitness: max 0.833(50), min 0.667(3), ave 0.824
Test execution time: sum 3952 ms, max 91 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:54:45 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-03 07:55:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 4273 ms, max 142 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:55:21 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-03 07:55:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 15, redundant 1
Fitness: max 0.833(49), min 0.167(3), ave 0.79
Test execution time: sum 3839 ms, max 82 ms, min 61 ms
----------------------------------------------------------------

2023-08-03 07:55:55 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-03 07:56:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 9 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 9, redundant 0
Fitness: max 0.833(57), min 0.167(3), ave 0.796
Test execution time: sum 4618 ms, max 135 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 07:56:33 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-03 07:57:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 46 seconds
Variants: generated 100, build-succeeded 64, build-failed 25, syntax-invalid 10, redundant 1
Fitness: max 0.833(58), min 0.167(3), ave 0.789
Test execution time: sum 4688 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 07:57:10 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-03 07:57:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 24 seconds
Variants: generated 100, build-succeeded 69, build-failed 20, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.812
Test execution time: sum 5146 ms, max 133 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 07:57:48 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-03 07:58:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 8, redundant 3
Fitness: max 0.833(57), min 0.833(57), ave 0.833
Test execution time: sum 4258 ms, max 86 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 07:58:25 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-03 07:59:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 22, syntax-invalid 17, redundant 2
Fitness: max 0.833(52), min 0.167(2), ave 0.797
Test execution time: sum 4451 ms, max 143 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 07:59:01 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-03 07:59:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 16, redundant 2
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3848 ms, max 89 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 07:59:36 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-03 08:00:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 47 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 17, redundant 2
Fitness: max 0.833(51), min 0.667(3), ave 0.824
Test execution time: sum 4086 ms, max 139 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 08:00:11 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-03 08:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 22 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 16, redundant 5
Fitness: max 0.833(49), min 0.167(3), ave 0.786
Test execution time: sum 4051 ms, max 87 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:00:46 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-03 08:01:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 57 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 21, redundant 0
Fitness: max 0.833(49), min 0.167(1), ave 0.811
Test execution time: sum 4040 ms, max 160 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 08:01:22 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-03 08:01:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 30 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 23, redundant 4
Fitness: max 0.833(39), min 0.167(1), ave 0.81
Test execution time: sum 3114 ms, max 88 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 08:01:55 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-03 08:02:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 21, redundant 3
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 4184 ms, max 143 ms, min 70 ms
----------------------------------------------------------------

2023-08-03 08:02:31 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-03 08:03:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 18, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.818
Test execution time: sum 3941 ms, max 89 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:03:06 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-03 08:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 19 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 17, redundant 3
Fitness: max 0.833(45), min 0.167(1), ave 0.807
Test execution time: sum 4001 ms, max 144 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 08:03:43 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-03 08:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 53 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 26, redundant 0
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 3482 ms, max 94 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 08:04:17 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-03 08:04:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 15, redundant 3
Fitness: max 0.833(54), min 0.667(5), ave 0.819
Test execution time: sum 4561 ms, max 150 ms, min 68 ms
----------------------------------------------------------------

2023-08-03 08:04:55 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-03 08:05:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 8 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 13, redundant 6
Fitness: max 0.833(51), min 0.167(2), ave 0.801
Test execution time: sum 4036 ms, max 92 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:05:33 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-03 08:06:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 44 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 17, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.819
Test execution time: sum 3616 ms, max 145 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 08:06:09 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-03 08:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 19 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0.833(44), min 0.167(2), ave 0.793
Test execution time: sum 3601 ms, max 91 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 08:06:43 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-03 08:07:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 56 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 17, redundant 3
Fitness: max 0.833(51), min 0.667(2), ave 0.827
Test execution time: sum 4148 ms, max 135 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 08:07:20 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-03 08:07:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 22, redundant 2
Fitness: max 0.833(42), min 0.167(1), ave 0.793
Test execution time: sum 3585 ms, max 94 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 08:07:55 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-03 08:08:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 5 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 21, redundant 4
Fitness: max 1(1), min 0.5(1), ave 0.819
Test execution time: sum 3474 ms, max 143 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 08:08:30 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-03 08:09:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 40 seconds
Variants: generated 100, build-succeeded 50, build-failed 23, syntax-invalid 23, redundant 4
Fitness: max 0.833(46), min 0.167(1), ave 0.81
Test execution time: sum 3649 ms, max 85 ms, min 65 ms
----------------------------------------------------------------

2023-08-03 08:09:05 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-03 08:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 16 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 23, redundant 2
Fitness: max 0.833(47), min 0.167(1), ave 0.819
Test execution time: sum 3649 ms, max 142 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 08:09:40 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-03 08:10:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 18, redundant 2
Fitness: max 0.833(48), min 0.167(2), ave 0.793
Test execution time: sum 3938 ms, max 85 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:10:16 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-03 08:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 18, redundant 1
Fitness: max 0.833(52), min 0.167(1), ave 0.812
Test execution time: sum 4296 ms, max 228 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 08:10:53 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-03 08:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 4 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 23, redundant 1
Fitness: max 0.833(47), min 0.167(1), ave 0.813
Test execution time: sum 3660 ms, max 86 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:11:29 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-03 08:12:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 41 seconds
Variants: generated 100, build-succeeded 56, build-failed 21, syntax-invalid 21, redundant 2
Fitness: max 0.833(54), min 0.667(2), ave 0.827
Test execution time: sum 4299 ms, max 136 ms, min 69 ms
----------------------------------------------------------------

2023-08-03 08:12:05 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-03 08:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 14, redundant 3
Fitness: max 0.833(57), min 0.5(1), ave 0.825
Test execution time: sum 4466 ms, max 87 ms, min 66 ms
----------------------------------------------------------------

2023-08-03 08:12:44 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-03 08:13:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 21, syntax-invalid 22, redundant 6
Fitness: max 0.833(48), min 0.167(2), ave 0.804
Test execution time: sum 3867 ms, max 153 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:13:20 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-03 08:13:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 31 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 19, redundant 3
Fitness: max 0.833(42), min 0.167(3), ave 0.781
Test execution time: sum 3725 ms, max 87 ms, min 64 ms
----------------------------------------------------------------

2023-08-03 08:13:55 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-03 08:14:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 6 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 24, redundant 0
Fitness: max 0.833(37), min 0.667(4), ave 0.817
Test execution time: sum 3135 ms, max 156 ms, min 67 ms
----------------------------------------------------------------

2023-08-03 08:14:31 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-03 08:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 42 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 25, redundant 3
Fitness: max 0.833(44), min 0.167(2), ave 0.799
Test execution time: sum 3547 ms, max 85 ms, min 63 ms
----------------------------------------------------------------

2023-08-03 08:15:06 [main] [INFO]  KGenProgMain - GA stopped
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v336)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v336)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v336)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v336)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v618)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v618)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v618)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v618)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v618)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v826)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v826)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v826)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v826)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1246)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1246)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1246)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1246)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1246)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,8 +99,9 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
+		clearResult();
+        verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1304)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1304)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1304)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1304)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1304)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -163,7 +162,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v1734)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,19 +112,17 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
         // reduce interval if min and initial bracket the root
-        if (yInitial * yMin < 0) {
+        if (Math.abs(yMin) <= functionValueAccuracy) {
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
 
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,8 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2702)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2702)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2702)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +242,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+				resultComputed = true;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,8 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v2708)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            int i = 1;
             return result;
         }
 
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -245,7 +245,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,6 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3348)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +227,8 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        x2 = x0;
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -245,7 +244,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3505)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3505)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3505)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3505)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3505)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
@@ -309,7 +309,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v3807)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4337)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4521)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,12 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,6 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
     }
 
     /**
@@ -246,10 +245,6 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
-                    "function values at endpoints do not have different signs.  " +
-                    "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                    lower, upper, function.value(lower), function.value(upper));
         }
     }
 }
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,8 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4538)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -245,7 +244,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4549)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int numIterations = 0;
             return result;
         }
 
@@ -245,7 +244,12 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4909)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4909)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4909)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4909)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v4909)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,8 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
+        double fmin;
+		clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +245,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:09 [main] [INFO]  PatchLogExporter - patch (v5021)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +226,8 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        x2 = x0;
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -245,7 +243,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v5117)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +179,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+                {
+					resultComputed = true;
+					return result;
+				}
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +245,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -141,6 +141,7 @@
         this.result         = newResult;
         this.iterationCount = iterationCount;
         this.resultComputed = true;
+		double fmin;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v6645)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifyInterval(min, max);
             return result;
         }
 
@@ -165,7 +163,8 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
+        double fmin;
+		clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v8502)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9219)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9219)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,9 +59,9 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9219)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9721)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,12 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,9 +59,11 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v9937)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +162,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -245,7 +241,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10433)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10433)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10433)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10433)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10433)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10727)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10727)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10727)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10727)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10727)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +185,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            double x0 = min;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +242,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10912)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10912)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,9 +59,10 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v10912)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.iterationCount = iterationCount;
             return result;
         }
 
@@ -189,7 +187,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            double x0 = min;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +244,16 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11821)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,7 +174,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
@@ -189,7 +186,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            double x0 = min;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +243,12 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v11950)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,8 +122,8 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
-            return result;
+            clearResult();
+			return result;
         }
 
         // reduce interval if initial and max bracket the root
@@ -177,7 +175,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f.value(max) == 0.0) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
@@ -189,7 +187,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            double x0 = min;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +244,12 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v12338)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v12338)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v12338)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v12338)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v12338)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +242,9 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13250)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13250)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13250)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13250)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13250)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,7 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +181,8 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +245,10 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13314)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13314)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13314)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13314)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13314)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,7 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +163,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v13818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,8 +110,9 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +164,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -183,6 +181,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +244,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,7 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14007)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,8 +110,9 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -165,7 +164,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -183,13 +181,15 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            int numIterations = 0;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +245,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14634)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14634)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14634)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,14 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14634)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14634)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,10 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +184,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +247,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14813)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14813)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14813)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14813)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14813)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -189,7 +188,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            int numIterations = 0;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +245,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+				x1 = x2;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14835)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14835)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14835)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,16 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14835)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14835)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,7 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,11 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14916)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14916)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14916)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14916)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14916)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -189,7 +187,8 @@
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            int numIterations = 0;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +244,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+				x1 = x2;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,10 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
+		this.relativeAccuracy = defaultRelativeAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v14926)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,11 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +247,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15416)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15416)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15416)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,8 +60,15 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15416)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15416)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,9 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +181,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +245,13 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15449)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15449)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15449)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,14 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15449)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15449)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,10 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.functionValueAccuracy = defaultFunctionValueAccuracy;
             return result;
         }
 
@@ -245,7 +247,15 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15943)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15943)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15943)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15943)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v15943)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,13 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +129,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +187,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +250,14 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16236)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16236)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16236)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16236)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16236)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,13 +179,15 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            int numIterations = 0;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -245,7 +243,17 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16725)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16725)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16725)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16725)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v16725)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (Math.abs(max - min) <= absoluteAccuracy) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,15 +180,16 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
                         NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
             }
         } else if (sign < 0){
-            // solve using only the first endpoint as initial guess
+            int numIterations = 0;
+			// solve using only the first endpoint as initial guess
             ret = solve(f, min, yMin, max, yMax, min, yMin);
         } else {
             // either min or max is a root
@@ -240,13 +240,8 @@
                 y1 = y2;
                 y2 = y0;
             }
-            if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
-            }
+            if (Math.abs(y1) <= functionValueAccuracy)
+				setResult(x1, i);
             double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17027)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17027)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17027)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17027)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17027)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,10 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +246,16 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17036)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17036)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17036)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17036)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17036)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,11 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +127,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +247,16 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17241)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17241)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17241)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,10 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+        if (Math.abs(max - min) <= absoluteAccuracy) {
+            checkResultComputed();
+			checkResultComputed();
+			setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +126,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +184,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +247,18 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17631)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17631)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17631)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,9 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17631)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17631)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +179,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				this.iterationCount = 0;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -245,7 +242,19 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17818)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,9 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v17818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +241,19 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v18113)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v18113)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v18113)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v18113)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v18113)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,8 +111,10 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            checkResultComputed();
+			checkResultComputed();
+			checkResultComputed();
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +125,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +245,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                {
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				}
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v26014)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v26014)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v26014)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,14 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v26014)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v26014)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,28 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,9 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,32 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        int iterationCount = 0;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28426)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28537)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28537)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28537)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,15 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28537)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28537)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,24 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        int iterationCount = 0;
     }
 
     /**
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,16 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v28850)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,24 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v29109)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v29109)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v29109)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,16 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v29109)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:10 [main] [INFO]  PatchLogExporter - patch (v29109)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,27 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				x1 = x2;
+				x2 = x0;
+				x1 = x2;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29229)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29229)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29229)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29229)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29229)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,27 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x2 = x0;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29548)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29548)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29548)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29548)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v29548)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,33 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v30439)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v30439)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v30439)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v30439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v30439)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -241,11 +238,36 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                delta = x1 - x0;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31018)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31018)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31018)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31018)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31018)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,31 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31241)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31241)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31241)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31241)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31241)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,26 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31411)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31411)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31411)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,18 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31411)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31411)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,27 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31729)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31729)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31729)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,15 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31729)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v31729)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,29 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32030)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32030)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32030)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32030)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32030)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			verifyBracketing(min, max, f);
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,36 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32145)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32145)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32145)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,7 +62,15 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32145)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32145)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				clearResult();
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +244,34 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32832)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32832)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32832)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32832)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32832)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -102,7 +102,8 @@
         clearResult();
         verifySequence(min, initial, max);
 
-        // return the initial guess if it is good enough
+        double x0 = min;
+		// return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
@@ -112,7 +113,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,32 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -163,7 +163,7 @@
      */
     protected final void clearResult() {
         this.iterationCount = 0;
-        this.resultComputed = false;
+        int iterationCount = 0;
     }
 
     /**
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,11 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v32934)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,39 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33043)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33043)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33043)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33043)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33043)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -101,6 +101,7 @@
 
         clearResult();
         verifySequence(min, initial, max);
+		this.iterationCount = iterationCount;
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
@@ -111,10 +112,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +241,29 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33818)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,10 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v33818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,8 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
+			this.iterationCount = iterationCount;
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +242,37 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v34117)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v34117)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v34117)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,16 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v34117)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v34117)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,27 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36434)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36434)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36434)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,18 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36434)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36434)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +242,41 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                final double q = (x2 - x1) / (x1 - x0);
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36846)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36846)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36846)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,14 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36846)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36846)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,41 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36928)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36928)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36928)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,18 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36928)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v36928)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,41 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v37239)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v37239)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v37239)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,18 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v37239)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v37239)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,40 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                clearResult();
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				x1 = x2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v43133)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v43133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v43133)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,19 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v43133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v43133)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,53 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                resultComputed = true;
+				i++;
+				x2 = x0;
+				x0 = x1;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				++i;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v45626)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v45626)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v45626)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v45626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v45626)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,51 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                delta = (x0 - x1) / (1 - y0 / y1);
+				x0 = x1;
+				checkResultComputed();
+				resultComputed = true;
+				checkResultComputed();
+				i++;
+				i++;
+				checkResultComputed();
+				i++;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46547)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46547)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46547)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,9 +59,21 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46547)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,52 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                setResult(x1, i);
+				resultComputed = true;
+				i++;
+				i++;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,23 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v46920)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +243,43 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                resultComputed = true;
+				y1 = y2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v47837)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v47837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v47837)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,20 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v47837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v47837)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.iterationCount = iterationCount;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,41 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                delta = (x0 - x1) / (1 - y0 / y1);
+				i++;
+				i++;
+				x0 = x1;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				y1 = y2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48029)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48029)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48029)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,18 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48029)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48029)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double fb;
             return result;
         }
 
@@ -245,7 +244,58 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                i++;
+				i++;
+				i++;
+				x0 = x1;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				i++;
+				y1 = y2;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48319)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48319)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48319)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,17 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48319)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48319)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,8 +112,8 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
+            this.iterationCount = iterationCount;
+			return result;
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -245,7 +243,42 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                i++;
+				i++;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				y1 = y2;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,6 +62,13 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
+		relativeAccuracy = defaultRelativeAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-03 08:15:11 [main] [INFO]  PatchLogExporter - patch (v48726)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -245,7 +241,52 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
+                y1 = y2;
+				x0 = x1;
+				i++;
+				delta = (x0 - x1) / (1 - y0 / y1);
+				delta = (x0 - x1) / (1 - y0 / y1);
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				this.defaultFunctionValueAccuracy = 1.0e-15;
+				return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-03 08:15:11 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 43234
Build succeeded variants = 26690
Time elapsed = 4 hours 16 minutes 47 seconds
Exit status = FAILURE (maximum generation)
