2023-08-02 17:27:15 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-02 17:27:15 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-02 17:27:15 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-02 17:27:16 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/kgenprog-72.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math72/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.analysis.solvers.BrentSolverTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 7 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/research
version = 1.8.2
================================================================
2023-08-02 17:27:34 [main] [INFO]  KGenProgMain - initial failed tests (1/6)
org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints: null

2023-08-02 17:27:34 [main] [INFO]  KGenProgMain - GA started
2023-08-02 17:27:34 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-02 17:27:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 50, build-succeeded 8, build-failed 27, syntax-invalid 3, redundant 12
Fitness: max 0.833(6), min 0.667(2), ave 0.792
Test execution time: sum 1416 ms, max 280 ms, min 84 ms
----------------------------------------------------------------

2023-08-02 17:27:39 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-02 17:27:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 50, build-succeeded 14, build-failed 28, syntax-invalid 3, redundant 5
Fitness: max 0.833(9), min 0.167(1), ave 0.738
Test execution time: sum 1552 ms, max 198 ms, min 75 ms
----------------------------------------------------------------

2023-08-02 17:27:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-02 17:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, build-succeeded 36, build-failed 26, syntax-invalid 5, redundant 33
Fitness: max 0.833(23), min 0.167(3), ave 0.727
Test execution time: sum 2666 ms, max 231 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:27:51 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-02 17:27:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 100, build-succeeded 35, build-failed 23, syntax-invalid 7, redundant 35
Fitness: max 0.833(30), min 0.167(1), ave 0.795
Test execution time: sum 2511 ms, max 214 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 17:27:57 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-02 17:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 16, redundant 30
Fitness: max 0.833(20), min 0.167(2), ave 0.768
Test execution time: sum 1531 ms, max 137 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:28:02 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-02 17:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 100, build-succeeded 27, build-failed 29, syntax-invalid 15, redundant 29
Fitness: max 0.833(26), min 0.667(1), ave 0.827
Test execution time: sum 1766 ms, max 143 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:28:07 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-02 17:28:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 100, build-succeeded 35, build-failed 29, syntax-invalid 15, redundant 21
Fitness: max 1(1), min 0.167(2), ave 0.786
Test execution time: sum 2222 ms, max 133 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:12 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-02 17:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 19, redundant 23
Fitness: max 0.833(25), min 0.667(2), ave 0.821
Test execution time: sum 1751 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:18 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-02 17:28:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 seconds
Variants: generated 100, build-succeeded 36, build-failed 27, syntax-invalid 17, redundant 20
Fitness: max 0.833(31), min 0.167(3), ave 0.764
Test execution time: sum 2364 ms, max 202 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:23 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-02 17:28:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 seconds
Variants: generated 100, build-succeeded 34, build-failed 30, syntax-invalid 12, redundant 24
Fitness: max 0.833(31), min 0.667(3), ave 0.819
Test execution time: sum 2087 ms, max 77 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:28:29 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-02 17:28:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 1 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 12, redundant 15
Fitness: max 0.833(40), min 0.167(1), ave 0.804
Test execution time: sum 2796 ms, max 136 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:35 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-02 17:28:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 8 seconds
Variants: generated 100, build-succeeded 43, build-failed 26, syntax-invalid 11, redundant 20
Fitness: max 1(1), min 0.167(1), ave 0.795
Test execution time: sum 2761 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:42 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-02 17:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 13 seconds
Variants: generated 100, build-succeeded 42, build-failed 26, syntax-invalid 13, redundant 19
Fitness: max 0.833(34), min 0.167(1), ave 0.786
Test execution time: sum 2512 ms, max 73 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:48 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-02 17:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 20 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 17, redundant 14
Fitness: max 0.833(33), min 0.167(3), ave 0.772
Test execution time: sum 2348 ms, max 196 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:28:54 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-02 17:28:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 25 seconds
Variants: generated 100, build-succeeded 36, build-failed 24, syntax-invalid 18, redundant 22
Fitness: max 0.833(32), min 0.667(4), ave 0.815
Test execution time: sum 2141 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:28:59 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-02 17:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 31 seconds
Variants: generated 100, build-succeeded 39, build-failed 32, syntax-invalid 11, redundant 18
Fitness: max 0.833(32), min 0.167(2), ave 0.769
Test execution time: sum 2371 ms, max 135 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:06 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-02 17:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 38 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 17, redundant 10
Fitness: max 1(2), min 0.5(1), ave 0.823
Test execution time: sum 2986 ms, max 192 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:29:12 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-02 17:29:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0.167(4), ave 0.756
Test execution time: sum 3162 ms, max 100 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:20 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-02 17:29:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 52 seconds
Variants: generated 100, build-succeeded 47, build-failed 23, syntax-invalid 19, redundant 11
Fitness: max 1(1), min 0.167(5), ave 0.741
Test execution time: sum 2948 ms, max 195 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:27 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-02 17:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 59 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.811
Test execution time: sum 2841 ms, max 98 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:33 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-02 17:29:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 6 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 21, redundant 5
Fitness: max 0.833(33), min 0.167(3), ave 0.76
Test execution time: sum 2590 ms, max 162 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:41 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-02 17:29:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 12 seconds
Variants: generated 100, build-succeeded 35, build-failed 30, syntax-invalid 27, redundant 8
Fitness: max 1(1), min 0.167(2), ave 0.79
Test execution time: sum 2109 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:29:46 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-02 17:29:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 19 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0.833(36), min 0.167(5), ave 0.746
Test execution time: sum 2721 ms, max 126 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:29:53 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-02 17:30:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 26 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 18, redundant 3
Fitness: max 1(1), min 0.167(4), ave 0.761
Test execution time: sum 2770 ms, max 110 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:30:00 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-02 17:30:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 33 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 16, redundant 7
Fitness: max 0.833(37), min 0.167(2), ave 0.781
Test execution time: sum 2908 ms, max 209 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:30:08 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-02 17:30:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.667(5), ave 0.82
Test execution time: sum 3025 ms, max 89 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:30:15 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-02 17:30:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0.833(53), min 0.667(5), ave 0.819
Test execution time: sum 3659 ms, max 137 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:30:24 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-02 17:30:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 minutes 56 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 0.833(44), min 0.167(2), ave 0.793
Test execution time: sum 2890 ms, max 75 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:30:31 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-02 17:30:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 4 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 14, redundant 4
Fitness: max 0.833(51), min 0.167(2), ave 0.798
Test execution time: sum 3618 ms, max 190 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:30:39 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-02 17:30:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.814
Test execution time: sum 3042 ms, max 76 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:30:46 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-02 17:30:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 8, redundant 5
Fitness: max 0.833(50), min 0.167(3), ave 0.791
Test execution time: sum 3502 ms, max 128 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:30:55 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-02 17:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 28 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 9, redundant 4
Fitness: max 0.833(49), min 0.167(1), ave 0.806
Test execution time: sum 3211 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:31:03 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-02 17:31:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 36 seconds
Variants: generated 100, build-succeeded 46, build-failed 23, syntax-invalid 25, redundant 6
Fitness: max 1(2), min 0.167(1), ave 0.815
Test execution time: sum 2923 ms, max 136 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:31:10 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-02 17:31:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 0.833(44), min 0.167(5), ave 0.758
Test execution time: sum 3059 ms, max 87 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:31:18 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-02 17:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 minutes 51 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 1(1), min 0.167(4), ave 0.772
Test execution time: sum 3402 ms, max 71 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:31:26 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-02 17:31:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 10, redundant 11
Fitness: max 0.833(48), min 0.167(5), ave 0.765
Test execution time: sum 3355 ms, max 132 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:31:35 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-02 17:31:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 11, redundant 4
Fitness: max 0.833(53), min 0.167(5), ave 0.77
Test execution time: sum 3519 ms, max 74 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:31:42 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-02 17:31:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 16 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0.167(3), ave 0.793
Test execution time: sum 3262 ms, max 224 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:31:51 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-02 17:31:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 8, redundant 7
Fitness: max 0.833(47), min 0.167(6), ave 0.743
Test execution time: sum 3398 ms, max 77 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:31:59 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-02 17:32:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0.833(47), min 0.167(4), ave 0.767
Test execution time: sum 3354 ms, max 70 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:32:07 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-02 17:47:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 12, redundant 10
Fitness: max 1(1), min 0.167(8), ave 0.728
Test execution time: sum 903856 ms, max 900199 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:47:19 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-02 17:47:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.833(50), min 0.167(3), ave 0.793
Test execution time: sum 3533 ms, max 178 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:47:30 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-02 17:47:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.167(4), ave 0.781
Test execution time: sum 3908 ms, max 179 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:47:42 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-02 17:47:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.167(2), ave 0.791
Test execution time: sum 3969 ms, max 179 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:47:54 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-02 17:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 12, redundant 11
Fitness: max 0.833(42), min 0.167(1), ave 0.793
Test execution time: sum 3277 ms, max 176 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:48:04 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-02 17:48:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 39 seconds
Variants: generated 100, build-succeeded 39, build-failed 25, syntax-invalid 26, redundant 10
Fitness: max 0.833(38), min 0.667(1), ave 0.829
Test execution time: sum 2715 ms, max 178 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:48:13 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-02 17:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 50 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 10, redundant 9
Fitness: max 1(1), min 0.167(3), ave 0.792
Test execution time: sum 3426 ms, max 176 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:48:24 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-02 17:48:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 minutes 59 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 16, redundant 8
Fitness: max 0.833(47), min 0.167(3), ave 0.788
Test execution time: sum 3218 ms, max 119 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:48:34 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-02 17:48:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 10 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 14, redundant 7
Fitness: max 0.833(39), min 0.167(6), ave 0.744
Test execution time: sum 3081 ms, max 175 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:48:44 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-02 17:48:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 20 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 0.833(40), min 0.167(8), ave 0.722
Test execution time: sum 3236 ms, max 186 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:48:55 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-02 17:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 18, redundant 7
Fitness: max 0.833(44), min 0.167(4), ave 0.768
Test execution time: sum 3303 ms, max 170 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:49:05 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-02 17:49:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 41 seconds
Variants: generated 100, build-succeeded 51, build-failed 36, syntax-invalid 13, redundant 0
Fitness: max 0.833(45), min 0.167(5), ave 0.765
Test execution time: sum 3347 ms, max 180 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:49:15 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-02 17:49:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 51 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 16, redundant 4
Fitness: max 0.833(44), min 0.167(2), ave 0.79
Test execution time: sum 3242 ms, max 177 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:49:26 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-02 17:49:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 2 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 9, redundant 6
Fitness: max 0.833(50), min 0.167(3), ave 0.791
Test execution time: sum 3561 ms, max 172 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:49:37 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-02 17:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 11, redundant 6
Fitness: max 0.833(47), min 0.167(3), ave 0.788
Test execution time: sum 3238 ms, max 172 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:49:46 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-02 17:49:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 22 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 10, redundant 5
Fitness: max 0.833(45), min 0.167(3), ave 0.775
Test execution time: sum 3352 ms, max 175 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:49:57 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-02 17:50:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 34 seconds
Variants: generated 100, build-succeeded 71, build-failed 22, syntax-invalid 3, redundant 4
Fitness: max 0.833(56), min 0.167(8), ave 0.737
Test execution time: sum 4453 ms, max 168 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:50:09 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-02 17:50:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 46 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 5, redundant 6
Fitness: max 0.833(50), min 0.167(6), ave 0.76
Test execution time: sum 3745 ms, max 187 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:50:20 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-02 17:50:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 minutes 56 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 13, redundant 5
Fitness: max 0.833(47), min 0.167(3), ave 0.788
Test execution time: sum 3308 ms, max 176 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:50:31 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-02 17:50:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 6 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 17, redundant 2
Fitness: max 1(1), min 0.167(2), ave 0.804
Test execution time: sum 3181 ms, max 129 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:50:40 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-02 17:50:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0.833(53), min 0.167(1), ave 0.81
Test execution time: sum 3665 ms, max 172 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:50:52 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-02 17:51:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 28 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 9, redundant 11
Fitness: max 1(1), min 0.167(5), ave 0.759
Test execution time: sum 3652 ms, max 178 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:51:02 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-02 17:51:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 38 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 4, redundant 14
Fitness: max 0.833(42), min 0.167(3), ave 0.784
Test execution time: sum 3041 ms, max 177 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:51:12 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-02 17:51:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 48 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 9, redundant 10
Fitness: max 0.833(48), min 0.167(2), ave 0.807
Test execution time: sum 3319 ms, max 203 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:51:23 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-02 17:51:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 minutes 59 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 8, redundant 13
Fitness: max 0.833(47), min 0.167(5), ave 0.767
Test execution time: sum 3261 ms, max 126 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 17:51:34 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-02 17:51:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 4, redundant 7
Fitness: max 0.833(48), min 0.167(3), ave 0.782
Test execution time: sum 3465 ms, max 181 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:51:45 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-02 17:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 12, redundant 9
Fitness: max 1(1), min 0.167(4), ave 0.77
Test execution time: sum 3370 ms, max 163 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:51:56 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-02 17:52:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 33 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(5), ave 0.77
Test execution time: sum 3597 ms, max 127 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:52:07 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-02 17:52:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 11, redundant 9
Fitness: max 0.833(53), min 0.167(1), ave 0.81
Test execution time: sum 3833 ms, max 201 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:52:19 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-02 17:52:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 55 seconds
Variants: generated 100, build-succeeded 46, build-failed 31, syntax-invalid 18, redundant 5
Fitness: max 0.833(43), min 0.167(2), ave 0.801
Test execution time: sum 2962 ms, max 190 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:52:29 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-02 17:52:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 6 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 12, redundant 7
Fitness: max 1(1), min 0.167(2), ave 0.806
Test execution time: sum 3365 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:52:41 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-02 17:52:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 17 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 16, redundant 7
Fitness: max 0.833(47), min 0.167(2), ave 0.801
Test execution time: sum 3363 ms, max 174 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:52:51 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-02 17:53:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 29 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 11, redundant 5
Fitness: max 0.833(53), min 0.667(1), ave 0.83
Test execution time: sum 3476 ms, max 130 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:53:03 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-02 17:53:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 41 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 4, redundant 7
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 3972 ms, max 175 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 17:53:15 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-02 17:53:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 52 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 13, redundant 5
Fitness: max 0.833(48), min 0.667(4), ave 0.821
Test execution time: sum 3323 ms, max 171 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:53:27 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-02 17:53:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 3 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 8, redundant 12
Fitness: max 0.833(45), min 0.167(1), ave 0.803
Test execution time: sum 3188 ms, max 154 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:53:38 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-02 17:53:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 15 seconds
Variants: generated 100, build-succeeded 66, build-failed 17, syntax-invalid 9, redundant 8
Fitness: max 1(2), min 0.667(6), ave 0.823
Test execution time: sum 4193 ms, max 174 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:53:50 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-02 17:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 17, redundant 5
Fitness: max 0.833(44), min 0.167(1), ave 0.806
Test execution time: sum 3150 ms, max 164 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:54:01 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-02 17:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 38 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 11, redundant 9
Fitness: max 0.833(44), min 0.667(4), ave 0.819
Test execution time: sum 3130 ms, max 121 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:54:12 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-02 17:54:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 minutes 49 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 10, redundant 11
Fitness: max 0.833(49), min 0.167(1), ave 0.814
Test execution time: sum 3320 ms, max 172 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:54:23 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-02 17:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.667(5), ave 0.821
Test execution time: sum 3326 ms, max 130 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:54:35 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-02 17:54:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 8, redundant 9
Fitness: max 1(2), min 0.667(4), ave 0.828
Test execution time: sum 3772 ms, max 177 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:54:47 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-02 17:54:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 24 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 10, redundant 8
Fitness: max 0.833(53), min 0.167(2), ave 0.801
Test execution time: sum 3670 ms, max 170 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:54:59 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-02 17:55:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 12, redundant 10
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3431 ms, max 173 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:55:10 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-02 17:55:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 48 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 10, redundant 6
Fitness: max 1(2), min 0.167(3), ave 0.803
Test execution time: sum 4052 ms, max 172 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:55:22 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-02 17:55:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 minutes 59 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.167(2), ave 0.803
Test execution time: sum 3129 ms, max 121 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:55:34 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-02 17:55:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 10 seconds
Variants: generated 100, build-succeeded 39, build-failed 26, syntax-invalid 28, redundant 7
Fitness: max 0.833(33), min 0.167(3), ave 0.769
Test execution time: sum 2589 ms, max 161 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:55:44 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-02 17:55:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 20 seconds
Variants: generated 100, build-succeeded 46, build-failed 26, syntax-invalid 24, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.801
Test execution time: sum 2849 ms, max 125 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:55:54 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-02 17:56:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 19, syntax-invalid 13, redundant 9
Fitness: max 1(1), min 0.167(3), ave 0.797
Test execution time: sum 3842 ms, max 175 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:56:07 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-02 17:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 45 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 11, redundant 2
Fitness: max 0.833(60), min 0.167(1), ave 0.82
Test execution time: sum 3910 ms, max 179 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:56:19 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-02 17:56:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 minutes 57 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.167(3), ave 0.792
Test execution time: sum 3605 ms, max 172 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:56:32 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-02 17:56:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 11, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.796
Test execution time: sum 3424 ms, max 171 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:56:44 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-02 17:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 7, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.807
Test execution time: sum 3639 ms, max 186 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:56:56 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-02 17:57:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 35 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 3817 ms, max 119 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:57:09 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-02 17:57:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 47 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 3, redundant 6
Fitness: max 0.833(57), min 0.167(1), ave 0.819
Test execution time: sum 3673 ms, max 175 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:57:22 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-02 17:57:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 minutes 59 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 0.833(48), min 0.167(1), ave 0.82
Test execution time: sum 3201 ms, max 174 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:57:34 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-02 17:57:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 11 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 14, redundant 2
Fitness: max 1(2), min 0.167(4), ave 0.789
Test execution time: sum 3506 ms, max 119 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:57:45 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-02 17:57:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.833(54), min 0.167(1), ave 0.806
Test execution time: sum 3924 ms, max 182 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:57:59 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-02 17:58:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 36 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0.5(1), ave 0.827
Test execution time: sum 3185 ms, max 120 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:58:11 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-02 17:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 18, syntax-invalid 23, redundant 11
Fitness: max 0.833(46), min 0.667(2), ave 0.826
Test execution time: sum 2952 ms, max 124 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:58:21 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-02 17:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 59 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.798
Test execution time: sum 3465 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:58:33 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-02 17:58:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 11 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0.833(58), min 0.667(3), ave 0.825
Test execution time: sum 3789 ms, max 155 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 17:58:46 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-02 17:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 24 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 15, redundant 5
Fitness: max 0.833(55), min 0.167(2), ave 0.807
Test execution time: sum 3689 ms, max 163 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:58:59 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-02 17:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 37 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 11, redundant 7
Fitness: max 0.833(57), min 0.667(4), ave 0.822
Test execution time: sum 3830 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:59:12 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-02 17:59:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 18, redundant 2
Fitness: max 0.833(47), min 0.667(4), ave 0.82
Test execution time: sum 3194 ms, max 117 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 17:59:23 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-02 17:59:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 minutes 59 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 20, redundant 6
Fitness: max 0.833(39), min 0.167(1), ave 0.81
Test execution time: sum 2605 ms, max 141 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 17:59:34 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-02 18:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 14, redundant 7
Fitness: max 0.833(44), min 0.167(2), ave 0.793
Test execution time: sum 903842 ms, max 900128 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:14:49 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-02 18:15:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 29 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 14, redundant 7
Fitness: max 0.833(49), min 0.667(4), ave 0.821
Test execution time: sum 3631 ms, max 152 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:15:03 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-02 18:15:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 12, redundant 6
Fitness: max 0.833(46), min 0.167(1), ave 0.813
Test execution time: sum 3368 ms, max 152 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:15:18 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-02 18:15:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 59 seconds
Variants: generated 100, build-succeeded 64, build-failed 21, syntax-invalid 11, redundant 4
Fitness: max 0.833(62), min 0.667(2), ave 0.828
Test execution time: sum 4432 ms, max 168 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:15:34 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-02 18:15:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.667(3), ave 0.826
Test execution time: sum 3183 ms, max 143 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:15:48 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-02 18:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 28 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 16, redundant 4
Fitness: max 0.833(45), min 0.667(5), ave 0.817
Test execution time: sum 3462 ms, max 136 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:16:02 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-02 18:16:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0.833(54), min 0.667(3), ave 0.825
Test execution time: sum 3932 ms, max 175 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:16:17 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-02 18:16:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 57 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 10, redundant 7
Fitness: max 0.833(52), min 0.167(2), ave 0.794
Test execution time: sum 3886 ms, max 164 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:16:31 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-02 18:16:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 12 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 9, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.786
Test execution time: sum 3768 ms, max 190 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:16:46 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-02 18:17:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.167(2), ave 0.813
Test execution time: sum 3779 ms, max 164 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:17:00 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-02 18:17:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 9, redundant 7
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3778 ms, max 171 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:17:15 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-02 18:32:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 4 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 11, redundant 11
Fitness: max 1(1), min 0.167(3), ave 0.787
Test execution time: sum 903739 ms, max 900174 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:32:29 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-02 18:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 11 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 9, redundant 5
Fitness: max 0.833(53), min 0.167(2), ave 0.802
Test execution time: sum 3907 ms, max 148 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:32:45 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-02 18:33:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 27 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 10, redundant 4
Fitness: max 0.833(58), min 0.667(1), ave 0.831
Test execution time: sum 4119 ms, max 181 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:33:01 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-02 18:33:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 12, redundant 1
Fitness: max 0.833(49), min 0.167(1), ave 0.806
Test execution time: sum 3885 ms, max 168 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:33:17 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-02 18:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 5 minutes 57 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 10, redundant 6
Fitness: max 0.833(51), min 0.167(2), ave 0.798
Test execution time: sum 3754 ms, max 170 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:33:31 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-02 18:33:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 11 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 7, redundant 8
Fitness: max 0.833(47), min 0.667(2), ave 0.827
Test execution time: sum 3297 ms, max 168 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:33:46 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-02 18:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 26 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 9, redundant 9
Fitness: max 0.833(55), min 0.167(2), ave 0.801
Test execution time: sum 3993 ms, max 166 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 18:34:01 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-02 18:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 6, redundant 7
Fitness: max 0.833(57), min 0.167(1), ave 0.819
Test execution time: sum 3987 ms, max 185 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:34:16 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-02 18:34:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0.833(52), min 0.167(1), ave 0.818
Test execution time: sum 3570 ms, max 137 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:34:31 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-02 18:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 14, redundant 4
Fitness: max 0.833(51), min 0.167(1), ave 0.812
Test execution time: sum 3605 ms, max 175 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:34:45 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-02 18:34:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 18, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.786
Test execution time: sum 3581 ms, max 173 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:34:59 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-02 18:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 39 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 8, redundant 6
Fitness: max 0.833(53), min 0.667(3), ave 0.824
Test execution time: sum 3659 ms, max 174 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:35:13 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-02 18:35:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 7 minutes 53 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 10, redundant 7
Fitness: max 1(1), min 0.167(1), ave 0.824
Test execution time: sum 3417 ms, max 133 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:35:28 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-02 18:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 10, redundant 5
Fitness: max 0.833(57), min 0.667(2), ave 0.828
Test execution time: sum 3848 ms, max 167 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:35:43 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-02 18:35:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 23 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 14, redundant 10
Fitness: max 0.833(45), min 0.167(1), ave 0.81
Test execution time: sum 3283 ms, max 146 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:35:58 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-02 18:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 37 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 0.833(46), min 0.167(2), ave 0.8
Test execution time: sum 3246 ms, max 171 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:36:12 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-02 18:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 8 minutes 51 seconds
Variants: generated 100, build-succeeded 46, build-failed 22, syntax-invalid 24, redundant 8
Fitness: max 0.833(43), min 0.167(1), ave 0.812
Test execution time: sum 3169 ms, max 173 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:36:25 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-02 18:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 5 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 21, redundant 5
Fitness: max 0.833(42), min 0.167(2), ave 0.794
Test execution time: sum 3076 ms, max 161 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:36:39 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-02 18:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 22 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 10, redundant 4
Fitness: max 0.833(57), min 0.167(2), ave 0.806
Test execution time: sum 4129 ms, max 131 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:36:56 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-02 18:37:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 36 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 16, redundant 3
Fitness: max 0.833(44), min 0.667(2), ave 0.826
Test execution time: sum 3005 ms, max 123 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:37:10 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-02 18:37:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 52 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 14, redundant 1
Fitness: max 1(1), min 0.167(5), ave 0.778
Test execution time: sum 4170 ms, max 178 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:37:27 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-02 18:37:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 0.833(55), min 0.167(1), ave 0.819
Test execution time: sum 3839 ms, max 176 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:37:43 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-02 18:37:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 15, redundant 2
Fitness: max 0.833(48), min 0.667(4), ave 0.821
Test execution time: sum 3361 ms, max 166 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:37:58 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-02 18:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 3638 ms, max 171 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:38:14 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-02 18:38:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 14, redundant 3
Fitness: max 0.833(45), min 0.167(2), ave 0.79
Test execution time: sum 3352 ms, max 126 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:38:30 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-02 18:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 11 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 23, redundant 1
Fitness: max 0.833(42), min 0.167(2), ave 0.8
Test execution time: sum 903449 ms, max 900133 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:53:46 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-02 18:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 27 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 18, redundant 0
Fitness: max 0.833(46), min 0.167(1), ave 0.81
Test execution time: sum 3417 ms, max 177 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:54:02 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-02 18:54:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 44 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 14, redundant 7
Fitness: max 0.833(52), min 0.167(2), ave 0.806
Test execution time: sum 3752 ms, max 173 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:54:18 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-02 18:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 11, redundant 6
Fitness: max 0.833(55), min 0.667(2), ave 0.827
Test execution time: sum 3860 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:54:35 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-02 18:54:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 17 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 15, redundant 6
Fitness: max 0.833(50), min 0.167(1), ave 0.814
Test execution time: sum 3735 ms, max 176 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:54:52 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-02 18:55:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 33 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 18, redundant 5
Fitness: max 0.833(41), min 0.167(3), ave 0.785
Test execution time: sum 3095 ms, max 174 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:55:07 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-02 18:55:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 48 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 20, redundant 1
Fitness: max 0.833(43), min 0.167(2), ave 0.801
Test execution time: sum 2992 ms, max 164 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:55:23 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-02 18:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 5 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 13, redundant 1
Fitness: max 0.833(48), min 0.667(4), ave 0.821
Test execution time: sum 3514 ms, max 123 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:55:39 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-02 18:55:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 20 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 19, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.82
Test execution time: sum 3278 ms, max 166 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:55:55 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-02 18:56:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 37 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 12, redundant 3
Fitness: max 0.833(46), min 0.167(3), ave 0.785
Test execution time: sum 3533 ms, max 177 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:56:12 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-02 18:56:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 55 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 11, redundant 3
Fitness: max 0.833(53), min 0.667(3), ave 0.824
Test execution time: sum 3788 ms, max 179 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:56:29 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-02 18:56:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 11 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 0.833(50), min 0.167(2), ave 0.8
Test execution time: sum 3596 ms, max 129 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:56:46 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-02 18:57:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 28 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.833(54), min 0.667(2), ave 0.827
Test execution time: sum 3613 ms, max 128 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:57:03 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-02 18:57:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 45 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 13, redundant 0
Fitness: max 0.833(53), min 0.167(2), ave 0.799
Test execution time: sum 3749 ms, max 174 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:57:20 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-02 18:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 3 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 3794 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:57:37 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-02 18:57:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 9, redundant 2
Fitness: max 0.833(54), min 0.667(2), ave 0.827
Test execution time: sum 3669 ms, max 133 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:57:55 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-02 18:58:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 11, redundant 2
Fitness: max 0.833(54), min 0.667(5), ave 0.819
Test execution time: sum 3853 ms, max 131 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:58:12 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-02 18:58:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 54 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 10, redundant 1
Fitness: max 0.833(55), min 0.167(1), ave 0.813
Test execution time: sum 3611 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:58:29 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-02 18:58:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.833(54), min 0.167(1), ave 0.818
Test execution time: sum 3616 ms, max 124 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 18:58:45 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-02 18:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 27 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 15, redundant 3
Fitness: max 0.833(56), min 0.167(1), ave 0.814
Test execution time: sum 3798 ms, max 121 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:59:02 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-02 18:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 11, redundant 1
Fitness: max 0.833(53), min 0.167(1), ave 0.81
Test execution time: sum 3672 ms, max 119 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 18:59:19 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-02 18:59:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 0 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 15, redundant 3
Fitness: max 0.833(48), min 0.167(1), ave 0.811
Test execution time: sum 3273 ms, max 161 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 18:59:34 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-02 18:59:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 16 seconds
Variants: generated 100, build-succeeded 51, build-failed 21, syntax-invalid 24, redundant 4
Fitness: max 0.833(43), min 0.167(3), ave 0.778
Test execution time: sum 3265 ms, max 118 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 18:59:50 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-02 19:00:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3320 ms, max 125 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 19:00:06 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-02 19:00:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 47 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 18, redundant 2
Fitness: max 0.833(43), min 0.167(1), ave 0.812
Test execution time: sum 2922 ms, max 179 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:00:21 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-02 19:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 20, redundant 2
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3127 ms, max 120 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:00:36 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-02 19:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 18 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 0.833(55), min 0.667(1), ave 0.83
Test execution time: sum 3504 ms, max 129 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:00:53 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-02 19:01:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 34 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 22, redundant 2
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 2726 ms, max 123 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:01:09 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-02 19:01:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 18, redundant 3
Fitness: max 0.833(45), min 0.167(2), ave 0.802
Test execution time: sum 3020 ms, max 118 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 19:01:25 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-02 19:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 7 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 17, redundant 1
Fitness: max 0.833(47), min 0.167(1), ave 0.81
Test execution time: sum 3221 ms, max 142 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:01:42 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-02 19:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 23 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 17, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.803
Test execution time: sum 2763 ms, max 122 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:01:58 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-02 19:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 40 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 10, redundant 5
Fitness: max 0.833(51), min 0.167(1), ave 0.815
Test execution time: sum 3399 ms, max 122 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:02:15 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-02 19:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 34 minutes 59 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 12, redundant 0
Fitness: max 1(1), min 0.167(2), ave 0.807
Test execution time: sum 3756 ms, max 118 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 19:02:33 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-02 19:02:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 14, redundant 1
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 3716 ms, max 152 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:02:51 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-02 19:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3477 ms, max 118 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:03:08 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-02 19:03:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 35 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 18, redundant 5
Fitness: max 1(2), min 0.167(1), ave 0.815
Test execution time: sum 3468 ms, max 121 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 19:03:25 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-02 19:03:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 8 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 15, redundant 2
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3624 ms, max 125 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:03:43 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-02 19:04:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 26 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 11, redundant 2
Fitness: max 0.833(55), min 0.667(4), ave 0.822
Test execution time: sum 3873 ms, max 138 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:04:01 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-02 19:04:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 45 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.667(3), ave 0.828
Test execution time: sum 3859 ms, max 91 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:04:19 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-02 19:04:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 12, redundant 2
Fitness: max 0.833(52), min 0.667(4), ave 0.821
Test execution time: sum 3884 ms, max 147 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:04:38 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-02 19:04:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3608 ms, max 118 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:04:58 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-02 19:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.833(52), min 0.667(2), ave 0.827
Test execution time: sum 3623 ms, max 180 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:05:16 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-02 19:05:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 0 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 16, redundant 5
Fitness: max 0.833(49), min 0.333(1), ave 0.807
Test execution time: sum 3876 ms, max 290 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:05:35 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-02 19:05:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 19 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 8, redundant 2
Fitness: max 0.833(58), min 0.667(2), ave 0.828
Test execution time: sum 3937 ms, max 90 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:05:53 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-02 19:06:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 38 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 11, redundant 2
Fitness: max 0.833(57), min 0.667(4), ave 0.822
Test execution time: sum 3818 ms, max 131 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:06:12 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-02 19:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 10, redundant 3
Fitness: max 0.833(52), min 0.167(1), ave 0.81
Test execution time: sum 3580 ms, max 120 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:06:30 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-02 19:06:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 14 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 7, redundant 5
Fitness: max 0.833(59), min 0.167(1), ave 0.817
Test execution time: sum 4035 ms, max 183 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:06:49 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-02 19:07:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 9, redundant 8
Fitness: max 0.833(53), min 0.5(1), ave 0.824
Test execution time: sum 3474 ms, max 84 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:07:06 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-02 19:07:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 39 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3630 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:07:25 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-02 19:07:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 9 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 5, redundant 6
Fitness: max 0.833(53), min 0.667(1), ave 0.83
Test execution time: sum 3515 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:07:44 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-02 19:08:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 28 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 8, redundant 6
Fitness: max 0.833(56), min 0.667(5), ave 0.82
Test execution time: sum 3766 ms, max 80 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:08:02 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-02 19:08:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 47 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 7, redundant 3
Fitness: max 0.833(59), min 0.167(2), ave 0.809
Test execution time: sum 3900 ms, max 130 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:08:21 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-02 19:08:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 6 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 6, redundant 4
Fitness: max 0.833(63), min 0.667(2), ave 0.828
Test execution time: sum 4191 ms, max 124 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:08:41 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-02 19:08:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 7, redundant 5
Fitness: max 0.833(57), min 0.167(1), ave 0.822
Test execution time: sum 3662 ms, max 103 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 19:08:59 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-02 19:09:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 41 minutes 43 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3401 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:09:18 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-02 19:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 3595 ms, max 85 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:09:35 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-02 19:09:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0.833(54), min 0.167(1), ave 0.815
Test execution time: sum 3576 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:09:54 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-02 19:10:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 9, redundant 5
Fitness: max 0.833(56), min 0.167(1), ave 0.816
Test execution time: sum 3612 ms, max 72 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 19:10:12 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-02 19:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 42 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 32, syntax-invalid 2, redundant 3
Fitness: max 0.833(60), min 0.667(3), ave 0.825
Test execution time: sum 3976 ms, max 121 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:10:32 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-02 19:10:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 17 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 8, redundant 5
Fitness: max 1(3), min 0.167(3), ave 0.801
Test execution time: sum 4064 ms, max 78 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:10:51 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-02 19:11:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 36 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 9, redundant 1
Fitness: max 0.833(61), min 0.5(1), ave 0.825
Test execution time: sum 4102 ms, max 131 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:11:11 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-02 19:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 43 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 15, redundant 5
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3241 ms, max 75 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:11:29 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-02 19:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 13 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 18, redundant 5
Fitness: max 0.833(50), min 0.167(1), ave 0.811
Test execution time: sum 3448 ms, max 128 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:11:47 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-02 19:12:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 4, redundant 6
Fitness: max 0.833(54), min 0.5(1), ave 0.816
Test execution time: sum 3814 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:12:06 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-02 19:12:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 44 minutes 53 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 4, redundant 9
Fitness: max 0.833(59), min 0.667(1), ave 0.831
Test execution time: sum 3947 ms, max 121 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:12:27 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-02 19:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 13 seconds
Variants: generated 100, build-succeeded 69, build-failed 22, syntax-invalid 4, redundant 5
Fitness: max 0.833(68), min 0.167(1), ave 0.824
Test execution time: sum 4465 ms, max 76 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:12:48 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-02 19:13:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 6, redundant 5
Fitness: max 0.833(59), min 0.667(1), ave 0.831
Test execution time: sum 3883 ms, max 132 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:13:08 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-02 19:13:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 45 minutes 53 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0(1), ave 0.809
Test execution time: sum 4021 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:13:28 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-02 19:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 0.833(55), min 0.667(2), ave 0.827
Test execution time: sum 3801 ms, max 140 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:13:48 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-02 19:14:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 3570 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:14:08 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-02 19:14:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 9, redundant 3
Fitness: max 0.833(61), min 0.5(1), ave 0.828
Test execution time: sum 4113 ms, max 124 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:14:29 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-02 19:14:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 14 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 9, redundant 6
Fitness: max 0.833(59), min 0.667(2), ave 0.828
Test execution time: sum 3993 ms, max 78 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:14:48 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-02 19:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 35 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 8, redundant 1
Fitness: max 0.833(58), min 0.167(3), ave 0.801
Test execution time: sum 4011 ms, max 132 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:15:10 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-02 19:15:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 47 minutes 55 seconds
Variants: generated 100, build-succeeded 55, build-failed 22, syntax-invalid 18, redundant 5
Fitness: max 0.833(53), min 0.167(1), ave 0.818
Test execution time: sum 3610 ms, max 78 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:15:29 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-02 19:15:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 14, redundant 1
Fitness: max 0.833(48), min 0.167(2), ave 0.801
Test execution time: sum 3469 ms, max 117 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:15:49 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-02 19:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 20, redundant 5
Fitness: max 0.833(46), min 0.667(3), ave 0.823
Test execution time: sum 3234 ms, max 87 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:16:08 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-02 19:16:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 48 minutes 55 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.814
Test execution time: sum 4055 ms, max 127 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:16:29 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-02 19:16:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 15 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0.833(56), min 0.167(1), ave 0.819
Test execution time: sum 3743 ms, max 90 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:16:50 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-02 19:17:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 36 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 9, redundant 3
Fitness: max 1(1), min 0.167(1), ave 0.825
Test execution time: sum 3792 ms, max 144 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:17:11 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-02 19:17:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3445 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:17:29 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-02 19:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 7, redundant 7
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3819 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:17:50 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-02 19:18:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 34 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0.833(50), min 0.167(1), ave 0.82
Test execution time: sum 3243 ms, max 81 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:18:09 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-02 19:18:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 55 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 1(1), min 0.167(1), ave 0.822
Test execution time: sum 3905 ms, max 194 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:18:29 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-02 19:18:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 15 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.167(1), ave 0.82
Test execution time: sum 3891 ms, max 77 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:18:50 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-02 19:19:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 36 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 11, redundant 1
Fitness: max 1(1), min 0.667(3), ave 0.827
Test execution time: sum 3637 ms, max 120 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:19:10 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-02 19:19:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 55 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3793 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:19:30 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-02 19:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 16 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 8, redundant 5
Fitness: max 0.833(58), min 0.167(1), ave 0.812
Test execution time: sum 3964 ms, max 135 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:19:50 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-02 19:20:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 14, redundant 2
Fitness: max 0.833(49), min 0.167(2), ave 0.802
Test execution time: sum 3480 ms, max 75 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:20:09 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-02 19:20:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.833(53), ave 0.836
Test execution time: sum 3622 ms, max 131 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:20:30 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-02 19:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 16 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 10, redundant 2
Fitness: max 0.833(61), min 0.167(1), ave 0.823
Test execution time: sum 3986 ms, max 79 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:20:50 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-02 19:21:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 6, redundant 0
Fitness: max 0.833(56), min 0.667(4), ave 0.822
Test execution time: sum 3906 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:21:12 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-02 19:21:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 58 seconds
Variants: generated 100, build-succeeded 62, build-failed 25, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0.667(5), ave 0.823
Test execution time: sum 4040 ms, max 76 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:21:33 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-02 19:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 19 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 3608 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:21:53 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-02 19:22:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 16, redundant 3
Fitness: max 0.833(49), min 0.167(3), ave 0.79
Test execution time: sum 3645 ms, max 129 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:22:14 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-02 19:22:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 0 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 6, redundant 5
Fitness: max 0.833(62), min 0.167(1), ave 0.823
Test execution time: sum 4048 ms, max 79 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:22:35 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-02 19:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 16, redundant 1
Fitness: max 0.833(55), min 0.167(2), ave 0.803
Test execution time: sum 3979 ms, max 123 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:22:56 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-02 19:23:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 3440 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:23:15 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-02 19:23:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 11, redundant 2
Fitness: max 0.833(58), min 0.667(3), ave 0.825
Test execution time: sum 4042 ms, max 143 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:23:37 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-02 19:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0.833(50), min 0.5(1), ave 0.821
Test execution time: sum 3432 ms, max 80 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:23:58 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-02 19:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 11, redundant 5
Fitness: max 0.833(54), min 0.167(1), ave 0.811
Test execution time: sum 3924 ms, max 124 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:24:20 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-02 19:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 6 seconds
Variants: generated 100, build-succeeded 51, build-failed 38, syntax-invalid 9, redundant 2
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3401 ms, max 82 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:24:41 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-02 19:25:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.833(57), min 0.667(2), ave 0.828
Test execution time: sum 3999 ms, max 136 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:25:03 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-02 19:25:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 11, redundant 3
Fitness: max 0.833(61), min 0.167(1), ave 0.823
Test execution time: sum 4102 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:25:25 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-02 19:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 12 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 16, redundant 3
Fitness: max 0.833(49), min 0.167(1), ave 0.811
Test execution time: sum 3497 ms, max 134 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:25:47 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-02 19:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 34 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 13, redundant 2
Fitness: max 0.833(58), min 0.667(3), ave 0.825
Test execution time: sum 3997 ms, max 75 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:26:09 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-02 19:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 15, redundant 3
Fitness: max 0.833(49), min 0.667(5), ave 0.818
Test execution time: sum 3665 ms, max 140 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:26:31 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-02 19:26:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 18, redundant 1
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3589 ms, max 87 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:26:52 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-02 19:27:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 16, redundant 0
Fitness: max 0.833(53), min 0.167(1), ave 0.81
Test execution time: sum 3712 ms, max 140 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:27:14 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-02 19:27:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 18, redundant 4
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 3340 ms, max 80 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:27:35 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-02 19:27:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 14, redundant 5
Fitness: max 0.833(52), min 0.833(52), ave 0.833
Test execution time: sum 3456 ms, max 140 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:27:58 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-02 19:43:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 15 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 18, redundant 4
Fitness: max 0.833(49), min 0.167(2), ave 0.804
Test execution time: sum 903631 ms, max 900179 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:43:20 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-02 19:43:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 18, redundant 2
Fitness: max 0.833(44), min 0.667(1), ave 0.83
Test execution time: sum 3226 ms, max 215 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:43:42 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-02 19:44:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 27 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 21, redundant 1
Fitness: max 0.833(45), min 0.833(45), ave 0.833
Test execution time: sum 2952 ms, max 84 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:44:02 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-02 19:44:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 16 minutes 49 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 21, redundant 4
Fitness: max 0.833(46), min 0.833(46), ave 0.833
Test execution time: sum 3101 ms, max 133 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:44:24 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-02 19:44:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 9 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 29, redundant 1
Fitness: max 0.833(38), min 0.167(1), ave 0.805
Test execution time: sum 2693 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:44:43 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-02 19:45:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 19, redundant 3
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3383 ms, max 131 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:45:06 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-02 19:45:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 17 minutes 53 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0.833(47), min 0.167(1), ave 0.816
Test execution time: sum 3178 ms, max 82 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:45:27 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-02 19:45:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 20, redundant 7
Fitness: max 0.833(44), min 0.167(2), ave 0.801
Test execution time: sum 3208 ms, max 145 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:45:49 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 19:46:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 19, redundant 6
Fitness: max 0.833(48), min 0.667(1), ave 0.83
Test execution time: sum 3264 ms, max 84 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:46:10 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 19:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 18 minutes 58 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 20, redundant 2
Fitness: max 0.833(46), min 0.167(1), ave 0.816
Test execution time: sum 3318 ms, max 132 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:46:33 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 19:46:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 20 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0.833(51), min 0.333(1), ave 0.824
Test execution time: sum 3381 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:46:55 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 19:47:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 19 minutes 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 13, redundant 5
Fitness: max 0.833(49), min 0.167(1), ave 0.82
Test execution time: sum 3313 ms, max 143 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:47:18 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 19:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 7 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 13, redundant 5
Fitness: max 0.833(51), min 0.167(1), ave 0.814
Test execution time: sum 3504 ms, max 79 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:47:41 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 19:48:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 15, redundant 4
Fitness: max 0.833(53), min 0.667(3), ave 0.824
Test execution time: sum 3790 ms, max 139 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:48:05 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 19:48:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 20 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.833(59), min 0.833(59), ave 0.833
Test execution time: sum 3900 ms, max 78 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:48:29 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 19:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 19 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 11, redundant 2
Fitness: max 0.833(56), min 0.167(1), ave 0.822
Test execution time: sum 3878 ms, max 196 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:48:54 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 19:49:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 21 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4025 ms, max 78 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:49:19 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 19:49:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 15, redundant 1
Fitness: max 0.833(51), min 0.167(2), ave 0.806
Test execution time: sum 3547 ms, max 138 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 19:49:42 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 19:50:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 28 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 25, redundant 2
Fitness: max 0.833(45), min 0.167(1), ave 0.816
Test execution time: sum 3162 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:50:03 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 19:50:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 22 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 10, redundant 2
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3588 ms, max 141 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:50:28 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 19:50:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 10, redundant 5
Fitness: max 0.833(56), min 0.5(1), ave 0.827
Test execution time: sum 3847 ms, max 78 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:50:52 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 19:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 23 minutes 42 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 7, redundant 5
Fitness: max 0.833(59), min 0.667(1), ave 0.831
Test execution time: sum 4038 ms, max 145 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:51:17 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 19:51:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 5 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 16, redundant 5
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 3702 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 19:51:40 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 19:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 30 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 12, redundant 0
Fitness: max 0.833(55), min 0.167(1), ave 0.814
Test execution time: sum 4003 ms, max 122 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:52:05 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 19:52:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 24 minutes 52 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0.833(47), min 0.833(47), ave 0.833
Test execution time: sum 3159 ms, max 77 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:52:27 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 17 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 12, redundant 3
Fitness: max 0.833(56), min 0.167(1), ave 0.811
Test execution time: sum 4149 ms, max 133 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:52:52 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 19:53:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 41 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 18, redundant 2
Fitness: max 0.833(47), min 0.667(1), ave 0.83
Test execution time: sum 3223 ms, max 77 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:53:15 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 19:53:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 5 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 16, redundant 1
Fitness: max 0.833(46), min 0.167(2), ave 0.806
Test execution time: sum 3287 ms, max 143 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:53:39 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 19:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 28 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 15, redundant 2
Fitness: max 0.833(47), min 0.167(1), ave 0.816
Test execution time: sum 3325 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:54:02 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 19:54:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 52 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 14, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.818
Test execution time: sum 3721 ms, max 138 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:54:27 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 19:54:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 22, syntax-invalid 17, redundant 4
Fitness: max 0.833(54), min 0.167(1), ave 0.816
Test execution time: sum 3805 ms, max 82 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 19:54:50 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 19:55:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 12, redundant 2
Fitness: max 0.833(50), min 0.167(5), ave 0.773
Test execution time: sum 3708 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:55:15 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 19:55:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 5 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0.833(53), min 0.167(1), ave 0.815
Test execution time: sum 3769 ms, max 78 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:55:40 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 19:56:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.833(50), ave 0.837
Test execution time: sum 3544 ms, max 134 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 19:56:04 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 19:56:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 16, redundant 7
Fitness: max 0.833(46), min 0.167(4), ave 0.776
Test execution time: sum 3468 ms, max 83 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:56:28 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 19:56:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 13, redundant 1
Fitness: max 0.833(43), min 0.167(8), ave 0.726
Test execution time: sum 3576 ms, max 132 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:56:54 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 19:57:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 22, redundant 0
Fitness: max 0.833(36), min 0.167(10), ave 0.688
Test execution time: sum 3217 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:57:17 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 19:57:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 19, redundant 4
Fitness: max 0.833(40), min 0.167(5), ave 0.759
Test execution time: sum 3125 ms, max 197 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:57:41 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 19:58:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 15, redundant 3
Fitness: max 0.833(54), min 0.167(3), ave 0.798
Test execution time: sum 3747 ms, max 78 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:58:05 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 19:58:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 14, redundant 4
Fitness: max 0.833(43), min 0.167(9), ave 0.716
Test execution time: sum 3705 ms, max 193 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:58:30 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 19:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.833(47), min 0.167(6), ave 0.758
Test execution time: sum 3590 ms, max 86 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 19:58:54 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 19:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 31 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 15, redundant 7
Fitness: max 0.833(46), min 0.167(3), ave 0.793
Test execution time: sum 3326 ms, max 152 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 19:59:19 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 19:59:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 13, redundant 6
Fitness: max 0.833(50), min 0.167(3), ave 0.791
Test execution time: sum 3730 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 19:59:43 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 20:00:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 36, syntax-invalid 14, redundant 2
Fitness: max 0.833(44), min 0.167(4), ave 0.778
Test execution time: sum 3286 ms, max 138 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 20:00:08 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 20:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 32 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.167(3), ave 0.795
Test execution time: sum 3944 ms, max 86 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:00:33 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 20:01:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 25 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 9, redundant 3
Fitness: max 0.833(54), min 0.167(7), ave 0.755
Test execution time: sum 4259 ms, max 137 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 20:01:00 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 20:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 33 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 16, redundant 1
Fitness: max 0.833(48), min 0.167(2), ave 0.804
Test execution time: sum 3498 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 20:01:24 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 20:01:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 15 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 15, redundant 5
Fitness: max 0.833(45), min 0.167(5), ave 0.765
Test execution time: sum 3527 ms, max 142 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 20:01:49 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 20:02:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 34 minutes 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 11, redundant 1
Fitness: max 0.833(56), min 0.167(2), ave 0.81
Test execution time: sum 3958 ms, max 82 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 20:02:15 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 20:02:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 19, redundant 2
Fitness: max 0.833(50), min 0.167(2), ave 0.805
Test execution time: sum 3672 ms, max 136 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:02:40 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 20:03:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 29 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 20, redundant 3
Fitness: max 0.833(42), min 0.167(3), ave 0.781
Test execution time: sum 3263 ms, max 81 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:03:04 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 20:03:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 35 minutes 55 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 15, redundant 5
Fitness: max 0.833(44), min 0.167(2), ave 0.801
Test execution time: sum 3295 ms, max 144 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:03:29 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 20:03:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.167(9), ave 0.716
Test execution time: sum 3628 ms, max 80 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 20:03:55 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 20:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 36 minutes 46 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 13, redundant 6
Fitness: max 0.833(56), min 0.167(1), ave 0.822
Test execution time: sum 3921 ms, max 136 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:04:20 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 20:04:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 11 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 13, redundant 0
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3635 ms, max 83 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:04:46 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 20:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 37 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 10, redundant 4
Fitness: max 0.833(52), min 0.167(2), ave 0.803
Test execution time: sum 3891 ms, max 145 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:05:13 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 20:05:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 3 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 21, redundant 2
Fitness: max 0.833(43), min 0.167(1), ave 0.815
Test execution time: sum 3078 ms, max 80 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:05:37 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 20:06:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 8, redundant 8
Fitness: max 0.833(51), min 0.667(2), ave 0.827
Test execution time: sum 3710 ms, max 124 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:06:05 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 20:06:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 38 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 14, redundant 1
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3510 ms, max 84 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:06:30 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 20:06:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 22 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0.833(52), min 0.833(52), ave 0.833
Test execution time: sum 3577 ms, max 130 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:06:57 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 20:07:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 39 minutes 48 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 15, redundant 2
Fitness: max 0.833(47), min 0.833(47), ave 0.833
Test execution time: sum 3229 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:07:23 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 20:07:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 14, redundant 4
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3499 ms, max 155 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:07:50 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 20:08:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 42 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 11, redundant 5
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3866 ms, max 85 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:08:17 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 20:08:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 11 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 6, redundant 5
Fitness: max 0.833(58), min 0.167(2), ave 0.806
Test execution time: sum 4351 ms, max 136 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:08:46 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 20:09:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 37 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 13, redundant 2
Fitness: max 0.833(49), min 0.167(5), ave 0.768
Test execution time: sum 4029 ms, max 84 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:09:12 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 20:09:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 5 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.167(2), ave 0.81
Test execution time: sum 4021 ms, max 139 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:09:39 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 20:10:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 12, redundant 0
Fitness: max 0.833(49), min 0.167(2), ave 0.799
Test execution time: sum 3837 ms, max 85 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:10:06 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 20:10:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 42 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 13, redundant 4
Fitness: max 0.833(53), min 0.167(1), ave 0.818
Test execution time: sum 3744 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:10:33 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 20:11:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0.833(54), min 0.167(4), ave 0.783
Test execution time: sum 4168 ms, max 82 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:11:01 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 20:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 43 minutes 54 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 15, redundant 5
Fitness: max 0.833(53), min 0.167(1), ave 0.818
Test execution time: sum 3845 ms, max 139 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:11:28 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-08-02 20:11:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 13, redundant 5
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3708 ms, max 80 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:11:55 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-08-02 20:12:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 minutes 47 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 18, redundant 3
Fitness: max 1(1), min 0.667(3), ave 0.827
Test execution time: sum 3986 ms, max 148 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:12:22 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-08-02 20:12:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 12 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 20, redundant 4
Fitness: max 0.833(43), min 0.667(2), ave 0.826
Test execution time: sum 3254 ms, max 127 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:12:47 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-08-02 20:13:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 45 minutes 40 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 17, redundant 7
Fitness: max 0.833(48), min 0.833(48), ave 0.833
Test execution time: sum 3427 ms, max 146 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:13:15 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-08-02 20:13:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 7 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 12, redundant 7
Fitness: max 0.833(50), min 0.833(50), ave 0.833
Test execution time: sum 3548 ms, max 87 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:13:42 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-08-02 20:14:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 46 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.667(2), ave 0.83
Test execution time: sum 3703 ms, max 141 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:14:10 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-08-02 20:14:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 2 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 14, redundant 3
Fitness: max 0.833(52), min 0.833(52), ave 0.833
Test execution time: sum 3610 ms, max 86 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:14:37 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-08-02 20:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 31 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 13, redundant 6
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 3902 ms, max 137 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:15:06 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-08-02 20:15:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 47 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 12, redundant 5
Fitness: max 0.833(51), min 0.167(1), ave 0.821
Test execution time: sum 3644 ms, max 84 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:15:33 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-08-02 20:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 27 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 13, redundant 5
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 3814 ms, max 151 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:16:02 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-08-02 20:16:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 minutes 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 17, redundant 1
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3754 ms, max 82 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:16:28 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-08-02 20:16:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 21 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 19, redundant 5
Fitness: max 1(1), min 0.833(49), ave 0.837
Test execution time: sum 3571 ms, max 129 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:16:56 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-08-02 20:17:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 49 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 20, syntax-invalid 16, redundant 8
Fitness: max 0.833(53), min 0.167(1), ave 0.815
Test execution time: sum 3902 ms, max 82 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:17:24 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-08-02 20:17:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 19, redundant 3
Fitness: max 0.833(46), min 0.667(2), ave 0.826
Test execution time: sum 3334 ms, max 125 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:17:52 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-08-02 20:18:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 43 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 19, redundant 4
Fitness: max 0.833(45), min 0.833(45), ave 0.833
Test execution time: sum 3139 ms, max 81 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:18:18 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-08-02 20:18:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 12 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 13, redundant 11
Fitness: max 0.833(48), min 0.833(48), ave 0.833
Test execution time: sum 3347 ms, max 137 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:18:46 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-08-02 20:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 24, redundant 4
Fitness: max 0.833(41), min 0.667(2), ave 0.826
Test execution time: sum 3020 ms, max 82 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:19:11 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-08-02 20:19:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 13, redundant 6
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3518 ms, max 126 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:19:40 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-08-02 20:20:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 32 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 17, redundant 3
Fitness: max 0.833(49), min 0.833(49), ave 0.833
Test execution time: sum 3326 ms, max 81 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:20:06 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-08-02 20:20:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 0 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.667(2), ave 0.831
Test execution time: sum 4055 ms, max 135 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:20:34 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-08-02 20:21:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 28 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 8, redundant 1
Fitness: max 0.833(57), min 0.167(1), ave 0.822
Test execution time: sum 3983 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:21:03 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-08-02 20:21:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 58 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 5, redundant 2
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3997 ms, max 132 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:21:32 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-08-02 20:22:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 14, redundant 1
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3776 ms, max 82 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:22:00 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-08-02 20:22:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 15, redundant 5
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3659 ms, max 139 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:22:28 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-08-02 20:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.167(2), ave 0.809
Test execution time: sum 3882 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:22:56 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-08-02 20:23:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 51 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 6, redundant 5
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 4090 ms, max 132 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:23:26 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-08-02 20:23:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 20 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 8, redundant 7
Fitness: max 0.833(60), min 0.667(1), ave 0.831
Test execution time: sum 4313 ms, max 82 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:23:54 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-08-02 20:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 49 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 5, redundant 6
Fitness: max 0.833(62), min 0.833(62), ave 0.833
Test execution time: sum 4259 ms, max 124 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:24:24 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-08-02 20:24:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 19 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 7, redundant 9
Fitness: max 0.833(60), min 0.167(1), ave 0.822
Test execution time: sum 4358 ms, max 139 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:24:54 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-08-02 20:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 48 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3984 ms, max 93 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:25:22 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-08-02 20:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 7, redundant 2
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3919 ms, max 130 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:25:52 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-08-02 20:26:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 58 minutes 46 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 4023 ms, max 83 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:26:20 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-08-02 20:26:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 15 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3867 ms, max 150 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:26:50 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-08-02 20:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 minutes 45 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 10, redundant 6
Fitness: max 1(2), min 0.667(1), ave 0.836
Test execution time: sum 3917 ms, max 83 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:27:20 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-08-02 20:27:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3718 ms, max 143 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:27:48 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-08-02 20:28:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 0.833(50), min 0.667(3), ave 0.824
Test execution time: sum 3738 ms, max 81 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:28:17 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-08-02 20:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 15, redundant 2
Fitness: max 0.833(49), min 0.167(1), ave 0.82
Test execution time: sum 3542 ms, max 143 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:28:45 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-08-02 20:29:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 40 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.833(59), min 0.833(59), ave 0.833
Test execution time: sum 4226 ms, max 80 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:29:15 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-08-02 20:29:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 8 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 17, redundant 6
Fitness: max 1(1), min 0.167(1), ave 0.819
Test execution time: sum 3441 ms, max 230 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:29:42 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-08-02 20:30:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 37 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.833(53), min 0.667(2), ave 0.827
Test execution time: sum 3804 ms, max 80 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:30:12 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-08-02 20:30:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 7 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 7, redundant 3
Fitness: max 0.833(57), min 0.667(2), ave 0.828
Test execution time: sum 4051 ms, max 125 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:30:42 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-08-02 20:31:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 33 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 16, redundant 6
Fitness: max 0.833(47), min 0.667(1), ave 0.83
Test execution time: sum 3502 ms, max 87 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:31:08 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-08-02 20:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 0.833(53), min 0.667(1), ave 0.83
Test execution time: sum 3662 ms, max 122 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:31:36 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-08-02 20:32:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 28 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 18, redundant 5
Fitness: max 0.833(49), min 0.167(1), ave 0.814
Test execution time: sum 3678 ms, max 79 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:32:03 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-08-02 20:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 59 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4252 ms, max 134 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:32:33 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-08-02 20:33:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 30 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 7, redundant 1
Fitness: max 0.833(62), min 0.667(2), ave 0.828
Test execution time: sum 4646 ms, max 159 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:33:05 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-08-02 20:33:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 1 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 8, redundant 3
Fitness: max 0.833(64), min 0.667(1), ave 0.831
Test execution time: sum 4587 ms, max 86 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:33:35 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-08-02 20:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 9, redundant 4
Fitness: max 0.833(57), min 0.667(3), ave 0.825
Test execution time: sum 4330 ms, max 147 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:34:07 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-08-02 20:34:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 2 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.833(58), min 0.167(1), ave 0.819
Test execution time: sum 4235 ms, max 146 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 20:34:36 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-08-02 20:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 33 seconds
Variants: generated 100, build-succeeded 67, build-failed 24, syntax-invalid 4, redundant 5
Fitness: max 0.833(67), min 0.833(67), ave 0.833
Test execution time: sum 4598 ms, max 134 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:35:08 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-08-02 20:35:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 4 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 9, redundant 3
Fitness: max 0.833(56), min 0.667(1), ave 0.83
Test execution time: sum 4213 ms, max 226 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:35:39 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-08-02 20:36:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 34 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 5, redundant 3
Fitness: max 0.833(60), min 0.667(1), ave 0.831
Test execution time: sum 4176 ms, max 81 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:36:09 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-08-02 20:36:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 10, redundant 1
Fitness: max 0.833(58), min 0.833(58), ave 0.833
Test execution time: sum 4104 ms, max 133 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:36:40 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-08-02 20:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 38 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 3, redundant 7
Fitness: max 0.833(64), min 0.167(1), ave 0.821
Test execution time: sum 4688 ms, max 87 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:37:13 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-08-02 20:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 5, redundant 4
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4257 ms, max 154 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:37:45 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-08-02 20:38:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 6, redundant 4
Fitness: max 0.833(58), min 0.667(1), ave 0.831
Test execution time: sum 4392 ms, max 198 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:38:18 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-08-02 20:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 16 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 4, redundant 7
Fitness: max 0.833(59), min 0.833(59), ave 0.833
Test execution time: sum 4258 ms, max 83 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 20:38:50 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-08-02 20:39:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 48 seconds
Variants: generated 100, build-succeeded 55, build-failed 37, syntax-invalid 4, redundant 4
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3934 ms, max 141 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:39:23 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-08-02 20:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 21 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0.833(57), min 0.833(57), ave 0.833
Test execution time: sum 4295 ms, max 126 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:39:55 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-08-02 20:40:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 52 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 6, redundant 6
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4105 ms, max 84 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:40:27 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-08-02 20:40:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 24 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.833(58), min 0.167(1), ave 0.817
Test execution time: sum 4339 ms, max 139 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:40:59 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-08-02 20:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 57 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 5, redundant 6
Fitness: max 0.833(64), min 0.333(1), ave 0.826
Test execution time: sum 4582 ms, max 84 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:41:32 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-08-02 20:42:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 14 minutes 29 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 9, redundant 2
Fitness: max 0.833(55), min 0.667(2), ave 0.827
Test execution time: sum 4051 ms, max 141 ms, min 64 ms
----------------------------------------------------------------

2023-08-02 20:42:03 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-08-02 20:42:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 6, redundant 5
Fitness: max 0.833(57), min 0.167(1), ave 0.819
Test execution time: sum 4444 ms, max 138 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:42:36 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-08-02 20:43:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 15 minutes 33 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 5, redundant 6
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4184 ms, max 86 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:43:08 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-08-02 20:43:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 6 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 6, redundant 3
Fitness: max 0.833(64), min 0.667(1), ave 0.831
Test execution time: sum 4611 ms, max 149 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:43:41 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-08-02 20:44:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 39 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 6, redundant 5
Fitness: max 0.833(63), min 0.667(2), ave 0.828
Test execution time: sum 4804 ms, max 139 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:44:14 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-08-02 20:44:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 11 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0.833(57), min 0.833(57), ave 0.833
Test execution time: sum 3969 ms, max 81 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:44:46 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-08-02 20:45:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 44 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 7, redundant 4
Fitness: max 0.833(56), min 0.167(1), ave 0.822
Test execution time: sum 4134 ms, max 139 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:45:19 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-08-02 20:45:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 4, redundant 5
Fitness: max 0.833(59), min 0.167(2), ave 0.811
Test execution time: sum 4377 ms, max 84 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:45:52 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-08-02 20:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 18 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 10, redundant 3
Fitness: max 0.833(51), min 0.167(1), ave 0.818
Test execution time: sum 3860 ms, max 142 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:46:25 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-08-02 20:47:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 25 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 6, redundant 4
Fitness: max 0.833(57), min 0.167(2), ave 0.808
Test execution time: sum 4485 ms, max 155 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:47:00 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-08-02 20:47:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 57 seconds
Variants: generated 100, build-succeeded 65, build-failed 22, syntax-invalid 9, redundant 4
Fitness: max 0.833(64), min 0.667(1), ave 0.831
Test execution time: sum 4544 ms, max 84 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:47:32 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-08-02 20:48:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 31 seconds
Variants: generated 100, build-succeeded 64, build-failed 27, syntax-invalid 5, redundant 4
Fitness: max 0.833(63), min 0.5(1), ave 0.828
Test execution time: sum 4632 ms, max 145 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:48:06 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-08-02 20:48:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 2 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 11, redundant 7
Fitness: max 0.833(57), min 0.167(2), ave 0.808
Test execution time: sum 4283 ms, max 80 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:48:36 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-08-02 20:49:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 35 seconds
Variants: generated 100, build-succeeded 65, build-failed 27, syntax-invalid 4, redundant 4
Fitness: max 0.833(63), min 0.167(2), ave 0.813
Test execution time: sum 4514 ms, max 135 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:49:10 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-08-02 20:49:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 7 seconds
Variants: generated 100, build-succeeded 61, build-failed 19, syntax-invalid 13, redundant 7
Fitness: max 0.833(59), min 0.167(1), ave 0.817
Test execution time: sum 4494 ms, max 149 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:49:42 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-08-02 20:50:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.833(56), min 0.167(1), ave 0.819
Test execution time: sum 4044 ms, max 83 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:50:13 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-08-02 20:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 12 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 7, redundant 2
Fitness: max 0.833(58), min 0.167(1), ave 0.822
Test execution time: sum 4304 ms, max 142 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:50:47 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-08-02 20:51:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 14, redundant 8
Fitness: max 0.833(50), min 0.167(1), ave 0.82
Test execution time: sum 3686 ms, max 87 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 20:51:17 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-08-02 20:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 17 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 6, redundant 1
Fitness: max 0.833(59), min 0.167(1), ave 0.822
Test execution time: sum 4324 ms, max 140 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:51:51 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-08-02 20:52:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 48 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 13, redundant 6
Fitness: max 0.833(50), min 0.5(1), ave 0.824
Test execution time: sum 3743 ms, max 78 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:52:23 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-08-02 20:52:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 12, redundant 10
Fitness: max 0.833(51), min 0.167(1), ave 0.815
Test execution time: sum 3864 ms, max 214 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:52:55 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-08-02 20:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 25 minutes 56 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 4, redundant 3
Fitness: max 0.833(64), min 0.833(64), ave 0.833
Test execution time: sum 4663 ms, max 144 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:53:30 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-08-02 20:54:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 26 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 0.833(52), min 0.5(1), ave 0.824
Test execution time: sum 3858 ms, max 81 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 20:54:02 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-08-02 20:54:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 4, redundant 5
Fitness: max 0.833(60), min 0.667(1), ave 0.831
Test execution time: sum 4310 ms, max 137 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:54:38 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-08-02 20:55:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 37 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 6, redundant 9
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3968 ms, max 125 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:55:11 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-08-02 20:55:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 9 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 11, redundant 3
Fitness: max 0.833(51), min 0.667(1), ave 0.83
Test execution time: sum 3619 ms, max 83 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:55:44 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-08-02 20:56:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 28 minutes 43 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 5, redundant 8
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 4047 ms, max 137 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:56:18 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-08-02 20:56:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 17 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 6, redundant 9
Fitness: max 0.833(54), min 0.667(1), ave 0.83
Test execution time: sum 4007 ms, max 83 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 20:56:52 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-08-02 20:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 52 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 5, redundant 3
Fitness: max 0.833(61), min 0.167(2), ave 0.812
Test execution time: sum 4494 ms, max 146 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 20:57:27 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-08-02 20:58:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 30 minutes 28 seconds
Variants: generated 100, build-succeeded 63, build-failed 32, syntax-invalid 3, redundant 2
Fitness: max 0.833(62), min 0.667(1), ave 0.831
Test execution time: sum 4571 ms, max 134 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:58:03 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-08-02 20:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 1 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 7, redundant 7
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 4214 ms, max 84 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:58:36 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-08-02 20:59:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 31 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 9, redundant 6
Fitness: max 0.833(51), min 0.167(2), ave 0.808
Test execution time: sum 3783 ms, max 124 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 20:59:10 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-08-02 20:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 8 seconds
Variants: generated 100, build-succeeded 52, build-failed 37, syntax-invalid 9, redundant 2
Fitness: max 0.833(52), min 0.833(52), ave 0.833
Test execution time: sum 3748 ms, max 80 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 20:59:42 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-08-02 21:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 32 minutes 42 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 7, redundant 4
Fitness: max 0.833(62), min 0.667(1), ave 0.831
Test execution time: sum 4425 ms, max 136 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:00:17 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-08-02 21:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 16 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 11, redundant 3
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3773 ms, max 137 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:00:51 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-08-02 21:01:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 33 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 12, redundant 6
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3546 ms, max 83 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:01:23 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-08-02 21:01:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 23 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 7, redundant 5
Fitness: max 0.833(62), min 0.667(3), ave 0.826
Test execution time: sum 4639 ms, max 139 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:01:57 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-08-02 21:02:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 34 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 13, redundant 4
Fitness: max 0.833(58), min 0.167(1), ave 0.822
Test execution time: sum 4167 ms, max 81 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 21:02:31 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-08-02 21:03:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 7, redundant 4
Fitness: max 0.833(55), min 0.667(1), ave 0.83
Test execution time: sum 3962 ms, max 134 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 21:03:05 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-08-02 21:03:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 0.833(52), min 0.167(2), ave 0.809
Test execution time: sum 4072 ms, max 149 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 21:03:37 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-08-02 21:04:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 37 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 5, redundant 10
Fitness: max 0.833(59), min 0.833(59), ave 0.833
Test execution time: sum 4117 ms, max 84 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:04:11 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-08-02 21:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 9, redundant 5
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3810 ms, max 131 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 21:04:45 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-08-02 21:05:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 10, redundant 5
Fitness: max 0.833(56), min 0.667(1), ave 0.83
Test execution time: sum 4177 ms, max 84 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 21:05:18 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-08-02 21:05:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 6, redundant 6
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3892 ms, max 137 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:05:52 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-08-02 21:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 51 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3929 ms, max 139 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 21:06:26 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-08-02 21:06:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 12, redundant 3
Fitness: max 0.833(60), min 0.167(1), ave 0.822
Test execution time: sum 4274 ms, max 83 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 21:06:59 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-08-02 21:07:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 57 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 0.833(48), min 0.667(3), ave 0.824
Test execution time: sum 3648 ms, max 146 ms, min 65 ms
----------------------------------------------------------------

2023-08-02 21:07:31 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-08-02 21:08:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 29 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3767 ms, max 83 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:08:04 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-08-02 21:08:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 16, redundant 4
Fitness: max 0.833(46), min 0.167(1), ave 0.819
Test execution time: sum 3442 ms, max 203 ms, min 62 ms
----------------------------------------------------------------

2023-08-02 21:08:36 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-08-02 21:09:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 36 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 4093 ms, max 97 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:09:10 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-08-02 21:09:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 9, redundant 5
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3804 ms, max 149 ms, min 63 ms
----------------------------------------------------------------

2023-08-02 21:09:44 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-08-02 21:10:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 44 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 4430 ms, max 200 ms, min 67 ms
----------------------------------------------------------------

2023-08-02 21:10:19 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-08-02 21:10:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 0.833(47), min 0.667(1), ave 0.83
Test execution time: sum 3372 ms, max 86 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:10:51 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-08-02 21:11:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 10, redundant 1
Fitness: max 0.833(53), min 0.167(1), ave 0.818
Test execution time: sum 3980 ms, max 147 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:11:26 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-08-02 21:11:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 44 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3925 ms, max 85 ms, min 66 ms
----------------------------------------------------------------

2023-08-02 21:11:59 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-08-02 21:12:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 6, redundant 2
Fitness: max 0.833(57), min 0.167(1), ave 0.822
Test execution time: sum 3726 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:12:35 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-08-02 21:13:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 12, redundant 4
Fitness: max 0.833(51), min 0.167(1), ave 0.821
Test execution time: sum 3371 ms, max 74 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:13:09 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-08-02 21:13:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 8 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 12, redundant 8
Fitness: max 0.833(50), min 0.833(50), ave 0.833
Test execution time: sum 3120 ms, max 138 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:13:42 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-08-02 21:14:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 46 minutes 41 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 10, redundant 2
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3544 ms, max 73 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:14:16 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-08-02 21:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 16 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 1(1), min 0.667(1), ave 0.833
Test execution time: sum 3443 ms, max 119 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:14:50 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-08-02 21:15:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 47 minutes 51 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 8, redundant 6
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3293 ms, max 71 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:15:25 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-08-02 21:15:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0.833(52), min 0.667(1), ave 0.83
Test execution time: sum 3419 ms, max 154 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:15:59 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-08-02 21:16:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 48 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 11, redundant 7
Fitness: max 0.833(61), min 0.833(61), ave 0.833
Test execution time: sum 3898 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:16:34 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-08-02 21:17:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 49 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 9, redundant 7
Fitness: max 0.833(53), min 0.667(1), ave 0.83
Test execution time: sum 3458 ms, max 118 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:17:09 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-08-02 21:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 10 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 7, redundant 6
Fitness: max 0.833(55), min 0.167(1), ave 0.821
Test execution time: sum 3619 ms, max 74 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:17:45 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-08-02 21:18:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 50 minutes 46 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 10, redundant 3
Fitness: max 0.833(59), min 0.667(1), ave 0.831
Test execution time: sum 3900 ms, max 216 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:18:21 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-08-02 21:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 22 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 6, redundant 6
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 3976 ms, max 72 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:18:56 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-08-02 21:19:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 51 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 9, redundant 7
Fitness: max 0.833(50), min 0.167(1), ave 0.82
Test execution time: sum 3277 ms, max 119 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:19:31 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-08-02 21:20:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 33 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 5, redundant 8
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3496 ms, max 74 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:20:07 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-08-02 21:20:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 9 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 8, redundant 3
Fitness: max 0.833(61), min 0.167(1), ave 0.823
Test execution time: sum 4006 ms, max 128 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:20:44 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-08-02 21:21:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 13, redundant 7
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3337 ms, max 73 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:21:18 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-08-02 21:21:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3426 ms, max 119 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:21:54 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-08-02 21:22:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 54 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 12, redundant 3
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3306 ms, max 76 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:22:28 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-08-02 21:23:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 11, redundant 2
Fitness: max 0.833(57), min 0.5(1), ave 0.828
Test execution time: sum 3746 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:23:05 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-08-02 21:23:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 14, redundant 1
Fitness: max 0.833(51), min 0.833(51), ave 0.833
Test execution time: sum 3355 ms, max 72 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:23:39 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-08-02 21:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 56 minutes 42 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 9, redundant 4
Fitness: max 0.833(51), min 0.667(1), ave 0.83
Test execution time: sum 3429 ms, max 133 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:24:17 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-08-02 21:24:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 12, redundant 7
Fitness: max 0.833(47), min 0.167(1), ave 0.819
Test execution time: sum 3144 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:24:52 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-08-02 21:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 9, redundant 8
Fitness: max 0.833(50), min 0.167(1), ave 0.817
Test execution time: sum 3311 ms, max 120 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:25:28 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-08-02 21:26:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 25 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 20, redundant 7
Fitness: max 0.833(40), min 0.833(40), ave 0.833
Test execution time: sum 2573 ms, max 76 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:26:00 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-08-02 21:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 3 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 7, redundant 6
Fitness: max 0.833(61), min 0.833(61), ave 0.833
Test execution time: sum 4032 ms, max 168 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:26:38 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-08-02 21:27:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 41 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.833(61), min 0.833(61), ave 0.833
Test execution time: sum 3983 ms, max 77 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:27:16 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-08-02 21:27:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 7, redundant 6
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3509 ms, max 146 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:27:54 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-08-02 21:28:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 11, redundant 7
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3273 ms, max 75 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:28:30 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-08-02 21:29:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 1 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3610 ms, max 131 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:29:07 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-08-02 21:29:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 10 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 6, redundant 3
Fitness: max 0.833(57), min 0.833(57), ave 0.833
Test execution time: sum 3854 ms, max 76 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:29:45 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-08-02 21:30:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 2 minutes 49 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 3796 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:30:24 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-08-02 21:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 3 minutes 28 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 0.833(58), min 0.833(58), ave 0.833
Test execution time: sum 3820 ms, max 138 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:31:03 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-08-02 21:31:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 5 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 11, redundant 5
Fitness: max 0.833(53), min 0.167(1), ave 0.821
Test execution time: sum 3477 ms, max 75 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:31:39 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-08-02 21:32:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 4, redundant 7
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3526 ms, max 154 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:32:18 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-08-02 21:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 5 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 38, syntax-invalid 4, redundant 4
Fitness: max 0.833(54), min 0.833(54), ave 0.833
Test execution time: sum 3611 ms, max 89 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:32:57 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-08-02 21:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 2 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 4, redundant 4
Fitness: max 0.833(59), min 0.833(59), ave 0.833
Test execution time: sum 3814 ms, max 149 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:33:36 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-08-02 21:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 6 minutes 39 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 11, redundant 4
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3457 ms, max 116 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:34:13 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-08-02 21:34:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.833(57), min 0.667(1), ave 0.83
Test execution time: sum 3794 ms, max 75 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:34:51 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-08-02 21:35:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 7 minutes 54 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 11, redundant 4
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3651 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:35:28 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-08-02 21:36:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 13, redundant 3
Fitness: max 0.833(49), min 0.833(49), ave 0.833
Test execution time: sum 3151 ms, max 73 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:36:04 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-08-02 21:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 8 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 6, redundant 11
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3458 ms, max 131 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:36:43 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-08-02 21:37:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 46 seconds
Variants: generated 100, build-succeeded 55, build-failed 33, syntax-invalid 7, redundant 5
Fitness: max 0.833(53), min 0.167(1), ave 0.818
Test execution time: sum 3632 ms, max 74 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:37:20 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-08-02 21:37:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 38, syntax-invalid 5, redundant 4
Fitness: max 0.833(52), min 0.167(1), ave 0.821
Test execution time: sum 3402 ms, max 123 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:37:59 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-08-02 21:38:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 9, redundant 6
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3691 ms, max 82 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:38:36 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-08-02 21:39:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 37 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 12, redundant 7
Fitness: max 0.833(47), min 0.667(1), ave 0.83
Test execution time: sum 3088 ms, max 137 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:39:12 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-08-02 21:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 7, redundant 5
Fitness: max 0.833(58), min 0.833(58), ave 0.833
Test execution time: sum 3857 ms, max 130 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:39:51 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-08-02 21:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 9, redundant 6
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3415 ms, max 77 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:40:29 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-08-02 21:41:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 9, redundant 7
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3570 ms, max 120 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:41:08 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-08-02 21:41:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 10, redundant 8
Fitness: max 0.833(48), min 0.667(2), ave 0.827
Test execution time: sum 3179 ms, max 74 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:41:45 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-08-02 21:42:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 47 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 13, redundant 7
Fitness: max 0.833(49), min 0.167(1), ave 0.817
Test execution time: sum 3354 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:42:22 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-08-02 21:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 24 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.833(51), min 0.667(1), ave 0.83
Test execution time: sum 3333 ms, max 75 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:42:59 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-08-02 21:43:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 7, redundant 6
Fitness: max 0.833(60), min 0.833(60), ave 0.833
Test execution time: sum 3919 ms, max 127 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:43:38 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-08-02 21:44:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 6, redundant 8
Fitness: max 0.833(53), min 0.833(53), ave 0.833
Test execution time: sum 3565 ms, max 79 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:44:17 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-08-02 21:44:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 17 minutes 20 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 11, redundant 11
Fitness: max 0.833(49), min 0.833(49), ave 0.833
Test execution time: sum 3084 ms, max 118 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:44:55 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-08-02 21:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 5, redundant 11
Fitness: max 0.833(52), min 0.667(3), ave 0.824
Test execution time: sum 3570 ms, max 76 ms, min 58 ms
----------------------------------------------------------------

2023-08-02 21:45:34 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-08-02 21:46:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 38 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 12, redundant 8
Fitness: max 0.833(49), min 0.833(49), ave 0.833
Test execution time: sum 3203 ms, max 123 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:46:13 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-08-02 21:46:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 11, redundant 11
Fitness: max 0.833(49), min 0.667(1), ave 0.83
Test execution time: sum 3269 ms, max 75 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:46:50 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-08-02 21:47:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 19 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 16, redundant 6
Fitness: max 0.833(54), min 0.167(1), ave 0.821
Test execution time: sum 3579 ms, max 135 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 21:47:27 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-08-02 21:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 20 minutes 30 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 11, redundant 8
Fitness: max 0.833(50), min 0.667(1), ave 0.83
Test execution time: sum 3301 ms, max 75 ms, min 60 ms
----------------------------------------------------------------

2023-08-02 21:48:04 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-08-02 21:48:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 10, redundant 4
Fitness: max 0.833(55), min 0.833(55), ave 0.833
Test execution time: sum 3617 ms, max 134 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 21:48:45 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-08-02 21:49:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 21 minutes 50 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.833(56), min 0.833(56), ave 0.833
Test execution time: sum 3827 ms, max 84 ms, min 61 ms
----------------------------------------------------------------

2023-08-02 21:49:24 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v542)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v542)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v542)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v542)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v542)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1037)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1037)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1037)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -241,7 +239,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1539)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,7 +240,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1540)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1540)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1540)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1540)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1540)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -125,6 +124,7 @@
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
+			setResult(max, 0);
             return result;
         }
 
@@ -182,6 +182,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,7 +242,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1638)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1638)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1638)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,10 +60,8 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1638)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1638)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +182,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,10 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1704)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -183,6 +182,7 @@
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -241,7 +241,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1822)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1822)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1822)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1822)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v1822)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +229,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -241,7 +245,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2001)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fb;
+				setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,7 +242,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2226)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,9 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                int i = 0;
+				double fb;
+				setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,7 +242,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2431)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            double oldx = Double.POSITIVE_INFINITY;
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,7 +228,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
@@ -241,7 +244,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v2836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -181,8 +180,11 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
+                double fb;
+				setResult(max, 0);
+				int i = 0;
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,7 +231,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3122)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3122)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3122)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3122)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3122)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,7 +229,11 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3133)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,8 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3133)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3133)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3133)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3133)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,8 +179,8 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
+				double oldx = Double.POSITIVE_INFINITY;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,10 +60,10 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3336)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +173,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -241,7 +238,8 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
+                ++i;
+				// Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3632)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3632)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3632)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3632)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,7 +175,7 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
@@ -229,11 +227,17 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -139,7 +138,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        clearResult();
         this.resultComputed = true;
     }
 
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v3902)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -177,11 +175,12 @@
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
-            if (Math.abs(yMin) <= functionValueAccuracy) {
+            if (f == null) {
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +228,16 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4108)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -139,7 +138,7 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
+        clearResult();
         this.resultComputed = true;
     }
 
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4108)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4108)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4108)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4108)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double fm;
             return result;
         }
 
@@ -182,6 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +229,24 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4528)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4528)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4528)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4528)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v4528)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,17 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -241,11 +245,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v5818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v5818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v5818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v5818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				int i = 0;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +228,21 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6003)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6003)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6003)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +228,28 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +261,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,24 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +256,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6649)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +228,29 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v6936)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7232)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7232)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                resultComputed = true;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +228,26 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7518)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7518)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7518)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7518)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7518)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,36 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7547)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -229,11 +228,23 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7945)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7945)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7945)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7945)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v7945)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,40 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
@@ -154,7 +153,6 @@
                                    final int iterationCount) {
         this.result         = x;
         this.functionValue  = fx;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8041)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +226,27 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8047)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8047)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8047)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8047)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:28 [main] [INFO]  PatchLogExporter - patch (v8047)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +228,15 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8304)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8304)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8304)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8304)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8304)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +228,27 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8323)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -229,11 +227,21 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8401)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,14 +106,14 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
-            return result;
+            setResult(max, 0);
         }
 
         // reduce interval if min and initial bracket the root
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.resultComputed = true;
             return result;
         }
 
@@ -229,11 +229,24 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,8 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
+        double p1;
+		this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8601)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            verifyInterval(min, max);
             return result;
         }
 
@@ -182,7 +181,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                this.resultComputed = true;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +229,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8720)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8720)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8720)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8720)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8720)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +179,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +226,20 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +251,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8916)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8916)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8916)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v8916)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,18 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +179,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                resultComputed = true;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,23 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9039)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9039)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9039)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -85,7 +85,6 @@
 
     /** {@inheritDoc} */
     public void resetAbsoluteAccuracy() {
-        absoluteAccuracy = defaultAbsoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9039)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9039)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +228,21 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +254,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9148)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9148)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9148)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,11 +59,13 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9148)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9148)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,7 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(min) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,20 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9204)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double sign = yMin * yMax;
             return result;
         }
 
@@ -182,7 +180,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                resultComputed = true;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +229,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +256,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9523)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9523)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9523)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9523)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9523)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x1;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +227,20 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +252,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9527)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +254,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9723)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9723)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9723)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9723)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9723)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,12 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double p1;
             return result;
         }
 
@@ -182,6 +181,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +230,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9933)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9933)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9933)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9933)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v9933)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,20 +99,18 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            return initial;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +122,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +178,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +225,27 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v10937)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v10937)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v10937)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,9 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v10937)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v10937)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -106,13 +106,13 @@
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
-            return result;
+            double x1;
+			return result;
         }
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -181,7 +180,6 @@
                 setResult(min, 0);
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
-                setResult(max, 0);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +227,20 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,8 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11320)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +229,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -62,8 +62,12 @@
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
-        this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11450)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +181,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +228,22 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,10 +60,11 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v11647)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -234,6 +235,15 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12629)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            resultComputed = true;
             return result;
         }
 
@@ -182,7 +182,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -234,6 +235,14 @@
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12829)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12829)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12829)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12829)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v12829)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,7 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(max) == 0.0) {
             setResult(yMin, 0);
             return result;
         }
@@ -124,7 +124,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -182,7 +182,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                int i = 1;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +231,26 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13630)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13630)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13630)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13630)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13630)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +232,25 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,7 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,33 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				int iterationCount = 0;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -244,7 +243,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v14912)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +178,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,37 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,9 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v15528)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +229,43 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v16843)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -112,7 +111,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +233,35 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -244,7 +244,6 @@
                                     final UnivariateRealFunction function)
         throws FunctionEvaluationException {
 
-        verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
             throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -59,13 +59,14 @@
      */
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
-        this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17101)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +178,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +229,34 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17339)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17339)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17339)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17339)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17339)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +231,30 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17439)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17439)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17439)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17439)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17439)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +229,37 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17625)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +178,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +227,46 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17641)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +178,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +231,38 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v17917)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -99,7 +99,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -111,10 +110,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +120,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +177,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
+				return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +227,50 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,9 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
-        this.iterationCount = 0;
     }
 
     /** {@inheritDoc} */
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v19613)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x1 = min;
             return result;
         }
 
@@ -182,7 +181,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMin, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                return result;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +233,68 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,10 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20003)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,10 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +230,53 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -246,7 +245,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,8 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20009)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,9 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +230,67 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -246,7 +245,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20013)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,8 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +229,50 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,9 +61,11 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v20818)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,13 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +234,46 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -246,7 +245,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21739)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x1 = max;
             return result;
         }
 
@@ -182,7 +181,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+                this.functionValueAccuracy = defaultFunctionValueAccuracy;
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +232,34 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,15 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:29 [main] [INFO]  PatchLogExporter - patch (v21942)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,14 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				double fmin;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +234,40 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,18 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22320)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,13 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				resultComputed = true;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +234,37 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22431)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,11 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22431)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,16 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				resultComputed = true;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +237,47 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22549)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,17 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				{
+					setResult(min, 0);
+					ret = min;
+				}
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +237,44 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v22938)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,11 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +232,47 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,14 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23235)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,18 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +238,38 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
@@ -246,7 +245,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,14 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23305)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				{
+					setResult(min, 0);
+					ret = min;
+				}
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +233,52 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v23749)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x2 = max;
             return result;
         }
 
@@ -182,6 +181,12 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				resultComputed = true;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +234,48 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,9 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v24907)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,14 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				resultComputed = true;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +235,54 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,10 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,14 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v28442)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            this.resultComputed = true;
             return result;
         }
 
@@ -182,6 +181,23 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +245,42 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,11 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v29501)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,13 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +234,54 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -241,11 +289,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,12 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v30304)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,10 +111,7 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
-            return result;
-        }
+        if (Math.abs(yMin) <= functionValueAccuracy)
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
@@ -124,7 +121,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +178,24 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +243,26 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -246,7 +245,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v31626)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,7 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
             return result;
         }
 
@@ -124,7 +124,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +181,24 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +246,40 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
@@ -245,7 +291,6 @@
                 // the iteration has converged (the problem may
                 // still be ill conditioned)
                 setResult(x1, i);
-                return result;
             }
             double dx = x2 - x1;
             double tolerance =
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,18 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32224)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -111,8 +111,9 @@
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
-        if (Math.abs(yMin) <= functionValueAccuracy) {
+        if (f.value(initial) == 0.0) {
             setResult(yMin, 0);
+			this.iterationCount = iterationCount;
             return result;
         }
 
@@ -124,7 +125,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            iterationCount += this.iterationCount;
             return result;
         }
 
@@ -182,6 +183,15 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +239,39 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,16 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v32610)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,29 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +249,27 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,11 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v33211)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,9 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            verifyBracketing(min, max, f);
+			this.iterationCount = iterationCount;
+			this.iterationCount = iterationCount;
             return result;
         }
 
@@ -124,7 +126,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            int i = 0;
             return result;
         }
 
@@ -182,6 +184,23 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +248,57 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,12 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34031)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,27 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +247,60 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,9 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v34513)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,7 +180,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
-                ret = max;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw MathRuntimeException.createIllegalArgumentException(
@@ -229,11 +250,55 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,13 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35212)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,33 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				verifyInterval(min, max);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +254,58 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,15 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35431)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,31 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				verifyInterval(min, max);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +252,64 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			final double x3 = 0.5 * (x1 + x2);
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35433)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35433)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35433)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,15 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35433)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35433)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,30 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				verifyInterval(min, max);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +251,64 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -246,7 +246,8 @@
 
         verifyInterval(lower, upper);
         if (!isBracketing(lower, upper, function)) {
-            throw MathRuntimeException.createIllegalArgumentException(
+            resultComputed = true;
+			throw MathRuntimeException.createIllegalArgumentException(
                     "function values at endpoints do not have different signs.  " +
                     "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
                     lower, upper, function.value(lower), function.value(upper));
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,16 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v35911)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,7 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            double x0 = min;
             return result;
         }
 
@@ -182,6 +181,28 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				setResult(yMax, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,11 +250,62 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
+				clearResult();
+				clearResult();
+				clearResult();
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v43406)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v43406)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v43406)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,26 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v43406)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v43406)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,39 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				this.resultComputed = true;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				this.iterationCount = 0;
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +260,39 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v44232)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -174,4 +174,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v44232)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v44232)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -63,7 +63,28 @@
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
-        this.defaultMaximalIterationCount = defaultMaximalIterationCount;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		absoluteAccuracy = defaultAbsoluteAccuracy;
+		this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v44232)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 21:49:30 [main] [INFO]  PatchLogExporter - patch (v44232)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -112,7 +112,6 @@
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
             return result;
         }
 
@@ -124,7 +123,6 @@
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
             return result;
         }
 
@@ -182,6 +180,32 @@
                 ret = min;
             } else if (Math.abs(yMax) <= functionValueAccuracy) {
                 setResult(max, 0);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				ret = solve(f, min, yMin, max, yMax, min, yMin);
+				int i = 0;
                 ret = max;
             } else {
                 // neither value is close to zero and min and max do not bracket root.
@@ -229,7 +253,35 @@
         double delta = x1 - x0;
         double oldDelta = delta;
 
-        int i = 0;
+        {
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		{
+			x2 = x0;
+			y2 = y0;
+		}
+		int i = 0;
         while (i < maximalIterationCount) {
             if (Math.abs(y2) < Math.abs(y1)) {
                 // use the bracket point if is better than last approximation
2023-08-02 21:49:30 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 44040
Build succeeded variants = 26940
Time elapsed = 4 hours 21 minutes 56 seconds
Exit status = FAILURE (maximum generation)
