2023-10-28 09:33:26 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-10-28 09:33:26 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-10-28 09:33:26 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-10-28 09:33:26 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-10-28 09:33:29 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-10-28 09:33:29 [main] [INFO]  KGenProgMain - GA started
2023-10-28 09:33:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-10-28 09:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 50, build-succeeded 6, build-failed 28, syntax-invalid 4, redundant 12
Fitness: max 0.917(4), min 0.75(2), ave 0.861
Test execution time: sum 609 ms, max 186 ms, min 49 ms
----------------------------------------------------------------

2023-10-28 09:33:31 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-10-28 09:45:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 minutes 3 seconds
Variants: generated 50, build-succeeded 7, build-failed 24, syntax-invalid 6, redundant 13
Fitness: max 0.917(2), min 0.583(1), ave 0.774
Test execution time: sum 720355 ms, max 720030 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 09:45:33 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-10-28 10:09:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 5 seconds
Variants: generated 100, build-succeeded 18, build-failed 25, syntax-invalid 5, redundant 52
Fitness: max 0.917(3), min 0.5(1), ave 0.718
Test execution time: sum 1440665 ms, max 720025 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 10:09:35 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-10-28 10:09:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 minutes 8 seconds
Variants: generated 100, build-succeeded 25, build-failed 27, syntax-invalid 8, redundant 40
Fitness: max 0.917(6), min 0.667(3), ave 0.79
Test execution time: sum 933 ms, max 82 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:09:38 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-10-28 10:21:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 7 seconds
Variants: generated 100, build-succeeded 17, build-failed 29, syntax-invalid 21, redundant 33
Fitness: max 0.917(4), min 0.583(1), ave 0.789
Test execution time: sum 717064 ms, max 716457 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 10:21:37 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-10-28 10:33:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 seconds
Variants: generated 100, build-succeeded 15, build-failed 30, syntax-invalid 27, redundant 28
Fitness: max 1(1), min 0.583(1), ave 0.844
Test execution time: sum 720730 ms, max 720024 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:33:39 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-10-28 10:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 seconds
Variants: generated 100, build-succeeded 7, build-failed 32, syntax-invalid 36, redundant 25
Fitness: max 0.917(5), min 0.75(2), ave 0.869
Test execution time: sum 482 ms, max 96 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:33:41 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-10-28 10:33:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 seconds
Variants: generated 100, build-succeeded 10, build-failed 25, syntax-invalid 43, redundant 22
Fitness: max 1(1), min 0.75(1), ave 0.908
Test execution time: sum 712 ms, max 90 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:33:43 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-10-28 10:48:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 15 seconds
Variants: generated 100, build-succeeded 10, build-failed 27, syntax-invalid 42, redundant 21
Fitness: max 0.917(7), min 0.583(1), ave 0.858
Test execution time: sum 900600 ms, max 900024 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 10:48:44 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-10-28 10:48:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 17 seconds
Variants: generated 100, build-succeeded 12, build-failed 30, syntax-invalid 42, redundant 16
Fitness: max 1(1), min 0.667(1), ave 0.903
Test execution time: sum 949 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:48:47 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-10-28 10:48:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 15 minutes 19 seconds
Variants: generated 100, build-succeeded 8, build-failed 29, syntax-invalid 36, redundant 27
Fitness: max 0.917(7), min 0.75(1), ave 0.896
Test execution time: sum 580 ms, max 93 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 10:48:49 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-10-28 11:03:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 21 seconds
Variants: generated 100, build-succeeded 11, build-failed 29, syntax-invalid 39, redundant 21
Fitness: max 0.917(8), min 0.583(1), ave 0.856
Test execution time: sum 900756 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:03:51 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-10-28 11:03:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 24 seconds
Variants: generated 100, build-succeeded 15, build-failed 24, syntax-invalid 40, redundant 21
Fitness: max 0.917(14), min 0.75(1), ave 0.906
Test execution time: sum 1116 ms, max 91 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:03:54 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-10-28 11:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 28 seconds
Variants: generated 100, build-succeeded 26, build-failed 27, syntax-invalid 36, redundant 11
Fitness: max 0.917(23), min 0.75(2), ave 0.901
Test execution time: sum 1812 ms, max 93 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:03:57 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-10-28 11:04:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 30 seconds
Variants: generated 100, build-succeeded 12, build-failed 39, syntax-invalid 36, redundant 13
Fitness: max 0.917(12), min 0.917(12), ave 0.917
Test execution time: sum 997 ms, max 95 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 11:04:00 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-10-28 11:04:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 34 seconds
Variants: generated 100, build-succeeded 26, build-failed 25, syntax-invalid 38, redundant 11
Fitness: max 1(1), min 0.917(25), ave 0.92
Test execution time: sum 2074 ms, max 101 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 11:04:04 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-10-28 11:04:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 38 seconds
Variants: generated 100, build-succeeded 25, build-failed 26, syntax-invalid 34, redundant 15
Fitness: max 1(1), min 0.75(1), ave 0.913
Test execution time: sum 1916 ms, max 95 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:08 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-10-28 11:04:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 43 seconds
Variants: generated 100, build-succeeded 25, build-failed 36, syntax-invalid 29, redundant 10
Fitness: max 0.917(24), min 0.667(1), ave 0.907
Test execution time: sum 1981 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:12 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-10-28 11:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 46 seconds
Variants: generated 100, build-succeeded 17, build-failed 34, syntax-invalid 36, redundant 13
Fitness: max 0.917(16), min 0.75(1), ave 0.907
Test execution time: sum 1327 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:16 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-10-28 11:04:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 51 seconds
Variants: generated 100, build-succeeded 33, build-failed 28, syntax-invalid 29, redundant 10
Fitness: max 0.917(32), min 0.833(1), ave 0.914
Test execution time: sum 2557 ms, max 92 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:21 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-10-28 11:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 55 seconds
Variants: generated 100, build-succeeded 21, build-failed 40, syntax-invalid 29, redundant 10
Fitness: max 0.917(21), min 0.917(21), ave 0.917
Test execution time: sum 1695 ms, max 96 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 11:04:25 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-10-28 11:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 0 seconds
Variants: generated 100, build-succeeded 36, build-failed 30, syntax-invalid 26, redundant 8
Fitness: max 0.917(33), min 0.75(3), ave 0.903
Test execution time: sum 2685 ms, max 107 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:30 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-10-28 11:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 5 seconds
Variants: generated 100, build-succeeded 29, build-failed 28, syntax-invalid 29, redundant 14
Fitness: max 0.917(28), min 0.75(1), ave 0.911
Test execution time: sum 2332 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:04:35 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-10-28 11:04:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 10 seconds
Variants: generated 100, build-succeeded 27, build-failed 35, syntax-invalid 24, redundant 14
Fitness: max 0.917(27), min 0.917(27), ave 0.917
Test execution time: sum 2280 ms, max 111 ms, min 66 ms
----------------------------------------------------------------

2023-10-28 11:04:40 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-10-28 11:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 15 seconds
Variants: generated 100, build-succeeded 26, build-failed 32, syntax-invalid 33, redundant 9
Fitness: max 1(1), min 0.583(1), ave 0.907
Test execution time: sum 1989 ms, max 108 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 11:04:45 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-10-28 11:13:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 20 seconds
Variants: generated 100, build-succeeded 32, build-failed 35, syntax-invalid 24, redundant 9
Fitness: max 0.917(31), min 0.583(1), ave 0.906
Test execution time: sum 542465 ms, max 540022 ms, min 65 ms
----------------------------------------------------------------

2023-10-28 11:13:50 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-10-28 11:13:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 26 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 22, redundant 11
Fitness: max 0.917(34), min 0.917(34), ave 0.917
Test execution time: sum 2711 ms, max 112 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 11:13:56 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-10-28 11:14:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 32 seconds
Variants: generated 100, build-succeeded 38, build-failed 26, syntax-invalid 28, redundant 8
Fitness: max 1(1), min 0.917(37), ave 0.919
Test execution time: sum 3066 ms, max 112 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 11:14:02 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-10-28 11:32:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 38 seconds
Variants: generated 100, build-succeeded 31, build-failed 40, syntax-invalid 26, redundant 3
Fitness: max 0.917(27), min 0.5(1), ave 0.884
Test execution time: sum 1082298 ms, max 1080022 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:32:08 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-10-28 11:32:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 43 seconds
Variants: generated 100, build-succeeded 30, build-failed 34, syntax-invalid 27, redundant 9
Fitness: max 0.917(30), min 0.917(30), ave 0.917
Test execution time: sum 2562 ms, max 111 ms, min 66 ms
----------------------------------------------------------------

2023-10-28 11:32:13 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-10-28 11:32:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 50 seconds
Variants: generated 100, build-succeeded 39, build-failed 32, syntax-invalid 18, redundant 11
Fitness: max 0.917(35), min 0.667(2), ave 0.895
Test execution time: sum 3066 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:32:20 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-10-28 11:32:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 56 seconds
Variants: generated 100, build-succeeded 32, build-failed 33, syntax-invalid 18, redundant 17
Fitness: max 1(1), min 0.75(2), ave 0.909
Test execution time: sum 2636 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:32:25 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-10-28 11:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 44 seconds
Variants: generated 100, build-succeeded 35, build-failed 41, syntax-invalid 15, redundant 9
Fitness: max 0.917(31), min 0.5(1), ave 0.893
Test execution time: sum 105010 ms, max 102400 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:34:14 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-10-28 11:34:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 51 seconds
Variants: generated 100, build-succeeded 45, build-failed 38, syntax-invalid 11, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3709 ms, max 110 ms, min 66 ms
----------------------------------------------------------------

2023-10-28 11:34:21 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-10-28 11:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 59 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 13, redundant 8
Fitness: max 0.917(42), min 0.5(1), ave 0.902
Test execution time: sum 3617 ms, max 114 ms, min 20 ms
----------------------------------------------------------------

2023-10-28 11:34:29 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-10-28 11:34:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 6 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 15, redundant 10
Fitness: max 0.917(39), min 0.667(1), ave 0.907
Test execution time: sum 3307 ms, max 111 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 11:34:36 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-10-28 11:34:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 13 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 14, redundant 9
Fitness: max 1(1), min 0.5(1), ave 0.891
Test execution time: sum 3327 ms, max 123 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 11:34:42 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-10-28 11:34:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 20 seconds
Variants: generated 100, build-succeeded 44, build-failed 39, syntax-invalid 12, redundant 5
Fitness: max 0.917(41), min 0.5(1), ave 0.896
Test execution time: sum 3593 ms, max 129 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 11:34:50 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-10-28 11:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 27 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 19, redundant 13
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3362 ms, max 117 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 11:34:57 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-10-28 11:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 33 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 25, redundant 13
Fitness: max 0.917(30), min 0.917(30), ave 0.917
Test execution time: sum 2507 ms, max 123 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 11:35:03 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-10-28 11:35:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 39 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 26, redundant 6
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 2862 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 11:35:09 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-10-28 11:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 45 seconds
Variants: generated 100, build-succeeded 33, build-failed 27, syntax-invalid 31, redundant 9
Fitness: max 0.917(32), min 0.75(1), ave 0.912
Test execution time: sum 2522 ms, max 95 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:35:15 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-10-28 11:35:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 53 seconds
Variants: generated 100, build-succeeded 47, build-failed 23, syntax-invalid 20, redundant 10
Fitness: max 0.917(46), min 0.75(1), ave 0.913
Test execution time: sum 3857 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:35:23 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-10-28 11:35:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 0 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 29, redundant 3
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3112 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:35:30 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-10-28 11:35:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 7 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 24, redundant 4
Fitness: max 0.917(40), min 0.75(2), ave 0.909
Test execution time: sum 3314 ms, max 96 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:35:37 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-10-28 11:35:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 16 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 16, redundant 8
Fitness: max 1(2), min 0.917(45), ave 0.92
Test execution time: sum 3908 ms, max 105 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 11:35:46 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-10-28 11:35:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 24 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 24, redundant 6
Fitness: max 1(1), min 0.917(40), ave 0.919
Test execution time: sum 3426 ms, max 104 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 11:35:53 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-10-28 11:36:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 33 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 13, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4374 ms, max 100 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 11:36:03 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-10-28 11:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 11, redundant 3
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4133 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:36:12 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-10-28 11:36:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 2 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 7, redundant 9
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4462 ms, max 108 ms, min 66 ms
----------------------------------------------------------------

2023-10-28 11:36:21 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-10-28 11:36:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 0 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 14, redundant 8
Fitness: max 1(1), min 0.75(2), ave 0.911
Test execution time: sum 3841 ms, max 104 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:36:30 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-10-28 11:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 9 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 13, redundant 8
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 3974 ms, max 108 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 11:36:39 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-10-28 11:36:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 17, redundant 8
Fitness: max 0.917(44), min 0.75(4), ave 0.903
Test execution time: sum 3824 ms, max 108 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 11:36:47 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-10-28 11:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 3 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 14, redundant 8
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4048 ms, max 99 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 11:36:56 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-10-28 12:01:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 35 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 21, redundant 2
Fitness: max 1(1), min 0.333(1), ave 0.9
Test execution time: sum 1443938 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:01:04 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-10-28 12:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 43 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 13, redundant 11
Fitness: max 0.917(45), min 0.75(2), ave 0.91
Test execution time: sum 3899 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:01:13 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-10-28 12:01:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 27 minutes 52 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 12, redundant 18
Fitness: max 0.917(41), min 0.75(1), ave 0.913
Test execution time: sum 3494 ms, max 103 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 12:01:21 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-10-28 12:01:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 0 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 13, redundant 11
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4069 ms, max 112 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:01:30 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-10-28 12:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 9 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 14, redundant 9
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 3980 ms, max 99 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 12:01:39 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-10-28 12:01:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 28 minutes 17 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 16, redundant 9
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 3563 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:01:47 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-10-28 12:25:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 25 seconds
Variants: generated 100, build-succeeded 35, build-failed 28, syntax-invalid 20, redundant 17
Fitness: max 1(1), min 0.333(1), ave 0.902
Test execution time: sum 1442884 ms, max 1440021 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:25:55 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-10-28 12:26:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 12, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4341 ms, max 112 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 12:26:04 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-10-28 12:26:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 43 seconds
Variants: generated 100, build-succeeded 42, build-failed 38, syntax-invalid 14, redundant 6
Fitness: max 0.917(41), min 0.75(1), ave 0.913
Test execution time: sum 3353 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:26:12 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-10-28 12:26:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 52 minutes 51 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 15, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3692 ms, max 105 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 12:26:21 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-10-28 12:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 1 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 6, redundant 9
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4031 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:26:31 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-10-28 12:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 10 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 14, redundant 11
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 3840 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:26:39 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-10-28 12:26:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 19 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 10, redundant 11
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4256 ms, max 125 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:26:49 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-10-28 12:26:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 29 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 13, redundant 13
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 4199 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:26:59 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-10-28 12:27:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 40 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 4, redundant 10
Fitness: max 1(2), min 0.917(59), ave 0.919
Test execution time: sum 5387 ms, max 115 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:27:10 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-10-28 12:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 53 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 9, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4648 ms, max 109 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 12:27:20 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-10-28 12:27:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 6, redundant 3
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 4949 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:27:30 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-10-28 12:27:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 10 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 9, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4018 ms, max 96 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:27:40 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-10-28 12:27:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 21 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.75(4), ave 0.907
Test execution time: sum 5257 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:27:51 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-10-28 12:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 32 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 9, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5057 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:02 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-10-28 12:28:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 14, redundant 4
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 5096 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:13 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-10-28 12:28:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 13, redundant 7
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4757 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:24 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-10-28 12:28:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 4 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 15, redundant 3
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 4734 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:34 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-10-28 12:28:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 14 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 14, redundant 3
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 4308 ms, max 145 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:44 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-10-28 12:28:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 7, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4881 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:28:55 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-10-28 12:29:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 11, redundant 8
Fitness: max 0.917(53), min 0.75(2), ave 0.911
Test execution time: sum 4991 ms, max 117 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 12:29:06 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-10-28 12:29:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 48 seconds
Variants: generated 100, build-succeeded 66, build-failed 22, syntax-invalid 7, redundant 5
Fitness: max 1(3), min 0.917(63), ave 0.92
Test execution time: sum 5945 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:29:18 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-10-28 12:29:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 55 minutes 58 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 15, redundant 4
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 4203 ms, max 118 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 12:29:28 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-10-28 12:29:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 9 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 12, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4483 ms, max 113 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 12:29:38 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-10-28 12:29:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 19 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 15, redundant 5
Fitness: max 0.917(51), min 0.5(1), ave 0.903
Test execution time: sum 4536 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:29:49 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-10-28 12:29:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 29 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 10, redundant 7
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4299 ms, max 112 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 12:29:59 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-10-28 12:30:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 39 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 17, redundant 8
Fitness: max 0.917(43), min 0.75(2), ave 0.909
Test execution time: sum 3797 ms, max 108 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 12:30:09 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-10-28 12:30:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 56 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 9, redundant 8
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4714 ms, max 136 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:30:20 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-10-28 12:30:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4316 ms, max 109 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 12:30:30 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-10-28 12:30:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 12 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 2, redundant 5
Fitness: max 0.917(62), min 0.5(3), ave 0.897
Test execution time: sum 5247 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:30:42 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-10-28 12:30:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 23 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4221 ms, max 115 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 12:30:52 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-10-28 12:31:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 4792 ms, max 111 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 12:31:04 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-10-28 12:31:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 7, redundant 6
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4484 ms, max 101 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:31:15 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-10-28 12:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 56 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 11, redundant 7
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 4877 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 12:31:26 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-10-28 12:46:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 8 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 4, redundant 6
Fitness: max 0.917(58), min 0.583(1), ave 0.911
Test execution time: sum 904942 ms, max 900023 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 12:46:38 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-10-28 12:46:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 20 seconds
Variants: generated 100, build-succeeded 66, build-failed 23, syntax-invalid 5, redundant 6
Fitness: max 0.917(66), min 0.917(66), ave 0.917
Test execution time: sum 5704 ms, max 129 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 12:46:50 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-10-28 12:47:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 11, redundant 11
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4048 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 12:47:00 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-10-28 13:11:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 41 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 12, redundant 3
Fitness: max 0.917(52), min 0.333(1), ave 0.906
Test execution time: sum 1444395 ms, max 1440021 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 13:11:11 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-10-28 13:11:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 13, redundant 5
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 4683 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:11:22 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-10-28 13:11:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 3 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 15, redundant 10
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 4129 ms, max 112 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 13:11:33 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-10-28 13:11:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 13 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 18, redundant 9
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3404 ms, max 99 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:11:42 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-10-28 13:11:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 24 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 15, redundant 6
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4494 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:11:54 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-10-28 13:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 35 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 18, redundant 3
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4312 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:12:04 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-10-28 13:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 45 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 20, redundant 2
Fitness: max 0.917(47), min 0.583(1), ave 0.906
Test execution time: sum 4092 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:12:15 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-10-28 13:12:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 38 minutes 55 seconds
Variants: generated 100, build-succeeded 44, build-failed 25, syntax-invalid 24, redundant 7
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 3741 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:12:25 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-10-28 13:12:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 6 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 19, redundant 5
Fitness: max 0.917(44), min 0.75(1), ave 0.911
Test execution time: sum 3751 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:12:36 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-10-28 13:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 18 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 15, redundant 6
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 4859 ms, max 113 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 13:12:48 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-10-28 13:12:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 29 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 17, redundant 3
Fitness: max 0.917(52), min 0.75(2), ave 0.91
Test execution time: sum 4548 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:12:59 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-10-28 13:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 43 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 5, redundant 3
Fitness: max 0.917(61), min 0.75(1), ave 0.914
Test execution time: sum 5334 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:13:12 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-10-28 13:13:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 39 minutes 55 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4692 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 13:13:25 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-10-28 13:13:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 7 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 6, redundant 7
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 4891 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:13:37 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-10-28 13:13:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 19 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4759 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:13:49 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-10-28 13:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 31 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 16, redundant 2
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4718 ms, max 111 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 13:14:01 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-10-28 13:14:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 40 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 17, syntax-invalid 17, redundant 7
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 5159 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 13:14:13 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-10-28 13:32:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 55 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 13, redundant 9
Fitness: max 0.917(54), min 0.5(1), ave 0.909
Test execution time: sum 1084700 ms, max 1080022 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:32:25 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-10-28 13:32:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0.917(59), ave 0.918
Test execution time: sum 5124 ms, max 117 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:32:38 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-10-28 13:32:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 20 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 16, redundant 11
Fitness: max 0.917(46), min 0.75(1), ave 0.913
Test execution time: sum 4063 ms, max 116 ms, min 27 ms
----------------------------------------------------------------

2023-10-28 13:32:50 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-10-28 13:33:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 11, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4719 ms, max 116 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 13:33:02 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-10-28 13:48:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 43 seconds
Variants: generated 100, build-succeeded 47, build-failed 23, syntax-invalid 23, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.908
Test execution time: sum 903857 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 13:48:13 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-10-28 14:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 29 minutes 53 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 23, redundant 4
Fitness: max 0.917(42), min 0.583(1), ave 0.909
Test execution time: sum 903563 ms, max 900023 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 14:03:23 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-10-28 14:03:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 5 seconds
Variants: generated 100, build-succeeded 50, build-failed 22, syntax-invalid 16, redundant 12
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4300 ms, max 112 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 14:03:34 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-10-28 14:03:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 16 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 18, redundant 8
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4051 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 14:03:46 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-10-28 14:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 30 minutes 27 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 21, redundant 3
Fitness: max 1(1), min 0.917(48), ave 0.918
Test execution time: sum 4165 ms, max 122 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 14:03:57 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-10-28 14:25:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 39 seconds
Variants: generated 100, build-succeeded 47, build-failed 24, syntax-invalid 19, redundant 10
Fitness: max 0.917(45), min 0.333(1), ave 0.901
Test execution time: sum 1263981 ms, max 1260022 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:25:09 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-10-28 14:25:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 51 minutes 50 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 20, redundant 5
Fitness: max 1(2), min 0.667(1), ave 0.915
Test execution time: sum 3654 ms, max 111 ms, min 37 ms
----------------------------------------------------------------

2023-10-28 14:25:20 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-10-28 14:25:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 2 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 20, redundant 5
Fitness: max 0.917(46), min 0.75(1), ave 0.913
Test execution time: sum 4228 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:25:31 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-10-28 14:25:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 4396 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:25:43 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-10-28 14:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 26 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 15, redundant 8
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4605 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:25:56 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-10-28 14:26:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 40 seconds
Variants: generated 100, build-succeeded 60, build-failed 20, syntax-invalid 11, redundant 9
Fitness: max 1(2), min 0.917(58), ave 0.919
Test execution time: sum 5455 ms, max 114 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 14:26:10 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-10-28 14:26:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4962 ms, max 115 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 14:26:23 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-10-28 14:26:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 8, redundant 5
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4947 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 14:26:36 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-10-28 14:26:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 18 seconds
Variants: generated 100, build-succeeded 43, build-failed 38, syntax-invalid 16, redundant 3
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4011 ms, max 118 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 14:26:48 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-10-28 14:27:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 32 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 10, redundant 6
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5203 ms, max 117 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 14:27:02 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-10-28 14:27:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 53 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 21, syntax-invalid 17, redundant 6
Fitness: max 0.917(55), min 0.833(1), ave 0.915
Test execution time: sum 4961 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:27:15 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-10-28 14:51:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 17 minutes 59 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0.333(1), ave 0.907
Test execution time: sum 1444717 ms, max 1440022 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 14:51:28 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-10-28 14:51:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 13 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 4, redundant 7
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 5106 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:51:43 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-10-28 14:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 27 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 9, redundant 7
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 5101 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:51:56 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-10-28 14:52:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 14, redundant 8
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4613 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:52:10 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-10-28 14:52:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 18 minutes 54 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 9, redundant 5
Fitness: max 0.917(59), min 0.75(1), ave 0.914
Test execution time: sum 5486 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 14:52:24 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-10-28 14:52:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 8 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 11, redundant 2
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5266 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 14:52:38 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-10-28 14:52:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 22 seconds
Variants: generated 100, build-succeeded 56, build-failed 22, syntax-invalid 14, redundant 8
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5180 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:52:52 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-10-28 14:53:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 36 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 12, redundant 5
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4565 ms, max 113 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 14:53:06 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-10-28 14:53:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 19 minutes 49 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 13, redundant 9
Fitness: max 0.917(47), min 0(1), ave 0.898
Test execution time: sum 4356 ms, max 118 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 14:53:19 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-10-28 14:53:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5063 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 14:53:33 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-10-28 14:55:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 30 seconds
Variants: generated 100, build-succeeded 61, build-failed 27, syntax-invalid 10, redundant 2
Fitness: max 0.917(59), min 0.5(1), ave 0.907
Test execution time: sum 77688 ms, max 72219 ms, min 34 ms
----------------------------------------------------------------

2023-10-28 14:55:00 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-10-28 14:55:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.333(1), ave 0.905
Test execution time: sum 5271 ms, max 96 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 14:55:14 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-10-28 14:55:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 59 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 1(2), min 0.917(56), ave 0.92
Test execution time: sum 5283 ms, max 109 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 14:55:29 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-10-28 14:55:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 15 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 6, redundant 4
Fitness: max 1(2), min 0.917(63), ave 0.919
Test execution time: sum 5871 ms, max 115 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 14:55:45 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-10-28 15:12:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 38 minutes 43 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 6, redundant 4
Fitness: max 0.917(63), min 0.5(1), ave 0.903
Test execution time: sum 978011 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:12:13 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-10-28 15:18:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 44 minutes 57 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 0.917(57), min 0.25(1), ave 0.901
Test execution time: sum 365154 ms, max 360022 ms, min 13 ms
----------------------------------------------------------------

2023-10-28 15:18:27 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-10-28 15:18:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 11 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 4765 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:18:41 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-10-28 15:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 26 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 9, redundant 10
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4859 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:18:56 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-10-28 15:19:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 1(2), min 0.917(54), ave 0.92
Test execution time: sum 4921 ms, max 120 ms, min 66 ms
----------------------------------------------------------------

2023-10-28 15:19:10 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-10-28 15:19:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 53 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 16, redundant 5
Fitness: max 0.917(44), min 0.833(1), ave 0.915
Test execution time: sum 4058 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:19:23 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-10-28 15:19:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4597 ms, max 119 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 15:19:37 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-10-28 15:19:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 20 seconds
Variants: generated 100, build-succeeded 47, build-failed 35, syntax-invalid 14, redundant 4
Fitness: max 0.917(46), min 0.75(1), ave 0.913
Test execution time: sum 4210 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 15:19:50 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-10-28 15:20:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 35 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5023 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:20:05 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-10-28 15:32:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 49 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 15, redundant 6
Fitness: max 0.917(50), min 0.583(1), ave 0.907
Test execution time: sum 724525 ms, max 720022 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 15:32:19 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-10-28 15:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 3 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 10, redundant 8
Fitness: max 1(1), min 0.75(3), ave 0.909
Test execution time: sum 4823 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 15:32:33 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-10-28 15:32:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 17 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 12, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4441 ms, max 119 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 15:32:47 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-10-28 15:57:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 12, redundant 6
Fitness: max 0.917(52), min 0.333(1), ave 0.903
Test execution time: sum 1444754 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 15:57:02 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-10-28 15:57:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 23 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4947 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 15:57:16 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-10-28 16:21:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 13, redundant 6
Fitness: max 0.917(52), min 0.333(1), ave 0.906
Test execution time: sum 1444816 ms, max 1440021 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 16:21:31 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-10-28 16:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 12, redundant 1
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 4954 ms, max 119 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 16:21:45 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-10-28 16:46:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 11, redundant 2
Fitness: max 0.917(53), min 0.333(1), ave 0.902
Test execution time: sum 1444925 ms, max 1440021 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 16:46:00 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-10-28 16:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5035 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 16:46:15 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-10-28 16:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 59 seconds
Variants: generated 100, build-succeeded 49, build-failed 37, syntax-invalid 10, redundant 4
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4410 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 16:46:29 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-10-28 17:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 11, redundant 6
Fitness: max 0.917(52), min 0.333(1), ave 0.906
Test execution time: sum 1444755 ms, max 1440022 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 17:10:44 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-10-28 17:11:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 37 minutes 30 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 7, redundant 4
Fitness: max 1(1), min 0.917(64), ave 0.918
Test execution time: sum 5942 ms, max 117 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 17:11:00 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-10-28 17:26:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 52 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.583(1), ave 0.912
Test execution time: sum 904694 ms, max 900023 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 17:26:14 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-10-28 17:26:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 52 minutes 59 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4694 ms, max 119 ms, min 39 ms
----------------------------------------------------------------

2023-10-28 17:26:29 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-10-28 17:26:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 10, redundant 5
Fitness: max 0.917(53), min 0.75(1), ave 0.912
Test execution time: sum 4832 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:26:44 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-10-28 17:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 5, redundant 8
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5140 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 17:27:00 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-10-28 17:27:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 53 minutes 45 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.917(50), ave 0.918
Test execution time: sum 4682 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 17:27:15 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-10-28 17:27:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 0 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4743 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 17:27:30 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-10-28 17:27:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 15 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 4705 ms, max 120 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 17:27:44 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-10-28 17:28:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 4993 ms, max 116 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 17:28:00 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-10-28 17:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 46 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 12, redundant 7
Fitness: max 0.917(56), min 0.75(2), ave 0.911
Test execution time: sum 5073 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:28:15 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-10-28 17:28:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 1 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4521 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:28:30 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-10-28 17:28:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 15, redundant 5
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4766 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:28:45 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-10-28 17:29:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 30 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 12, redundant 4
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4403 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:29:00 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-10-28 17:30:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 56 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 8, redundant 6
Fitness: max 0.917(54), min 0.5(1), ave 0.904
Test execution time: sum 73917 ms, max 68973 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:30:25 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-10-28 17:30:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0.917(55), min 0.833(1), ave 0.915
Test execution time: sum 5009 ms, max 115 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:30:41 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-10-28 17:30:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 16, redundant 3
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5187 ms, max 115 ms, min 65 ms
----------------------------------------------------------------

2023-10-28 17:30:56 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-10-28 17:31:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 41 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 15, redundant 4
Fitness: max 0.917(51), min 0.833(1), ave 0.915
Test execution time: sum 4572 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:31:11 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-10-28 17:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 57 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 17, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4466 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 17:31:26 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-10-28 17:31:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 11 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4924 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:31:41 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-10-28 17:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 28 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 11, redundant 7
Fitness: max 0.917(58), min 0.75(2), ave 0.911
Test execution time: sum 5348 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:31:58 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-10-28 17:32:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 15, redundant 5
Fitness: max 0.917(50), min 0.667(2), ave 0.907
Test execution time: sum 4646 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:32:13 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-10-28 17:32:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 58 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 14, redundant 5
Fitness: max 0.917(48), min 0.667(2), ave 0.907
Test execution time: sum 4362 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:32:28 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-10-28 17:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 59 minutes 15 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 11, redundant 5
Fitness: max 0.917(56), min 0.667(2), ave 0.905
Test execution time: sum 5227 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 17:32:45 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-10-28 17:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 29 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 19, redundant 6
Fitness: max 0.917(40), min 0.333(1), ave 0.902
Test execution time: sum 1443618 ms, max 1440022 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 17:56:59 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-10-28 17:57:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 44 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.667(2), ave 0.904
Test execution time: sum 4062 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:57:14 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-10-28 17:57:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 57 seconds
Variants: generated 100, build-succeeded 35, build-failed 36, syntax-invalid 23, redundant 6
Fitness: max 0.917(34), min 0.667(1), ave 0.91
Test execution time: sum 3128 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:57:27 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-10-28 17:57:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 24 minutes 12 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 17, redundant 5
Fitness: max 0.917(45), min 0.667(1), ave 0.911
Test execution time: sum 4117 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:57:42 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-10-28 17:59:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 40 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 13, redundant 2
Fitness: max 0.917(45), min 0.5(1), ave 0.883
Test execution time: sum 76198 ms, max 72074 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 17:59:09 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-10-28 17:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 12, redundant 6
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 4954 ms, max 111 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 17:59:26 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-10-28 17:59:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 14 seconds
Variants: generated 100, build-succeeded 63, build-failed 20, syntax-invalid 6, redundant 11
Fitness: max 0.917(63), min 0.917(63), ave 0.917
Test execution time: sum 5501 ms, max 114 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 17:59:44 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-10-28 18:00:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 12, redundant 7
Fitness: max 0.917(56), min 0.75(2), ave 0.911
Test execution time: sum 4836 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:00:00 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-10-28 18:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 26 minutes 47 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 11, redundant 9
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 4708 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:00:17 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-10-28 18:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4622 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:00:33 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-10-28 18:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 18 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 23, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4147 ms, max 117 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 18:00:48 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-10-28 18:01:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 17, redundant 9
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4136 ms, max 115 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 18:01:04 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-10-28 18:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 49 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 16, redundant 8
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3922 ms, max 97 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:01:19 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-10-28 18:01:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 4 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 16, redundant 8
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4549 ms, max 115 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:01:34 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-10-28 18:01:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 19 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 21, redundant 9
Fitness: max 0.917(41), min 0.75(1), ave 0.913
Test execution time: sum 3697 ms, max 97 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:01:49 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-10-28 18:02:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 14, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4241 ms, max 123 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:02:04 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-10-28 18:02:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 51 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 12, redundant 8
Fitness: max 0.917(50), min 0.75(1), ave 0.912
Test execution time: sum 4496 ms, max 98 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:02:21 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-10-28 18:02:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 6 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 18, redundant 9
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4408 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:02:36 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-10-28 18:02:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 22 seconds
Variants: generated 100, build-succeeded 47, build-failed 25, syntax-invalid 22, redundant 6
Fitness: max 1(1), min 0.75(2), ave 0.911
Test execution time: sum 4656 ms, max 568 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:02:51 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-10-28 18:03:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 13, redundant 8
Fitness: max 0.917(55), min 0.833(1), ave 0.915
Test execution time: sum 4847 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:03:08 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-10-28 18:03:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 53 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 23, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4031 ms, max 111 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:03:22 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-10-28 18:03:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 7 seconds
Variants: generated 100, build-succeeded 43, build-failed 27, syntax-invalid 23, redundant 7
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 3833 ms, max 112 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:03:37 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-10-28 18:03:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 22 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 19, redundant 6
Fitness: max 0.917(42), min 0.5(1), ave 0.902
Test execution time: sum 3666 ms, max 98 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:03:52 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-10-28 18:04:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 40 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 9, redundant 6
Fitness: max 0.917(59), min 0.5(2), ave 0.899
Test execution time: sum 5218 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:04:09 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-10-28 18:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 30 minutes 55 seconds
Variants: generated 100, build-succeeded 46, build-failed 28, syntax-invalid 16, redundant 10
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4103 ms, max 120 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:04:25 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-10-28 18:04:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 31 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 12, redundant 7
Fitness: max 0.917(56), min 0.5(2), ave 0.902
Test execution time: sum 5006 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:04:42 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-10-28 18:05:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 31 minutes 30 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 10, redundant 5
Fitness: max 0.917(57), min 0.5(3), ave 0.896
Test execution time: sum 4961 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:05:00 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-10-28 18:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 31 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 13, redundant 6
Fitness: max 0.917(48), min 0.5(3), ave 0.892
Test execution time: sum 4138 ms, max 118 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 18:05:16 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-10-28 18:05:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 2 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 15, redundant 6
Fitness: max 0.917(51), min 0.667(1), ave 0.912
Test execution time: sum 4442 ms, max 119 ms, min 46 ms
----------------------------------------------------------------

2023-10-28 18:05:32 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-10-28 18:05:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 17 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 21, redundant 2
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 3788 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:05:47 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-10-28 18:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 32 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 20, redundant 10
Fitness: max 0.917(39), min 0.667(1), ave 0.907
Test execution time: sum 3475 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:06:02 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-10-28 18:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 32 minutes 47 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 19, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.914
Test execution time: sum 4488 ms, max 98 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 18:06:17 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-10-28 18:06:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 3 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 19, redundant 5
Fitness: max 0.917(45), min 0.75(1), ave 0.913
Test execution time: sum 3797 ms, max 96 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:06:32 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-10-28 18:06:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 18 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 22, redundant 4
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4261 ms, max 120 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 18:06:48 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-10-28 18:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 33 seconds
Variants: generated 100, build-succeeded 48, build-failed 23, syntax-invalid 20, redundant 9
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4021 ms, max 111 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:07:03 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-10-28 18:07:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 33 minutes 47 seconds
Variants: generated 100, build-succeeded 39, build-failed 27, syntax-invalid 30, redundant 4
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3384 ms, max 110 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:07:17 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-10-28 18:07:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 2 seconds
Variants: generated 100, build-succeeded 43, build-failed 25, syntax-invalid 26, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 3629 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:07:32 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-10-28 18:07:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 15 seconds
Variants: generated 100, build-succeeded 38, build-failed 29, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.667(3), ave 0.895
Test execution time: sum 3011 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:07:45 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-10-28 18:08:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 31 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 20, redundant 4
Fitness: max 0.917(43), min 0.667(2), ave 0.902
Test execution time: sum 3767 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:08:01 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-10-28 18:08:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 34 minutes 46 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 20, redundant 8
Fitness: max 0.917(37), min 0.667(2), ave 0.904
Test execution time: sum 3254 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:08:15 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-10-28 18:23:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 minutes 1 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 22, redundant 3
Fitness: max 0.917(43), min 0.583(1), ave 0.909
Test execution time: sum 903746 ms, max 900024 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 18:23:30 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-10-28 18:23:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 minutes 16 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 19, redundant 6
Fitness: max 0.917(42), min 0.75(2), ave 0.909
Test execution time: sum 3705 ms, max 114 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:23:46 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-10-28 18:24:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 minutes 31 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 17, redundant 8
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 3749 ms, max 125 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:24:01 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-10-28 18:24:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 50 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 9, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4506 ms, max 123 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 18:24:19 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-10-28 18:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 3 seconds
Variants: generated 100, build-succeeded 36, build-failed 38, syntax-invalid 22, redundant 4
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 2858 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:24:33 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-10-28 18:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 18 seconds
Variants: generated 100, build-succeeded 40, build-failed 38, syntax-invalid 17, redundant 5
Fitness: max 0.917(38), min 0.667(2), ave 0.904
Test execution time: sum 3071 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:24:48 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-10-28 18:25:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 34 seconds
Variants: generated 100, build-succeeded 41, build-failed 39, syntax-invalid 16, redundant 4
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 3342 ms, max 99 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 18:25:04 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-10-28 18:25:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 51 minutes 50 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 18, redundant 9
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3728 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:25:19 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-10-28 18:25:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 5 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 20, redundant 4
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 3468 ms, max 97 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:25:35 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-10-28 18:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 22 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 17, redundant 3
Fitness: max 1(2), min 0.917(48), ave 0.92
Test execution time: sum 4139 ms, max 115 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:25:52 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-10-28 18:26:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 38 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 19, redundant 7
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 3868 ms, max 117 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:26:08 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-10-28 18:26:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 52 minutes 55 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 20, redundant 5
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4127 ms, max 115 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:26:25 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-10-28 18:26:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 12 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 17, redundant 7
Fitness: max 1(1), min 0.917(46), ave 0.918
Test execution time: sum 4052 ms, max 116 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:26:42 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-10-28 18:26:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 27 seconds
Variants: generated 100, build-succeeded 37, build-failed 28, syntax-invalid 27, redundant 8
Fitness: max 0.917(36), min 0.75(1), ave 0.912
Test execution time: sum 3155 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:26:56 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-10-28 18:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 53 minutes 43 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 22, redundant 5
Fitness: max 1(1), min 0.917(44), ave 0.919
Test execution time: sum 4016 ms, max 99 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:27:13 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-10-28 18:27:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 1 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 15, redundant 5
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 4990 ms, max 117 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:27:31 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-10-28 18:27:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 16 seconds
Variants: generated 100, build-succeeded 44, build-failed 25, syntax-invalid 24, redundant 7
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 3929 ms, max 105 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:27:46 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-10-28 18:28:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 33 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 21, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4386 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:28:03 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-10-28 18:28:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 54 minutes 50 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 19, redundant 6
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3907 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:28:20 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-10-28 18:28:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 6 seconds
Variants: generated 100, build-succeeded 46, build-failed 20, syntax-invalid 24, redundant 10
Fitness: max 1(1), min 0.917(45), ave 0.918
Test execution time: sum 4131 ms, max 113 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:28:36 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-10-28 18:28:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 23 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 18, redundant 7
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4019 ms, max 115 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:28:53 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-10-28 18:29:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 39 seconds
Variants: generated 100, build-succeeded 40, build-failed 27, syntax-invalid 27, redundant 6
Fitness: max 1(2), min 0.917(38), ave 0.921
Test execution time: sum 3590 ms, max 119 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:29:09 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-10-28 18:29:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 55 minutes 55 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 24, redundant 5
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 3728 ms, max 120 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 18:29:25 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-10-28 18:29:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 12 seconds
Variants: generated 100, build-succeeded 41, build-failed 33, syntax-invalid 22, redundant 4
Fitness: max 0.917(40), min 0.75(1), ave 0.913
Test execution time: sum 3770 ms, max 123 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:29:42 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-10-28 18:29:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 28 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 25, redundant 6
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3343 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:29:58 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-10-28 18:30:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 56 minutes 46 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 16, redundant 9
Fitness: max 0.917(45), min 0.75(1), ave 0.913
Test execution time: sum 4114 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:30:16 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-10-28 18:30:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 4 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0.917(51), ave 0.918
Test execution time: sum 4787 ms, max 117 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 18:30:34 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-10-28 18:30:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 22 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 18, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4055 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:30:52 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-10-28 18:31:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 57 minutes 42 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 9, redundant 6
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 5056 ms, max 125 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:31:12 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-10-28 18:31:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 0 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 17, redundant 8
Fitness: max 0.917(45), min 0.75(1), ave 0.913
Test execution time: sum 3991 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:31:30 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-10-28 18:31:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 15, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4609 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:31:48 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-10-28 18:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 36 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 17, redundant 9
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4294 ms, max 119 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:32:06 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-10-28 18:32:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 58 minutes 56 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 14, redundant 5
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4754 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:32:26 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-10-28 18:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 16 seconds
Variants: generated 100, build-succeeded 57, build-failed 22, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0.917(56), ave 0.918
Test execution time: sum 5345 ms, max 116 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:32:46 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-10-28 18:33:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 34 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 20, redundant 5
Fitness: max 1(1), min 0.917(47), ave 0.918
Test execution time: sum 4316 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:33:04 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-10-28 18:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 59 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 17, redundant 7
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4762 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:33:23 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-10-28 18:33:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 seconds
Variants: generated 100, build-succeeded 43, build-failed 25, syntax-invalid 26, redundant 6
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 3974 ms, max 98 ms, min 29 ms
----------------------------------------------------------------

2023-10-28 18:33:41 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-10-28 18:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 12, redundant 9
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5079 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:34:01 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-10-28 18:34:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 12, redundant 9
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4614 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:34:21 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-10-28 18:34:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4808 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:34:41 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-10-28 18:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 32 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 12, redundant 6
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 4963 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:35:01 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-10-28 18:35:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 8, redundant 8
Fitness: max 0.917(53), min 0.5(3), ave 0.894
Test execution time: sum 4836 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:35:22 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-10-28 18:35:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 14 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 6, redundant 8
Fitness: max 0.917(51), min 0.5(2), ave 0.888
Test execution time: sum 4682 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:35:43 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-10-28 18:36:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 33 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 15, redundant 2
Fitness: max 0.917(45), min 0.667(1), ave 0.91
Test execution time: sum 4184 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:36:03 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-10-28 18:36:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 52 seconds
Variants: generated 100, build-succeeded 46, build-failed 35, syntax-invalid 14, redundant 5
Fitness: max 0.917(44), min 0.5(2), ave 0.899
Test execution time: sum 4064 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 18:36:22 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-10-28 18:36:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 15 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 1(1), min 0.5(2), ave 0.905
Test execution time: sum 5504 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 18:36:44 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-10-28 18:37:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 35 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 12, redundant 7
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4596 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:37:05 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-10-28 18:37:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 8, redundant 5
Fitness: max 0.917(54), min 0.5(1), ave 0.905
Test execution time: sum 4903 ms, max 121 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 18:37:26 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-10-28 18:37:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 16 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 13, redundant 8
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4364 ms, max 117 ms, min 28 ms
----------------------------------------------------------------

2023-10-28 18:37:46 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-10-28 18:38:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 15, redundant 10
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4636 ms, max 117 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 18:38:06 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-10-28 18:38:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0.917(56), min 0.667(1), ave 0.912
Test execution time: sum 5147 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:38:28 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-10-28 18:38:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 16, redundant 8
Fitness: max 0.917(52), min 0.667(1), ave 0.912
Test execution time: sum 4651 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:38:48 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-10-28 18:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 4988 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:39:10 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-10-28 18:39:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 1 seconds
Variants: generated 100, build-succeeded 60, build-failed 20, syntax-invalid 12, redundant 8
Fitness: max 1(1), min 0.5(2), ave 0.889
Test execution time: sum 5136 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:39:31 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-10-28 18:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 22 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 16, redundant 4
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4392 ms, max 121 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:39:51 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-10-28 18:40:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 42 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 11, redundant 5
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4472 ms, max 121 ms, min 29 ms
----------------------------------------------------------------

2023-10-28 18:40:12 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-10-28 18:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 4808 ms, max 117 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:40:34 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-10-28 18:40:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 23 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 17, redundant 5
Fitness: max 0.917(42), min 0.75(1), ave 0.911
Test execution time: sum 3730 ms, max 119 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:40:53 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-10-28 18:41:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 44 seconds
Variants: generated 100, build-succeeded 56, build-failed 22, syntax-invalid 14, redundant 8
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 4685 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:41:13 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-10-28 18:41:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 21, syntax-invalid 14, redundant 10
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4631 ms, max 97 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:41:34 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-10-28 18:41:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 25 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 12, redundant 6
Fitness: max 1(2), min 0.917(50), ave 0.92
Test execution time: sum 4475 ms, max 123 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:41:55 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-10-28 18:42:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 17, redundant 8
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4709 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 18:42:16 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-10-28 18:42:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 4 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 23, redundant 7
Fitness: max 0.917(40), min 0.75(1), ave 0.913
Test execution time: sum 3720 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:42:34 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-10-28 18:42:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 23 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 21, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.909
Test execution time: sum 3601 ms, max 109 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:42:53 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-10-28 18:43:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 41 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 23, redundant 4
Fitness: max 0.917(40), min 0.5(3), ave 0.888
Test execution time: sum 3440 ms, max 97 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:43:11 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-10-28 18:43:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 59 seconds
Variants: generated 100, build-succeeded 36, build-failed 37, syntax-invalid 23, redundant 4
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 3120 ms, max 120 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:43:29 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-10-28 18:43:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 19 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 17, redundant 9
Fitness: max 0.917(45), min 0.5(1), ave 0.904
Test execution time: sum 3892 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:43:49 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-10-28 18:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 38 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 21, redundant 7
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3895 ms, max 113 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:44:08 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-10-28 18:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 16, redundant 7
Fitness: max 0.917(46), min 0.5(1), ave 0.908
Test execution time: sum 4073 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:44:29 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-10-28 18:44:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 20 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 16, redundant 7
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 3968 ms, max 97 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:44:50 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-10-28 18:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4559 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 18:45:11 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-10-28 18:45:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 2 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 15, redundant 10
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3970 ms, max 118 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:45:32 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-10-28 18:45:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 23 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 17, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4119 ms, max 118 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:45:53 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-10-28 18:46:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 16, redundant 7
Fitness: max 0.917(52), min 0.833(1), ave 0.915
Test execution time: sum 4553 ms, max 118 ms, min 55 ms
----------------------------------------------------------------

2023-10-28 18:46:14 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-10-28 18:46:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 6 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4348 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 18:46:36 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-10-28 18:46:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 28 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 14, redundant 5
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4529 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:46:57 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-10-28 18:47:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 48 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 18, redundant 4
Fitness: max 0.917(45), min 0.75(1), ave 0.913
Test execution time: sum 4092 ms, max 118 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 18:47:18 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-10-28 18:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 12, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4781 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 18:47:41 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-10-28 18:48:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 32 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 16, redundant 8
Fitness: max 0.917(49), min 0.5(1), ave 0.907
Test execution time: sum 4610 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 18:48:02 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-10-28 18:48:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 55 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4969 ms, max 119 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 18:48:25 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-10-28 19:12:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 12, redundant 5
Fitness: max 0.917(57), min 0.333(1), ave 0.907
Test execution time: sum 1445337 ms, max 1440022 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 19:12:48 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-10-28 19:13:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 42 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 8, redundant 3
Fitness: max 0.917(51), min 0.5(4), ave 0.884
Test execution time: sum 5058 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:13:12 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-10-28 19:13:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 6 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 11, redundant 1
Fitness: max 0.917(56), min 0.5(1), ave 0.909
Test execution time: sum 5543 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:13:36 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-10-28 19:13:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 14, redundant 10
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 5016 ms, max 117 ms, min 40 ms
----------------------------------------------------------------

2023-10-28 19:13:59 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-10-28 19:14:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 22, syntax-invalid 17, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4993 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:14:21 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-10-28 19:14:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 41 minutes 13 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 15, redundant 4
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 4911 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:14:43 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-10-28 19:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 41 minutes 36 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 13, redundant 13
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4556 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:15:06 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-10-28 19:15:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 1 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 5, redundant 8
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5591 ms, max 118 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:15:31 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-10-28 19:15:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 25 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 10, redundant 4
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 5462 ms, max 114 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:15:55 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-10-28 19:16:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 42 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 9, redundant 1
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5203 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:16:19 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-10-28 19:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 13 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 9, redundant 9
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 4972 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 19:16:43 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-10-28 19:17:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 43 minutes 35 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 16, redundant 6
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4580 ms, max 116 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:17:05 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-10-28 19:17:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 0 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 8, redundant 9
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 5459 ms, max 117 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:17:30 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-10-28 19:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 24 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 9, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4958 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:17:54 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-10-28 19:18:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 44 minutes 49 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 12, redundant 3
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5242 ms, max 120 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:18:19 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-10-28 19:18:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 13 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 12, redundant 8
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 5427 ms, max 115 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 19:18:43 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-10-28 19:19:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 15, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4518 ms, max 120 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:19:05 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-10-28 19:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 45 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 9, redundant 3
Fitness: max 0.917(50), min 0.5(1), ave 0.905
Test execution time: sum 4730 ms, max 121 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:19:29 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-10-28 19:19:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 11, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4880 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 19:19:53 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-10-28 19:20:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 46 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 10, redundant 3
Fitness: max 0.917(54), min 0.833(1), ave 0.915
Test execution time: sum 5020 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:20:17 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-10-28 19:20:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 16, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4893 ms, max 121 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 19:20:40 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-10-28 19:21:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 32 seconds
Variants: generated 100, build-succeeded 47, build-failed 25, syntax-invalid 17, redundant 11
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4486 ms, max 122 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 19:21:02 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-10-28 19:21:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 55 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 12, redundant 6
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4729 ms, max 356 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:21:25 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-10-28 19:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 18 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 11, redundant 7
Fitness: max 0.917(52), min 0.583(1), ave 0.91
Test execution time: sum 904759 ms, max 900025 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:36:48 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-10-28 19:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 3 minutes 43 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 9, redundant 11
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5105 ms, max 123 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:37:13 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-10-28 19:37:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 4 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 22, redundant 7
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3948 ms, max 126 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:37:33 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-10-28 19:37:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 26 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 17, redundant 10
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4410 ms, max 128 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:37:56 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-10-28 19:38:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 4 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 0.917(49), min 0.75(2), ave 0.91
Test execution time: sum 4471 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:38:19 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-10-28 19:38:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 11 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 15, redundant 9
Fitness: max 0.917(43), min 0.75(1), ave 0.911
Test execution time: sum 4017 ms, max 115 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:38:41 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-10-28 19:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 33 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 18, redundant 3
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4252 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:39:03 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-10-28 19:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 5 minutes 56 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 16, redundant 6
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4469 ms, max 118 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:39:26 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-10-28 19:39:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 6 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 14, redundant 5
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5057 ms, max 118 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 19:39:50 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-10-28 19:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 6 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 25, syntax-invalid 14, redundant 10
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4779 ms, max 119 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:40:13 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-10-28 19:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 7 minutes 6 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 19, redundant 4
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4465 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 19:40:36 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-10-28 19:50:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 16 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0.583(1), ave 0.912
Test execution time: sum 544924 ms, max 540024 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 19:50:00 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-10-28 19:50:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 16 minutes 54 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 14, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4797 ms, max 117 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:50:24 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-10-28 19:50:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 17 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 12, redundant 9
Fitness: max 1(1), min 0.917(51), ave 0.918
Test execution time: sum 4785 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:50:48 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-10-28 19:51:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 17 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 11, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4349 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:51:12 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-10-28 19:51:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 18 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 13, redundant 7
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4594 ms, max 118 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:51:36 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-10-28 19:52:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 18 minutes 32 seconds
Variants: generated 100, build-succeeded 62, build-failed 23, syntax-invalid 9, redundant 6
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 5400 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:52:02 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-10-28 19:52:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 18 minutes 54 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 20, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 3786 ms, max 118 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 19:52:24 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-10-28 19:52:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 19 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 4, redundant 10
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 5036 ms, max 119 ms, min 32 ms
----------------------------------------------------------------

2023-10-28 19:52:50 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-10-28 19:53:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 19 minutes 45 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 12, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4519 ms, max 118 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 19:53:15 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-10-28 19:53:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 20 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.917(54), min 0.833(1), ave 0.915
Test execution time: sum 4934 ms, max 118 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:53:40 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-10-28 19:54:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 20 minutes 35 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 4884 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:54:05 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-10-28 19:54:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 0 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 13, redundant 4
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5333 ms, max 109 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 19:54:30 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-10-28 19:54:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 10, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4813 ms, max 117 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:54:55 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-10-28 19:55:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 21 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 14, redundant 6
Fitness: max 1(1), min 0.583(1), ave 0.912
Test execution time: sum 4778 ms, max 116 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:55:20 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-10-28 19:55:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 14 seconds
Variants: generated 100, build-succeeded 52, build-failed 22, syntax-invalid 18, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4910 ms, max 116 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:55:44 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-10-28 19:56:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 38 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 15, redundant 4
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 5037 ms, max 116 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:56:08 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-10-28 19:56:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 3 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 15, redundant 4
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4842 ms, max 120 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:56:33 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-10-28 19:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 10, redundant 10
Fitness: max 0.917(54), min 0.833(1), ave 0.915
Test execution time: sum 5130 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 19:56:59 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-10-28 19:57:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 23 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 15, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 5010 ms, max 119 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 19:57:24 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-10-28 19:57:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 24 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 8, redundant 7
Fitness: max 0.917(55), min 0.833(1), ave 0.915
Test execution time: sum 5367 ms, max 123 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 19:57:50 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-10-28 19:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 24 minutes 49 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 4, redundant 3
Fitness: max 0.917(65), min 0.75(1), ave 0.914
Test execution time: sum 6315 ms, max 122 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 19:58:19 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-10-28 19:58:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 15 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 9, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5153 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:58:45 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-10-28 19:59:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 25 minutes 40 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 13, redundant 8
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4318 ms, max 125 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:59:10 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-10-28 19:59:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 26 minutes 7 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 6, redundant 8
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5215 ms, max 120 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 19:59:37 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-10-28 20:00:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 26 minutes 33 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 8, redundant 8
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4874 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:00:03 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-10-28 20:00:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 0 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 5, redundant 11
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5087 ms, max 118 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 20:00:29 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-10-28 20:00:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 27 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 5, redundant 5
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5405 ms, max 118 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 20:00:57 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-10-28 20:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 27 minutes 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 36, syntax-invalid 7, redundant 4
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4838 ms, max 119 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 20:01:24 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-10-28 20:01:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 28 minutes 19 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 12, redundant 7
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4471 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 20:01:49 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-10-28 20:17:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 43 minutes 45 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 12, redundant 9
Fitness: max 0.917(49), min 0.583(1), ave 0.91
Test execution time: sum 904448 ms, max 900025 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 20:17:15 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-10-28 20:17:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 13 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 3, redundant 8
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 5648 ms, max 119 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 20:17:43 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-10-28 20:18:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 44 minutes 41 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 5, redundant 5
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5226 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:18:10 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-10-28 20:18:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 45 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 6, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5066 ms, max 121 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 20:18:37 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-10-28 20:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 37 seconds
Variants: generated 100, build-succeeded 70, build-failed 23, syntax-invalid 3, redundant 4
Fitness: max 0.917(69), min 0.583(1), ave 0.912
Test execution time: sum 906439 ms, max 900025 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 20:34:07 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-10-28 20:34:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 1 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 6, redundant 5
Fitness: max 0.917(58), min 0.75(2), ave 0.911
Test execution time: sum 5567 ms, max 124 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:34:35 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-10-28 20:35:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 1 minutes 32 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 5, redundant 7
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 5682 ms, max 127 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 20:35:02 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-10-28 20:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 1 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 1(1), min 0.5(1), ave 0.911
Test execution time: sum 5371 ms, max 127 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 20:35:29 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-10-28 20:35:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 2 minutes 27 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 6, redundant 3
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5756 ms, max 124 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 20:35:57 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-10-28 20:36:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 2 minutes 54 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 9, redundant 10
Fitness: max 0.917(52), min 0.75(2), ave 0.91
Test execution time: sum 5068 ms, max 114 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:36:24 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-10-28 20:36:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 3 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 22, syntax-invalid 10, redundant 9
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5562 ms, max 114 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:36:50 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-10-28 20:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 3 minutes 48 seconds
Variants: generated 100, build-succeeded 61, build-failed 22, syntax-invalid 8, redundant 9
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 5674 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:37:17 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-10-28 20:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 6, redundant 9
Fitness: max 1(1), min 0.917(56), ave 0.918
Test execution time: sum 5142 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:37:45 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-10-28 20:38:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 4 minutes 40 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 14, redundant 6
Fitness: max 0.917(45), min 0.667(1), ave 0.911
Test execution time: sum 4108 ms, max 119 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:38:10 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-10-28 20:38:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 5 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 15, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4529 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:38:35 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-10-28 20:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 5 minutes 32 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 8, redundant 8
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4840 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:39:02 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-10-28 20:39:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 0 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 7, redundant 5
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 5447 ms, max 118 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:39:29 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-10-28 20:39:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 26 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5026 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:39:56 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-10-28 20:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 52 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 11, redundant 3
Fitness: max 0.917(49), min 0.75(1), ave 0.912
Test execution time: sum 4662 ms, max 121 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:40:22 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-10-28 20:40:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 9, redundant 3
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5286 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 20:40:50 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-10-28 20:41:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 46 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 11, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4891 ms, max 119 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:41:16 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-10-28 20:41:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 13 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 15, redundant 5
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 4953 ms, max 119 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:41:43 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-10-28 20:42:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 10, redundant 6
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5603 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:42:10 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-10-28 20:42:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 8 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 9, redundant 5
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5261 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 20:42:38 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-10-28 20:58:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 11, redundant 14
Fitness: max 0.917(47), min 0.583(1), ave 0.91
Test execution time: sum 904514 ms, max 900026 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 20:58:04 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-10-28 20:58:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 2 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 8, redundant 9
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5305 ms, max 122 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 20:58:32 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-10-28 20:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 32 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 4, redundant 9
Fitness: max 0.917(63), min 0.75(1), ave 0.914
Test execution time: sum 6249 ms, max 126 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 20:59:02 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-10-28 20:59:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 59 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.917(50), ave 0.918
Test execution time: sum 5034 ms, max 127 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 20:59:29 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-10-28 20:59:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 29 seconds
Variants: generated 100, build-succeeded 65, build-failed 24, syntax-invalid 5, redundant 6
Fitness: max 0.917(65), min 0.917(65), ave 0.917
Test execution time: sum 6063 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 20:59:58 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-10-28 21:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 5, redundant 7
Fitness: max 1(1), min 0.917(58), ave 0.918
Test execution time: sum 5628 ms, max 125 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 21:00:28 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-10-28 21:00:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 28 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 3, redundant 4
Fitness: max 0.917(63), min 0.917(63), ave 0.917
Test execution time: sum 6046 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 21:00:58 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-10-28 21:01:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 58 seconds
Variants: generated 100, build-succeeded 62, build-failed 33, syntax-invalid 3, redundant 2
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 5924 ms, max 121 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 21:01:28 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-10-28 21:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 28 seconds
Variants: generated 100, build-succeeded 65, build-failed 21, syntax-invalid 6, redundant 8
Fitness: max 0.917(63), min 0.75(2), ave 0.912
Test execution time: sum 6035 ms, max 118 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 21:01:58 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-10-28 21:26:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 55 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 12, redundant 6
Fitness: max 0.917(54), min 0.333(1), ave 0.906
Test execution time: sum 1445161 ms, max 1440022 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 21:26:25 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-10-28 21:26:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 9 seconds
Variants: generated 50, build-succeeded 15, build-failed 26, syntax-invalid 0, redundant 9
Fitness: max 1(1), min 0.917(14), ave 0.922
Test execution time: sum 1416 ms, max 112 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 21:26:39 [main] [INFO]  KGenProgMain - GA stopped
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,7 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v486)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v667)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			eof = true;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v852)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +491,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				int bytesCopied = 0;
                 if (b < 0) {
                     b += 256;
                 }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		int bytesCopied = 0;
         this.base64 = new Base64(false);
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v1543)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		int bytesCopied = 0;
         this.base64 = new Base64(false);
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1031,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2390)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			int bytesCopied = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1030,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v2610)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		int bytesCopied = 0;
         this.base64 = new Base64(false);
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -571,7 +578,8 @@
             }
             
             x = x << 6;
-            switch (modulus) {
+            byte[] buf = new byte[pos - readPos];
+			switch (modulus) {
                 case 2 :
                     x = x << 6;
                     buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3041)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -73,6 +73,7 @@
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
         this.doEncode = doEncode;
+		int bytesCopied = 0;
         this.base64 = new Base64(false);
     }
 
@@ -167,7 +168,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int readLen = 0;
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +346,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
@@ -1025,7 +1028,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v3540)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int readLen = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1032,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int readLen = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1032,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4472)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1033,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4551)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineLength = 0;  // disable chunk-separating
+			int bytesCopied = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -571,7 +580,8 @@
             }
             
             x = x << 6;
-            switch (modulus) {
+            byte[] buf = new byte[pos - readPos];
+			switch (modulus) {
                 case 2 :
                     x = x << 6;
                     buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
@@ -1025,7 +1035,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4810)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			lineLength = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1035,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v4936)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +353,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5315)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v5907)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,17 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			int bytesCopied = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +355,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6716)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			int bytesCopied = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +356,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v6727)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +352,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
@@ -418,7 +429,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            reset();
             pos = outPos;
             readPos = outPos;
         }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7010)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			int bytesCopied = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +357,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7129)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +356,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7235)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +354,12 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7324)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7919)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,17 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +355,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7927)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v7930)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,17 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			int bytesCopied = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +355,12 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v8102)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v9705)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +356,11 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10225)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +359,11 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10746)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +357,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v10916)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +359,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11015)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +356,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
@@ -420,7 +435,8 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
+            modulus = 0;
+			readPos = outPos;
         }
     }
     /**
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11145)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +358,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11330)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v11634)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12005)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +356,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12203)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			resizeBuffer();
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12220)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +360,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12430)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -420,7 +440,12 @@
         if (out != null && out.length == outAvail) {
             buffer = out;
             pos = outPos;
-            readPos = outPos;
+            {
+				byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+				System.arraycopy(buffer, 0, b, 0, buffer.length);
+				buffer = b;
+			}
+			readPos = outPos;
         }
     }
     /**
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12623)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v12636)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13211)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +365,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13344)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +367,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v13407)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,31 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14344)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +359,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14415)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +364,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14438)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +366,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14516)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,30 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+				eof = true;
+			}
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +368,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v14528)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +362,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15020)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +364,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15024)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos = 0;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15601)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,32 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v15941)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +366,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16141)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +367,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16317)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +366,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16614)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +363,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16716)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,31 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +369,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v16849)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v17112)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,25 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -344,7 +362,11 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19042)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +366,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19745)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +373,10 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v19817)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,32 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +370,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v20761)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +366,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22050)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +360,9 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,17 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +429,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22503)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v22642)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,25 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +363,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23809)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,33 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -344,7 +371,8 @@
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
-            String sep = StringUtils.newStringUtf8(lineSeparator);
+            buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			String sep = StringUtils.newStringUtf8(lineSeparator);
             throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]");
         }
         this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24144)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,37 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24335)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v24849)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25013)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25029)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			pos = 0;
+			modulus = (++modulus) % 4;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25505)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v25926)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,43 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26229)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v26314)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v27416)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28247)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,44 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			modulus = (++modulus) % 4;
+			eof = true;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28516)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28709)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28915)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,49 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v28932)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,44 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			int bytesCopied = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v29203)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,60 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			modulus = (++modulus) % 4;
+			x = x << 6;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			int bytesCopied = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v31647)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,57 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			int bytesCopied = 0;
+			x = x << 6;
+			buffer = null;
+			currentLinePos = 0;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v32419)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,42 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34346)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,47 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34502)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			pos = 0;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v34941)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,58 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35324)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35626)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35831)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +466,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v35842)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			modulus = (++modulus) % 4;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:39 [main] [INFO]  PatchLogExporter - patch (v37803)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,58 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v37949)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,65 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			x = x << 6;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38414)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,57 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v38743)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,68 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v39936)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,69 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40113)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,67 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  PatchLogExporter - patch (v40650)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 21:26:40 [main] [INFO]  KGenProgMain - Summary
Reached generation = 408
Generated variants = 40650
Syntax valid variants = 34651
Build succeeded variants = 19976
Time elapsed = 11 hours 53 minutes 10 seconds
Exit status = SUCCESS
