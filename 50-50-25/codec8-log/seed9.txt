2023-11-01 21:39:28 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-11-01 21:39:28 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-11-01 21:39:28 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-11-01 21:39:28 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 9 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-11-01 21:39:31 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-11-01 21:39:31 [main] [INFO]  KGenProgMain - GA started
2023-11-01 21:39:31 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-11-01 21:39:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 50, build-succeeded 10, build-failed 26, syntax-invalid 2, redundant 12
Fitness: max 0.917(3), min 0.667(1), ave 0.8
Test execution time: sum 733 ms, max 170 ms, min 35 ms
----------------------------------------------------------------

2023-11-01 21:39:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-11-01 21:39:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 50, build-succeeded 10, build-failed 28, syntax-invalid 4, redundant 8
Fitness: max 0.917(3), min 0.583(1), ave 0.792
Test execution time: sum 497 ms, max 98 ms, min 27 ms
----------------------------------------------------------------

2023-11-01 21:39:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-11-01 22:00:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 minutes 7 seconds
Variants: generated 100, build-succeeded 31, build-failed 34, syntax-invalid 5, redundant 30
Fitness: max 1(1), min 0.5(1), ave 0.753
Test execution time: sum 1261090 ms, max 900026 ms, min 24 ms
----------------------------------------------------------------

2023-11-01 22:00:38 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-11-01 22:09:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 minutes 9 seconds
Variants: generated 100, build-succeeded 25, build-failed 25, syntax-invalid 14, redundant 36
Fitness: max 1(2), min 0.5(1), ave 0.79
Test execution time: sum 540844 ms, max 540025 ms, min 23 ms
----------------------------------------------------------------

2023-11-01 22:09:40 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-11-01 22:21:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 9 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 11, redundant 20
Fitness: max 1(1), min 0.5(1), ave 0.801
Test execution time: sum 718714 ms, max 717642 ms, min 23 ms
----------------------------------------------------------------

2023-11-01 22:21:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-11-01 22:21:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 12 seconds
Variants: generated 100, build-succeeded 30, build-failed 32, syntax-invalid 14, redundant 24
Fitness: max 0.917(7), min 0.333(1), ave 0.803
Test execution time: sum 1107 ms, max 96 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 22:21:43 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-11-01 22:21:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 15 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 15, redundant 37
Fitness: max 0.917(11), min 0.75(4), ave 0.868
Test execution time: sum 1051 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 22:21:46 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-11-01 22:21:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 17 seconds
Variants: generated 100, build-succeeded 17, build-failed 31, syntax-invalid 10, redundant 42
Fitness: max 0.917(16), min 0.75(1), ave 0.907
Test execution time: sum 1291 ms, max 99 ms, min 24 ms
----------------------------------------------------------------

2023-11-01 22:21:48 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-11-01 22:21:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 20 seconds
Variants: generated 100, build-succeeded 16, build-failed 33, syntax-invalid 25, redundant 26
Fitness: max 1(1), min 0.917(15), ave 0.922
Test execution time: sum 1275 ms, max 102 ms, min 71 ms
----------------------------------------------------------------

2023-11-01 22:21:51 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-11-01 22:21:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 22 seconds
Variants: generated 100, build-succeeded 17, build-failed 32, syntax-invalid 14, redundant 37
Fitness: max 1(4), min 0.667(1), ave 0.922
Test execution time: sum 1317 ms, max 103 ms, min 23 ms
----------------------------------------------------------------

2023-11-01 22:21:53 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-11-01 22:21:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 25 seconds
Variants: generated 100, build-succeeded 19, build-failed 36, syntax-invalid 19, redundant 26
Fitness: max 0.917(16), min 0.333(3), ave 0.825
Test execution time: sum 1370 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 22:21:56 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-11-01 22:21:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 28 seconds
Variants: generated 100, build-succeeded 19, build-failed 39, syntax-invalid 16, redundant 26
Fitness: max 1(2), min 0.333(1), ave 0.895
Test execution time: sum 1569 ms, max 111 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 22:21:59 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-11-01 22:22:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 32 seconds
Variants: generated 100, build-succeeded 22, build-failed 36, syntax-invalid 17, redundant 25
Fitness: max 0.917(18), min 0.333(2), ave 0.848
Test execution time: sum 1654 ms, max 107 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 22:22:03 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-11-01 22:22:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 35 seconds
Variants: generated 100, build-succeeded 21, build-failed 37, syntax-invalid 13, redundant 29
Fitness: max 1(3), min 0.75(2), ave 0.913
Test execution time: sum 1762 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-01 22:22:06 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-11-01 22:22:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 minutes 38 seconds
Variants: generated 100, build-succeeded 22, build-failed 33, syntax-invalid 19, redundant 26
Fitness: max 0.917(19), min 0.333(1), ave 0.875
Test execution time: sum 1693 ms, max 114 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 22:22:10 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-11-01 22:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 42 seconds
Variants: generated 100, build-succeeded 30, build-failed 34, syntax-invalid 16, redundant 20
Fitness: max 0.917(20), min 0.333(4), ave 0.803
Test execution time: sum 901904 ms, max 900024 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 22:37:13 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-11-01 22:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 46 seconds
Variants: generated 100, build-succeeded 28, build-failed 38, syntax-invalid 15, redundant 19
Fitness: max 1(1), min 0.333(3), ave 0.848
Test execution time: sum 2144 ms, max 95 ms, min 20 ms
----------------------------------------------------------------

2023-11-01 22:37:17 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-11-01 22:37:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 50 seconds
Variants: generated 100, build-succeeded 26, build-failed 30, syntax-invalid 18, redundant 26
Fitness: max 0.917(18), min 0.333(1), ave 0.837
Test execution time: sum 1667 ms, max 94 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 22:37:21 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-11-01 22:37:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 54 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 10, redundant 24
Fitness: max 0.917(22), min 0.333(4), ave 0.801
Test execution time: sum 1974 ms, max 103 ms, min 20 ms
----------------------------------------------------------------

2023-11-01 22:37:25 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-11-01 23:01:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 58 seconds
Variants: generated 100, build-succeeded 21, build-failed 42, syntax-invalid 20, redundant 17
Fitness: max 0.917(17), min 0.333(1), ave 0.857
Test execution time: sum 1441560 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 23:01:29 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-11-01 23:01:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 2 seconds
Variants: generated 100, build-succeeded 27, build-failed 37, syntax-invalid 12, redundant 24
Fitness: max 0.917(22), min 0.667(3), ave 0.877
Test execution time: sum 1996 ms, max 116 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:01:33 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-11-01 23:01:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 6 seconds
Variants: generated 100, build-succeeded 27, build-failed 35, syntax-invalid 19, redundant 19
Fitness: max 0.917(24), min 0.583(1), ave 0.889
Test execution time: sum 2019 ms, max 97 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:01:37 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-11-01 23:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 10 seconds
Variants: generated 100, build-succeeded 29, build-failed 39, syntax-invalid 14, redundant 18
Fitness: max 0.917(26), min 0.333(1), ave 0.882
Test execution time: sum 1442245 ms, max 1440023 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:25:42 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-11-01 23:25:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 15 seconds
Variants: generated 100, build-succeeded 26, build-failed 36, syntax-invalid 16, redundant 22
Fitness: max 1(1), min 0.667(1), ave 0.901
Test execution time: sum 2031 ms, max 150 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 23:25:46 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-11-01 23:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 20 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 16, redundant 14
Fitness: max 0.917(36), min 0.667(3), ave 0.894
Test execution time: sum 3202 ms, max 130 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:25:52 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-11-01 23:25:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 26 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 10, redundant 27
Fitness: max 1(1), min 0.5(1), ave 0.884
Test execution time: sum 2677 ms, max 112 ms, min 20 ms
----------------------------------------------------------------

2023-11-01 23:25:57 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-11-01 23:26:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 31 seconds
Variants: generated 100, build-succeeded 32, build-failed 27, syntax-invalid 20, redundant 21
Fitness: max 0.917(27), min 0.667(1), ave 0.888
Test execution time: sum 2529 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-11-01 23:26:02 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-11-01 23:26:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 35 seconds
Variants: generated 100, build-succeeded 30, build-failed 23, syntax-invalid 25, redundant 22
Fitness: max 1(1), min 0.5(3), ave 0.872
Test execution time: sum 2409 ms, max 109 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:26:07 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-11-01 23:26:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 42 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 14, redundant 16
Fitness: max 0.917(37), min 0.5(3), ave 0.881
Test execution time: sum 3445 ms, max 114 ms, min 20 ms
----------------------------------------------------------------

2023-11-01 23:26:13 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-11-01 23:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 47 seconds
Variants: generated 100, build-succeeded 29, build-failed 33, syntax-invalid 23, redundant 15
Fitness: max 0.917(28), min 0.5(1), ave 0.902
Test execution time: sum 2538 ms, max 113 ms, min 21 ms
----------------------------------------------------------------

2023-11-01 23:26:18 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-11-02 00:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 51 seconds
Variants: generated 100, build-succeeded 27, build-failed 31, syntax-invalid 25, redundant 17
Fitness: max 0.917(21), min 0.333(1), ave 0.843
Test execution time: sum 2342049 ms, max 1440023 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:05:23 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-11-02 00:05:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 25 minutes 56 seconds
Variants: generated 100, build-succeeded 24, build-failed 33, syntax-invalid 27, redundant 16
Fitness: max 0.917(18), min 0.333(4), ave 0.785
Test execution time: sum 1742 ms, max 108 ms, min 20 ms
----------------------------------------------------------------

2023-11-02 00:05:27 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-11-02 00:05:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 1 seconds
Variants: generated 100, build-succeeded 33, build-failed 32, syntax-invalid 25, redundant 10
Fitness: max 0.917(28), min 0.5(2), ave 0.874
Test execution time: sum 2617 ms, max 110 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:05:32 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-11-02 00:05:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 6 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 21, redundant 16
Fitness: max 0.917(29), min 0.5(3), ave 0.874
Test execution time: sum 2586 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:05:37 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-11-02 00:05:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 11 seconds
Variants: generated 100, build-succeeded 33, build-failed 32, syntax-invalid 30, redundant 5
Fitness: max 0.917(30), min 0.5(1), ave 0.894
Test execution time: sum 2538 ms, max 111 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:05:43 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-11-02 00:05:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 15 seconds
Variants: generated 100, build-succeeded 20, build-failed 31, syntax-invalid 38, redundant 11
Fitness: max 1(1), min 0.667(1), ave 0.9
Test execution time: sum 1584 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:05:47 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-11-02 00:05:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 26 minutes 20 seconds
Variants: generated 100, build-succeeded 23, build-failed 34, syntax-invalid 30, redundant 13
Fitness: max 0.917(18), min 0.5(1), ave 0.855
Test execution time: sum 1710 ms, max 116 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:05:51 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-11-02 00:19:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 40 minutes 11 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 35, redundant 11
Fitness: max 0.917(15), min 0.333(1), ave 0.801
Test execution time: sum 828546 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:19:42 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-11-02 00:43:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 15 seconds
Variants: generated 100, build-succeeded 21, build-failed 30, syntax-invalid 34, redundant 15
Fitness: max 0.917(19), min 0.333(2), ave 0.861
Test execution time: sum 1441673 ms, max 1440021 ms, min 20 ms
----------------------------------------------------------------

2023-11-02 00:43:46 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-11-02 00:43:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 21 seconds
Variants: generated 100, build-succeeded 30, build-failed 45, syntax-invalid 20, redundant 5
Fitness: max 0.917(28), min 0.75(2), ave 0.906
Test execution time: sum 2493 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:43:52 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-11-02 00:43:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 27 seconds
Variants: generated 100, build-succeeded 38, build-failed 25, syntax-invalid 26, redundant 11
Fitness: max 0.917(35), min 0.667(1), ave 0.901
Test execution time: sum 3069 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:43:58 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-11-02 00:44:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 33 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 29, redundant 7
Fitness: max 1(1), min 0.667(2), ave 0.902
Test execution time: sum 2417 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:44:04 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-11-02 00:44:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 39 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 28, redundant 4
Fitness: max 0.917(27), min 0.667(5), ave 0.87
Test execution time: sum 2622 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:44:10 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-11-02 00:44:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 45 seconds
Variants: generated 100, build-succeeded 27, build-failed 40, syntax-invalid 27, redundant 6
Fitness: max 1(1), min 0.667(1), ave 0.904
Test execution time: sum 2283 ms, max 119 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:44:16 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-11-02 00:44:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 52 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 25, redundant 5
Fitness: max 0.917(35), min 0.333(1), ave 0.877
Test execution time: sum 3183 ms, max 97 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:44:23 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-11-02 00:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 58 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 25, redundant 7
Fitness: max 1(1), min 0.667(2), ave 0.887
Test execution time: sum 3005 ms, max 106 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 00:44:29 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-11-02 00:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 4 seconds
Variants: generated 100, build-succeeded 30, build-failed 24, syntax-invalid 37, redundant 9
Fitness: max 1(1), min 0.75(2), ave 0.908
Test execution time: sum 2532 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 00:44:35 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-11-02 01:08:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 10 seconds
Variants: generated 100, build-succeeded 28, build-failed 35, syntax-invalid 31, redundant 6
Fitness: max 0.917(25), min 0.333(1), ave 0.884
Test execution time: sum 1442244 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:08:41 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-11-02 01:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 15 seconds
Variants: generated 100, build-succeeded 25, build-failed 33, syntax-invalid 32, redundant 10
Fitness: max 0.917(24), min 0.75(1), ave 0.91
Test execution time: sum 2146 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:08:47 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-11-02 01:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 29 minutes 23 seconds
Variants: generated 100, build-succeeded 43, build-failed 28, syntax-invalid 19, redundant 10
Fitness: max 0.917(38), min 0.333(1), ave 0.884
Test execution time: sum 3638 ms, max 114 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 01:08:54 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-11-02 01:21:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 31 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 22, redundant 2
Fitness: max 0.917(39), min 0.333(2), ave 0.877
Test execution time: sum 723663 ms, max 720022 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 01:21:02 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-11-02 01:21:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 38 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 17, redundant 5
Fitness: max 0.917(41), min 0.5(1), ave 0.903
Test execution time: sum 3734 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:21:10 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-11-02 01:21:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 16, redundant 3
Fitness: max 1(3), min 0.333(1), ave 0.902
Test execution time: sum 4048 ms, max 119 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 01:21:18 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-11-02 01:21:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 41 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 12, redundant 5
Fitness: max 0.917(48), min 0.667(1), ave 0.905
Test execution time: sum 4455 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:21:26 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-11-02 01:21:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 4 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 14, redundant 3
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4447 ms, max 118 ms, min 27 ms
----------------------------------------------------------------

2023-11-02 01:21:35 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-11-02 01:21:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 12 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 17, redundant 5
Fitness: max 0.917(45), min 0.667(2), ave 0.906
Test execution time: sum 3944 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:21:44 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-11-02 01:21:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 21 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 15, redundant 6
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4302 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 01:21:52 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-11-02 01:21:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 42 minutes 28 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 21, redundant 5
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3370 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:21:59 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-11-02 01:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 35 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 23, redundant 7
Fitness: max 0.917(36), min 0.583(1), ave 0.904
Test execution time: sum 903128 ms, max 900040 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:37:07 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-11-02 01:37:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 57 minutes 43 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 18, redundant 5
Fitness: max 1(1), min 0.917(41), ave 0.919
Test execution time: sum 3751 ms, max 123 ms, min 70 ms
----------------------------------------------------------------

2023-11-02 01:37:15 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-11-02 01:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 6 seconds
Variants: generated 100, build-succeeded 41, build-failed 35, syntax-invalid 18, redundant 6
Fitness: max 0.917(40), min 0.5(1), ave 0.907
Test execution time: sum 78501 ms, max 74966 ms, min 70 ms
----------------------------------------------------------------

2023-11-02 01:38:37 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-11-02 01:38:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 14 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 20, redundant 1
Fitness: max 0.917(42), min 0.75(3), ave 0.906
Test execution time: sum 3769 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:38:45 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-11-02 01:38:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 23 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 19, redundant 2
Fitness: max 0.917(46), min 0.75(2), ave 0.91
Test execution time: sum 4091 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:38:54 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-11-02 01:39:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 30 seconds
Variants: generated 100, build-succeeded 41, build-failed 37, syntax-invalid 20, redundant 2
Fitness: max 1(1), min 0.667(1), ave 0.902
Test execution time: sum 3401 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:39:02 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-11-02 01:39:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 37 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 26, redundant 9
Fitness: max 0.917(31), min 0.667(3), ave 0.895
Test execution time: sum 2775 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:39:08 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-11-02 01:39:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 59 minutes 45 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 20, redundant 8
Fitness: max 1(2), min 0.5(1), ave 0.911
Test execution time: sum 3578 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 01:39:16 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-11-02 01:55:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 8 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 15, redundant 3
Fitness: max 0.917(46), min 0.5(1), ave 0.893
Test execution time: sum 978254 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:55:39 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-11-02 01:55:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 16 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 18, redundant 5
Fitness: max 0.917(42), min 0.75(2), ave 0.907
Test execution time: sum 3814 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 01:55:47 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-11-02 01:55:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 25 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.917(51), min 0.5(1), ave 0.898
Test execution time: sum 4775 ms, max 124 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 01:55:57 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-11-02 02:44:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 15, redundant 4
Fitness: max 0.917(50), min 0.333(2), ave 0.885
Test execution time: sum 2884565 ms, max 1440026 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 02:44:06 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-11-02 02:44:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 17, redundant 8
Fitness: max 0.917(47), min 0.667(2), ave 0.895
Test execution time: sum 4437 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 02:44:15 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-11-02 02:44:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 4 minutes 52 seconds
Variants: generated 100, build-succeeded 46, build-failed 26, syntax-invalid 23, redundant 5
Fitness: max 1(1), min 0.667(1), ave 0.913
Test execution time: sum 4029 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 02:44:23 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-11-02 02:44:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 21, redundant 5
Fitness: max 0.917(43), min 0.667(2), ave 0.899
Test execution time: sum 4002 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 02:44:32 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-11-02 02:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 14, redundant 2
Fitness: max 0.917(47), min 0.667(1), ave 0.905
Test execution time: sum 4423 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 02:44:41 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-11-02 03:08:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 19 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 22, redundant 4
Fitness: max 0.917(41), min 0.333(1), ave 0.883
Test execution time: sum 1443803 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:08:50 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-11-02 03:08:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 27 seconds
Variants: generated 100, build-succeeded 46, build-failed 24, syntax-invalid 21, redundant 9
Fitness: max 0.917(43), min 0.5(1), ave 0.899
Test execution time: sum 3919 ms, max 123 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 03:08:59 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-11-02 03:09:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 36 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0.5(1), ave 0.902
Test execution time: sum 4011 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 03:09:07 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-11-02 03:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 44 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 27, redundant 5
Fitness: max 0.917(32), min 0.667(1), ave 0.885
Test execution time: sum 3044 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:09:15 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-11-02 03:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 52 seconds
Variants: generated 100, build-succeeded 43, build-failed 26, syntax-invalid 23, redundant 8
Fitness: max 0.917(39), min 0.333(1), ave 0.89
Test execution time: sum 1443717 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:33:23 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-11-02 03:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 0 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 28, redundant 1
Fitness: max 0.917(34), min 0.667(3), ave 0.893
Test execution time: sum 3219 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:33:31 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-11-02 03:33:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 9 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 25, redundant 2
Fitness: max 0.917(37), min 0.667(1), ave 0.904
Test execution time: sum 3501 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:33:40 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-11-02 03:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 17 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 23, redundant 6
Fitness: max 1(1), min 0.667(4), ave 0.886
Test execution time: sum 3649 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:33:49 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-11-02 03:33:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 26 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 22, redundant 8
Fitness: max 0.917(39), min 0.5(1), ave 0.899
Test execution time: sum 3683 ms, max 123 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 03:33:57 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-11-02 03:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 35 seconds
Variants: generated 100, build-succeeded 44, build-failed 27, syntax-invalid 24, redundant 5
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 4027 ms, max 122 ms, min 28 ms
----------------------------------------------------------------

2023-11-02 03:34:07 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-11-02 03:58:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 46 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 20, redundant 3
Fitness: max 0.917(52), min 0.333(1), ave 0.903
Test execution time: sum 1444871 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:58:17 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-11-02 03:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 18 minutes 55 seconds
Variants: generated 100, build-succeeded 46, build-failed 24, syntax-invalid 25, redundant 5
Fitness: max 0.917(40), min 0.667(4), ave 0.888
Test execution time: sum 3803 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:58:26 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-11-02 03:58:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 4 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 20, redundant 3
Fitness: max 0.917(42), min 0.667(2), ave 0.905
Test execution time: sum 3941 ms, max 110 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:58:35 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-11-02 03:58:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 14 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 0.917(48), min 0.667(2), ave 0.904
Test execution time: sum 4579 ms, max 143 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:58:46 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-11-02 03:58:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 19 minutes 24 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 18, redundant 4
Fitness: max 0.917(40), min 0.667(2), ave 0.901
Test execution time: sum 3845 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 03:58:55 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-11-02 04:17:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 33 seconds
Variants: generated 100, build-succeeded 37, build-failed 40, syntax-invalid 22, redundant 1
Fitness: max 0.917(33), min 0.333(1), ave 0.885
Test execution time: sum 1083223 ms, max 1080021 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:17:04 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-11-02 04:17:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 43 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 16, redundant 4
Fitness: max 0.917(46), min 0.333(1), ave 0.892
Test execution time: sum 4304 ms, max 122 ms, min 20 ms
----------------------------------------------------------------

2023-11-02 04:17:14 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-11-02 04:17:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 37 minutes 53 seconds
Variants: generated 100, build-succeeded 41, build-failed 34, syntax-invalid 21, redundant 4
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 3627 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:17:24 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-11-02 04:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 13, redundant 4
Fitness: max 0.917(52), min 0.667(4), ave 0.899
Test execution time: sum 4800 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:17:35 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-11-02 04:17:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 14 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 20, redundant 4
Fitness: max 0.917(43), min 0.667(2), ave 0.902
Test execution time: sum 4116 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:17:45 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-11-02 04:17:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 25 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 13, redundant 6
Fitness: max 0.917(51), min 0.667(4), ave 0.896
Test execution time: sum 4885 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:17:56 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-11-02 04:18:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 38 minutes 35 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 16, redundant 3
Fitness: max 0.917(48), min 0.667(3), ave 0.901
Test execution time: sum 4522 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:18:07 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-11-02 04:33:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 minutes 47 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.917(49), min 0.333(3), ave 0.864
Test execution time: sum 904730 ms, max 900023 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 04:33:18 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-11-02 04:51:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 57 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 16, redundant 2
Fitness: max 0.917(48), min 0.5(1), ave 0.893
Test execution time: sum 1084611 ms, max 1080022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:51:28 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-11-02 04:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 9 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.917(54), min 0.5(1), ave 0.899
Test execution time: sum 5739 ms, max 571 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:51:41 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-11-02 04:51:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 21 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0.917(55), min 0.667(1), ave 0.912
Test execution time: sum 5117 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 04:51:52 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-11-02 05:16:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 36 minutes 32 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0.333(1), ave 0.901
Test execution time: sum 1445180 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:16:04 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-11-02 05:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 36 minutes 42 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 21, redundant 4
Fitness: max 1(1), min 0.75(5), ave 0.899
Test execution time: sum 3687 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:16:13 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-11-02 05:17:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 18, redundant 3
Fitness: max 0.917(50), min 0.5(1), ave 0.897
Test execution time: sum 78931 ms, max 74271 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 05:17:38 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-11-02 05:17:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 17 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 20, redundant 1
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 3930 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:17:48 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-11-02 05:18:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 29 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 13, redundant 7
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5236 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-11-02 05:18:00 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-11-02 05:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 40 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 14, redundant 2
Fitness: max 0.917(51), min 0.75(2), ave 0.91
Test execution time: sum 4733 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:18:11 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-11-02 05:18:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 38 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 12, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5367 ms, max 128 ms, min 31 ms
----------------------------------------------------------------

2023-11-02 05:18:24 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-11-02 05:18:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 4 seconds
Variants: generated 100, build-succeeded 54, build-failed 37, syntax-invalid 9, redundant 0
Fitness: max 0.917(53), min 0.833(1), ave 0.915
Test execution time: sum 4963 ms, max 133 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:18:35 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-11-02 05:18:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 17 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 5420 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:18:48 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-11-02 05:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 39 minutes 30 seconds
Variants: generated 100, build-succeeded 66, build-failed 29, syntax-invalid 3, redundant 2
Fitness: max 0.917(65), min 0.75(1), ave 0.914
Test execution time: sum 6026 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:19:01 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-11-02 05:34:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 42 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 9, redundant 2
Fitness: max 0.917(57), min 0.5(1), ave 0.901
Test execution time: sum 905237 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:34:14 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-11-02 05:34:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 54 minutes 55 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 9, redundant 2
Fitness: max 0.917(59), min 0.667(1), ave 0.907
Test execution time: sum 5551 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:34:26 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-11-02 05:34:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 7 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 10, redundant 8
Fitness: max 1(2), min 0.667(2), ave 0.907
Test execution time: sum 5103 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:34:39 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-11-02 05:34:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 20 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 10, redundant 1
Fitness: max 0.917(54), min 0.667(3), ave 0.904
Test execution time: sum 5037 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:34:51 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-11-02 05:35:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 14, redundant 3
Fitness: max 0.917(55), min 0.667(1), ave 0.912
Test execution time: sum 5127 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:35:03 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-11-02 05:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 55 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 19, redundant 2
Fitness: max 1(1), min 0.667(1), ave 0.91
Test execution time: sum 4663 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:35:15 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-11-02 05:50:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 10 minutes 54 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 22, redundant 4
Fitness: max 0.917(43), min 0.583(1), ave 0.895
Test execution time: sum 904070 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:50:25 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-11-02 05:50:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 4 seconds
Variants: generated 100, build-succeeded 45, build-failed 24, syntax-invalid 29, redundant 2
Fitness: max 1(1), min 0.667(2), ave 0.904
Test execution time: sum 3891 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:50:35 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-11-02 05:50:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 18, redundant 7
Fitness: max 0.917(43), min 0.5(1), ave 0.88
Test execution time: sum 4182 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:50:47 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-11-02 05:50:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 25 seconds
Variants: generated 100, build-succeeded 36, build-failed 30, syntax-invalid 33, redundant 1
Fitness: max 0.917(35), min 0.667(1), ave 0.91
Test execution time: sum 3265 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:50:56 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-11-02 05:51:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 35 seconds
Variants: generated 100, build-succeeded 44, build-failed 23, syntax-invalid 25, redundant 8
Fitness: max 1(1), min 0.667(1), ave 0.903
Test execution time: sum 3789 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:51:06 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-11-02 05:51:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 46 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 20, redundant 2
Fitness: max 1(1), min 0.5(2), ave 0.881
Test execution time: sum 4655 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:51:18 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-11-02 05:51:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 11 minutes 57 seconds
Variants: generated 100, build-succeeded 50, build-failed 23, syntax-invalid 26, redundant 1
Fitness: max 1(2), min 0.75(2), ave 0.913
Test execution time: sum 4642 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:51:29 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-11-02 05:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 18, syntax-invalid 17, redundant 5
Fitness: max 1(2), min 0.5(1), ave 0.901
Test execution time: sum 5512 ms, max 145 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 05:51:41 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-11-02 05:51:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 12 minutes 22 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 17, redundant 2
Fitness: max 0.917(44), min 0.667(4), ave 0.896
Test execution time: sum 4229 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 05:51:53 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-11-02 06:07:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.917(50), min 0.583(1), ave 0.897
Test execution time: sum 904732 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:07:05 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-11-02 06:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 45 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 21, redundant 3
Fitness: max 0.917(40), min 0.5(1), ave 0.886
Test execution time: sum 3780 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 06:07:16 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-11-02 06:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 27 minutes 56 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 20, redundant 1
Fitness: max 0.917(44), min 0.667(3), ave 0.901
Test execution time: sum 4191 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:07:28 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-11-02 06:07:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 6 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 31, redundant 2
Fitness: max 0.917(32), min 0.667(1), ave 0.904
Test execution time: sum 2997 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:07:37 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-11-02 06:07:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 17 seconds
Variants: generated 100, build-succeeded 46, build-failed 25, syntax-invalid 28, redundant 1
Fitness: max 0.917(43), min 0.5(1), ave 0.897
Test execution time: sum 4083 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:07:48 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-11-02 06:07:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 27 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 26, redundant 2
Fitness: max 0.917(38), min 0.667(1), ave 0.91
Test execution time: sum 3572 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:07:59 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-11-02 06:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 39 seconds
Variants: generated 100, build-succeeded 48, build-failed 23, syntax-invalid 24, redundant 5
Fitness: max 0.917(46), min 0.667(1), ave 0.908
Test execution time: sum 4489 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:08:10 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-11-02 06:08:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 28 minutes 51 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 23, redundant 2
Fitness: max 0.917(48), min 0.667(3), ave 0.902
Test execution time: sum 4475 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:08:22 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-11-02 06:08:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 2 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 21, redundant 1
Fitness: max 0.917(43), min 0.667(2), ave 0.906
Test execution time: sum 4063 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:08:34 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-11-02 06:08:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 23, redundant 3
Fitness: max 1(1), min 0.75(2), ave 0.911
Test execution time: sum 4170 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:08:45 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-11-02 06:08:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 29 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 23, redundant 4
Fitness: max 0.917(37), min 0.667(6), ave 0.871
Test execution time: sum 3726 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:08:56 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-11-02 06:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 37 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 23, redundant 2
Fitness: max 0.917(46), min 0.583(1), ave 0.897
Test execution time: sum 544302 ms, max 540022 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:18:08 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-11-02 06:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 38 minutes 49 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 23, redundant 3
Fitness: max 0.917(49), min 0.667(1), ave 0.912
Test execution time: sum 4555 ms, max 113 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:18:20 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-11-02 06:18:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 1 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 23, redundant 3
Fitness: max 0.917(39), min 0.667(5), ave 0.885
Test execution time: sum 3726 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:18:32 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-11-02 06:18:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 13 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 17, redundant 3
Fitness: max 0.917(46), min 0.5(1), ave 0.893
Test execution time: sum 4387 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:18:44 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-11-02 06:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 25 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 22, redundant 3
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4175 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:18:56 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-11-02 06:19:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 37 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 16, redundant 5
Fitness: max 1(1), min 0.667(8), ave 0.867
Test execution time: sum 3650 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:19:08 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-11-02 06:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 12, redundant 6
Fitness: max 0.917(50), min 0.667(2), ave 0.903
Test execution time: sum 4878 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:19:22 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-11-02 06:19:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 4 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 13, redundant 6
Fitness: max 0.917(47), min 0.5(1), ave 0.89
Test execution time: sum 4716 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:19:35 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-11-02 06:19:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 16 seconds
Variants: generated 100, build-succeeded 46, build-failed 37, syntax-invalid 16, redundant 1
Fitness: max 0.917(41), min 0.5(1), ave 0.886
Test execution time: sum 4015 ms, max 130 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 06:19:48 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-11-02 06:20:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 29 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 13, redundant 2
Fitness: max 1(2), min 0.5(3), ave 0.863
Test execution time: sum 3894 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 06:20:00 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-11-02 06:20:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 0.917(50), min 0.667(1), ave 0.906
Test execution time: sum 4961 ms, max 151 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:20:14 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-11-02 06:20:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 15, redundant 1
Fitness: max 0.917(53), min 0.5(1), ave 0.9
Test execution time: sum 5004 ms, max 121 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 06:20:27 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-11-02 06:20:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 9 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 13, redundant 4
Fitness: max 1(1), min 0.667(5), ave 0.893
Test execution time: sum 4124 ms, max 113 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:20:41 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-11-02 06:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 24 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 11, redundant 5
Fitness: max 0.917(55), min 0.75(1), ave 0.912
Test execution time: sum 185175 ms, max 180076 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:23:55 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-11-02 06:24:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 39 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 9, redundant 4
Fitness: max 0.917(56), min 0.667(2), ave 0.905
Test execution time: sum 5269 ms, max 114 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:24:10 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-11-02 06:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 44 minutes 53 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 12, redundant 5
Fitness: max 0.917(53), min 0.667(1), ave 0.909
Test execution time: sum 4964 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:24:24 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-11-02 06:24:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 9 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 1(1), min 0.667(3), ave 0.906
Test execution time: sum 5585 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:24:40 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-11-02 06:24:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 0.917(51), min 0.667(2), ave 0.903
Test execution time: sum 4763 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:24:54 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-11-02 06:25:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 11, redundant 2
Fitness: max 0.917(56), min 0.5(1), ave 0.907
Test execution time: sum 5228 ms, max 123 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 06:25:09 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-11-02 06:25:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 45 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 15, redundant 2
Fitness: max 0.917(53), min 0.667(3), ave 0.903
Test execution time: sum 4982 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:25:23 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-11-02 06:40:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 1 minutes 6 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 17, redundant 2
Fitness: max 0.917(53), min 0.583(1), ave 0.906
Test execution time: sum 905015 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:40:37 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-11-02 06:42:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 34 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.5(1), ave 0.901
Test execution time: sum 78669 ms, max 74196 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:42:05 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-11-02 06:42:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 2 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.917(56), min 0.667(1), ave 0.909
Test execution time: sum 5186 ms, max 111 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:42:20 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-11-02 06:42:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 5 seconds
Variants: generated 100, build-succeeded 65, build-failed 23, syntax-invalid 6, redundant 6
Fitness: max 0.917(65), min 0.917(65), ave 0.917
Test execution time: sum 6019 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-11-02 06:42:37 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-11-02 06:42:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 12, redundant 8
Fitness: max 0.917(51), min 0.667(4), ave 0.898
Test execution time: sum 4774 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:42:51 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-11-02 06:43:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 35 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 12, redundant 4
Fitness: max 0.917(55), min 0.667(1), ave 0.909
Test execution time: sum 5173 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:43:06 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-11-02 06:43:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 3 minutes 49 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 16, redundant 2
Fitness: max 0.917(43), min 0.667(4), ave 0.889
Test execution time: sum 4209 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:43:20 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-11-02 06:43:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 5 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 9, redundant 1
Fitness: max 1(2), min 0.667(3), ave 0.908
Test execution time: sum 5980 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:43:36 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-11-02 06:43:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.917(51), min 0.667(6), ave 0.888
Test execution time: sum 4954 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:43:51 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-11-02 06:44:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 18, redundant 3
Fitness: max 0.917(47), min 0.417(1), ave 0.884
Test execution time: sum 14064 ms, max 9467 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:44:15 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-11-02 06:44:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 4 minutes 57 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 23, redundant 4
Fitness: max 0.917(39), min 0.667(3), ave 0.895
Test execution time: sum 3760 ms, max 114 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:44:28 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-11-02 06:44:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 10 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 20, redundant 4
Fitness: max 0.917(41), min 0.667(2), ave 0.902
Test execution time: sum 3989 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:44:42 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-11-02 06:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 18, redundant 3
Fitness: max 0.917(50), min 0.5(1), ave 0.897
Test execution time: sum 4773 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:44:56 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-11-02 06:45:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 13, redundant 3
Fitness: max 0.917(56), min 0.667(2), ave 0.908
Test execution time: sum 5174 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:45:11 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-11-02 06:45:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 17, redundant 4
Fitness: max 0.917(48), min 0.667(2), ave 0.904
Test execution time: sum 4525 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:45:26 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-11-02 06:45:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 9 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 17, redundant 6
Fitness: max 0.917(45), min 0.667(6), ave 0.887
Test execution time: sum 4318 ms, max 109 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:45:40 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-11-02 06:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 17, redundant 4
Fitness: max 1(1), min 0.667(6), ave 0.89
Test execution time: sum 4465 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 06:45:55 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-11-02 06:46:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 38 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 1(1), min 0.667(4), ave 0.898
Test execution time: sum 4299 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 06:46:09 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-11-02 07:10:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 30 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 20, redundant 1
Fitness: max 1(1), min 0.333(1), ave 0.89
Test execution time: sum 1444502 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:10:23 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-11-02 07:10:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 16, redundant 2
Fitness: max 0.917(50), min 0.667(2), ave 0.907
Test execution time: sum 4651 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:10:38 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-11-02 07:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 14, redundant 5
Fitness: max 0.917(48), min 0.667(5), ave 0.893
Test execution time: sum 4493 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:10:53 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-11-02 07:11:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 38 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.667(3), ave 0.905
Test execution time: sum 5191 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:11:09 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-11-02 07:11:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 31 minutes 54 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.667(1), ave 0.911
Test execution time: sum 5555 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:11:25 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-11-02 07:11:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 8 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 22, redundant 5
Fitness: max 1(1), min 0.917(45), ave 0.918
Test execution time: sum 4195 ms, max 126 ms, min 69 ms
----------------------------------------------------------------

2023-11-02 07:11:39 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-11-02 07:11:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 22 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 20, redundant 6
Fitness: max 0.917(45), min 0.75(1), ave 0.911
Test execution time: sum 4313 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:11:54 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-11-02 07:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 1(1), min 0(1), ave 0.897
Test execution time: sum 5075 ms, max 124 ms, min 21 ms
----------------------------------------------------------------

2023-11-02 07:12:09 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-11-02 07:12:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 55 seconds
Variants: generated 100, build-succeeded 61, build-failed 24, syntax-invalid 11, redundant 4
Fitness: max 1(3), min 0.667(1), ave 0.917
Test execution time: sum 5703 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:12:26 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-11-02 07:12:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 19, redundant 1
Fitness: max 0.917(49), min 0.5(1), ave 0.904
Test execution time: sum 4832 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 07:12:42 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-11-02 07:12:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 27 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 10, redundant 5
Fitness: max 0.917(54), min 0.667(1), ave 0.909
Test execution time: sum 5357 ms, max 129 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:12:58 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-11-02 07:13:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 44 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0.667(2), ave 0.908
Test execution time: sum 5635 ms, max 168 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 07:13:15 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-11-02 07:13:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.667(2), ave 0.909
Test execution time: sum 5173 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:13:32 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-11-02 07:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 17 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 13, redundant 2
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 5301 ms, max 116 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 07:13:48 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-11-02 07:14:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 5060 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:14:04 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-11-02 07:14:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 18, redundant 5
Fitness: max 0.917(51), min 0.667(1), ave 0.906
Test execution time: sum 4841 ms, max 113 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:14:20 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-11-02 07:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 13, redundant 7
Fitness: max 0.917(50), min 0.5(1), ave 0.908
Test execution time: sum 4681 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 07:14:36 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-11-02 07:14:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 22 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5479 ms, max 178 ms, min 90 ms
----------------------------------------------------------------

2023-11-02 07:14:53 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-11-02 07:15:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0.917(53), min 0.667(2), ave 0.908
Test execution time: sum 5036 ms, max 125 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 07:15:10 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-11-02 07:15:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 56 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 8, redundant 2
Fitness: max 1(1), min 0.5(1), ave 0.9
Test execution time: sum 5935 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 07:15:27 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-11-02 07:15:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 13 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 13, redundant 3
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 5490 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:15:44 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-11-02 07:16:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 30 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.667(1), ave 0.912
Test execution time: sum 5179 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:16:01 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-11-02 07:40:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 seconds
Variants: generated 100, build-succeeded 67, build-failed 20, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0.333(1), ave 0.887
Test execution time: sum 1445878 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:40:19 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-11-02 07:49:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 1(1), min 0.583(1), ave 0.894
Test execution time: sum 543857 ms, max 538931 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:49:35 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-11-02 07:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 10, redundant 2
Fitness: max 0.917(55), min 0.667(3), ave 0.901
Test execution time: sum 5318 ms, max 148 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:49:52 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-11-02 07:50:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0.667(4), ave 0.897
Test execution time: sum 4921 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:50:09 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-11-02 07:50:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 10 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 13, redundant 4
Fitness: max 0.917(55), min 0.667(1), ave 0.911
Test execution time: sum 5327 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 07:50:26 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-11-02 08:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 12 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0.917(53), min 0.333(2), ave 0.891
Test execution time: sum 2165076 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 08:26:43 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-11-02 08:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 59 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 18, redundant 2
Fitness: max 1(1), min 0.333(1), ave 0.902
Test execution time: sum 724744 ms, max 720026 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 08:39:00 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-11-02 08:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 59 minutes 47 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 9, redundant 2
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5704 ms, max 111 ms, min 34 ms
----------------------------------------------------------------

2023-11-02 08:39:18 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-11-02 08:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 3 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 1(1), min 0.5(1), ave 0.9
Test execution time: sum 4568 ms, max 110 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 08:39:34 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-11-02 08:51:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 21 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 13, redundant 3
Fitness: max 1(2), min 0.583(1), ave 0.912
Test execution time: sum 725389 ms, max 720023 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 08:51:52 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-11-02 08:52:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 12, redundant 3
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 5863 ms, max 264 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 08:52:11 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-11-02 09:04:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 9, redundant 3
Fitness: max 1(2), min 0.333(1), ave 0.91
Test execution time: sum 726252 ms, max 720024 ms, min 68 ms
----------------------------------------------------------------

2023-11-02 09:04:30 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-11-02 09:04:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 17 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 10, redundant 0
Fitness: max 0.917(59), min 0.667(1), ave 0.912
Test execution time: sum 6045 ms, max 277 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:04:49 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-11-02 09:05:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 34 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 17, redundant 5
Fitness: max 1(1), min 0.333(1), ave 0.902
Test execution time: sum 4884 ms, max 177 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:05:05 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-11-02 09:05:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 12, redundant 1
Fitness: max 0.917(50), min 0.667(2), ave 0.906
Test execution time: sum 5200 ms, max 265 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:05:23 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-11-02 09:05:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 9 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 17, redundant 2
Fitness: max 1(1), min 0.667(1), ave 0.91
Test execution time: sum 5036 ms, max 178 ms, min 28 ms
----------------------------------------------------------------

2023-11-02 09:05:40 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-11-02 09:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 27 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.913
Test execution time: sum 5363 ms, max 297 ms, min 71 ms
----------------------------------------------------------------

2023-11-02 09:05:58 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-11-02 09:06:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 46 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 9, redundant 2
Fitness: max 0.917(57), min 0.5(1), ave 0.909
Test execution time: sum 6075 ms, max 199 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:06:17 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-11-02 09:06:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 4 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 13, redundant 7
Fitness: max 0.917(54), min 0.667(1), ave 0.909
Test execution time: sum 5930 ms, max 288 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:06:36 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-11-02 09:06:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 21 seconds
Variants: generated 100, build-succeeded 48, build-failed 25, syntax-invalid 21, redundant 6
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4964 ms, max 178 ms, min 85 ms
----------------------------------------------------------------

2023-11-02 09:06:52 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-11-02 09:07:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 40 seconds
Variants: generated 100, build-succeeded 57, build-failed 20, syntax-invalid 16, redundant 7
Fitness: max 0.917(56), min 0.5(1), ave 0.909
Test execution time: sum 6068 ms, max 262 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:07:11 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-11-02 09:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 57 seconds
Variants: generated 100, build-succeeded 53, build-failed 21, syntax-invalid 21, redundant 5
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 5130 ms, max 154 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:07:29 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-11-02 09:07:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 14 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 20, redundant 4
Fitness: max 0.917(45), min 0.5(1), ave 0.908
Test execution time: sum 4457 ms, max 177 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:07:46 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-11-02 09:08:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 33 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 12, redundant 4
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5337 ms, max 182 ms, min 71 ms
----------------------------------------------------------------

2023-11-02 09:08:04 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-11-02 09:08:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 52 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 14, redundant 3
Fitness: max 0.917(52), min 0.667(1), ave 0.906
Test execution time: sum 5345 ms, max 204 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:08:23 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-11-02 09:08:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5327 ms, max 185 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 09:08:41 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-11-02 09:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 6083 ms, max 259 ms, min 68 ms
----------------------------------------------------------------

2023-11-02 09:09:01 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-11-02 09:09:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 29 minutes 52 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 10, redundant 1
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 7345 ms, max 265 ms, min 70 ms
----------------------------------------------------------------

2023-11-02 09:09:23 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-11-02 09:33:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 11 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 11, redundant 1
Fitness: max 1(1), min 0.333(1), ave 0.908
Test execution time: sum 1445818 ms, max 1440022 ms, min 71 ms
----------------------------------------------------------------

2023-11-02 09:33:43 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-11-02 09:34:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 32 seconds
Variants: generated 100, build-succeeded 67, build-failed 18, syntax-invalid 8, redundant 7
Fitness: max 0.917(67), min 0.917(67), ave 0.917
Test execution time: sum 6465 ms, max 177 ms, min 69 ms
----------------------------------------------------------------

2023-11-02 09:34:04 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-11-02 09:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 51 seconds
Variants: generated 100, build-succeeded 56, build-failed 21, syntax-invalid 15, redundant 8
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5167 ms, max 112 ms, min 69 ms
----------------------------------------------------------------

2023-11-02 09:34:22 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-11-02 09:34:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 10 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 13, redundant 5
Fitness: max 0.917(52), min 0.5(1), ave 0.902
Test execution time: sum 5227 ms, max 281 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:34:41 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-11-02 09:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 30 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.917(59), min 0.667(1), ave 0.912
Test execution time: sum 5890 ms, max 263 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:35:01 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-11-02 09:35:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 51 seconds
Variants: generated 100, build-succeeded 64, build-failed 22, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 6677 ms, max 281 ms, min 45 ms
----------------------------------------------------------------

2023-11-02 09:35:22 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-11-02 09:35:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 11 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 16, redundant 1
Fitness: max 0.917(57), min 0.5(1), ave 0.901
Test execution time: sum 6135 ms, max 263 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:35:42 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-11-02 09:36:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 30 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 15, redundant 2
Fitness: max 0.917(47), min 0.5(1), ave 0.903
Test execution time: sum 5267 ms, max 265 ms, min 22 ms
----------------------------------------------------------------

2023-11-02 09:36:01 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-11-02 09:36:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 50 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 15, redundant 1
Fitness: max 0.917(54), min 0.667(1), ave 0.912
Test execution time: sum 6959 ms, max 264 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 09:36:22 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-11-02 09:36:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 57 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 22, syntax-invalid 21, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 6331 ms, max 263 ms, min 70 ms
----------------------------------------------------------------

2023-11-02 09:36:41 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-11-02 09:37:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 57 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 34, syntax-invalid 12, redundant 6
Fitness: max 0.917(46), min 0.667(1), ave 0.908
Test execution time: sum 6081 ms, max 289 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:37:01 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-11-02 09:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 57 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.917(56), min 0.667(1), ave 0.912
Test execution time: sum 7697 ms, max 291 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 09:37:23 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-11-02 09:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 7592 ms, max 268 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 09:37:45 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-11-02 09:38:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 11, redundant 4
Fitness: max 0.917(50), min 0.667(4), ave 0.898
Test execution time: sum 6237 ms, max 262 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:38:06 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-11-02 09:38:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 57 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 6, redundant 5
Fitness: max 0.917(59), min 0.667(2), ave 0.908
Test execution time: sum 7183 ms, max 294 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:38:28 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-11-02 09:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 59 minutes 19 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 5, redundant 2
Fitness: max 0.917(60), min 0.667(1), ave 0.91
Test execution time: sum 7095 ms, max 272 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:38:50 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-11-02 09:39:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 59 minutes 40 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 13, redundant 3
Fitness: max 0.917(52), min 0.667(3), ave 0.903
Test execution time: sum 6666 ms, max 274 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:39:11 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-11-02 09:39:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 1 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 11, redundant 2
Fitness: max 0.917(52), min 0.667(3), ave 0.903
Test execution time: sum 6709 ms, max 269 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:39:32 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-11-02 09:39:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 23 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0.667(5), ave 0.897
Test execution time: sum 7140 ms, max 278 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:39:54 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-11-02 09:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 9, redundant 3
Fitness: max 0.917(54), min 0.667(5), ave 0.895
Test execution time: sum 6304 ms, max 274 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:40:16 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-11-02 09:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 1 minutes 5 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.917(53), min 0.667(1), ave 0.912
Test execution time: sum 5590 ms, max 264 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:40:36 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-11-02 09:40:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 1 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 15, redundant 5
Fitness: max 0.917(54), min 0.667(2), ave 0.905
Test execution time: sum 5787 ms, max 308 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 09:40:56 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-11-02 09:41:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 1 minutes 47 seconds
Variants: generated 100, build-succeeded 65, build-failed 25, syntax-invalid 9, redundant 1
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 6954 ms, max 262 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:41:18 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-11-02 09:41:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 2 minutes 8 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 11, redundant 6
Fitness: max 0.917(50), min 0.667(8), ave 0.882
Test execution time: sum 5576 ms, max 198 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:41:39 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-11-02 09:42:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 2 minutes 28 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 14, redundant 3
Fitness: max 0.917(56), min 0.667(2), ave 0.908
Test execution time: sum 6161 ms, max 297 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 09:42:00 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-11-02 09:42:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 2 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 11, redundant 2
Fitness: max 1(1), min 0.667(3), ave 0.904
Test execution time: sum 5468 ms, max 206 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:42:20 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-11-02 09:42:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 3 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 12, redundant 6
Fitness: max 0.917(55), min 0.667(2), ave 0.907
Test execution time: sum 6431 ms, max 263 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 09:42:42 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-11-02 09:43:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 3 minutes 30 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 15, redundant 4
Fitness: max 0.917(46), min 0.333(1), ave 0.881
Test execution time: sum 5597 ms, max 264 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:43:02 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-11-02 09:43:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 3 minutes 52 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 10, redundant 3
Fitness: max 0.917(54), min 0.667(6), ave 0.892
Test execution time: sum 6083 ms, max 280 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:43:23 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-11-02 09:43:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 4 minutes 14 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 9, redundant 3
Fitness: max 0.917(54), min 0.667(6), ave 0.887
Test execution time: sum 6442 ms, max 260 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:43:45 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-11-02 09:44:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 4 minutes 35 seconds
Variants: generated 100, build-succeeded 61, build-failed 21, syntax-invalid 15, redundant 3
Fitness: max 0.917(55), min 0.667(4), ave 0.896
Test execution time: sum 6293 ms, max 288 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:44:07 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-11-02 09:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 4 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 11, redundant 8
Fitness: max 0.917(51), min 0.667(4), ave 0.898
Test execution time: sum 6706 ms, max 288 ms, min 25 ms
----------------------------------------------------------------

2023-11-02 09:44:29 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-11-02 09:44:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 5 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 7, redundant 3
Fitness: max 1(1), min 0.667(5), ave 0.894
Test execution time: sum 6572 ms, max 275 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:44:52 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-11-02 09:45:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 5 minutes 43 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 12, redundant 3
Fitness: max 0.917(51), min 0.667(4), ave 0.898
Test execution time: sum 6575 ms, max 267 ms, min 27 ms
----------------------------------------------------------------

2023-11-02 09:45:14 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-11-02 09:45:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 6 minutes 5 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 14, redundant 3
Fitness: max 0.917(50), min 0.667(5), ave 0.894
Test execution time: sum 6961 ms, max 285 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 09:45:36 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-11-02 09:46:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 6 minutes 29 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 9, redundant 3
Fitness: max 0.917(55), min 0.667(5), ave 0.896
Test execution time: sum 7510 ms, max 302 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 09:46:00 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-11-02 09:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 6 minutes 54 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 8, redundant 5
Fitness: max 0.917(58), min 0.667(3), ave 0.904
Test execution time: sum 8601 ms, max 265 ms, min 66 ms
----------------------------------------------------------------

2023-11-02 09:46:25 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-11-02 09:46:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 7 minutes 16 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 14, redundant 1
Fitness: max 0.917(51), min 0.583(1), ave 0.906
Test execution time: sum 6502 ms, max 305 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:46:47 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-11-02 09:47:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 7 minutes 39 seconds
Variants: generated 100, build-succeeded 62, build-failed 19, syntax-invalid 14, redundant 5
Fitness: max 0.917(60), min 0.667(1), ave 0.91
Test execution time: sum 7715 ms, max 292 ms, min 34 ms
----------------------------------------------------------------

2023-11-02 09:47:11 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-11-02 09:47:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 8 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 15, redundant 3
Fitness: max 0.917(53), min 0.667(1), ave 0.912
Test execution time: sum 7972 ms, max 284 ms, min 71 ms
----------------------------------------------------------------

2023-11-02 09:47:34 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-11-02 09:47:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 8 minutes 26 seconds
Variants: generated 100, build-succeeded 52, build-failed 22, syntax-invalid 17, redundant 9
Fitness: max 0.917(50), min 0.75(2), ave 0.91
Test execution time: sum 8094 ms, max 296 ms, min 50 ms
----------------------------------------------------------------

2023-11-02 09:47:58 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-11-02 09:48:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 8 minutes 53 seconds
Variants: generated 100, build-succeeded 66, build-failed 24, syntax-invalid 6, redundant 4
Fitness: max 0.917(62), min 0.667(4), ave 0.902
Test execution time: sum 10002 ms, max 310 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 09:48:25 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-11-02 09:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 9 minutes 17 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 13, redundant 5
Fitness: max 0.917(48), min 0.667(1), ave 0.912
Test execution time: sum 7728 ms, max 269 ms, min 93 ms
----------------------------------------------------------------

2023-11-02 09:48:48 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-11-02 09:49:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 9 minutes 39 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 19, redundant 0
Fitness: max 0.917(49), min 0.667(1), ave 0.912
Test execution time: sum 7118 ms, max 268 ms, min 74 ms
----------------------------------------------------------------

2023-11-02 09:49:10 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-11-02 09:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 6670 ms, max 262 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 09:49:33 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-11-02 09:49:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 24 seconds
Variants: generated 100, build-succeeded 58, build-failed 20, syntax-invalid 17, redundant 5
Fitness: max 0.917(55), min 0.5(1), ave 0.901
Test execution time: sum 6405 ms, max 262 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:49:55 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-11-02 09:50:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 10 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 20, redundant 5
Fitness: max 0.917(45), min 0.5(1), ave 0.899
Test execution time: sum 5365 ms, max 273 ms, min 29 ms
----------------------------------------------------------------

2023-11-02 09:50:16 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-11-02 09:50:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 7 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 18, redundant 7
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 6412 ms, max 277 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 09:50:38 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-11-02 09:51:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 15, redundant 3
Fitness: max 0.917(57), min 0.667(1), ave 0.912
Test execution time: sum 7120 ms, max 285 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 09:51:01 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-11-02 09:51:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 52 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 19, redundant 3
Fitness: max 1(1), min 0.5(1), ave 0.899
Test execution time: sum 5691 ms, max 278 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:51:23 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-11-02 09:51:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 14 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 17, redundant 4
Fitness: max 0.917(46), min 0.5(1), ave 0.908
Test execution time: sum 5702 ms, max 281 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:51:45 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-11-02 09:52:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 36 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 19, redundant 1
Fitness: max 1(1), min 0.5(1), ave 0.897
Test execution time: sum 6444 ms, max 263 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:52:07 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-11-02 09:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 59 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 12, redundant 1
Fitness: max 0.917(51), min 0.5(1), ave 0.904
Test execution time: sum 6181 ms, max 264 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:52:31 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-11-02 09:52:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 25 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 10, redundant 4
Fitness: max 0.917(55), min 0.667(2), ave 0.908
Test execution time: sum 7648 ms, max 263 ms, min 25 ms
----------------------------------------------------------------

2023-11-02 09:52:56 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-11-02 09:53:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 49 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 9, redundant 6
Fitness: max 0.917(45), min 0.667(4), ave 0.893
Test execution time: sum 7514 ms, max 268 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 09:53:21 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-11-02 09:53:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 14 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 36, syntax-invalid 8, redundant 1
Fitness: max 0.917(53), min 0.667(2), ave 0.908
Test execution time: sum 8607 ms, max 279 ms, min 35 ms
----------------------------------------------------------------

2023-11-02 09:53:47 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-11-02 09:54:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 14 minutes 42 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 9362 ms, max 278 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 09:54:14 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-11-02 09:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 15 minutes 8 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 8645 ms, max 287 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 09:54:39 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-11-02 10:19:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 39 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 17, redundant 5
Fitness: max 0.917(46), min 0.333(1), ave 0.89
Test execution time: sum 1447236 ms, max 1440022 ms, min 45 ms
----------------------------------------------------------------

2023-11-02 10:19:02 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-11-02 10:19:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 39 minutes 54 seconds
Variants: generated 100, build-succeeded 47, build-failed 33, syntax-invalid 14, redundant 6
Fitness: max 1(1), min 0.667(2), ave 0.908
Test execution time: sum 6917 ms, max 271 ms, min 24 ms
----------------------------------------------------------------

2023-11-02 10:19:26 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-11-02 10:19:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 14, redundant 3
Fitness: max 0.917(53), min 0.667(2), ave 0.905
Test execution time: sum 8475 ms, max 292 ms, min 46 ms
----------------------------------------------------------------

2023-11-02 10:19:51 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-11-02 10:20:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 45 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 15, redundant 7
Fitness: max 1(1), min 0.667(1), ave 0.914
Test execution time: sum 8836 ms, max 293 ms, min 67 ms
----------------------------------------------------------------

2023-11-02 10:20:16 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-11-02 10:20:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 41 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 16, redundant 3
Fitness: max 0.917(48), min 0.667(3), ave 0.899
Test execution time: sum 9469 ms, max 291 ms, min 35 ms
----------------------------------------------------------------

2023-11-02 10:20:42 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-11-02 10:21:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 41 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 16, redundant 2
Fitness: max 0.917(54), min 0.667(1), ave 0.912
Test execution time: sum 8652 ms, max 267 ms, min 23 ms
----------------------------------------------------------------

2023-11-02 10:21:08 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-11-02 10:21:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 1 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 19, redundant 5
Fitness: max 1(1), min 0.667(2), ave 0.909
Test execution time: sum 8507 ms, max 273 ms, min 25 ms
----------------------------------------------------------------

2023-11-02 10:21:32 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-11-02 10:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 21, redundant 3
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 8905 ms, max 273 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 10:21:57 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-11-02 10:22:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 21, redundant 0
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 9916 ms, max 291 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 10:22:22 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-11-02 10:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 19 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 14, redundant 6
Fitness: max 0.917(53), min 0.667(4), ave 0.899
Test execution time: sum 10387 ms, max 303 ms, min 26 ms
----------------------------------------------------------------

2023-11-02 10:22:50 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-11-02 10:23:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 47 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 17, redundant 2
Fitness: max 0.917(48), min 0.667(3), ave 0.902
Test execution time: sum 10601 ms, max 299 ms, min 35 ms
----------------------------------------------------------------

2023-11-02 10:23:18 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-11-02 10:25:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 32 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 22, redundant 3
Fitness: max 0.917(40), min 0.5(1), ave 0.895
Test execution time: sum 89288 ms, max 79941 ms, min 100 ms
----------------------------------------------------------------

2023-11-02 10:25:03 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-11-02 10:25:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 57 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 20, redundant 7
Fitness: max 1(1), min 0.667(2), ave 0.908
Test execution time: sum 9547 ms, max 274 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 10:25:29 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-11-02 10:25:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 46 minutes 9 seconds
Variants: generated 39, build-succeeded 20, build-failed 16, syntax-invalid 0, redundant 3
Fitness: max 1(1), min 0.917(19), ave 0.921
Test execution time: sum 3772 ms, max 264 ms, min 72 ms
----------------------------------------------------------------

2023-11-02 10:25:40 [main] [INFO]  KGenProgMain - GA stopped
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -386,7 +386,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v187)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v290)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +417,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v291)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v371)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 3;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v765)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v869)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v877)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 4;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v887)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +420,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            resizeBuffer();
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1011)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1059)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer[pos++] = PAD;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1284)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +420,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1286)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +419,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1290)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            modulus = (++modulus) % 3;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +418,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v1563)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2225)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			resizeBuffer();
+			lineLength = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +386,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2425)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			readPos = 0;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineLength = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v2604)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			readPos = 0;
+			eof = true;
+			resizeBuffer();
+			lineLength = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v3432)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			readPos = 0;
+			resizeBuffer();
+			lineLength = 0;
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4020)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
@@ -167,7 +168,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        byte[] out = new byte[len >> 1];
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +388,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -483,7 +490,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4247)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
@@ -167,7 +168,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +389,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -483,7 +491,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4436)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            modulus = (++modulus) % 4;
+			eof = true;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +388,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -483,7 +490,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v4506)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +388,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -483,7 +489,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5102)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +390,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5107)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5127)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +388,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -419,7 +431,7 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
+            reset();
             readPos = outPos;
         }
     }
@@ -483,7 +495,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v5813)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            lineLength = 0;
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +388,8 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -483,7 +491,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6213)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -166,7 +166,7 @@
                 if (!base64.hasData()) {
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
-                    if (c > 0 && b.length == len) {
+                    if (offset < 0 || len < 0) {
                         base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,15 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +389,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -483,7 +495,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6430)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,6 +72,7 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
+		int bytesCopied = 0;
         this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,6 +389,7 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -418,7 +426,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v6445)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				eof = true;
+			}
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,8 +391,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
-            readPos = 0;
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -483,7 +499,8 @@
         } else {
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
-                    resizeBuffer();
+                    int bytesCopied = 0;
+					resizeBuffer();
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7007)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			resizeBuffer();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +391,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v7521)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				eof = true;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+			byte[] result = new byte[pos];
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +392,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v8004)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				int bytesCopied = 0;
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +403,9 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +396,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9034)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,39 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				{
+					buffer = new byte[DEFAULT_BUFFER_SIZE];
+					pos = 0;
+					readPos = 0;
+				}
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +413,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v9936)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,31 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +405,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10037)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,38 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +412,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +450,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v10515)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +411,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +451,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11134)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +407,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11138)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +408,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11442)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +399,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11616)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +408,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v11922)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,24 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            {
+				eof = true;
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -382,6 +399,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12015)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				eof = true;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +409,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12118)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +409,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12135)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				String sep = StringUtils.newStringUtf8(lineSeparator);
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,10 +407,22 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
-            byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+            {
+				byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
+				System.arraycopy(buffer, 0, b, 0, buffer.length);
+				buffer = b;
+			}
+			byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12222)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,27 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +401,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v12231)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+			}
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +404,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13306)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				{
+					buffer = new byte[DEFAULT_BUFFER_SIZE];
+					eof = true;
+					readPos = 0;
+				}
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +411,20 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
-            readPos = 0;
+            int bytesCopied = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v13926)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,38 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				{
+					buffer = new byte[DEFAULT_BUFFER_SIZE];
+					pos = 0;
+					readPos = 0;
+				}
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            modulus = 0;
+			resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +412,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14035)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +407,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14434)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +408,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14439)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,34 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +408,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v14711)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,46 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				eof = true;
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            lineLength = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +420,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15108)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +418,17 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v15614)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,41 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +415,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16223)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +403,17 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v16240)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +410,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17122)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			eof = true;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +419,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17249)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +424,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17328)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,39 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            int startSrc = 0;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +413,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17606)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,37 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +411,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17742)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,32 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +406,20 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v17834)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +409,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18064)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,30 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +404,18 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18128)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,38 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +412,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18130)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,35 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +409,19 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18178)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+				eof = true;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +419,19 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18437)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,52 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				eof = true;
+				lineLength = 0;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +426,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v18513)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,51 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+				currentLinePos = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,7 +425,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19221)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				eof = false;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +424,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19530)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +424,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19623)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,56 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+				currentLinePos = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			{
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				buffer[pos++] = (byte) (x & MASK_8BITS);
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +430,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v19818)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,55 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			eof = true;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +429,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20136)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,68 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +442,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20223)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,42 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +416,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20350)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,61 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				eof = true;
+			}
+			modulus = (++modulus) % 4;
+			resizeBuffer();
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +435,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20437)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,58 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			String sep = StringUtils.newStringUtf8(lineSeparator);
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +432,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20444)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,58 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				modulus = (++modulus) % 4;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +432,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
-            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+            resizeBuffer();
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20606)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,49 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = false;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            buffer = null;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +423,20 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -417,7 +470,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (lineLength > 0 && lineLength <= currentLinePos) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20637)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,58 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				modulus = (++modulus) % 4;
+				eof = true;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +432,16 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
-            pos = 0;
-            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			pos = 0;
+            resizeBuffer();
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v20827)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,43 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +417,17 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21009)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,45 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +419,18 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
@@ -418,7 +467,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v21103)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            eof = true;
+			buffer = null;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +424,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22130)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,55 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				eof = true;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +429,23 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22337)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,64 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			eof = true;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			x = x << 6;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +438,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v22801)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,73 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;
+			x = x << 6;
+			buffer[pos++] = PAD;
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +447,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24111)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,68 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			buffer = null;
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +442,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24519)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,77 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			eof = true;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +451,10 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v24835)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,76 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				eof = true;
+			}
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +450,18 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v25504)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,70 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				buffer = null;
+			}
+			{
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            {
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +444,19 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v26745)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,95 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			buffer = null;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +469,9 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27207)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,87 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			eof = true;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +461,11 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v27439)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,87 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				eof = true;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +463,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28040)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,84 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +458,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28219)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,94 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				eof = true;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+			buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,8 +468,14 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28406)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,85 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+			}
+			{
+				lineLength = 0;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +459,13 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v28711)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,81 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+			}
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			readPos = 0;
+			{
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				eof = true;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +455,12 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29345)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,81 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            {
+				lineLength = 0;
+			}
+			eof = true;
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			readPos = 0;
+			lineLength = 0;  // disable chunk-separating
+            resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			resizeBuffer();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -382,6 +455,15 @@
     private void resizeBuffer() {
         if (buffer == null) {
             buffer = new byte[DEFAULT_BUFFER_SIZE];
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
             pos = 0;
             readPos = 0;
         } else {
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-11-02 10:25:40 [main] [INFO]  PatchLogExporter - patch (v29439)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-11-02 10:25:41 [main] [INFO]  KGenProgMain - Summary
Reached generation = 296
Generated variants = 29439
Syntax valid variants = 24629
Build succeeded variants = 14265
Time elapsed = 12 hours 46 minutes 10 seconds
Exit status = SUCCESS
