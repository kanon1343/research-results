2023-10-27 15:51:03 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-10-27 15:51:03 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-10-27 15:51:03 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-10-27 15:51:03 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 1 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-10-27 15:51:06 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-10-27 15:51:06 [main] [INFO]  KGenProgMain - GA started
2023-10-27 15:51:06 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-10-27 16:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 1 seconds
Variants: generated 50, build-succeeded 5, build-failed 33, syntax-invalid 3, redundant 9
Fitness: max 0.917(2), min 0.333(1), ave 0.733
Test execution time: sum 1440493 ms, max 1440037 ms, min 38 ms
----------------------------------------------------------------

2023-10-27 16:15:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-10-27 16:54:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 3 seconds
Variants: generated 50, build-succeeded 11, build-failed 29, syntax-invalid 2, redundant 8
Fitness: max 1(1), min 0.333(1), ave 0.712
Test execution time: sum 2340396 ms, max 1440028 ms, min 26 ms
----------------------------------------------------------------

2023-10-27 16:54:10 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-10-27 19:46:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 55 minutes 46 seconds
Variants: generated 100, build-succeeded 35, build-failed 22, syntax-invalid 11, redundant 32
Fitness: max 0.917(1), min 0.333(5), ave 0.631
Test execution time: sum 10361621 ms, max 1440025 ms, min 23 ms
----------------------------------------------------------------

2023-10-27 19:46:53 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-10-27 20:07:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 16 minutes 49 seconds
Variants: generated 100, build-succeeded 25, build-failed 25, syntax-invalid 15, redundant 35
Fitness: max 0.917(1), min 0.417(1), ave 0.747
Test execution time: sum 1260673 ms, max 720030 ms, min 24 ms
----------------------------------------------------------------

2023-10-27 20:07:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-10-27 20:37:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 51 seconds
Variants: generated 100, build-succeeded 30, build-failed 23, syntax-invalid 14, redundant 33
Fitness: max 0.833(5), min 0.583(3), ave 0.739
Test execution time: sum 1800716 ms, max 900025 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 20:37:58 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-10-27 20:38:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 35, build-failed 27, syntax-invalid 11, redundant 27
Fitness: max 0.917(1), min 0.75(22), ave 0.783
Test execution time: sum 841 ms, max 71 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 20:38:01 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-10-27 20:39:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 43 seconds
Variants: generated 100, build-succeeded 38, build-failed 22, syntax-invalid 20, redundant 20
Fitness: max 0.833(19), min 0.583(2), ave 0.783
Test execution time: sum 106380 ms, max 105527 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 20:39:49 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-10-27 20:51:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 40 seconds
Variants: generated 100, build-succeeded 40, build-failed 26, syntax-invalid 15, redundant 19
Fitness: max 1(1), min 0.583(1), ave 0.815
Test execution time: sum 715282 ms, max 714327 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 20:51:47 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-10-27 21:30:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 43 seconds
Variants: generated 100, build-succeeded 40, build-failed 24, syntax-invalid 21, redundant 15
Fitness: max 0.917(3), min 0.5(1), ave 0.783
Test execution time: sum 2341052 ms, max 900022 ms, min 20 ms
----------------------------------------------------------------

2023-10-27 21:30:50 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-10-27 21:32:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 33 seconds
Variants: generated 100, build-succeeded 37, build-failed 26, syntax-invalid 18, redundant 19
Fitness: max 1(2), min 0(1), ave 0.77
Test execution time: sum 108143 ms, max 107086 ms, min 20 ms
----------------------------------------------------------------

2023-10-27 21:32:40 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-10-27 21:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 37 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 13, redundant 13
Fitness: max 1(1), min 0.583(1), ave 0.798
Test execution time: sum 1390 ms, max 110 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 21:32:44 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-10-27 21:32:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 40 seconds
Variants: generated 100, build-succeeded 27, build-failed 32, syntax-invalid 24, redundant 17
Fitness: max 0.917(4), min 0.583(1), ave 0.796
Test execution time: sum 939 ms, max 91 ms, min 20 ms
----------------------------------------------------------------

2023-10-27 21:32:46 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-10-27 21:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 42 seconds
Variants: generated 100, build-succeeded 23, build-failed 27, syntax-invalid 23, redundant 27
Fitness: max 0.917(5), min 0.75(11), ave 0.812
Test execution time: sum 846 ms, max 108 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 21:32:49 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-10-27 21:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 45 seconds
Variants: generated 100, build-succeeded 14, build-failed 32, syntax-invalid 23, redundant 31
Fitness: max 0.917(14), min 0.917(14), ave 0.917
Test execution time: sum 1107 ms, max 102 ms, min 70 ms
----------------------------------------------------------------

2023-10-27 21:32:51 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-10-27 21:32:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 47 seconds
Variants: generated 100, build-succeeded 14, build-failed 27, syntax-invalid 31, redundant 28
Fitness: max 0.917(12), min 0.75(2), ave 0.893
Test execution time: sum 1118 ms, max 100 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:32:54 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-10-27 21:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 50 seconds
Variants: generated 100, build-succeeded 17, build-failed 30, syntax-invalid 31, redundant 22
Fitness: max 0.917(15), min 0.75(2), ave 0.897
Test execution time: sum 1276 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:32:57 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-10-27 21:33:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 53 seconds
Variants: generated 100, build-succeeded 20, build-failed 30, syntax-invalid 33, redundant 17
Fitness: max 1(1), min 0.75(1), ave 0.912
Test execution time: sum 1583 ms, max 113 ms, min 30 ms
----------------------------------------------------------------

2023-10-27 21:33:00 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-10-27 21:33:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 41 minutes 56 seconds
Variants: generated 100, build-succeeded 19, build-failed 37, syntax-invalid 31, redundant 13
Fitness: max 0.917(18), min 0.5(1), ave 0.895
Test execution time: sum 1440 ms, max 96 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 21:33:03 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-10-27 21:33:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 0 seconds
Variants: generated 100, build-succeeded 22, build-failed 34, syntax-invalid 34, redundant 10
Fitness: max 0.917(18), min 0.75(4), ave 0.886
Test execution time: sum 1566 ms, max 101 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:33:06 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-10-27 21:33:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 3 seconds
Variants: generated 100, build-succeeded 20, build-failed 23, syntax-invalid 33, redundant 24
Fitness: max 0.917(18), min 0.667(1), ave 0.896
Test execution time: sum 1566 ms, max 104 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:33:10 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-10-27 21:33:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 42 minutes 7 seconds
Variants: generated 100, build-succeeded 27, build-failed 27, syntax-invalid 28, redundant 18
Fitness: max 1(1), min 0.75(1), ave 0.914
Test execution time: sum 2221 ms, max 100 ms, min 28 ms
----------------------------------------------------------------

2023-10-27 21:33:14 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-10-27 21:48:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 10 seconds
Variants: generated 100, build-succeeded 21, build-failed 22, syntax-invalid 44, redundant 13
Fitness: max 0.917(17), min 0.5(1), ave 0.865
Test execution time: sum 901480 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:48:17 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-10-27 21:48:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 13 seconds
Variants: generated 100, build-succeeded 21, build-failed 28, syntax-invalid 41, redundant 10
Fitness: max 0.917(18), min 0.75(3), ave 0.893
Test execution time: sum 1586 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:48:20 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-10-27 21:48:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 17 seconds
Variants: generated 100, build-succeeded 23, build-failed 31, syntax-invalid 35, redundant 11
Fitness: max 0.917(20), min 0.5(1), ave 0.884
Test execution time: sum 1664 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 21:48:24 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-10-27 21:48:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 21 seconds
Variants: generated 100, build-succeeded 24, build-failed 30, syntax-invalid 31, redundant 15
Fitness: max 0.917(24), min 0.917(24), ave 0.917
Test execution time: sum 1951 ms, max 108 ms, min 70 ms
----------------------------------------------------------------

2023-10-27 21:48:28 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-10-27 22:12:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 25 seconds
Variants: generated 100, build-succeeded 31, build-failed 27, syntax-invalid 34, redundant 8
Fitness: max 0.917(27), min 0.333(1), ave 0.882
Test execution time: sum 1442373 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:12:32 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-10-27 22:12:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 21 minutes 29 seconds
Variants: generated 100, build-succeeded 20, build-failed 27, syntax-invalid 42, redundant 11
Fitness: max 0.917(18), min 0.417(1), ave 0.883
Test execution time: sum 1499 ms, max 98 ms, min 20 ms
----------------------------------------------------------------

2023-10-27 22:12:36 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-10-27 22:27:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 33 seconds
Variants: generated 100, build-succeeded 20, build-failed 32, syntax-invalid 44, redundant 4
Fitness: max 0.917(18), min 0.583(1), ave 0.892
Test execution time: sum 901498 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:27:39 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-10-27 22:27:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 36 seconds
Variants: generated 100, build-succeeded 20, build-failed 34, syntax-invalid 37, redundant 9
Fitness: max 0.917(20), min 0.917(20), ave 0.917
Test execution time: sum 1594 ms, max 99 ms, min 66 ms
----------------------------------------------------------------

2023-10-27 22:27:43 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-10-27 22:27:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 41 seconds
Variants: generated 100, build-succeeded 24, build-failed 29, syntax-invalid 36, redundant 11
Fitness: max 1(1), min 0.75(1), ave 0.913
Test execution time: sum 1952 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:27:47 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-10-27 22:27:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 45 seconds
Variants: generated 100, build-succeeded 27, build-failed 30, syntax-invalid 33, redundant 10
Fitness: max 1(1), min 0.917(26), ave 0.92
Test execution time: sum 2307 ms, max 108 ms, min 71 ms
----------------------------------------------------------------

2023-10-27 22:27:52 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-10-27 22:27:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 49 seconds
Variants: generated 100, build-succeeded 24, build-failed 28, syntax-invalid 34, redundant 14
Fitness: max 0.917(22), min 0.75(1), ave 0.906
Test execution time: sum 1947 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:27:56 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-10-27 22:28:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 54 seconds
Variants: generated 100, build-succeeded 26, build-failed 36, syntax-invalid 34, redundant 4
Fitness: max 0.917(21), min 0.75(5), ave 0.885
Test execution time: sum 2029 ms, max 105 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:28:01 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-10-27 22:28:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 36 minutes 58 seconds
Variants: generated 100, build-succeeded 22, build-failed 29, syntax-invalid 32, redundant 17
Fitness: max 0.917(21), min 0.75(1), ave 0.909
Test execution time: sum 1933 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:28:05 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-10-27 22:43:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 3 seconds
Variants: generated 100, build-succeeded 29, build-failed 29, syntax-invalid 36, redundant 6
Fitness: max 1(1), min 0.583(1), ave 0.891
Test execution time: sum 902310 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 22:43:09 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-10-27 22:46:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 55 minutes 6 seconds
Variants: generated 100, build-succeeded 23, build-failed 27, syntax-invalid 36, redundant 14
Fitness: max 0.917(19), min 0.5(1), ave 0.877
Test execution time: sum 181779 ms, max 180022 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 22:46:13 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-10-27 23:01:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 12 seconds
Variants: generated 100, build-succeeded 31, build-failed 29, syntax-invalid 30, redundant 10
Fitness: max 0.917(28), min 0.583(1), ave 0.895
Test execution time: sum 902648 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 23:01:18 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-10-27 23:16:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 18 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 23, redundant 7
Fitness: max 0.917(38), min 0.583(1), ave 0.899
Test execution time: sum 903542 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-10-27 23:16:25 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-10-27 23:16:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 25 minutes 24 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 17, redundant 10
Fitness: max 0.917(39), min 0.75(1), ave 0.911
Test execution time: sum 3706 ms, max 131 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 23:16:31 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-10-27 23:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 40 seconds
Variants: generated 100, build-succeeded 37, build-failed 25, syntax-invalid 30, redundant 8
Fitness: max 0.917(34), min 0.417(1), ave 0.887
Test execution time: sum 72956 ms, max 70004 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 23:17:47 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-10-27 23:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 47 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 25, redundant 6
Fitness: max 0.917(38), min 0.75(2), ave 0.908
Test execution time: sum 3530 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 23:17:54 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-10-27 23:17:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 53 seconds
Variants: generated 100, build-succeeded 33, build-failed 26, syntax-invalid 29, redundant 12
Fitness: max 1(1), min 0.75(1), ave 0.914
Test execution time: sum 2887 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-27 23:17:59 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-10-27 23:18:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 26 minutes 59 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 21, redundant 9
Fitness: max 0.917(39), min 0.583(1), ave 0.904
Test execution time: sum 3636 ms, max 125 ms, min 20 ms
----------------------------------------------------------------

2023-10-27 23:18:06 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-10-27 23:18:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 6 seconds
Variants: generated 100, build-succeeded 39, build-failed 23, syntax-invalid 34, redundant 4
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3594 ms, max 125 ms, min 71 ms
----------------------------------------------------------------

2023-10-27 23:18:13 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-10-28 00:06:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 11 seconds
Variants: generated 100, build-succeeded 29, build-failed 37, syntax-invalid 30, redundant 4
Fitness: max 1(1), min 0.333(2), ave 0.868
Test execution time: sum 2882322 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 00:06:18 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-10-28 00:06:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 16 seconds
Variants: generated 100, build-succeeded 26, build-failed 25, syntax-invalid 40, redundant 9
Fitness: max 0.917(25), min 0.75(1), ave 0.91
Test execution time: sum 2222 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:06:23 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-10-28 00:06:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 21 seconds
Variants: generated 100, build-succeeded 26, build-failed 27, syntax-invalid 38, redundant 9
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 2179 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:06:28 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-10-28 00:06:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 27 seconds
Variants: generated 100, build-succeeded 37, build-failed 20, syntax-invalid 38, redundant 5
Fitness: max 0.917(32), min 0(1), ave 0.872
Test execution time: sum 2936 ms, max 113 ms, min 20 ms
----------------------------------------------------------------

2023-10-28 00:06:34 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-10-28 00:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 32 seconds
Variants: generated 100, build-succeeded 30, build-failed 26, syntax-invalid 38, redundant 6
Fitness: max 0.917(26), min 0.667(2), ave 0.889
Test execution time: sum 2442 ms, max 142 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:06:39 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-10-28 00:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 37 seconds
Variants: generated 100, build-succeeded 20, build-failed 32, syntax-invalid 39, redundant 9
Fitness: max 0.917(19), min 0.75(1), ave 0.908
Test execution time: sum 1649 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:06:43 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-10-28 00:06:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 43 seconds
Variants: generated 100, build-succeeded 38, build-failed 29, syntax-invalid 28, redundant 5
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3433 ms, max 146 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 00:06:50 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-10-28 00:06:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 50 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 33, redundant 9
Fitness: max 0.917(32), min 0.917(32), ave 0.917
Test execution time: sum 2940 ms, max 131 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 00:06:56 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-10-28 00:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 15 minutes 56 seconds
Variants: generated 100, build-succeeded 32, build-failed 28, syntax-invalid 35, redundant 5
Fitness: max 0.917(31), min 0.75(1), ave 0.911
Test execution time: sum 2755 ms, max 114 ms, min 35 ms
----------------------------------------------------------------

2023-10-28 00:07:03 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-10-28 00:16:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 2 seconds
Variants: generated 100, build-succeeded 37, build-failed 24, syntax-invalid 34, redundant 5
Fitness: max 0.917(35), min 0.583(1), ave 0.903
Test execution time: sum 542729 ms, max 539648 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:16:09 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-10-28 00:16:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 8 seconds
Variants: generated 100, build-succeeded 33, build-failed 34, syntax-invalid 27, redundant 6
Fitness: max 0.917(32), min 0.75(1), ave 0.912
Test execution time: sum 2961 ms, max 118 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 00:16:15 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-10-28 00:16:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 16 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 20, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 3904 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:16:23 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-10-28 00:16:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 24 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 26, redundant 5
Fitness: max 0.917(33), min 0.667(1), ave 0.903
Test execution time: sum 3372 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:16:30 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-10-28 00:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 25 minutes 33 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 16, redundant 6
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 5113 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:16:40 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-10-28 00:31:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 15, redundant 7
Fitness: max 0.917(50), min 0.583(1), ave 0.903
Test execution time: sum 904843 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:31:49 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-10-28 00:31:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 11, redundant 8
Fitness: max 0.917(43), min 0.583(1), ave 0.873
Test execution time: sum 4610 ms, max 145 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:31:58 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-10-28 00:32:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 0 seconds
Variants: generated 100, build-succeeded 48, build-failed 22, syntax-invalid 20, redundant 10
Fitness: max 1(1), min 0.667(6), ave 0.873
Test execution time: sum 4007 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:32:07 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-10-28 00:32:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 8 seconds
Variants: generated 100, build-succeeded 44, build-failed 26, syntax-invalid 19, redundant 11
Fitness: max 1(2), min 0.667(3), ave 0.898
Test execution time: sum 3767 ms, max 151 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:32:15 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-10-28 00:32:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 16 seconds
Variants: generated 100, build-succeeded 42, build-failed 22, syntax-invalid 23, redundant 13
Fitness: max 1(1), min 0.667(4), ave 0.891
Test execution time: sum 3695 ms, max 144 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:32:23 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-10-28 00:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 24 seconds
Variants: generated 100, build-succeeded 38, build-failed 38, syntax-invalid 19, redundant 5
Fitness: max 0.917(34), min 0.5(3), ave 0.877
Test execution time: sum 3266 ms, max 153 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 00:32:31 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-10-28 00:32:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 33 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 22, redundant 9
Fitness: max 1(1), min 0.917(40), ave 0.919
Test execution time: sum 3858 ms, max 148 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 00:32:40 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-10-28 00:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 43 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 17, redundant 3
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5033 ms, max 120 ms, min 31 ms
----------------------------------------------------------------

2023-10-28 00:32:49 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-10-28 00:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 50 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 25, redundant 8
Fitness: max 0.917(33), min 0.75(1), ave 0.912
Test execution time: sum 3048 ms, max 126 ms, min 30 ms
----------------------------------------------------------------

2023-10-28 00:32:57 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-10-28 00:33:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 41 minutes 58 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 25, redundant 3
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3595 ms, max 133 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 00:33:05 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-10-28 00:33:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 18, syntax-invalid 27, redundant 10
Fitness: max 1(1), min 0.917(44), ave 0.919
Test execution time: sum 4013 ms, max 127 ms, min 67 ms
----------------------------------------------------------------

2023-10-28 00:33:14 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-10-28 00:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 15 seconds
Variants: generated 100, build-succeeded 38, build-failed 24, syntax-invalid 26, redundant 12
Fitness: max 0.917(36), min 0.75(2), ave 0.908
Test execution time: sum 3168 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:33:22 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-10-28 00:33:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 21 seconds
Variants: generated 100, build-succeeded 25, build-failed 32, syntax-invalid 32, redundant 11
Fitness: max 0.917(23), min 0.75(2), ave 0.903
Test execution time: sum 2301 ms, max 142 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:33:28 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-10-28 00:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 29 seconds
Variants: generated 100, build-succeeded 34, build-failed 23, syntax-invalid 35, redundant 8
Fitness: max 0.917(33), min 0.75(1), ave 0.912
Test execution time: sum 3259 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:33:36 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-10-28 00:33:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 36 seconds
Variants: generated 100, build-succeeded 31, build-failed 27, syntax-invalid 33, redundant 9
Fitness: max 0.917(30), min 0.75(1), ave 0.911
Test execution time: sum 2762 ms, max 132 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:33:43 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-10-28 00:33:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 43 seconds
Variants: generated 100, build-succeeded 27, build-failed 28, syntax-invalid 32, redundant 13
Fitness: max 0.917(26), min 0.75(1), ave 0.91
Test execution time: sum 2503 ms, max 125 ms, min 33 ms
----------------------------------------------------------------

2023-10-28 00:33:50 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-10-28 00:33:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 51 seconds
Variants: generated 100, build-succeeded 33, build-failed 30, syntax-invalid 30, redundant 7
Fitness: max 0.917(32), min 0.75(1), ave 0.912
Test execution time: sum 3058 ms, max 136 ms, min 33 ms
----------------------------------------------------------------

2023-10-28 00:33:58 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-10-28 00:34:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 42 minutes 59 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 30, redundant 4
Fitness: max 0.917(35), min 0.75(2), ave 0.908
Test execution time: sum 3181 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:34:06 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-10-28 00:58:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 8 seconds
Variants: generated 100, build-succeeded 42, build-failed 27, syntax-invalid 19, redundant 12
Fitness: max 0.917(40), min 0.333(1), ave 0.901
Test execution time: sum 1443720 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:58:15 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-10-28 00:58:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 17 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 21, redundant 6
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3557 ms, max 117 ms, min 30 ms
----------------------------------------------------------------

2023-10-28 00:58:24 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-10-28 00:58:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 25 seconds
Variants: generated 100, build-succeeded 40, build-failed 18, syntax-invalid 35, redundant 7
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3761 ms, max 138 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 00:58:32 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-10-28 00:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 34 seconds
Variants: generated 100, build-succeeded 40, build-failed 19, syntax-invalid 33, redundant 8
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3562 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:58:41 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-10-28 00:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 41 seconds
Variants: generated 100, build-succeeded 30, build-failed 24, syntax-invalid 37, redundant 9
Fitness: max 0.917(27), min 0.75(3), ave 0.9
Test execution time: sum 2558 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:58:48 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-10-28 00:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 49 seconds
Variants: generated 100, build-succeeded 37, build-failed 27, syntax-invalid 33, redundant 3
Fitness: max 0.917(34), min 0.75(3), ave 0.903
Test execution time: sum 3027 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 00:58:56 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-10-28 00:59:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 58 seconds
Variants: generated 100, build-succeeded 37, build-failed 33, syntax-invalid 24, redundant 6
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 3142 ms, max 132 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 00:59:05 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-10-28 00:59:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 5 seconds
Variants: generated 100, build-succeeded 33, build-failed 23, syntax-invalid 32, redundant 12
Fitness: max 0.917(32), min 0.75(1), ave 0.912
Test execution time: sum 2748 ms, max 110 ms, min 32 ms
----------------------------------------------------------------

2023-10-28 00:59:12 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-10-28 00:59:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 14 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 29, redundant 4
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 3101 ms, max 126 ms, min 36 ms
----------------------------------------------------------------

2023-10-28 00:59:21 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-10-28 00:59:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 24 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 19, redundant 6
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4010 ms, max 139 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 00:59:30 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-10-28 00:59:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 23, redundant 2
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4687 ms, max 148 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 00:59:41 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-10-28 00:59:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 44 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 23, redundant 3
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4280 ms, max 126 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 00:59:51 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-10-28 01:00:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 54 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 22, redundant 4
Fitness: max 1(1), min 0.917(42), ave 0.919
Test execution time: sum 4293 ms, max 143 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:00:01 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-10-28 01:00:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 3 seconds
Variants: generated 100, build-succeeded 35, build-failed 35, syntax-invalid 24, redundant 6
Fitness: max 0.917(34), min 0.75(1), ave 0.912
Test execution time: sum 3611 ms, max 153 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:00:10 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-10-28 01:00:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 14 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 19, redundant 5
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4790 ms, max 154 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 01:00:21 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-10-28 01:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 25 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 21, redundant 4
Fitness: max 1(2), min 0.5(1), ave 0.91
Test execution time: sum 5169 ms, max 137 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:00:32 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-10-28 01:00:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 36 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 23, redundant 2
Fitness: max 1(1), min 0.75(3), ave 0.907
Test execution time: sum 4443 ms, max 139 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:00:43 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-10-28 01:00:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 45 seconds
Variants: generated 100, build-succeeded 39, build-failed 27, syntax-invalid 26, redundant 8
Fitness: max 0.917(38), min 0.75(1), ave 0.912
Test execution time: sum 3949 ms, max 136 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:00:52 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-10-28 01:01:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 56 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 23, redundant 1
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4890 ms, max 160 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 01:01:03 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-10-28 01:01:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 7 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 21, redundant 5
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4718 ms, max 157 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 01:01:14 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-10-28 01:16:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 17 seconds
Variants: generated 100, build-succeeded 37, build-failed 38, syntax-invalid 23, redundant 2
Fitness: max 0.917(35), min 0.583(1), ave 0.903
Test execution time: sum 903486 ms, max 900023 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:16:24 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-10-28 01:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 29 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 15, redundant 5
Fitness: max 0.917(48), min 0.667(1), ave 0.912
Test execution time: sum 4829 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:16:35 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-10-28 01:16:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 38 seconds
Variants: generated 100, build-succeeded 37, build-failed 29, syntax-invalid 26, redundant 8
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 3631 ms, max 126 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 01:16:45 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-10-28 01:16:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 25 minutes 49 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 21, redundant 7
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4282 ms, max 136 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 01:16:56 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-10-28 01:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 20, redundant 3
Fitness: max 0.917(46), min 0.75(3), ave 0.906
Test execution time: sum 4885 ms, max 153 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:17:08 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-10-28 01:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 12 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 19, redundant 6
Fitness: max 0.917(44), min 0.75(3), ave 0.906
Test execution time: sum 4790 ms, max 158 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:17:19 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-10-28 01:17:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 24 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 16, redundant 11
Fitness: max 0.917(45), min 0(1), ave 0.894
Test execution time: sum 4955 ms, max 131 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 01:17:31 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-10-28 01:17:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 37 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 11, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 5800 ms, max 142 ms, min 37 ms
----------------------------------------------------------------

2023-10-28 01:17:44 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-10-28 01:17:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 26 minutes 49 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 16, redundant 6
Fitness: max 0.917(46), min 0.75(2), ave 0.91
Test execution time: sum 5024 ms, max 157 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:17:56 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-10-28 01:18:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 1 seconds
Variants: generated 100, build-succeeded 43, build-failed 37, syntax-invalid 17, redundant 3
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4774 ms, max 152 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 01:18:08 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-10-28 01:18:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 13 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 16, redundant 1
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 5063 ms, max 147 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 01:18:20 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-10-28 01:18:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 19, redundant 4
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5684 ms, max 154 ms, min 85 ms
----------------------------------------------------------------

2023-10-28 01:18:33 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-10-28 01:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 38 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 26, redundant 1
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 4978 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:18:45 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-10-28 01:18:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 27 minutes 52 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 6526 ms, max 171 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:18:59 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-10-28 01:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 5 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 18, redundant 2
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4813 ms, max 133 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 01:19:11 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-10-28 01:19:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 16 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 19, redundant 4
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4549 ms, max 133 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 01:19:23 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-10-28 01:19:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 29 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 16, redundant 6
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 5339 ms, max 140 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:19:36 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-10-28 01:19:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 42 seconds
Variants: generated 100, build-succeeded 43, build-failed 40, syntax-invalid 14, redundant 3
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4624 ms, max 142 ms, min 29 ms
----------------------------------------------------------------

2023-10-28 01:19:48 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-10-28 01:20:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 28 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 11, redundant 5
Fitness: max 1(2), min 0.917(54), ave 0.92
Test execution time: sum 6234 ms, max 162 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 01:20:03 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-10-28 01:20:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 9 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 16, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 5640 ms, max 140 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 01:20:16 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-10-28 01:20:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 22 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 5488 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:20:29 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-10-28 01:20:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 29 minutes 36 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 14, redundant 5
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 5949 ms, max 151 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:20:43 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-10-28 01:38:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 47 minutes 49 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 13, redundant 5
Fitness: max 0.917(47), min 0.5(1), ave 0.905
Test execution time: sum 1085336 ms, max 1080022 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:38:56 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-10-28 01:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 2 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 15, redundant 4
Fitness: max 0.917(47), min 0.333(1), ave 0.901
Test execution time: sum 5051 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:39:09 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-10-28 01:39:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 18 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 5, redundant 9
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 6640 ms, max 146 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 01:39:25 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-10-28 01:39:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 32 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 10, redundant 6
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 5999 ms, max 135 ms, min 35 ms
----------------------------------------------------------------

2023-10-28 01:39:39 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-10-28 01:39:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 48 minutes 47 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 6, redundant 5
Fitness: max 0.917(58), min 0.75(2), ave 0.911
Test execution time: sum 6224 ms, max 153 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:39:54 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-10-28 01:40:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 22, syntax-invalid 13, redundant 7
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 6000 ms, max 129 ms, min 39 ms
----------------------------------------------------------------

2023-10-28 01:40:08 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-10-28 01:40:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 15 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.75(2), ave 0.91
Test execution time: sum 5585 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:40:22 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-10-28 01:40:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 28 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 20, redundant 5
Fitness: max 1(1), min 0.75(3), ave 0.908
Test execution time: sum 4961 ms, max 140 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:40:35 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-10-28 01:40:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 41 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 16, redundant 4
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 5216 ms, max 162 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:40:48 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-10-28 01:41:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 49 minutes 56 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 13, redundant 4
Fitness: max 0.917(53), min 0(1), ave 0.897
Test execution time: sum 5742 ms, max 152 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 01:41:02 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-10-28 01:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 11 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 9, redundant 3
Fitness: max 0.917(60), min 0.75(3), ave 0.909
Test execution time: sum 6387 ms, max 140 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:41:17 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-10-28 01:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 24 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 15, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 5380 ms, max 132 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 01:41:31 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-10-28 01:41:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 39 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0.917(59), min 0.333(1), ave 0.907
Test execution time: sum 6025 ms, max 138 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 01:41:46 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-10-28 01:41:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 50 minutes 52 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 20, redundant 0
Fitness: max 0.917(49), min 0.5(1), ave 0.896
Test execution time: sum 5450 ms, max 564 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:41:59 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-10-28 01:42:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 5 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 20, redundant 4
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4936 ms, max 124 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 01:42:12 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-10-28 01:42:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 18 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 22, redundant 3
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4580 ms, max 133 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 01:42:24 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-10-28 01:42:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 18, redundant 3
Fitness: max 0.917(48), min 0.75(2), ave 0.91
Test execution time: sum 4943 ms, max 154 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:42:38 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-10-28 01:42:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 44 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 17, redundant 2
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4914 ms, max 145 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:42:51 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-10-28 01:43:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 51 minutes 57 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 18, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4892 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:43:04 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-10-28 01:43:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 11 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 16, redundant 7
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4974 ms, max 141 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 01:43:18 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-10-28 01:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 24 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 24, redundant 2
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4527 ms, max 141 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:43:30 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-10-28 01:43:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 22, redundant 3
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4708 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:43:43 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-10-28 01:43:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 52 minutes 48 seconds
Variants: generated 100, build-succeeded 37, build-failed 26, syntax-invalid 28, redundant 9
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 3636 ms, max 143 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:43:55 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-10-28 01:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 1 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 19, redundant 7
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4521 ms, max 132 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 01:44:08 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-10-28 01:44:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 13 seconds
Variants: generated 100, build-succeeded 43, build-failed 28, syntax-invalid 24, redundant 5
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4063 ms, max 126 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 01:44:20 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-10-28 01:44:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 26 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 18, redundant 5
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4608 ms, max 127 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:44:33 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-10-28 01:44:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 38 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 25, redundant 2
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3718 ms, max 131 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:44:45 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-10-28 01:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 53 minutes 49 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 26, redundant 5
Fitness: max 0.917(34), min 0.75(1), ave 0.912
Test execution time: sum 3477 ms, max 144 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:44:56 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-10-28 01:45:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 1 seconds
Variants: generated 100, build-succeeded 40, build-failed 25, syntax-invalid 29, redundant 6
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 3702 ms, max 126 ms, min 37 ms
----------------------------------------------------------------

2023-10-28 01:45:08 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-10-28 01:45:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 15 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 18, redundant 2
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4824 ms, max 137 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 01:45:22 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-10-28 01:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 27 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 25, redundant 6
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3893 ms, max 136 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 01:45:34 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-10-28 01:45:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 39 seconds
Variants: generated 100, build-succeeded 41, build-failed 21, syntax-invalid 32, redundant 6
Fitness: max 0.917(39), min 0(1), ave 0.89
Test execution time: sum 3956 ms, max 129 ms, min 21 ms
----------------------------------------------------------------

2023-10-28 01:45:46 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-10-28 01:45:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 54 minutes 51 seconds
Variants: generated 100, build-succeeded 42, build-failed 24, syntax-invalid 29, redundant 5
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4092 ms, max 125 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 01:45:58 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-10-28 01:46:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 2 seconds
Variants: generated 100, build-succeeded 33, build-failed 32, syntax-invalid 32, redundant 3
Fitness: max 0.917(33), min 0.917(33), ave 0.917
Test execution time: sum 3230 ms, max 146 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 01:46:09 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-10-28 01:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 14 seconds
Variants: generated 100, build-succeeded 38, build-failed 30, syntax-invalid 30, redundant 2
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3697 ms, max 128 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 01:46:21 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-10-28 01:46:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 26 seconds
Variants: generated 100, build-succeeded 38, build-failed 29, syntax-invalid 28, redundant 5
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3552 ms, max 113 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 01:46:32 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-10-28 01:46:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 37 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 29, redundant 4
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 3474 ms, max 119 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 01:46:44 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-10-28 01:46:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 55 minutes 49 seconds
Variants: generated 100, build-succeeded 39, build-failed 28, syntax-invalid 31, redundant 2
Fitness: max 0.917(36), min 0.75(2), ave 0.906
Test execution time: sum 3488 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:46:56 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-10-28 01:47:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 0 seconds
Variants: generated 100, build-succeeded 34, build-failed 25, syntax-invalid 30, redundant 11
Fitness: max 0.917(31), min 0.667(2), ave 0.9
Test execution time: sum 2975 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:47:07 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-10-28 01:47:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 10 seconds
Variants: generated 100, build-succeeded 29, build-failed 25, syntax-invalid 41, redundant 5
Fitness: max 0.917(27), min 0.667(1), ave 0.902
Test execution time: sum 2556 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:47:17 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-10-28 01:47:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 20 seconds
Variants: generated 100, build-succeeded 22, build-failed 37, syntax-invalid 39, redundant 2
Fitness: max 1(1), min 0.917(21), ave 0.92
Test execution time: sum 2110 ms, max 138 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 01:47:27 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-10-28 01:47:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 32 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 30, redundant 3
Fitness: max 0.917(33), min 0.333(1), ave 0.9
Test execution time: sum 3191 ms, max 124 ms, min 46 ms
----------------------------------------------------------------

2023-10-28 01:47:39 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-10-28 01:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 43 seconds
Variants: generated 100, build-succeeded 34, build-failed 31, syntax-invalid 33, redundant 2
Fitness: max 0.917(32), min 0.75(1), ave 0.909
Test execution time: sum 3035 ms, max 114 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:47:50 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-10-28 01:48:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 56 minutes 55 seconds
Variants: generated 100, build-succeeded 36, build-failed 27, syntax-invalid 34, redundant 3
Fitness: max 0.917(35), min 0.667(1), ave 0.91
Test execution time: sum 3223 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 01:48:02 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-10-28 01:48:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 7 seconds
Variants: generated 100, build-succeeded 33, build-failed 29, syntax-invalid 32, redundant 6
Fitness: max 0.917(33), min 0.917(33), ave 0.917
Test execution time: sum 3080 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 01:48:14 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-10-28 01:48:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 19 seconds
Variants: generated 100, build-succeeded 34, build-failed 30, syntax-invalid 31, redundant 5
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 3041 ms, max 114 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 01:48:26 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-10-28 01:48:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 31 seconds
Variants: generated 100, build-succeeded 36, build-failed 24, syntax-invalid 32, redundant 8
Fitness: max 0.917(36), min 0.917(36), ave 0.917
Test execution time: sum 3352 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 01:48:37 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-10-28 01:48:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 42 seconds
Variants: generated 100, build-succeeded 31, build-failed 30, syntax-invalid 34, redundant 5
Fitness: max 0.917(31), min 0.917(31), ave 0.917
Test execution time: sum 2675 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:48:49 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-10-28 01:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 57 minutes 53 seconds
Variants: generated 100, build-succeeded 28, build-failed 36, syntax-invalid 34, redundant 2
Fitness: max 0.917(28), min 0.917(28), ave 0.917
Test execution time: sum 2398 ms, max 127 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:49:00 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-10-28 01:49:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 7 seconds
Variants: generated 100, build-succeeded 42, build-failed 25, syntax-invalid 27, redundant 6
Fitness: max 0.917(41), min 0.75(1), ave 0.913
Test execution time: sum 3672 ms, max 108 ms, min 36 ms
----------------------------------------------------------------

2023-10-28 01:49:14 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-10-28 01:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 20 seconds
Variants: generated 100, build-succeeded 38, build-failed 26, syntax-invalid 29, redundant 7
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3499 ms, max 118 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 01:49:27 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-10-28 01:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 33 seconds
Variants: generated 100, build-succeeded 41, build-failed 31, syntax-invalid 25, redundant 3
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 3717 ms, max 127 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 01:49:40 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-10-28 01:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 58 minutes 46 seconds
Variants: generated 100, build-succeeded 39, build-failed 29, syntax-invalid 29, redundant 3
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3522 ms, max 131 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 01:49:53 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-10-28 02:14:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 22 minutes 59 seconds
Variants: generated 100, build-succeeded 40, build-failed 30, syntax-invalid 26, redundant 4
Fitness: max 0.917(38), min 0.333(1), ave 0.898
Test execution time: sum 1443457 ms, max 1440021 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 02:14:06 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-10-28 02:38:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 12 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 27, redundant 4
Fitness: max 0.917(37), min 0.333(1), ave 0.901
Test execution time: sum 1443423 ms, max 1440022 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 02:38:18 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-10-28 02:38:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 25 seconds
Variants: generated 100, build-succeeded 42, build-failed 24, syntax-invalid 28, redundant 6
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3850 ms, max 127 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 02:38:32 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-10-28 02:38:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 37 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 29, redundant 3
Fitness: max 0.917(34), min 0.667(2), ave 0.903
Test execution time: sum 3306 ms, max 143 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:38:44 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-10-28 02:38:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 47 minutes 51 seconds
Variants: generated 100, build-succeeded 43, build-failed 28, syntax-invalid 25, redundant 4
Fitness: max 0.917(42), min 0.667(1), ave 0.911
Test execution time: sum 3934 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:38:58 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-10-28 02:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 3 seconds
Variants: generated 100, build-succeeded 35, build-failed 27, syntax-invalid 32, redundant 6
Fitness: max 0.917(34), min 0.667(1), ave 0.91
Test execution time: sum 3222 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:39:10 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-10-28 02:39:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 16 seconds
Variants: generated 100, build-succeeded 29, build-failed 36, syntax-invalid 29, redundant 6
Fitness: max 0.917(27), min 0.667(2), ave 0.899
Test execution time: sum 2760 ms, max 170 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:39:22 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-10-28 02:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 30 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 20, redundant 3
Fitness: max 0.917(40), min 0.667(2), ave 0.901
Test execution time: sum 3889 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:39:37 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-10-28 02:39:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 44 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 23, redundant 8
Fitness: max 0.917(33), min 0.667(2), ave 0.902
Test execution time: sum 3005 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:39:51 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-10-28 02:40:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 48 minutes 59 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 21, redundant 7
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4166 ms, max 123 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 02:40:05 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-10-28 02:40:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 12 seconds
Variants: generated 100, build-succeeded 36, build-failed 34, syntax-invalid 28, redundant 2
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 3145 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:40:19 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-10-28 02:40:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 26 seconds
Variants: generated 100, build-succeeded 39, build-failed 32, syntax-invalid 23, redundant 6
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3510 ms, max 128 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 02:40:33 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-10-28 02:40:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 42 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 15, redundant 7
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4749 ms, max 136 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 02:40:49 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-10-28 02:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 49 minutes 58 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 22, redundant 4
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4429 ms, max 129 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 02:41:04 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-10-28 02:41:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 50 minutes 12 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 23, redundant 5
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4147 ms, max 130 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 02:41:19 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-10-28 02:41:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 50 minutes 25 seconds
Variants: generated 100, build-succeeded 34, build-failed 34, syntax-invalid 32, redundant 0
Fitness: max 0.917(31), min 0.75(3), ave 0.902
Test execution time: sum 3086 ms, max 131 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:41:32 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-10-28 02:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 50 minutes 40 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 20, redundant 4
Fitness: max 0.917(46), min 0.833(1), ave 0.915
Test execution time: sum 4330 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:41:47 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-10-28 02:42:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 50 minutes 54 seconds
Variants: generated 100, build-succeeded 38, build-failed 30, syntax-invalid 26, redundant 6
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3539 ms, max 135 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 02:42:01 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-10-28 02:42:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 hours 51 minutes 9 seconds
Variants: generated 100, build-succeeded 38, build-failed 38, syntax-invalid 21, redundant 3
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3719 ms, max 132 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 02:42:16 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-10-28 02:57:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 25 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 0.917(48), min 0.583(1), ave 0.91
Test execution time: sum 904578 ms, max 900023 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 02:57:32 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-10-28 02:57:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 19, redundant 2
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4789 ms, max 111 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 02:57:49 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-10-28 02:58:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 6 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 15, redundant 2
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4934 ms, max 131 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 02:58:06 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-10-28 02:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 14 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 22, redundant 5
Fitness: max 0.917(41), min 0.75(2), ave 0.909
Test execution time: sum 3829 ms, max 138 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 02:58:21 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-10-28 02:58:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 31 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 17, redundant 4
Fitness: max 0.917(54), min 0.333(1), ave 0.903
Test execution time: sum 4880 ms, max 127 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 02:58:38 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-10-28 02:58:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 7 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 17, redundant 6
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4410 ms, max 149 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 02:58:54 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-10-28 02:59:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 3 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 20, redundant 5
Fitness: max 0.917(44), min 0.75(1), ave 0.913
Test execution time: sum 4222 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 02:59:10 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-10-28 02:59:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 19 seconds
Variants: generated 100, build-succeeded 43, build-failed 28, syntax-invalid 25, redundant 4
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 3925 ms, max 128 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 02:59:26 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-10-28 02:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 35 seconds
Variants: generated 100, build-succeeded 51, build-failed 23, syntax-invalid 17, redundant 9
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4661 ms, max 119 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 02:59:42 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-10-28 02:59:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 8 minutes 52 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 22, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4446 ms, max 136 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 02:59:59 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-10-28 03:00:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 9 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 20, redundant 4
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4504 ms, max 128 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:00:15 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-10-28 03:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 15, redundant 8
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4952 ms, max 144 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:00:33 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-10-28 03:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 9 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 18, redundant 3
Fitness: max 0.917(50), min 0.75(2), ave 0.909
Test execution time: sum 4638 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:00:51 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-10-28 03:01:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 1 seconds
Variants: generated 100, build-succeeded 52, build-failed 22, syntax-invalid 22, redundant 4
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4959 ms, max 132 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:01:08 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-10-28 03:01:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 18 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 19, redundant 5
Fitness: max 1(1), min 0.917(46), ave 0.918
Test execution time: sum 4468 ms, max 137 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:01:25 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-10-28 03:01:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 17, redundant 7
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4530 ms, max 131 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:01:42 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-10-28 03:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 10 minutes 51 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 20, redundant 7
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 4044 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:01:58 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-10-28 03:02:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 8 seconds
Variants: generated 100, build-succeeded 43, build-failed 24, syntax-invalid 21, redundant 12
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 3767 ms, max 132 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:02:14 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-10-28 03:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 26 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 17, redundant 5
Fitness: max 0.917(52), min 0.583(1), ave 0.91
Test execution time: sum 4596 ms, max 112 ms, min 42 ms
----------------------------------------------------------------

2023-10-28 03:02:33 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-10-28 03:02:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 42 seconds
Variants: generated 100, build-succeeded 44, build-failed 33, syntax-invalid 21, redundant 2
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 3921 ms, max 131 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:02:49 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-10-28 03:03:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 11 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 19, redundant 5
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4026 ms, max 111 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:03:06 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-10-28 03:03:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 16 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 21, redundant 4
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 3916 ms, max 116 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:03:23 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-10-28 03:03:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 32 seconds
Variants: generated 100, build-succeeded 40, build-failed 31, syntax-invalid 23, redundant 6
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3410 ms, max 130 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:03:39 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-10-28 03:03:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 12 minutes 50 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 17, redundant 8
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4364 ms, max 109 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:03:57 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-10-28 03:04:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 8 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 15, redundant 4
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4627 ms, max 126 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:04:15 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-10-28 03:04:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 27 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 13, redundant 2
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 4941 ms, max 123 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 03:04:34 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-10-28 03:04:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 13 minutes 43 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 25, redundant 6
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3559 ms, max 130 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 03:04:50 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-10-28 03:05:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 23, syntax-invalid 18, redundant 6
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4903 ms, max 124 ms, min 68 ms
----------------------------------------------------------------

2023-10-28 03:05:09 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-10-28 03:05:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 21 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 19, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4686 ms, max 137 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:05:28 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-10-28 03:05:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 37 seconds
Variants: generated 100, build-succeeded 37, build-failed 26, syntax-invalid 28, redundant 9
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 3565 ms, max 121 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 03:05:44 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-10-28 03:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 14 minutes 55 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 19, redundant 7
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4703 ms, max 130 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 03:06:02 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-10-28 03:06:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 13 seconds
Variants: generated 100, build-succeeded 46, build-failed 26, syntax-invalid 21, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4509 ms, max 127 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:06:20 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-10-28 03:06:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 32 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 19, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4906 ms, max 138 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:06:39 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-10-28 03:06:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 15 minutes 51 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 19, redundant 6
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 5083 ms, max 130 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 03:06:58 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-10-28 03:07:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 9 seconds
Variants: generated 100, build-succeeded 50, build-failed 22, syntax-invalid 27, redundant 1
Fitness: max 0.917(48), min 0.75(2), ave 0.91
Test execution time: sum 4978 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:07:16 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-10-28 03:07:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 28 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 19, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4678 ms, max 143 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 03:07:35 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-10-28 03:07:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 16 minutes 45 seconds
Variants: generated 100, build-succeeded 36, build-failed 32, syntax-invalid 27, redundant 5
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 3594 ms, max 157 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:07:52 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-10-28 03:08:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 3 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 23, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4481 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:08:10 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-10-28 03:08:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 22 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 21, redundant 1
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4545 ms, max 137 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:08:29 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-10-28 03:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 40 seconds
Variants: generated 100, build-succeeded 44, build-failed 27, syntax-invalid 23, redundant 6
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4111 ms, max 130 ms, min 70 ms
----------------------------------------------------------------

2023-10-28 03:08:47 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-10-28 03:09:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 17 minutes 57 seconds
Variants: generated 100, build-succeeded 42, build-failed 26, syntax-invalid 25, redundant 7
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3971 ms, max 133 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:09:04 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-10-28 03:09:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 14 seconds
Variants: generated 100, build-succeeded 36, build-failed 29, syntax-invalid 30, redundant 5
Fitness: max 0.917(35), min 0.75(1), ave 0.912
Test execution time: sum 3458 ms, max 130 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:09:21 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-10-28 03:09:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 32 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 24, redundant 3
Fitness: max 0.917(46), min 0.833(1), ave 0.915
Test execution time: sum 4497 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:09:39 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-10-28 03:09:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 18 minutes 49 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 27, redundant 3
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 3734 ms, max 131 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:09:56 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-10-28 03:10:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 8 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 21, redundant 5
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4858 ms, max 132 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:10:15 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-10-28 03:10:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 27 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 24, redundant 3
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4455 ms, max 134 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:10:34 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-10-28 03:10:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 19 minutes 46 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 20, redundant 5
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4478 ms, max 124 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:10:53 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-10-28 03:11:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 3 seconds
Variants: generated 100, build-succeeded 38, build-failed 33, syntax-invalid 24, redundant 5
Fitness: max 0.917(37), min 0.75(1), ave 0.912
Test execution time: sum 3422 ms, max 136 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:11:10 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-10-28 03:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 25, redundant 6
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3912 ms, max 126 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:11:28 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-10-28 03:11:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 20 minutes 40 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 18, redundant 9
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 4234 ms, max 132 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:11:47 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-10-28 03:12:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 0 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 17, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4384 ms, max 130 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 03:12:07 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-10-28 03:12:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 17 seconds
Variants: generated 100, build-succeeded 35, build-failed 36, syntax-invalid 21, redundant 8
Fitness: max 0.917(35), min 0.917(35), ave 0.917
Test execution time: sum 3416 ms, max 142 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:12:24 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-10-28 03:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 37 seconds
Variants: generated 100, build-succeeded 41, build-failed 38, syntax-invalid 16, redundant 5
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 4050 ms, max 137 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 03:12:44 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-10-28 03:13:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 21 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 17, redundant 3
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 5224 ms, max 146 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 03:13:04 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-10-28 03:13:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 22 minutes 19 seconds
Variants: generated 100, build-succeeded 56, build-failed 20, syntax-invalid 12, redundant 12
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5828 ms, max 135 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 03:13:26 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-10-28 03:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 22 minutes 41 seconds
Variants: generated 100, build-succeeded 51, build-failed 34, syntax-invalid 10, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5437 ms, max 137 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 03:13:48 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-10-28 03:14:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 1 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 17, redundant 8
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4164 ms, max 129 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 03:14:07 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-10-28 03:14:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 20 seconds
Variants: generated 100, build-succeeded 39, build-failed 36, syntax-invalid 19, redundant 6
Fitness: max 0.917(39), min 0.917(39), ave 0.917
Test execution time: sum 4137 ms, max 136 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 03:14:27 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-10-28 03:14:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 23 minutes 41 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 15, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5248 ms, max 146 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 03:14:48 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-10-28 03:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 1 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 19, redundant 2
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4629 ms, max 121 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:15:08 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-10-28 03:15:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 21 seconds
Variants: generated 100, build-succeeded 47, build-failed 25, syntax-invalid 20, redundant 8
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4887 ms, max 133 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:15:28 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-10-28 03:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 24 minutes 44 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 13, redundant 4
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5427 ms, max 140 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:15:51 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-10-28 03:16:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 17, redundant 1
Fitness: max 0.917(52), min 0.833(1), ave 0.915
Test execution time: sum 5721 ms, max 140 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:16:13 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-10-28 03:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 28 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 17, redundant 4
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 5775 ms, max 146 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 03:16:35 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-10-28 03:16:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 25 minutes 52 seconds
Variants: generated 100, build-succeeded 64, build-failed 21, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.917(63), ave 0.918
Test execution time: sum 6972 ms, max 136 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 03:16:59 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-10-28 03:17:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 15 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5558 ms, max 148 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 03:17:21 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-10-28 03:17:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 35 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 21, redundant 4
Fitness: max 0.917(43), min 0.75(2), ave 0.909
Test execution time: sum 4815 ms, max 138 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:17:42 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-10-28 03:18:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 26 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 16, redundant 2
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 6614 ms, max 143 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:18:05 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-10-28 03:18:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 22 seconds
Variants: generated 100, build-succeeded 59, build-failed 22, syntax-invalid 13, redundant 6
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 6829 ms, max 143 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:18:29 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-10-28 03:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 27 minutes 44 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 19, redundant 4
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 5820 ms, max 149 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 03:18:51 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-10-28 03:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 6 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 20, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 5741 ms, max 164 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 03:19:13 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-10-28 03:19:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 18, redundant 6
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 6205 ms, max 160 ms, min 90 ms
----------------------------------------------------------------

2023-10-28 03:19:35 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-10-28 03:19:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 28 minutes 52 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 12, redundant 6
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 5672 ms, max 153 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:19:59 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-10-28 03:35:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 44 minutes 18 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 10, redundant 1
Fitness: max 0.917(61), min 0.583(1), ave 0.911
Test execution time: sum 907264 ms, max 900027 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 03:35:24 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-10-28 03:35:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 44 minutes 39 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 20, redundant 7
Fitness: max 1(1), min 0.75(1), ave 0.913
Test execution time: sum 5759 ms, max 154 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:35:46 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-10-28 03:36:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 14, redundant 8
Fitness: max 0.917(53), min 0.833(1), ave 0.915
Test execution time: sum 6415 ms, max 503 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 03:36:10 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-10-28 03:36:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 17, redundant 7
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5570 ms, max 145 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 03:36:33 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-10-28 03:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 45 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 15, redundant 8
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 5902 ms, max 149 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:36:56 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-10-28 03:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 46 minutes 10 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 18, redundant 4
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4961 ms, max 134 ms, min 85 ms
----------------------------------------------------------------

2023-10-28 03:37:17 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-10-28 03:37:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 46 minutes 32 seconds
Variants: generated 100, build-succeeded 52, build-failed 21, syntax-invalid 21, redundant 6
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 5776 ms, max 137 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 03:37:39 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-10-28 03:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 46 minutes 53 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 25, redundant 2
Fitness: max 1(1), min 0.917(45), ave 0.918
Test execution time: sum 4924 ms, max 131 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:38:00 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-10-28 03:38:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 47 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 17, redundant 3
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 5296 ms, max 146 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 03:38:22 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-10-28 03:38:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 47 minutes 37 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 19, redundant 3
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4855 ms, max 148 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:38:44 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-10-28 03:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 47 minutes 57 seconds
Variants: generated 100, build-succeeded 43, build-failed 28, syntax-invalid 28, redundant 1
Fitness: max 0.917(41), min 0.75(2), ave 0.909
Test execution time: sum 4152 ms, max 128 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:39:03 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-10-28 03:39:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 17 seconds
Variants: generated 100, build-succeeded 40, build-failed 24, syntax-invalid 22, redundant 14
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 4051 ms, max 130 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:39:24 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-10-28 03:39:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 20, syntax-invalid 23, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5127 ms, max 129 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 03:39:45 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-10-28 03:40:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 48 minutes 57 seconds
Variants: generated 100, build-succeeded 35, build-failed 26, syntax-invalid 27, redundant 12
Fitness: max 0.917(35), min 0.917(35), ave 0.917
Test execution time: sum 3337 ms, max 128 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:40:04 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-10-28 03:40:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 18 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 20, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4349 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 03:40:25 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-10-28 03:40:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 38 seconds
Variants: generated 100, build-succeeded 43, build-failed 20, syntax-invalid 27, redundant 10
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4204 ms, max 128 ms, min 69 ms
----------------------------------------------------------------

2023-10-28 03:40:44 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-10-28 03:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 49 minutes 57 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 27, redundant 3
Fitness: max 0.917(37), min 0.667(1), ave 0.91
Test execution time: sum 3779 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:41:04 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-10-28 03:41:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 16 seconds
Variants: generated 100, build-succeeded 36, build-failed 31, syntax-invalid 27, redundant 6
Fitness: max 0.917(35), min 0.667(1), ave 0.91
Test execution time: sum 3571 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:41:23 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-10-28 03:41:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 37 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 22, redundant 10
Fitness: max 0.917(39), min 0.667(1), ave 0.91
Test execution time: sum 3900 ms, max 132 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:41:43 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-10-28 03:42:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 50 minutes 57 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 25, redundant 6
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 4282 ms, max 129 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 03:42:04 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-10-28 03:42:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 19 seconds
Variants: generated 100, build-succeeded 46, build-failed 24, syntax-invalid 23, redundant 7
Fitness: max 0.917(44), min 0.667(2), ave 0.906
Test execution time: sum 4705 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:42:26 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-10-28 03:42:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 38 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 29, redundant 2
Fitness: max 0.917(36), min 0.667(1), ave 0.91
Test execution time: sum 3805 ms, max 144 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:42:45 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-10-28 03:43:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 51 minutes 58 seconds
Variants: generated 100, build-succeeded 37, build-failed 26, syntax-invalid 28, redundant 9
Fitness: max 0.917(37), min 0.917(37), ave 0.917
Test execution time: sum 4122 ms, max 142 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 03:43:05 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-10-28 03:43:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 20 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 23, redundant 5
Fitness: max 0.917(44), min 0.75(1), ave 0.913
Test execution time: sum 4944 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:43:27 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-10-28 03:43:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 52 minutes 42 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 23, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 5137 ms, max 128 ms, min 85 ms
----------------------------------------------------------------

2023-10-28 03:43:49 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-10-28 03:44:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 2 seconds
Variants: generated 100, build-succeeded 38, build-failed 31, syntax-invalid 27, redundant 4
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 4011 ms, max 122 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 03:44:09 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-10-28 03:44:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 27, redundant 2
Fitness: max 0.917(36), min 0.917(36), ave 0.917
Test execution time: sum 4099 ms, max 171 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 03:44:29 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-10-28 03:44:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 53 minutes 43 seconds
Variants: generated 100, build-succeeded 40, build-failed 23, syntax-invalid 31, redundant 6
Fitness: max 0.917(39), min 0.833(1), ave 0.915
Test execution time: sum 4370 ms, max 133 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:44:50 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-10-28 03:45:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 2 seconds
Variants: generated 100, build-succeeded 34, build-failed 26, syntax-invalid 33, redundant 7
Fitness: max 0.917(33), min 0.75(1), ave 0.912
Test execution time: sum 3436 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:45:09 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-10-28 03:45:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 23 seconds
Variants: generated 100, build-succeeded 38, build-failed 27, syntax-invalid 27, redundant 8
Fitness: max 0.917(37), min 0.833(1), ave 0.914
Test execution time: sum 4052 ms, max 130 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:45:29 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-10-28 03:45:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 54 minutes 45 seconds
Variants: generated 100, build-succeeded 43, build-failed 27, syntax-invalid 23, redundant 7
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4671 ms, max 130 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 03:45:51 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-10-28 03:46:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 6 seconds
Variants: generated 100, build-succeeded 40, build-failed 27, syntax-invalid 26, redundant 7
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 4367 ms, max 139 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:46:13 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-10-28 03:46:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 29 seconds
Variants: generated 100, build-succeeded 46, build-failed 26, syntax-invalid 19, redundant 9
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4998 ms, max 137 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:46:36 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-10-28 03:46:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 55 minutes 53 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 19, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5312 ms, max 137 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 03:46:59 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-10-28 03:47:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 14 seconds
Variants: generated 100, build-succeeded 40, build-failed 28, syntax-invalid 23, redundant 9
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 4412 ms, max 142 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 03:47:21 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-10-28 03:47:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 56 minutes 38 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 19, redundant 5
Fitness: max 0.917(46), min 0.75(2), ave 0.91
Test execution time: sum 5228 ms, max 135 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 03:47:45 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-10-28 03:49:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 12 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 18, redundant 2
Fitness: max 0.917(48), min 0.5(1), ave 0.908
Test execution time: sum 75687 ms, max 70257 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 03:49:19 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-10-28 03:49:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 58 minutes 38 seconds
Variants: generated 100, build-succeeded 56, build-failed 22, syntax-invalid 15, redundant 7
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 6470 ms, max 147 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 03:49:45 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-10-28 03:50:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 hours 59 minutes 5 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 13, redundant 4
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 6526 ms, max 142 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 03:50:12 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-10-28 04:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 31 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 16, redundant 3
Fitness: max 0.917(54), min 0.583(1), ave 0.911
Test execution time: sum 726366 ms, max 720024 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 04:02:38 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-10-28 04:03:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 11 minutes 54 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 21, redundant 2
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 5337 ms, max 134 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 04:03:01 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-10-28 04:03:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 19 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 17, redundant 9
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 5170 ms, max 137 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 04:03:26 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-10-28 04:03:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 12 minutes 40 seconds
Variants: generated 100, build-succeeded 36, build-failed 35, syntax-invalid 24, redundant 5
Fitness: max 0.917(36), min 0.917(36), ave 0.917
Test execution time: sum 3706 ms, max 142 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 04:03:47 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-10-28 04:04:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 7 seconds
Variants: generated 100, build-succeeded 60, build-failed 21, syntax-invalid 13, redundant 6
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 6215 ms, max 137 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 04:04:14 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-10-28 04:04:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 30 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 22, redundant 5
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 4286 ms, max 136 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 04:04:37 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-10-28 04:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 13 minutes 57 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 9, redundant 2
Fitness: max 0.917(58), min 0.75(1), ave 0.914
Test execution time: sum 5995 ms, max 127 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:05:04 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-10-28 04:29:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 38 minutes 23 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 11, redundant 2
Fitness: max 0.917(56), min 0.333(1), ave 0.906
Test execution time: sum 1445630 ms, max 1440022 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 04:29:30 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-10-28 04:29:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 38 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 15, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5302 ms, max 141 ms, min 72 ms
----------------------------------------------------------------

2023-10-28 04:29:56 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-10-28 04:30:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 39 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 14, redundant 7
Fitness: max 0.917(52), min 0.667(1), ave 0.909
Test execution time: sum 5301 ms, max 127 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:30:21 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-10-28 04:30:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 39 minutes 37 seconds
Variants: generated 100, build-succeeded 45, build-failed 25, syntax-invalid 21, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4361 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:30:44 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-10-28 04:31:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 1 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 17, redundant 5
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4608 ms, max 139 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 04:31:08 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-10-28 04:31:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 5850 ms, max 140 ms, min 71 ms
----------------------------------------------------------------

2023-10-28 04:31:35 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-10-28 04:32:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 40 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 13, redundant 4
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 6202 ms, max 146 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 04:32:03 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-10-28 04:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 41 minutes 24 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 10, redundant 1
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 6540 ms, max 149 ms, min 74 ms
----------------------------------------------------------------

2023-10-28 04:32:31 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-10-28 04:32:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 41 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 6080 ms, max 151 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 04:32:59 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-10-28 04:33:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 11, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 5523 ms, max 146 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 04:33:25 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-10-28 04:33:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 42 minutes 44 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 17, redundant 2
Fitness: max 0.917(47), min 0.75(2), ave 0.91
Test execution time: sum 5296 ms, max 164 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:33:51 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-10-28 04:34:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 11 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 11, redundant 7
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 5547 ms, max 157 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:34:18 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-10-28 04:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 43 minutes 38 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 5995 ms, max 155 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 04:34:45 [main] [INFO]  KGenProgMain - entered the era of 323rd generation.
2023-10-28 04:35:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 12, redundant 8
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 6317 ms, max 153 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:35:13 [main] [INFO]  KGenProgMain - entered the era of 324th generation.
2023-10-28 04:35:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 44 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 10, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 6193 ms, max 137 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 04:35:41 [main] [INFO]  KGenProgMain - entered the era of 325th generation.
2023-10-28 04:36:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 2 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 10, redundant 4
Fitness: max 0.917(51), min 0.75(2), ave 0.91
Test execution time: sum 5947 ms, max 142 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:36:09 [main] [INFO]  KGenProgMain - entered the era of 326th generation.
2023-10-28 04:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 30 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 11, redundant 2
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 6277 ms, max 152 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 04:36:37 [main] [INFO]  KGenProgMain - entered the era of 327th generation.
2023-10-28 04:37:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 45 minutes 59 seconds
Variants: generated 100, build-succeeded 60, build-failed 25, syntax-invalid 10, redundant 5
Fitness: max 0.917(57), min 0.333(1), ave 0.903
Test execution time: sum 6802 ms, max 153 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:37:06 [main] [INFO]  KGenProgMain - entered the era of 328th generation.
2023-10-28 04:37:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 46 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 6817 ms, max 165 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 04:37:35 [main] [INFO]  KGenProgMain - entered the era of 329th generation.
2023-10-28 04:38:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 hours 46 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 11, redundant 6
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 6162 ms, max 166 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:38:03 [main] [INFO]  KGenProgMain - entered the era of 330th generation.
2023-10-28 04:53:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 2 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 8, redundant 4
Fitness: max 0.917(54), min 0.583(1), ave 0.905
Test execution time: sum 906604 ms, max 900025 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:53:33 [main] [INFO]  KGenProgMain - entered the era of 331st generation.
2023-10-28 04:54:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 2 minutes 57 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 3, redundant 9
Fitness: max 0.917(61), min 0.75(1), ave 0.914
Test execution time: sum 7219 ms, max 153 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 04:54:04 [main] [INFO]  KGenProgMain - entered the era of 332nd generation.
2023-10-28 05:09:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 18 minutes 27 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 8, redundant 5
Fitness: max 0.917(56), min 0.583(1), ave 0.911
Test execution time: sum 906691 ms, max 900024 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 05:09:33 [main] [INFO]  KGenProgMain - entered the era of 333rd generation.
2023-10-28 05:10:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 18 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 22, syntax-invalid 13, redundant 8
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7036 ms, max 154 ms, min 84 ms
----------------------------------------------------------------

2023-10-28 05:10:02 [main] [INFO]  KGenProgMain - entered the era of 334th generation.
2023-10-28 05:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 25 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 10, redundant 8
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 6948 ms, max 165 ms, min 91 ms
----------------------------------------------------------------

2023-10-28 05:10:32 [main] [INFO]  KGenProgMain - entered the era of 335th generation.
2023-10-28 05:11:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 19 minutes 54 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 11, redundant 5
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 6924 ms, max 154 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 05:11:01 [main] [INFO]  KGenProgMain - entered the era of 336th generation.
2023-10-28 05:11:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 20 minutes 21 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 17, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 5943 ms, max 164 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 05:11:28 [main] [INFO]  KGenProgMain - entered the era of 337th generation.
2023-10-28 05:11:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 20 minutes 51 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 10, redundant 8
Fitness: max 0.917(52), min 0.25(1), ave 0.904
Test execution time: sum 6470 ms, max 161 ms, min 22 ms
----------------------------------------------------------------

2023-10-28 05:11:57 [main] [INFO]  KGenProgMain - entered the era of 338th generation.
2023-10-28 05:12:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 21 minutes 19 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 16, redundant 4
Fitness: max 0.917(55), min 0.75(1), ave 0.912
Test execution time: sum 6847 ms, max 163 ms, min 23 ms
----------------------------------------------------------------

2023-10-28 05:12:26 [main] [INFO]  KGenProgMain - entered the era of 339th generation.
2023-10-28 05:12:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 21 minutes 48 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 13, redundant 4
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 5991 ms, max 170 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 05:12:54 [main] [INFO]  KGenProgMain - entered the era of 340th generation.
2023-10-28 05:13:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 22 minutes 18 seconds
Variants: generated 100, build-succeeded 50, build-failed 39, syntax-invalid 8, redundant 3
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 6289 ms, max 162 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 05:13:24 [main] [INFO]  KGenProgMain - entered the era of 341st generation.
2023-10-28 05:13:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 22 minutes 45 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 16, redundant 1
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 5949 ms, max 153 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 05:13:52 [main] [INFO]  KGenProgMain - entered the era of 342nd generation.
2023-10-28 05:14:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 23 minutes 14 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 6419 ms, max 148 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 05:14:21 [main] [INFO]  KGenProgMain - entered the era of 343rd generation.
2023-10-28 05:14:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 23 minutes 42 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 14, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 6114 ms, max 164 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 05:14:49 [main] [INFO]  KGenProgMain - entered the era of 344th generation.
2023-10-28 05:15:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 24 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 16, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 6071 ms, max 141 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:15:17 [main] [INFO]  KGenProgMain - entered the era of 345th generation.
2023-10-28 05:15:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 24 minutes 37 seconds
Variants: generated 100, build-succeeded 42, build-failed 30, syntax-invalid 19, redundant 9
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4673 ms, max 143 ms, min 84 ms
----------------------------------------------------------------

2023-10-28 05:15:43 [main] [INFO]  KGenProgMain - entered the era of 346th generation.
2023-10-28 05:16:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 25 minutes 4 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 18, redundant 9
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 5538 ms, max 143 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:16:11 [main] [INFO]  KGenProgMain - entered the era of 347th generation.
2023-10-28 05:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 25 minutes 30 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 18, redundant 10
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 5395 ms, max 147 ms, min 33 ms
----------------------------------------------------------------

2023-10-28 05:16:37 [main] [INFO]  KGenProgMain - entered the era of 348th generation.
2023-10-28 05:18:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 27 minutes 8 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 16, redundant 5
Fitness: max 0.917(46), min 0.5(1), ave 0.908
Test execution time: sum 75114 ms, max 70034 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 05:18:14 [main] [INFO]  KGenProgMain - entered the era of 349th generation.
2023-10-28 05:18:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 27 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 10, redundant 7
Fitness: max 1(2), min 0.917(53), ave 0.92
Test execution time: sum 6481 ms, max 158 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 05:18:45 [main] [INFO]  KGenProgMain - entered the era of 350th generation.
2023-10-28 05:19:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.917(56), ave 0.918
Test execution time: sum 6536 ms, max 160 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:19:13 [main] [INFO]  KGenProgMain - entered the era of 351st generation.
2023-10-28 05:19:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 28 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 17, redundant 6
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6129 ms, max 164 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:19:42 [main] [INFO]  KGenProgMain - entered the era of 352nd generation.
2023-10-28 05:20:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 16, redundant 7
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6104 ms, max 143 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 05:20:10 [main] [INFO]  KGenProgMain - entered the era of 353rd generation.
2023-10-28 05:20:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 29 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 6696 ms, max 159 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:20:41 [main] [INFO]  KGenProgMain - entered the era of 354th generation.
2023-10-28 05:21:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 1 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 17, redundant 8
Fitness: max 1(2), min 0.917(47), ave 0.92
Test execution time: sum 5322 ms, max 142 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 05:21:08 [main] [INFO]  KGenProgMain - entered the era of 355th generation.
2023-10-28 05:21:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 10, redundant 5
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 5634 ms, max 162 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 05:21:38 [main] [INFO]  KGenProgMain - entered the era of 356th generation.
2023-10-28 05:22:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 30 minutes 58 seconds
Variants: generated 100, build-succeeded 42, build-failed 40, syntax-invalid 14, redundant 4
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4631 ms, max 161 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 05:22:05 [main] [INFO]  KGenProgMain - entered the era of 357th generation.
2023-10-28 05:22:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 27 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 1(2), min 0.917(47), ave 0.92
Test execution time: sum 5355 ms, max 149 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 05:22:34 [main] [INFO]  KGenProgMain - entered the era of 358th generation.
2023-10-28 05:23:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 31 minutes 55 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 14, redundant 7
Fitness: max 1(1), min 0.917(45), ave 0.918
Test execution time: sum 5048 ms, max 149 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 05:23:02 [main] [INFO]  KGenProgMain - entered the era of 359th generation.
2023-10-28 05:23:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 24 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 13, redundant 4
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 5650 ms, max 147 ms, min 75 ms
----------------------------------------------------------------

2023-10-28 05:23:31 [main] [INFO]  KGenProgMain - entered the era of 360th generation.
2023-10-28 05:23:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 32 minutes 48 seconds
Variants: generated 100, build-succeeded 38, build-failed 27, syntax-invalid 25, redundant 10
Fitness: max 1(1), min 0.917(37), ave 0.919
Test execution time: sum 4024 ms, max 139 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 05:23:55 [main] [INFO]  KGenProgMain - entered the era of 361st generation.
2023-10-28 05:24:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 12 seconds
Variants: generated 100, build-succeeded 35, build-failed 31, syntax-invalid 27, redundant 7
Fitness: max 0.917(35), min 0.917(35), ave 0.917
Test execution time: sum 3820 ms, max 143 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 05:24:19 [main] [INFO]  KGenProgMain - entered the era of 362nd generation.
2023-10-28 05:24:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 33 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 11, redundant 8
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 5819 ms, max 152 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 05:24:49 [main] [INFO]  KGenProgMain - entered the era of 363rd generation.
2023-10-28 05:25:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 34 minutes 9 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 19, redundant 4
Fitness: max 1(1), min 0.917(44), ave 0.919
Test execution time: sum 4856 ms, max 142 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 05:25:16 [main] [INFO]  KGenProgMain - entered the era of 364th generation.
2023-10-28 05:43:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 hours 52 minutes 32 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 15, redundant 6
Fitness: max 1(3), min 0.583(2), ave 0.908
Test execution time: sum 1079492 ms, max 540025 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 05:43:38 [main] [INFO]  KGenProgMain - entered the era of 365th generation.
2023-10-28 06:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 19 minutes 51 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 8, redundant 2
Fitness: max 1(2), min 0.583(3), ave 0.902
Test execution time: sum 1614273 ms, max 538222 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 06:10:57 [main] [INFO]  KGenProgMain - entered the era of 366th generation.
2023-10-28 06:38:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 hours 47 minutes 7 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 10, redundant 1
Fitness: max 1(1), min 0.583(3), ave 0.9
Test execution time: sum 1611884 ms, max 537589 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 06:38:14 [main] [INFO]  KGenProgMain - entered the era of 367th generation.
2023-10-28 06:56:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 5 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 13, redundant 3
Fitness: max 0.917(50), min 0.583(2), ave 0.9
Test execution time: sum 1081150 ms, max 538812 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 06:56:39 [main] [INFO]  KGenProgMain - entered the era of 368th generation.
2023-10-28 07:06:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 15 minutes 0 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 1(5), min 0.5(1), ave 0.911
Test execution time: sum 543316 ms, max 537272 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 07:06:07 [main] [INFO]  KGenProgMain - entered the era of 369th generation.
2023-10-28 07:15:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 23 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 17, redundant 5
Fitness: max 1(2), min 0.583(1), ave 0.913
Test execution time: sum 539981 ms, max 534328 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:15:30 [main] [INFO]  KGenProgMain - entered the era of 370th generation.
2023-10-28 07:15:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 24 minutes 50 seconds
Variants: generated 100, build-succeeded 44, build-failed 25, syntax-invalid 22, redundant 9
Fitness: max 1(4), min 0.917(40), ave 0.924
Test execution time: sum 5138 ms, max 148 ms, min 84 ms
----------------------------------------------------------------

2023-10-28 07:15:57 [main] [INFO]  KGenProgMain - entered the era of 371st generation.
2023-10-28 07:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 20 seconds
Variants: generated 100, build-succeeded 52, build-failed 26, syntax-invalid 16, redundant 6
Fitness: max 0.917(50), min 0.667(1), ave 0.91
Test execution time: sum 6519 ms, max 557 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 07:16:27 [main] [INFO]  KGenProgMain - entered the era of 372nd generation.
2023-10-28 07:16:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 25 minutes 50 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 13, redundant 8
Fitness: max 1(1), min 0.583(1), ave 0.908
Test execution time: sum 5887 ms, max 170 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:16:57 [main] [INFO]  KGenProgMain - entered the era of 373rd generation.
2023-10-28 07:17:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 26 minutes 18 seconds
Variants: generated 100, build-succeeded 50, build-failed 23, syntax-invalid 17, redundant 10
Fitness: max 1(2), min 0.917(48), ave 0.92
Test execution time: sum 5949 ms, max 153 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:17:25 [main] [INFO]  KGenProgMain - entered the era of 374th generation.
2023-10-28 07:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 26 minutes 48 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 15, redundant 7
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 6026 ms, max 161 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:17:55 [main] [INFO]  KGenProgMain - entered the era of 375th generation.
2023-10-28 07:18:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 27 minutes 19 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 11, redundant 2
Fitness: max 1(2), min 0.917(55), ave 0.92
Test execution time: sum 6379 ms, max 164 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:18:25 [main] [INFO]  KGenProgMain - entered the era of 376th generation.
2023-10-28 07:18:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 27 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 10, redundant 8
Fitness: max 1(1), min 0.917(56), ave 0.918
Test execution time: sum 6595 ms, max 150 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:18:57 [main] [INFO]  KGenProgMain - entered the era of 377th generation.
2023-10-28 07:19:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 28 minutes 20 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 13, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5652 ms, max 185 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 07:19:27 [main] [INFO]  KGenProgMain - entered the era of 378th generation.
2023-10-28 07:19:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 28 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6149 ms, max 161 ms, min 77 ms
----------------------------------------------------------------

2023-10-28 07:19:57 [main] [INFO]  KGenProgMain - entered the era of 379th generation.
2023-10-28 07:20:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 29 minutes 19 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 19, redundant 7
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 5276 ms, max 158 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 07:20:25 [main] [INFO]  KGenProgMain - entered the era of 380th generation.
2023-10-28 07:20:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 29 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 11, redundant 7
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 5878 ms, max 141 ms, min 78 ms
----------------------------------------------------------------

2023-10-28 07:20:56 [main] [INFO]  KGenProgMain - entered the era of 381st generation.
2023-10-28 07:21:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 30 minutes 18 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 14, redundant 3
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 5444 ms, max 143 ms, min 76 ms
----------------------------------------------------------------

2023-10-28 07:21:25 [main] [INFO]  KGenProgMain - entered the era of 382nd generation.
2023-10-28 07:21:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 30 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5391 ms, max 163 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:21:54 [main] [INFO]  KGenProgMain - entered the era of 383rd generation.
2023-10-28 07:22:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 31 minutes 19 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 12, redundant 6
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 6926 ms, max 170 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 07:22:26 [main] [INFO]  KGenProgMain - entered the era of 384th generation.
2023-10-28 07:22:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 31 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 12, redundant 7
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 6325 ms, max 169 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:22:57 [main] [INFO]  KGenProgMain - entered the era of 385th generation.
2023-10-28 07:23:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 32 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 33, syntax-invalid 9, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6193 ms, max 163 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 07:23:29 [main] [INFO]  KGenProgMain - entered the era of 386th generation.
2023-10-28 07:24:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 32 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.917(58), ave 0.918
Test execution time: sum 6956 ms, max 165 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:24:01 [main] [INFO]  KGenProgMain - entered the era of 387th generation.
2023-10-28 07:24:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 33 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 13, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6667 ms, max 183 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:24:32 [main] [INFO]  KGenProgMain - entered the era of 388th generation.
2023-10-28 07:25:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 33 minutes 58 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 9, redundant 7
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 6928 ms, max 191 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 07:25:05 [main] [INFO]  KGenProgMain - entered the era of 389th generation.
2023-10-28 07:25:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 34 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 9, redundant 4
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 7448 ms, max 179 ms, min 80 ms
----------------------------------------------------------------

2023-10-28 07:25:38 [main] [INFO]  KGenProgMain - entered the era of 390th generation.
2023-10-28 07:26:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 35 minutes 4 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 13, redundant 7
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7868 ms, max 181 ms, min 79 ms
----------------------------------------------------------------

2023-10-28 07:26:11 [main] [INFO]  KGenProgMain - entered the era of 391st generation.
2023-10-28 07:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 35 minutes 38 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 9, redundant 4
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 8388 ms, max 170 ms, min 93 ms
----------------------------------------------------------------

2023-10-28 07:26:45 [main] [INFO]  KGenProgMain - entered the era of 392nd generation.
2023-10-28 07:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 36 minutes 13 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 9, redundant 3
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 8309 ms, max 211 ms, min 104 ms
----------------------------------------------------------------

2023-10-28 07:27:20 [main] [INFO]  KGenProgMain - entered the era of 393rd generation.
2023-10-28 07:27:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 36 minutes 47 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 7, redundant 8
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 7517 ms, max 165 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:27:54 [main] [INFO]  KGenProgMain - entered the era of 394th generation.
2023-10-28 07:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 37 minutes 22 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 7, redundant 9
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 7626 ms, max 161 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 07:28:28 [main] [INFO]  KGenProgMain - entered the era of 395th generation.
2023-10-28 07:29:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 37 minutes 55 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 9, redundant 4
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 7182 ms, max 161 ms, min 82 ms
----------------------------------------------------------------

2023-10-28 07:29:02 [main] [INFO]  KGenProgMain - entered the era of 396th generation.
2023-10-28 07:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 38 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 14, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 6881 ms, max 169 ms, min 103 ms
----------------------------------------------------------------

2023-10-28 07:29:33 [main] [INFO]  KGenProgMain - entered the era of 397th generation.
2023-10-28 07:30:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 38 minutes 58 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 14, redundant 3
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 6652 ms, max 164 ms, min 24 ms
----------------------------------------------------------------

2023-10-28 07:30:05 [main] [INFO]  KGenProgMain - entered the era of 398th generation.
2023-10-28 07:30:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 39 minutes 30 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 14, redundant 2
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 6673 ms, max 163 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 07:30:36 [main] [INFO]  KGenProgMain - entered the era of 399th generation.
2023-10-28 07:31:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 40 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 12, redundant 6
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 7780 ms, max 163 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 07:31:10 [main] [INFO]  KGenProgMain - entered the era of 400th generation.
2023-10-28 07:31:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 40 minutes 38 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 6, redundant 3
Fitness: max 0.917(60), min 0.833(1), ave 0.915
Test execution time: sum 7766 ms, max 171 ms, min 33 ms
----------------------------------------------------------------

2023-10-28 07:31:44 [main] [INFO]  KGenProgMain - entered the era of 401st generation.
2023-10-28 07:32:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 9, redundant 8
Fitness: max 0.917(49), min 0.667(1), ave 0.908
Test execution time: sum 6495 ms, max 182 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:32:17 [main] [INFO]  KGenProgMain - entered the era of 402nd generation.
2023-10-28 07:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 41 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 13, redundant 8
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 6997 ms, max 169 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:32:49 [main] [INFO]  KGenProgMain - entered the era of 403rd generation.
2023-10-28 07:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 42 minutes 15 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 12, redundant 7
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 7395 ms, max 173 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:33:22 [main] [INFO]  KGenProgMain - entered the era of 404th generation.
2023-10-28 07:33:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 42 minutes 47 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 16, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 6877 ms, max 183 ms, min 93 ms
----------------------------------------------------------------

2023-10-28 07:33:54 [main] [INFO]  KGenProgMain - entered the era of 405th generation.
2023-10-28 07:34:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 16, redundant 7
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7055 ms, max 171 ms, min 91 ms
----------------------------------------------------------------

2023-10-28 07:34:25 [main] [INFO]  KGenProgMain - entered the era of 406th generation.
2023-10-28 07:34:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 43 minutes 50 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 18, redundant 3
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 6380 ms, max 178 ms, min 99 ms
----------------------------------------------------------------

2023-10-28 07:34:57 [main] [INFO]  KGenProgMain - entered the era of 407th generation.
2023-10-28 07:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 44 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 11, redundant 8
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 6473 ms, max 173 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:35:29 [main] [INFO]  KGenProgMain - entered the era of 408th generation.
2023-10-28 07:36:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 44 minutes 56 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 10, redundant 13
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6788 ms, max 168 ms, min 99 ms
----------------------------------------------------------------

2023-10-28 07:36:02 [main] [INFO]  KGenProgMain - entered the era of 409th generation.
2023-10-28 07:36:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 45 minutes 30 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 11, redundant 8
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7530 ms, max 178 ms, min 91 ms
----------------------------------------------------------------

2023-10-28 07:36:37 [main] [INFO]  KGenProgMain - entered the era of 410th generation.
2023-10-28 07:37:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 46 minutes 1 seconds
Variants: generated 100, build-succeeded 48, build-failed 23, syntax-invalid 21, redundant 8
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 6159 ms, max 179 ms, min 85 ms
----------------------------------------------------------------

2023-10-28 07:37:07 [main] [INFO]  KGenProgMain - entered the era of 411th generation.
2023-10-28 07:37:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 46 minutes 30 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 20, redundant 5
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 5853 ms, max 182 ms, min 93 ms
----------------------------------------------------------------

2023-10-28 07:37:37 [main] [INFO]  KGenProgMain - entered the era of 412th generation.
2023-10-28 07:38:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 47 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 15, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7168 ms, max 182 ms, min 100 ms
----------------------------------------------------------------

2023-10-28 07:38:10 [main] [INFO]  KGenProgMain - entered the era of 413th generation.
2023-10-28 07:38:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 47 minutes 35 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 16, redundant 6
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 7097 ms, max 182 ms, min 98 ms
----------------------------------------------------------------

2023-10-28 07:38:42 [main] [INFO]  KGenProgMain - entered the era of 414th generation.
2023-10-28 07:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 48 minutes 6 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 19, redundant 4
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 6482 ms, max 181 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:39:13 [main] [INFO]  KGenProgMain - entered the era of 415th generation.
2023-10-28 07:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 48 minutes 35 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 22, redundant 3
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 5408 ms, max 174 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 07:39:42 [main] [INFO]  KGenProgMain - entered the era of 416th generation.
2023-10-28 07:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 49 minutes 7 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 16, redundant 7
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 6418 ms, max 182 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 07:40:13 [main] [INFO]  KGenProgMain - entered the era of 417th generation.
2023-10-28 07:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 49 minutes 33 seconds
Variants: generated 100, build-succeeded 36, build-failed 33, syntax-invalid 26, redundant 5
Fitness: max 0.917(36), min 0.917(36), ave 0.917
Test execution time: sum 4708 ms, max 178 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:40:40 [main] [INFO]  KGenProgMain - entered the era of 418th generation.
2023-10-28 07:41:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 50 minutes 3 seconds
Variants: generated 100, build-succeeded 42, build-failed 31, syntax-invalid 20, redundant 7
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 5880 ms, max 200 ms, min 93 ms
----------------------------------------------------------------

2023-10-28 07:41:10 [main] [INFO]  KGenProgMain - entered the era of 419th generation.
2023-10-28 07:41:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 50 minutes 37 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 15, redundant 4
Fitness: max 0.917(56), min 0.75(1), ave 0.914
Test execution time: sum 7551 ms, max 178 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:41:44 [main] [INFO]  KGenProgMain - entered the era of 420th generation.
2023-10-28 07:42:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 10 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 13, redundant 3
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7512 ms, max 180 ms, min 96 ms
----------------------------------------------------------------

2023-10-28 07:42:17 [main] [INFO]  KGenProgMain - entered the era of 421st generation.
2023-10-28 07:42:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 51 minutes 43 seconds
Variants: generated 100, build-succeeded 56, build-failed 24, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 7438 ms, max 175 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 07:42:50 [main] [INFO]  KGenProgMain - entered the era of 422nd generation.
2023-10-28 07:43:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 15 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 16, redundant 3
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 6379 ms, max 179 ms, min 29 ms
----------------------------------------------------------------

2023-10-28 07:43:22 [main] [INFO]  KGenProgMain - entered the era of 423rd generation.
2023-10-28 07:43:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 52 minutes 47 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 16, redundant 6
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 7118 ms, max 179 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 07:43:54 [main] [INFO]  KGenProgMain - entered the era of 424th generation.
2023-10-28 07:44:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 20 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 14, redundant 10
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 7103 ms, max 183 ms, min 90 ms
----------------------------------------------------------------

2023-10-28 07:44:27 [main] [INFO]  KGenProgMain - entered the era of 425th generation.
2023-10-28 07:44:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 53 minutes 52 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 16, redundant 4
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 6565 ms, max 182 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:44:59 [main] [INFO]  KGenProgMain - entered the era of 426th generation.
2023-10-28 07:45:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 54 minutes 24 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 17, redundant 5
Fitness: max 0.917(49), min 0.833(1), ave 0.915
Test execution time: sum 7243 ms, max 575 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:45:31 [main] [INFO]  KGenProgMain - entered the era of 427th generation.
2023-10-28 07:46:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 54 minutes 57 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 15, redundant 6
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 5949 ms, max 173 ms, min 81 ms
----------------------------------------------------------------

2023-10-28 07:46:04 [main] [INFO]  KGenProgMain - entered the era of 428th generation.
2023-10-28 07:46:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 55 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 12, redundant 4
Fitness: max 0.917(58), min 0.667(1), ave 0.912
Test execution time: sum 7557 ms, max 184 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 07:46:39 [main] [INFO]  KGenProgMain - entered the era of 429th generation.
2023-10-28 07:47:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 56 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 16, redundant 3
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7073 ms, max 168 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:47:12 [main] [INFO]  KGenProgMain - entered the era of 430th generation.
2023-10-28 07:47:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 56 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 18, redundant 4
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 7139 ms, max 182 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 07:47:45 [main] [INFO]  KGenProgMain - entered the era of 431st generation.
2023-10-28 07:48:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 hours 57 minutes 10 seconds
Variants: generated 100, build-succeeded 53, build-failed 22, syntax-invalid 18, redundant 7
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 6774 ms, max 170 ms, min 86 ms
----------------------------------------------------------------

2023-10-28 07:48:17 [main] [INFO]  KGenProgMain - entered the era of 432nd generation.
2023-10-28 08:12:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 21 minutes 42 seconds
Variants: generated 100, build-succeeded 54, build-failed 24, syntax-invalid 17, redundant 5
Fitness: max 0.917(50), min 0.333(1), ave 0.897
Test execution time: sum 1446393 ms, max 1440023 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:12:49 [main] [INFO]  KGenProgMain - entered the era of 433rd generation.
2023-10-28 08:13:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 22 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 14, redundant 11
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 6348 ms, max 169 ms, min 73 ms
----------------------------------------------------------------

2023-10-28 08:13:22 [main] [INFO]  KGenProgMain - entered the era of 434th generation.
2023-10-28 08:13:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 22 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 18, redundant 4
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 6442 ms, max 194 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:13:54 [main] [INFO]  KGenProgMain - entered the era of 435th generation.
2023-10-28 08:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 23 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 9, redundant 10
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7422 ms, max 168 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 08:14:30 [main] [INFO]  KGenProgMain - entered the era of 436th generation.
2023-10-28 08:15:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 23 minutes 59 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 10, redundant 9
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 7681 ms, max 178 ms, min 90 ms
----------------------------------------------------------------

2023-10-28 08:15:06 [main] [INFO]  KGenProgMain - entered the era of 437th generation.
2023-10-28 08:15:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 24 minutes 32 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 14, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 7115 ms, max 181 ms, min 95 ms
----------------------------------------------------------------

2023-10-28 08:15:39 [main] [INFO]  KGenProgMain - entered the era of 438th generation.
2023-10-28 08:16:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 7 seconds
Variants: generated 100, build-succeeded 57, build-failed 21, syntax-invalid 13, redundant 9
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7478 ms, max 172 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 08:16:14 [main] [INFO]  KGenProgMain - entered the era of 439th generation.
2023-10-28 08:16:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 25 minutes 43 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 11, redundant 6
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 8331 ms, max 187 ms, min 97 ms
----------------------------------------------------------------

2023-10-28 08:16:50 [main] [INFO]  KGenProgMain - entered the era of 440th generation.
2023-10-28 08:17:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 15 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 20, redundant 7
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 6254 ms, max 179 ms, min 110 ms
----------------------------------------------------------------

2023-10-28 08:17:22 [main] [INFO]  KGenProgMain - entered the era of 441st generation.
2023-10-28 08:17:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 26 minutes 47 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 19, redundant 9
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 6067 ms, max 176 ms, min 96 ms
----------------------------------------------------------------

2023-10-28 08:17:53 [main] [INFO]  KGenProgMain - entered the era of 442nd generation.
2023-10-28 08:18:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 27 minutes 20 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 15, redundant 8
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7047 ms, max 178 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 08:18:27 [main] [INFO]  KGenProgMain - entered the era of 443rd generation.
2023-10-28 08:19:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 27 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 17, redundant 3
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 6721 ms, max 176 ms, min 95 ms
----------------------------------------------------------------

2023-10-28 08:19:01 [main] [INFO]  KGenProgMain - entered the era of 444th generation.
2023-10-28 08:19:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 28 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 5, redundant 6
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 7710 ms, max 176 ms, min 97 ms
----------------------------------------------------------------

2023-10-28 08:19:38 [main] [INFO]  KGenProgMain - entered the era of 445th generation.
2023-10-28 08:20:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 29 minutes 4 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 21, redundant 5
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 6531 ms, max 185 ms, min 97 ms
----------------------------------------------------------------

2023-10-28 08:20:11 [main] [INFO]  KGenProgMain - entered the era of 446th generation.
2023-10-28 08:20:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 29 minutes 37 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 17, redundant 11
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 6419 ms, max 189 ms, min 97 ms
----------------------------------------------------------------

2023-10-28 08:20:44 [main] [INFO]  KGenProgMain - entered the era of 447th generation.
2023-10-28 08:21:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 30 minutes 12 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 12, redundant 9
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 6805 ms, max 189 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 08:21:19 [main] [INFO]  KGenProgMain - entered the era of 448th generation.
2023-10-28 08:21:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 30 minutes 45 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 17, redundant 8
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 6352 ms, max 196 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 08:21:52 [main] [INFO]  KGenProgMain - entered the era of 449th generation.
2023-10-28 08:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 31 minutes 21 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 10, redundant 10
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 7262 ms, max 219 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 08:22:27 [main] [INFO]  KGenProgMain - entered the era of 450th generation.
2023-10-28 08:23:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 31 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 13, redundant 5
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 6420 ms, max 164 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:23:02 [main] [INFO]  KGenProgMain - entered the era of 451st generation.
2023-10-28 08:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 32 minutes 29 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 15, redundant 11
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 5985 ms, max 178 ms, min 90 ms
----------------------------------------------------------------

2023-10-28 08:23:35 [main] [INFO]  KGenProgMain - entered the era of 452nd generation.
2023-10-28 08:24:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 33 minutes 1 seconds
Variants: generated 100, build-succeeded 51, build-failed 19, syntax-invalid 22, redundant 8
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 6342 ms, max 175 ms, min 93 ms
----------------------------------------------------------------

2023-10-28 08:24:08 [main] [INFO]  KGenProgMain - entered the era of 453rd generation.
2023-10-28 08:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 33 minutes 34 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 17, redundant 5
Fitness: max 0.917(47), min 0.75(2), ave 0.91
Test execution time: sum 5887 ms, max 178 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:24:41 [main] [INFO]  KGenProgMain - entered the era of 454th generation.
2023-10-28 08:25:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 34 minutes 5 seconds
Variants: generated 100, build-succeeded 40, build-failed 29, syntax-invalid 23, redundant 8
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 4797 ms, max 172 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 08:25:11 [main] [INFO]  KGenProgMain - entered the era of 455th generation.
2023-10-28 08:25:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 34 minutes 39 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 16, redundant 6
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 6082 ms, max 171 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:25:46 [main] [INFO]  KGenProgMain - entered the era of 456th generation.
2023-10-28 08:26:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 14 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 17, redundant 7
Fitness: max 0.917(46), min 0.667(2), ave 0.906
Test execution time: sum 5629 ms, max 159 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:26:21 [main] [INFO]  KGenProgMain - entered the era of 457th generation.
2023-10-28 08:26:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 35 minutes 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 31, syntax-invalid 14, redundant 8
Fitness: max 0.917(45), min 0.667(1), ave 0.91
Test execution time: sum 5444 ms, max 172 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 08:26:54 [main] [INFO]  KGenProgMain - entered the era of 458th generation.
2023-10-28 08:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 36 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 5865 ms, max 170 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 08:27:29 [main] [INFO]  KGenProgMain - entered the era of 459th generation.
2023-10-28 08:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 36 minutes 55 seconds
Variants: generated 100, build-succeeded 46, build-failed 23, syntax-invalid 20, redundant 11
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 5570 ms, max 167 ms, min 95 ms
----------------------------------------------------------------

2023-10-28 08:28:02 [main] [INFO]  KGenProgMain - entered the era of 460th generation.
2023-10-28 08:28:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 37 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 10, redundant 4
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 6827 ms, max 179 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 08:28:38 [main] [INFO]  KGenProgMain - entered the era of 461st generation.
2023-10-28 08:29:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 12, redundant 4
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 6498 ms, max 183 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 08:29:14 [main] [INFO]  KGenProgMain - entered the era of 462nd generation.
2023-10-28 08:29:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 38 minutes 40 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 17, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 5747 ms, max 178 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 08:29:47 [main] [INFO]  KGenProgMain - entered the era of 463rd generation.
2023-10-28 08:30:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 39 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 1(2), min 0.917(48), ave 0.92
Test execution time: sum 6428 ms, max 204 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 08:30:22 [main] [INFO]  KGenProgMain - entered the era of 464th generation.
2023-10-28 08:31:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 39 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 9, redundant 5
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 6475 ms, max 179 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 08:31:00 [main] [INFO]  KGenProgMain - entered the era of 465th generation.
2023-10-28 08:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 40 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 13, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 7031 ms, max 191 ms, min 90 ms
----------------------------------------------------------------

2023-10-28 08:31:36 [main] [INFO]  KGenProgMain - entered the era of 466th generation.
2023-10-28 08:32:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 13, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 7187 ms, max 201 ms, min 96 ms
----------------------------------------------------------------

2023-10-28 08:32:12 [main] [INFO]  KGenProgMain - entered the era of 467th generation.
2023-10-28 08:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 41 minutes 45 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0.917(59), min 0.75(1), ave 0.914
Test execution time: sum 8351 ms, max 210 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:32:52 [main] [INFO]  KGenProgMain - entered the era of 468th generation.
2023-10-28 08:33:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 42 minutes 24 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0.917(57), min 0.667(3), ave 0.904
Test execution time: sum 8380 ms, max 202 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:33:31 [main] [INFO]  KGenProgMain - entered the era of 469th generation.
2023-10-28 08:34:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 43 minutes 1 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 15, redundant 8
Fitness: max 0.917(47), min 0.667(3), ave 0.902
Test execution time: sum 7064 ms, max 200 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:34:07 [main] [INFO]  KGenProgMain - entered the era of 470th generation.
2023-10-28 08:34:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 43 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 10, redundant 6
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 8563 ms, max 193 ms, min 100 ms
----------------------------------------------------------------

2023-10-28 08:34:46 [main] [INFO]  KGenProgMain - entered the era of 471st generation.
2023-10-28 08:35:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 44 minutes 20 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 6, redundant 5
Fitness: max 0.917(58), min 0.667(1), ave 0.912
Test execution time: sum 9048 ms, max 196 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:35:27 [main] [INFO]  KGenProgMain - entered the era of 472nd generation.
2023-10-28 08:36:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 44 minutes 59 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 11, redundant 5
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 8740 ms, max 187 ms, min 105 ms
----------------------------------------------------------------

2023-10-28 08:36:06 [main] [INFO]  KGenProgMain - entered the era of 473rd generation.
2023-10-28 08:36:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 45 minutes 38 seconds
Variants: generated 100, build-succeeded 61, build-failed 23, syntax-invalid 13, redundant 3
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 9502 ms, max 202 ms, min 108 ms
----------------------------------------------------------------

2023-10-28 08:36:45 [main] [INFO]  KGenProgMain - entered the era of 474th generation.
2023-10-28 08:37:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 46 minutes 17 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 8, redundant 4
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 7719 ms, max 179 ms, min 89 ms
----------------------------------------------------------------

2023-10-28 08:37:24 [main] [INFO]  KGenProgMain - entered the era of 475th generation.
2023-10-28 08:38:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 12, redundant 7
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 7267 ms, max 183 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 08:38:01 [main] [INFO]  KGenProgMain - entered the era of 476th generation.
2023-10-28 08:38:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 hours 47 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 10, redundant 6
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 8499 ms, max 183 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 08:38:41 [main] [INFO]  KGenProgMain - entered the era of 477th generation.
2023-10-28 08:54:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0.917(56), min 0.583(1), ave 0.911
Test execution time: sum 908243 ms, max 900026 ms, min 102 ms
----------------------------------------------------------------

2023-10-28 08:54:21 [main] [INFO]  KGenProgMain - entered the era of 478th generation.
2023-10-28 08:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 3 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 13, redundant 9
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 8008 ms, max 184 ms, min 107 ms
----------------------------------------------------------------

2023-10-28 08:54:58 [main] [INFO]  KGenProgMain - entered the era of 479th generation.
2023-10-28 08:55:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 4 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 35, syntax-invalid 9, redundant 3
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 7363 ms, max 197 ms, min 83 ms
----------------------------------------------------------------

2023-10-28 08:55:37 [main] [INFO]  KGenProgMain - entered the era of 480th generation.
2023-10-28 08:56:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 5 minutes 10 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 8, redundant 8
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 8307 ms, max 184 ms, min 99 ms
----------------------------------------------------------------

2023-10-28 08:56:17 [main] [INFO]  KGenProgMain - entered the era of 481st generation.
2023-10-28 08:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 5 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 10, redundant 6
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7870 ms, max 179 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 08:56:56 [main] [INFO]  KGenProgMain - entered the era of 482nd generation.
2023-10-28 08:57:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 6 minutes 30 seconds
Variants: generated 100, build-succeeded 56, build-failed 34, syntax-invalid 7, redundant 3
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 8082 ms, max 179 ms, min 100 ms
----------------------------------------------------------------

2023-10-28 08:57:37 [main] [INFO]  KGenProgMain - entered the era of 483rd generation.
2023-10-28 08:58:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 7 minutes 11 seconds
Variants: generated 100, build-succeeded 61, build-failed 20, syntax-invalid 10, redundant 9
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 8895 ms, max 186 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 08:58:18 [main] [INFO]  KGenProgMain - entered the era of 484th generation.
2023-10-28 09:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 31 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 0.917(52), min 0.333(1), ave 0.903
Test execution time: sum 1447347 ms, max 1440023 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 09:22:56 [main] [INFO]  KGenProgMain - entered the era of 485th generation.
2023-10-28 09:23:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 32 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 23, syntax-invalid 14, redundant 6
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 7836 ms, max 170 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 09:23:35 [main] [INFO]  KGenProgMain - entered the era of 486th generation.
2023-10-28 09:24:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 33 minutes 7 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 10, redundant 5
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 7785 ms, max 185 ms, min 103 ms
----------------------------------------------------------------

2023-10-28 09:24:14 [main] [INFO]  KGenProgMain - entered the era of 487th generation.
2023-10-28 09:24:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 33 minutes 50 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 7, redundant 5
Fitness: max 0.917(64), min 0.917(64), ave 0.917
Test execution time: sum 9793 ms, max 199 ms, min 112 ms
----------------------------------------------------------------

2023-10-28 09:24:57 [main] [INFO]  KGenProgMain - entered the era of 488th generation.
2023-10-28 09:25:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 34 minutes 30 seconds
Variants: generated 100, build-succeeded 59, build-failed 26, syntax-invalid 13, redundant 2
Fitness: max 0.917(58), min 0.667(1), ave 0.912
Test execution time: sum 8784 ms, max 194 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 09:25:37 [main] [INFO]  KGenProgMain - entered the era of 489th generation.
2023-10-28 09:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 35 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 10, redundant 6
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 8590 ms, max 194 ms, min 100 ms
----------------------------------------------------------------

2023-10-28 09:26:18 [main] [INFO]  KGenProgMain - entered the era of 490th generation.
2023-10-28 09:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 35 minutes 53 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 6, redundant 8
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 9107 ms, max 202 ms, min 92 ms
----------------------------------------------------------------

2023-10-28 09:27:00 [main] [INFO]  KGenProgMain - entered the era of 491st generation.
2023-10-28 09:27:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 36 minutes 34 seconds
Variants: generated 100, build-succeeded 59, build-failed 21, syntax-invalid 11, redundant 9
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 8770 ms, max 197 ms, min 95 ms
----------------------------------------------------------------

2023-10-28 09:27:40 [main] [INFO]  KGenProgMain - entered the era of 492nd generation.
2023-10-28 09:28:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 37 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 10, redundant 3
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 8224 ms, max 205 ms, min 87 ms
----------------------------------------------------------------

2023-10-28 09:28:21 [main] [INFO]  KGenProgMain - entered the era of 493rd generation.
2023-10-28 09:28:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 37 minutes 51 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 7414 ms, max 188 ms, min 88 ms
----------------------------------------------------------------

2023-10-28 09:28:58 [main] [INFO]  KGenProgMain - entered the era of 494th generation.
2023-10-28 09:29:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 38 minutes 31 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 10, redundant 8
Fitness: max 0.917(53), min 0.667(2), ave 0.908
Test execution time: sum 7859 ms, max 184 ms, min 25 ms
----------------------------------------------------------------

2023-10-28 09:29:38 [main] [INFO]  KGenProgMain - entered the era of 495th generation.
2023-10-28 09:30:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 39 minutes 12 seconds
Variants: generated 100, build-succeeded 63, build-failed 21, syntax-invalid 10, redundant 6
Fitness: max 0.917(62), min 0.75(1), ave 0.914
Test execution time: sum 9221 ms, max 191 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 09:30:19 [main] [INFO]  KGenProgMain - entered the era of 496th generation.
2023-10-28 09:30:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 39 minutes 48 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 19, redundant 4
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 6546 ms, max 180 ms, min 94 ms
----------------------------------------------------------------

2023-10-28 09:30:54 [main] [INFO]  KGenProgMain - entered the era of 497th generation.
2023-10-28 09:31:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 40 minutes 27 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 11, redundant 4
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 7314 ms, max 209 ms, min 102 ms
----------------------------------------------------------------

2023-10-28 09:31:33 [main] [INFO]  KGenProgMain - entered the era of 498th generation.
2023-10-28 09:32:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 41 minutes 5 seconds
Variants: generated 100, build-succeeded 59, build-failed 19, syntax-invalid 16, redundant 6
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 8337 ms, max 179 ms, min 95 ms
----------------------------------------------------------------

2023-10-28 09:32:12 [main] [INFO]  KGenProgMain - entered the era of 499th generation.
2023-10-28 09:32:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 41 minutes 44 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 13, redundant 8
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 7097 ms, max 185 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 09:32:50 [main] [INFO]  KGenProgMain - entered the era of 500th generation.
2023-10-28 09:33:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 hours 42 minutes 17 seconds
Variants: generated 100, build-succeeded 40, build-failed 33, syntax-invalid 21, redundant 6
Fitness: max 0.917(39), min 0.75(1), ave 0.912
Test execution time: sum 5424 ms, max 184 ms, min 26 ms
----------------------------------------------------------------

2023-10-28 09:33:24 [main] [INFO]  KGenProgMain - GA stopped
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -419,7 +419,6 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
             readPos = outPos;
         }
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v68)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -386,7 +386,6 @@
             readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
-            System.arraycopy(buffer, 0, b, 0, buffer.length);
             buffer = b;
         }
     }
@@ -419,7 +418,6 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
             readPos = outPos;
         }
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v658)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,6 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v884)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -419,7 +419,6 @@
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
             buffer = out;
-            pos = outPos;
             readPos = outPos;
         }
     }
@@ -1025,7 +1024,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v896)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1025,7 +1025,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v965)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,7 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -1024,7 +1024,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1516)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				readPos = 0;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +421,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (containsBase64Byte(lineSeparator)) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v1920)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,16 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,11 +1031,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2829)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos += 4;
+			lineSeparator = CHUNK_SEPARATOR;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,7 +1021,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v2921)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -333,6 +333,16 @@
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +500,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1021,10 +1033,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v3335)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,8 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +491,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,7 +1025,7 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4001)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1021,11 +1024,9 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4307)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				readPos = 0;
+			}
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +496,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,10 +1032,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
-        readPos = 0;
+        x = x << 6;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4516)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,11 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +493,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1021,10 +1026,8 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v4536)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,9 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			resizeBuffer();
+			eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +493,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,8 +1029,7 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
-        readPos = 0;
+        x = x << 6;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5413)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,8 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +342,9 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +494,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1021,7 +1029,6 @@
      * Resets this Base64 object to its initial newly constructed state.
      */
     private void reset() {
-        buffer = null;
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5623)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,7 +331,14 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +497,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,9 +1031,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5626)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -490,7 +493,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1024,7 +1031,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v5915)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +348,8 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +499,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1025,7 +1035,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6045)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +493,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,10 +1028,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
-        currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6047)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +497,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1023,7 +1034,6 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
         currentLinePos = 0;
         modulus = 0;
         eof = false;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6118)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +346,8 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +497,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1025,7 +1035,6 @@
         pos = 0;
         readPos = 0;
         currentLinePos = 0;
-        modulus = 0;
         eof = false;
     }
 
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6340)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			reset();
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			x = x << 6;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -340,7 +344,8 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +495,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,7 +1030,7 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        x = x << 6;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6424)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,9 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineLength = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +491,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v6753)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,17 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +351,8 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -418,7 +430,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -490,7 +501,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v8706)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -166,7 +166,7 @@
                 if (!base64.hasData()) {
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
-                    if (c > 0 && b.length == len) {
+                    if (b == null) {
                         base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +346,8 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +497,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1022,7 +1035,8 @@
      */
     private void reset() {
         buffer = null;
-        pos = 0;
+        resizeBuffer();
+		pos = 0;
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,7 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
+            return StringUtils.getBytesUnchecked(string, CharEncoding.US_ASCII);
         }
         try {
             return string.getBytes(charsetName);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9047)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,12 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			reset();
+			reset();
+			buffer = null;
+			eof = false;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +346,9 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +498,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9077)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+			{
+				lineLength = 0;
+				lineSeparator = CHUNK_SEPARATOR;
+			}
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -421,6 +428,7 @@
             buffer = out;
             pos = outPos;
             readPos = outPos;
+			resizeBuffer();
         }
     }
     /**
@@ -490,7 +498,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v9142)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = true;
+			pos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineLength = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +505,14 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v10745)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -340,7 +357,9 @@
         if (lineLength > 0) {
             this.encodeSize = 4 + lineSeparator.length;
         } else {
-            this.encodeSize = 4;
+            pos = 0;
+			pos = 0;
+			this.encodeSize = 4;
         }
         this.decodeSize = this.encodeSize - 1;
         if (containsBase64Byte(lineSeparator)) {
@@ -490,7 +509,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11220)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -417,7 +431,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (containsBase64Byte(lineSeparator)) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
@@ -490,7 +504,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11321)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +507,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,7 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
+            return StringUtils.getBytesUnchecked(string, CharEncoding.US_ASCII);
         }
         try {
             return string.getBytes(charsetName);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v11362)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +504,9 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.binary.StringUtils
+++ org.apache.commons.codec.binary.StringUtils
@@ -150,7 +150,7 @@
      */
     public static byte[] getBytesUnchecked(String string, String charsetName) {
         if (string == null) {
-            return null;
+            return StringUtils.getBytesUnchecked(string, CharEncoding.US_ASCII);
         }
         try {
             return string.getBytes(charsetName);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12375)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,25 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +509,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v12487)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,19 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +503,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v13565)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+            eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +507,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1026,7 +1044,6 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v15746)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			reset();
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +507,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
@@ -1023,10 +1041,9 @@
     private void reset() {
         buffer = null;
         pos = 0;
-        readPos = 0;
+        byte[] result = new byte[pos];
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
     }
 
 }
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v16257)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,36 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = true;
+			modulus = (++modulus) % 3;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +520,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v20385)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,39 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +522,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v25324)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			pos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +464,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -490,7 +535,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26335)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,43 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			pos = 0;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +527,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v26968)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31118)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +540,8 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v31358)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,57 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			currentLinePos += 4;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +469,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -490,7 +540,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34150)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +532,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34755)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +538,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34765)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,59 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +543,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v34871)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +540,16 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35268)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +539,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35289)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +539,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35385)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +532,16 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35563)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +538,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35583)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +535,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35687)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +538,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v35898)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,53 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +537,18 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36082)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,50 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +534,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36097)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,62 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +546,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36195)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +540,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36285)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,68 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +552,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36293)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,60 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			reset();
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +544,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36299)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,44 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +528,16 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36363)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,58 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +542,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36386)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,62 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +546,14 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36480)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,63 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +547,14 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36660)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,65 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +549,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36662)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,63 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			reset();
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +546,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36665)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,66 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +550,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36678)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,67 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +551,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36700)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;
+			eof = false;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +540,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36722)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,68 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +551,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36790)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +539,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36858)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,55 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +539,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36868)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,59 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +543,14 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36872)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,66 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +550,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v36892)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			resizeBuffer();
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +536,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37089)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,72 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +556,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37162)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,49 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +533,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37198)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,60 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +544,11 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37322)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +539,13 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37372)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,60 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +544,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37475)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,72 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +556,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v37852)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,63 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +547,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38054)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,67 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			byte b = lineSeparator[lineSeparator.length - 1];
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -490,7 +550,10 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38254)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +532,14 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38490)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,50 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +534,17 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v38662)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,70 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +554,15 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v40007)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,58 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +542,17 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41123)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			x = x << 6;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -418,7 +468,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -490,7 +539,17 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v41920)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,69 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +553,12 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44277)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,66 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			currentLinePos = 0;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +550,17 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44588)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,63 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +547,18 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v44797)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,87 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = new byte[DEFAULT_BUFFER_SIZE];
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +571,16 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v45855)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,74 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +558,19 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46154)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,6 +332,66 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			modulus = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos = 0;
+			buffer = null;
+			resizeBuffer();
+			resizeBuffer();
+			eof = false;
+			x = x << 6;
+			resizeBuffer();
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = false;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			reset();
+			eof = false;
+			eof = true;
+			resizeBuffer();
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
             lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
@@ -490,7 +550,17 @@
                 if (b < 0) {
                     b += 256;
                 }
-                x = (x << 8) + b;
+                System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				x = (x << 8) + b;
                 if (0 == modulus) {
                     buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
                     buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-28 09:33:24 [main] [INFO]  PatchLogExporter - patch (v46191)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-28 09:33:25 [main] [INFO]  KGenProgMain - Summary
Reached generation = 500
Generated variants = 49900
Syntax valid variants = 40287
Build succeeded variants = 22914
Time elapsed = 17 hours 42 minutes 18 seconds
Exit status = FAILURE (maximum generation)
