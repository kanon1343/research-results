2023-10-31 05:22:15 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-10-31 05:22:15 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-10-31 05:22:15 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-10-31 05:22:15 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/kgenprog-8.toml (set by command line)
rootDir = /home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8 (set in config file)
productPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/java] (set in config file)
testPaths = [/home/fse-pluto/Downloads/kGenProg-1.8.2/example/codec8/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.codec.binary.Base64InputStreamTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 6 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /home/fse-pluto/Desktop/research
version = 1.8.2
================================================================
2023-10-31 05:22:18 [main] [INFO]  KGenProgMain - initial failed tests (1/12)
org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105: null

2023-10-31 05:22:18 [main] [INFO]  KGenProgMain - GA started
2023-10-31 05:22:18 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-10-31 05:46:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 2 seconds
Variants: generated 50, build-succeeded 9, build-failed 33, syntax-invalid 3, redundant 5
Fitness: max 0.917(6), min 0.333(1), ave 0.815
Test execution time: sum 1440848 ms, max 1440034 ms, min 30 ms
----------------------------------------------------------------

2023-10-31 05:46:21 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-10-31 05:46:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 4 seconds
Variants: generated 50, build-succeeded 9, build-failed 26, syntax-invalid 6, redundant 9
Fitness: max 1(1), min 0.667(1), ave 0.861
Test execution time: sum 663 ms, max 109 ms, min 28 ms
----------------------------------------------------------------

2023-10-31 05:46:23 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-10-31 05:46:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 minutes 6 seconds
Variants: generated 100, build-succeeded 24, build-failed 22, syntax-invalid 6, redundant 48
Fitness: max 0.917(6), min 0.583(1), ave 0.785
Test execution time: sum 1076 ms, max 98 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 05:46:25 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-10-31 05:48:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 52 seconds
Variants: generated 100, build-succeeded 32, build-failed 26, syntax-invalid 7, redundant 35
Fitness: max 0.917(11), min 0.5(1), ave 0.807
Test execution time: sum 103988 ms, max 102453 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 05:48:11 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-10-31 05:48:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 minutes 55 seconds
Variants: generated 100, build-succeeded 12, build-failed 35, syntax-invalid 13, redundant 40
Fitness: max 0.917(11), min 0.833(1), ave 0.91
Test execution time: sum 971 ms, max 95 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 05:48:14 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-10-31 06:00:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 minutes 57 seconds
Variants: generated 100, build-succeeded 13, build-failed 30, syntax-invalid 13, redundant 44
Fitness: max 0.917(9), min 0.583(2), ave 0.84
Test execution time: sum 720831 ms, max 720022 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 06:00:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-10-31 06:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 1 seconds
Variants: generated 100, build-succeeded 33, build-failed 31, syntax-invalid 13, redundant 23
Fitness: max 0.917(24), min 0.333(1), ave 0.836
Test execution time: sum 1442383 ms, max 1440022 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:24:20 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-10-31 06:24:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 5 seconds
Variants: generated 100, build-succeeded 28, build-failed 24, syntax-invalid 19, redundant 29
Fitness: max 1(1), min 0.5(1), ave 0.887
Test execution time: sum 2097 ms, max 94 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:24:24 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-10-31 06:24:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 9 seconds
Variants: generated 100, build-succeeded 19, build-failed 30, syntax-invalid 17, redundant 34
Fitness: max 0.917(18), min 0.75(1), ave 0.908
Test execution time: sum 1571 ms, max 102 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:24:27 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-10-31 06:24:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 13 seconds
Variants: generated 100, build-succeeded 28, build-failed 29, syntax-invalid 20, redundant 23
Fitness: max 1(1), min 0.75(2), ave 0.905
Test execution time: sum 2209 ms, max 97 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:24:32 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-10-31 06:24:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 17 seconds
Variants: generated 100, build-succeeded 26, build-failed 38, syntax-invalid 13, redundant 23
Fitness: max 0.917(21), min 0.5(1), ave 0.875
Test execution time: sum 2016 ms, max 115 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:24:36 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-10-31 06:24:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 21 seconds
Variants: generated 100, build-succeeded 28, build-failed 27, syntax-invalid 23, redundant 22
Fitness: max 0.917(25), min 0.75(3), ave 0.899
Test execution time: sum 2225 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:24:40 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-10-31 06:39:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 25 seconds
Variants: generated 100, build-succeeded 33, build-failed 22, syntax-invalid 27, redundant 18
Fitness: max 0.917(28), min 0.5(1), ave 0.881
Test execution time: sum 902558 ms, max 900025 ms, min 20 ms
----------------------------------------------------------------

2023-10-31 06:39:44 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-10-31 06:39:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 30 seconds
Variants: generated 100, build-succeeded 34, build-failed 33, syntax-invalid 22, redundant 11
Fitness: max 0.917(31), min 0.75(3), ave 0.902
Test execution time: sum 2830 ms, max 178 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:39:49 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-10-31 06:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 36 seconds
Variants: generated 100, build-succeeded 37, build-failed 32, syntax-invalid 14, redundant 17
Fitness: max 0.917(36), min 0.75(1), ave 0.912
Test execution time: sum 3227 ms, max 112 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:39:55 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-10-31 06:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 41 seconds
Variants: generated 100, build-succeeded 38, build-failed 30, syntax-invalid 22, redundant 10
Fitness: max 1(1), min 0.75(5), ave 0.897
Test execution time: sum 3013 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:40:00 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-10-31 06:40:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 48 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 11, redundant 19
Fitness: max 0.917(37), min 0.75(2), ave 0.908
Test execution time: sum 3495 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:40:07 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-10-31 06:40:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 54 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 13, redundant 15
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 4003 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:40:13 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-10-31 06:40:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 1 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 13, redundant 9
Fitness: max 0.917(42), min 0.833(1), ave 0.915
Test execution time: sum 4004 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:40:20 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-10-31 06:40:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 8 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 15, redundant 10
Fitness: max 0.917(41), min 0.833(1), ave 0.915
Test execution time: sum 4358 ms, max 586 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 06:40:27 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-10-31 06:42:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 0 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 16, redundant 12
Fitness: max 0.917(39), min 0.5(1), ave 0.897
Test execution time: sum 109296 ms, max 105580 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:42:19 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-10-31 06:42:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 8 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 8, redundant 13
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4754 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 06:42:27 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-10-31 06:42:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 15 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 14, redundant 12
Fitness: max 0.917(45), min 0.75(2), ave 0.91
Test execution time: sum 4011 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:42:33 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-10-31 06:42:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 21 seconds
Variants: generated 100, build-succeeded 40, build-failed 26, syntax-invalid 19, redundant 15
Fitness: max 0.917(40), min 0.917(40), ave 0.917
Test execution time: sum 3564 ms, max 100 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 06:42:40 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-10-31 06:42:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 26 seconds
Variants: generated 100, build-succeeded 34, build-failed 35, syntax-invalid 20, redundant 11
Fitness: max 0.917(33), min 0.75(1), ave 0.912
Test execution time: sum 2905 ms, max 99 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:42:45 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-10-31 06:42:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 33 seconds
Variants: generated 100, build-succeeded 37, build-failed 30, syntax-invalid 21, redundant 12
Fitness: max 0.917(36), min 0.75(1), ave 0.912
Test execution time: sum 3259 ms, max 122 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 06:42:51 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-10-31 06:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 40 seconds
Variants: generated 100, build-succeeded 50, build-failed 23, syntax-invalid 14, redundant 13
Fitness: max 0.917(43), min 0.75(6), ave 0.895
Test execution time: sum 4634 ms, max 538 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:42:59 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-10-31 06:43:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 18, redundant 10
Fitness: max 0.917(46), min 0.5(1), ave 0.905
Test execution time: sum 4268 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 06:43:06 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-10-31 06:43:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 54 seconds
Variants: generated 100, build-succeeded 39, build-failed 30, syntax-invalid 17, redundant 14
Fitness: max 0.917(35), min 0.75(4), ave 0.9
Test execution time: sum 3296 ms, max 116 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 06:43:13 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-10-31 07:00:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 45 seconds
Variants: generated 100, build-succeeded 46, build-failed 30, syntax-invalid 15, redundant 9
Fitness: max 1(1), min 0.5(2), ave 0.882
Test execution time: sum 1008589 ms, max 900022 ms, min 20 ms
----------------------------------------------------------------

2023-10-31 07:00:04 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-10-31 07:00:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 37 minutes 53 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 7, redundant 17
Fitness: max 0.917(45), min 0.25(1), ave 0.88
Test execution time: sum 4295 ms, max 117 ms, min 20 ms
----------------------------------------------------------------

2023-10-31 07:00:12 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-10-31 07:00:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 5, redundant 12
Fitness: max 0.917(51), min 0.75(5), ave 0.901
Test execution time: sum 4706 ms, max 124 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:00:20 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-10-31 07:00:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 9 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 6, redundant 14
Fitness: max 0.917(47), min 0.75(2), ave 0.91
Test execution time: sum 4433 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:00:28 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-10-31 07:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 38 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 8, redundant 9
Fitness: max 0.917(47), min 0(1), ave 0.898
Test execution time: sum 4392 ms, max 134 ms, min 20 ms
----------------------------------------------------------------

2023-10-31 07:00:36 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-10-31 07:18:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 11, redundant 13
Fitness: max 0.917(43), min 0.333(1), ave 0.895
Test execution time: sum 1083993 ms, max 1080021 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:18:44 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-10-31 07:18:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 33 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 6, redundant 14
Fitness: max 1(1), min 0.75(3), ave 0.909
Test execution time: sum 4830 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:18:52 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-10-31 07:19:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 41 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 7, redundant 12
Fitness: max 0.917(50), min 0.583(1), ave 0.906
Test execution time: sum 4770 ms, max 127 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:19:00 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-10-31 07:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 50 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 7, redundant 10
Fitness: max 0.917(56), min 0.75(4), ave 0.906
Test execution time: sum 5336 ms, max 125 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:19:09 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-10-31 07:19:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 58 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 13, redundant 12
Fitness: max 0.917(41), min 0(1), ave 0.895
Test execution time: sum 3801 ms, max 118 ms, min 20 ms
----------------------------------------------------------------

2023-10-31 07:19:17 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-10-31 07:19:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 57 minutes 4 seconds
Variants: generated 100, build-succeeded 31, build-failed 35, syntax-invalid 24, redundant 10
Fitness: max 0.917(31), min 0.917(31), ave 0.917
Test execution time: sum 2913 ms, max 123 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 07:19:23 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-10-31 07:20:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 58 minutes 22 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 17, redundant 7
Fitness: max 0.917(43), min 0.5(1), ave 0.894
Test execution time: sum 75202 ms, max 71130 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:20:41 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-10-31 07:35:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 30 seconds
Variants: generated 100, build-succeeded 41, build-failed 30, syntax-invalid 10, redundant 19
Fitness: max 0.917(38), min 0.583(1), ave 0.9
Test execution time: sum 903600 ms, max 900022 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:35:49 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-10-31 07:35:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 6, redundant 9
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 5322 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:35:58 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-10-31 07:36:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 47 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 10, redundant 13
Fitness: max 0.917(45), min 0.5(1), ave 0.901
Test execution time: sum 4397 ms, max 129 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 07:36:06 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-10-31 07:36:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 13 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 4, redundant 10
Fitness: max 0.917(55), min 0.75(2), ave 0.911
Test execution time: sum 5227 ms, max 135 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:36:15 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-10-31 07:36:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 6 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 3, redundant 11
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5602 ms, max 538 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 07:36:25 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-10-31 07:36:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 14 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 4, redundant 15
Fitness: max 0.917(48), min 0.833(1), ave 0.915
Test execution time: sum 4620 ms, max 123 ms, min 31 ms
----------------------------------------------------------------

2023-10-31 07:36:33 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-10-31 07:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 24 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 4, redundant 11
Fitness: max 0.917(56), min 0.75(2), ave 0.911
Test execution time: sum 5486 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:36:43 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-10-31 07:36:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 14 minutes 34 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 4, redundant 8
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 5582 ms, max 124 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 07:36:53 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-10-31 07:52:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 44 seconds
Variants: generated 100, build-succeeded 64, build-failed 18, syntax-invalid 8, redundant 10
Fitness: max 1(1), min 0.583(2), ave 0.906
Test execution time: sum 905787 ms, max 900022 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:52:03 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-10-31 07:52:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 29 minutes 53 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 10, redundant 5
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 4428 ms, max 117 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:52:12 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-10-31 07:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 23, syntax-invalid 13, redundant 8
Fitness: max 0.917(54), min 0.75(2), ave 0.911
Test execution time: sum 5059 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:52:21 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-10-31 07:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 10, redundant 5
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 5365 ms, max 120 ms, min 29 ms
----------------------------------------------------------------

2023-10-31 07:52:31 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-10-31 07:52:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 8, redundant 11
Fitness: max 0.917(54), min 0.5(1), ave 0.904
Test execution time: sum 5162 ms, max 128 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:52:41 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-10-31 07:52:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 5, redundant 9
Fitness: max 0.917(56), min 0.75(2), ave 0.911
Test execution time: sum 5260 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 07:52:50 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-10-31 08:17:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 41 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 9, redundant 8
Fitness: max 1(1), min 0.333(1), ave 0.908
Test execution time: sum 1445005 ms, max 1440021 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 08:17:00 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-10-31 08:17:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 15, redundant 8
Fitness: max 1(1), min 0.75(2), ave 0.91
Test execution time: sum 4700 ms, max 119 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:17:09 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-10-31 08:17:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 54 minutes 59 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 13, redundant 6
Fitness: max 0.917(45), min 0.75(2), ave 0.91
Test execution time: sum 4383 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:17:18 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-10-31 08:41:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 9 seconds
Variants: generated 100, build-succeeded 57, build-failed 20, syntax-invalid 12, redundant 11
Fitness: max 0.917(54), min 0.333(1), ave 0.901
Test execution time: sum 1445477 ms, max 1440022 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:41:28 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-10-31 08:41:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 11, redundant 7
Fitness: max 1(1), min 0.917(51), ave 0.918
Test execution time: sum 5169 ms, max 126 ms, min 76 ms
----------------------------------------------------------------

2023-10-31 08:41:37 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-10-31 08:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 14, redundant 5
Fitness: max 0.917(51), min 0.667(1), ave 0.909
Test execution time: sum 5164 ms, max 121 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 08:41:47 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-10-31 08:41:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 37 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 18, redundant 7
Fitness: max 0.917(45), min 0.75(4), ave 0.903
Test execution time: sum 4573 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:41:56 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-10-31 08:42:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 46 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0.917(41), min 0.75(3), ave 0.905
Test execution time: sum 4103 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:42:05 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-10-31 08:42:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 19 minutes 56 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 16, redundant 2
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 5189 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:42:15 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-10-31 08:42:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 6 seconds
Variants: generated 100, build-succeeded 53, build-failed 20, syntax-invalid 23, redundant 4
Fitness: max 0.917(51), min 0.75(2), ave 0.91
Test execution time: sum 4969 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:42:25 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-10-31 08:42:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 15 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 14, redundant 4
Fitness: max 0.917(47), min 0.75(1), ave 0.912
Test execution time: sum 4617 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:42:34 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-10-31 08:57:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 25 seconds
Variants: generated 100, build-succeeded 50, build-failed 21, syntax-invalid 23, redundant 6
Fitness: max 1(2), min 0.583(1), ave 0.913
Test execution time: sum 904658 ms, max 900023 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 08:57:44 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-10-31 08:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 35 seconds
Variants: generated 100, build-succeeded 58, build-failed 24, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5487 ms, max 123 ms, min 25 ms
----------------------------------------------------------------

2023-10-31 08:57:54 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-10-31 08:58:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 43 seconds
Variants: generated 100, build-succeeded 37, build-failed 33, syntax-invalid 25, redundant 5
Fitness: max 1(1), min 0.75(2), ave 0.91
Test execution time: sum 3456 ms, max 106 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:58:02 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-10-31 08:58:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 35 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 15, redundant 7
Fitness: max 0.917(50), min 0.5(1), ave 0.903
Test execution time: sum 4755 ms, max 122 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 08:58:12 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-10-31 08:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 2 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 23, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4061 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:58:21 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-10-31 08:58:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 11 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 19, redundant 9
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4198 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 08:58:30 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-10-31 08:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 22 seconds
Variants: generated 100, build-succeeded 57, build-failed 25, syntax-invalid 14, redundant 4
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5355 ms, max 128 ms, min 63 ms
----------------------------------------------------------------

2023-10-31 08:58:41 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-10-31 08:58:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 30 seconds
Variants: generated 100, build-succeeded 39, build-failed 33, syntax-invalid 25, redundant 3
Fitness: max 1(1), min 0.5(1), ave 0.904
Test execution time: sum 3626 ms, max 121 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:58:49 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-10-31 08:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 40 seconds
Variants: generated 100, build-succeeded 51, build-failed 24, syntax-invalid 19, redundant 6
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4820 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:58:59 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-10-31 08:59:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 36 minutes 50 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 14, redundant 7
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 5126 ms, max 134 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:59:09 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-10-31 08:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 0 seconds
Variants: generated 100, build-succeeded 43, build-failed 32, syntax-invalid 19, redundant 6
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4325 ms, max 128 ms, min 78 ms
----------------------------------------------------------------

2023-10-31 08:59:19 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-10-31 08:59:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 10 seconds
Variants: generated 100, build-succeeded 50, build-failed 25, syntax-invalid 19, redundant 6
Fitness: max 0.917(48), min 0.75(2), ave 0.91
Test execution time: sum 4706 ms, max 143 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:59:29 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-10-31 08:59:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 19 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 21, redundant 5
Fitness: max 1(1), min 0.917(43), ave 0.919
Test execution time: sum 4171 ms, max 119 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 08:59:38 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-10-31 08:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 28 seconds
Variants: generated 100, build-succeeded 40, build-failed 34, syntax-invalid 20, redundant 6
Fitness: max 0.917(38), min 0.75(2), ave 0.908
Test execution time: sum 3716 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 08:59:47 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-10-31 08:59:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 37 minutes 38 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 17, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4806 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 08:59:57 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-10-31 09:15:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 48 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 15, redundant 6
Fitness: max 0.917(50), min 0.583(1), ave 0.907
Test execution time: sum 904607 ms, max 900023 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:15:07 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-10-31 09:15:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 52 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 14, redundant 4
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 4641 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:15:17 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-10-31 09:15:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 30, syntax-invalid 9, redundant 5
Fitness: max 0.917(54), min 0.75(1), ave 0.912
Test execution time: sum 5234 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:15:28 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-10-31 09:15:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 12, redundant 4
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 4989 ms, max 127 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 09:15:39 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-10-31 09:15:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 29 seconds
Variants: generated 100, build-succeeded 39, build-failed 31, syntax-invalid 26, redundant 4
Fitness: max 0.917(38), min 0.75(1), ave 0.912
Test execution time: sum 3489 ms, max 108 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:15:48 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-10-31 09:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 53 minutes 37 seconds
Variants: generated 100, build-succeeded 37, build-failed 31, syntax-invalid 24, redundant 8
Fitness: max 1(1), min 0.917(36), ave 0.919
Test execution time: sum 3380 ms, max 125 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:15:56 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-10-31 09:31:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 48 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.583(1), ave 0.912
Test execution time: sum 904907 ms, max 900023 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 09:31:07 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-10-31 09:31:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 8 minutes 57 seconds
Variants: generated 100, build-succeeded 42, build-failed 32, syntax-invalid 21, redundant 5
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3923 ms, max 121 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:31:16 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-10-31 09:31:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 7 seconds
Variants: generated 100, build-succeeded 39, build-failed 28, syntax-invalid 26, redundant 7
Fitness: max 0.917(37), min 0.75(1), ave 0.91
Test execution time: sum 3553 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:31:26 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-10-31 09:31:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 17 seconds
Variants: generated 100, build-succeeded 46, build-failed 29, syntax-invalid 16, redundant 9
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4412 ms, max 129 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:31:36 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-10-31 09:31:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 27 seconds
Variants: generated 100, build-succeeded 43, build-failed 31, syntax-invalid 21, redundant 5
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 3819 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:31:46 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-10-31 09:31:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 38 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 15, redundant 7
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4586 ms, max 135 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:31:57 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-10-31 09:32:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 9 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 9, redundant 5
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5602 ms, max 128 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 09:32:09 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-10-31 09:32:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 2 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 15, redundant 6
Fitness: max 1(1), min 0.833(1), ave 0.917
Test execution time: sum 4832 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:32:21 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-10-31 09:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 12 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 15, redundant 9
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4248 ms, max 124 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 09:32:31 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-10-31 09:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 25 seconds
Variants: generated 100, build-succeeded 62, build-failed 24, syntax-invalid 10, redundant 4
Fitness: max 0.917(61), min 0.75(1), ave 0.914
Test execution time: sum 5914 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:32:44 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-10-31 09:32:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 37 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 15, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.913
Test execution time: sum 4974 ms, max 141 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:32:56 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-10-31 09:33:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 10 minutes 50 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 6, redundant 7
Fitness: max 0.917(56), min 0.833(1), ave 0.915
Test execution time: sum 5945 ms, max 231 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 09:33:09 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-10-31 09:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5318 ms, max 125 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 09:33:22 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-10-31 09:33:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 9, redundant 7
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4792 ms, max 125 ms, min 31 ms
----------------------------------------------------------------

2023-10-31 09:33:33 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-10-31 09:33:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 26 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 9, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5154 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 09:33:45 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-10-31 09:33:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 38 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 11, redundant 9
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4984 ms, max 114 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 09:33:57 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-10-31 09:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 51 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 11, redundant 4
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 5018 ms, max 109 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:34:10 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-10-31 09:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 3 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 12, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 5143 ms, max 132 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 09:34:22 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-10-31 09:34:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 15 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4839 ms, max 120 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:34:34 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-10-31 09:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 26 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 16, redundant 5
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4530 ms, max 133 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:34:45 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-10-31 09:34:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 39 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 11, redundant 1
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 5217 ms, max 127 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 09:34:58 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-10-31 09:35:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 12 minutes 52 seconds
Variants: generated 100, build-succeeded 58, build-failed 31, syntax-invalid 7, redundant 4
Fitness: max 0.917(58), min 0.917(58), ave 0.917
Test execution time: sum 5454 ms, max 127 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 09:35:11 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-10-31 09:35:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 5 seconds
Variants: generated 100, build-succeeded 63, build-failed 23, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.5(1), ave 0.906
Test execution time: sum 5512 ms, max 118 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:35:24 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-10-31 09:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 19 seconds
Variants: generated 100, build-succeeded 65, build-failed 26, syntax-invalid 5, redundant 4
Fitness: max 0.917(64), min 0.333(1), ave 0.908
Test execution time: sum 5880 ms, max 129 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 09:35:38 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-10-31 09:35:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 32 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 9, redundant 6
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5011 ms, max 125 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 09:35:51 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-10-31 09:36:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 44 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 11, redundant 3
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4920 ms, max 120 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 09:36:03 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-10-31 09:36:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 13 minutes 59 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 4, redundant 7
Fitness: max 0.917(60), min 0.75(1), ave 0.913
Test execution time: sum 5847 ms, max 130 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 09:36:17 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-10-31 09:36:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 12 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5578 ms, max 124 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 09:36:31 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-10-31 09:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 24 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 18, redundant 3
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4532 ms, max 129 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 09:36:43 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-10-31 09:36:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 14 minutes 38 seconds
Variants: generated 100, build-succeeded 61, build-failed 22, syntax-invalid 10, redundant 7
Fitness: max 0.917(61), min 0.917(61), ave 0.917
Test execution time: sum 5893 ms, max 127 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 09:36:57 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-10-31 10:22:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 59 minutes 52 seconds
Variants: generated 100, build-succeeded 64, build-failed 20, syntax-invalid 12, redundant 4
Fitness: max 0.917(61), min 0.333(2), ave 0.896
Test execution time: sum 2705921 ms, max 1440022 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:22:11 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-10-31 10:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 15, redundant 6
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 5274 ms, max 132 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 10:22:24 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-10-31 10:23:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 28 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 20, redundant 0
Fitness: max 0.917(45), min 0.5(1), ave 0.901
Test execution time: sum 75833 ms, max 71564 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:23:47 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-10-31 10:23:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 39 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 18, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4249 ms, max 108 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 10:23:58 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-10-31 10:24:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 1 minutes 51 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 15, redundant 7
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 4012 ms, max 113 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:24:10 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-10-31 10:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 3 seconds
Variants: generated 100, build-succeeded 49, build-failed 32, syntax-invalid 14, redundant 5
Fitness: max 0.917(47), min 0.75(2), ave 0.91
Test execution time: sum 4433 ms, max 115 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:24:22 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-10-31 10:24:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 17 seconds
Variants: generated 100, build-succeeded 60, build-failed 22, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 5450 ms, max 126 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:24:36 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-10-31 10:24:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 14, redundant 8
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 5019 ms, max 123 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 10:24:49 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-10-31 10:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 42 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 19, redundant 5
Fitness: max 0.917(42), min 0.75(1), ave 0.909
Test execution time: sum 4075 ms, max 133 ms, min 21 ms
----------------------------------------------------------------

2023-10-31 10:25:01 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-10-31 10:25:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 2 minutes 55 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0.917(50), ave 0.918
Test execution time: sum 4891 ms, max 125 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 10:25:14 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-10-31 10:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 3 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 25, syntax-invalid 13, redundant 7
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5266 ms, max 129 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:25:28 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-10-31 10:43:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 21 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 20, redundant 1
Fitness: max 1(1), min 0.333(1), ave 0.904
Test execution time: sum 1084788 ms, max 1080021 ms, min 25 ms
----------------------------------------------------------------

2023-10-31 10:43:40 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-10-31 10:43:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 33 seconds
Variants: generated 100, build-succeeded 44, build-failed 29, syntax-invalid 20, redundant 7
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4090 ms, max 122 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 10:43:52 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-10-31 10:44:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 17, redundant 3
Fitness: max 1(1), min 0.75(2), ave 0.91
Test execution time: sum 4526 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:44:05 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-10-31 10:44:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 21 minutes 58 seconds
Variants: generated 100, build-succeeded 48, build-failed 28, syntax-invalid 20, redundant 4
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4514 ms, max 128 ms, min 35 ms
----------------------------------------------------------------

2023-10-31 10:44:17 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-10-31 10:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 11 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 14, redundant 8
Fitness: max 0.917(50), min 0.75(1), ave 0.913
Test execution time: sum 4742 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:44:30 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-10-31 10:44:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 23 seconds
Variants: generated 100, build-succeeded 48, build-failed 20, syntax-invalid 21, redundant 11
Fitness: max 1(1), min 0.75(2), ave 0.911
Test execution time: sum 4329 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:44:42 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-10-31 10:44:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 37 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 14, redundant 6
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4644 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:44:56 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-10-31 10:45:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 22 minutes 49 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 19, redundant 4
Fitness: max 0.917(43), min 0.75(2), ave 0.909
Test execution time: sum 4121 ms, max 134 ms, min 28 ms
----------------------------------------------------------------

2023-10-31 10:45:08 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-10-31 10:45:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 2 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 18, redundant 3
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4558 ms, max 129 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:45:21 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-10-31 10:45:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 15 seconds
Variants: generated 100, build-succeeded 45, build-failed 36, syntax-invalid 15, redundant 4
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4193 ms, max 127 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:45:34 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-10-31 10:45:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 15, redundant 3
Fitness: max 1(1), min 0.75(3), ave 0.909
Test execution time: sum 5427 ms, max 571 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:45:48 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-10-31 10:46:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 43 seconds
Variants: generated 100, build-succeeded 53, build-failed 30, syntax-invalid 13, redundant 4
Fitness: max 0.917(51), min 0.75(2), ave 0.91
Test execution time: sum 4823 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:46:02 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-10-31 10:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 23 minutes 56 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 18, redundant 2
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4775 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:46:15 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-10-31 10:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 10 seconds
Variants: generated 100, build-succeeded 52, build-failed 22, syntax-invalid 18, redundant 8
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4639 ms, max 119 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 10:46:29 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-10-31 10:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 23 seconds
Variants: generated 100, build-succeeded 47, build-failed 25, syntax-invalid 19, redundant 9
Fitness: max 1(1), min 0.917(46), ave 0.918
Test execution time: sum 4208 ms, max 120 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 10:46:41 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-10-31 10:46:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 36 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 15, redundant 2
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4690 ms, max 124 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 10:46:55 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-10-31 10:47:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 24 minutes 51 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 8, redundant 7
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 4900 ms, max 127 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:47:10 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-10-31 10:47:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 5 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4682 ms, max 123 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 10:47:24 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-10-31 10:47:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 18 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 16, redundant 4
Fitness: max 1(2), min 0.917(47), ave 0.92
Test execution time: sum 4410 ms, max 125 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:47:37 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-10-31 10:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 31 seconds
Variants: generated 100, build-succeeded 42, build-failed 34, syntax-invalid 21, redundant 3
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3713 ms, max 123 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 10:47:50 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-10-31 10:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 22, syntax-invalid 14, redundant 8
Fitness: max 0.917(54), min 0.667(1), ave 0.909
Test execution time: sum 4897 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:48:04 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-10-31 10:48:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 25 minutes 59 seconds
Variants: generated 100, build-succeeded 54, build-failed 25, syntax-invalid 11, redundant 10
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 4805 ms, max 122 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:48:18 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-10-31 10:48:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 12 seconds
Variants: generated 100, build-succeeded 45, build-failed 27, syntax-invalid 22, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4079 ms, max 123 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:48:31 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-10-31 10:48:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 25 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 18, redundant 5
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4652 ms, max 124 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 10:48:44 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-10-31 10:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 40 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 16, redundant 6
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 5000 ms, max 124 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:48:59 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-10-31 10:49:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 26 minutes 55 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 12, redundant 4
Fitness: max 0.917(56), min 0.833(1), ave 0.915
Test execution time: sum 5253 ms, max 125 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 10:49:14 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-10-31 10:49:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 7, redundant 5
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5186 ms, max 128 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 10:49:29 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-10-31 10:49:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 25 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0.667(1), ave 0.913
Test execution time: sum 4690 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:49:44 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-10-31 10:49:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 40 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 9, redundant 6
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5341 ms, max 128 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 10:49:59 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-10-31 10:50:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 27 minutes 55 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 11, redundant 5
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4472 ms, max 125 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 10:50:14 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-10-31 10:50:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 9 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4885 ms, max 131 ms, min 26 ms
----------------------------------------------------------------

2023-10-31 10:50:28 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-10-31 10:50:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 25 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 12, redundant 8
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5318 ms, max 134 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 10:50:44 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-10-31 10:50:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 40 seconds
Variants: generated 100, build-succeeded 49, build-failed 36, syntax-invalid 13, redundant 2
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4957 ms, max 140 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:50:59 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-10-31 10:51:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 28 minutes 54 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 16, redundant 10
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4600 ms, max 132 ms, min 82 ms
----------------------------------------------------------------

2023-10-31 10:51:13 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-10-31 10:51:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 8 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 19, redundant 6
Fitness: max 0.917(47), min 0.75(1), ave 0.913
Test execution time: sum 4963 ms, max 169 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:51:27 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-10-31 10:51:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 23 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 16, redundant 4
Fitness: max 0.917(51), min 0.75(1), ave 0.913
Test execution time: sum 4923 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:51:42 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-10-31 10:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 38 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 18, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4506 ms, max 114 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 10:51:56 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-10-31 10:52:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 29 minutes 52 seconds
Variants: generated 100, build-succeeded 46, build-failed 31, syntax-invalid 17, redundant 6
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4227 ms, max 119 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 10:52:11 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-10-31 10:52:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 6 seconds
Variants: generated 100, build-succeeded 46, build-failed 32, syntax-invalid 21, redundant 1
Fitness: max 0.917(45), min 0.75(1), ave 0.913
Test execution time: sum 4080 ms, max 96 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 10:52:25 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-10-31 10:52:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 21 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 15, redundant 8
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4430 ms, max 121 ms, min 32 ms
----------------------------------------------------------------

2023-10-31 10:52:40 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-10-31 10:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 35 seconds
Variants: generated 100, build-succeeded 48, build-failed 22, syntax-invalid 26, redundant 4
Fitness: max 1(2), min 0.917(46), ave 0.92
Test execution time: sum 4453 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 10:52:54 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-10-31 10:53:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 50 seconds
Variants: generated 100, build-succeeded 50, build-failed 26, syntax-invalid 18, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4431 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:53:08 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-10-31 10:53:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 31 minutes 5 seconds
Variants: generated 100, build-succeeded 56, build-failed 19, syntax-invalid 15, redundant 10
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5043 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 10:53:24 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-10-31 11:08:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 18 seconds
Variants: generated 100, build-succeeded 40, build-failed 26, syntax-invalid 29, redundant 5
Fitness: max 0.917(39), min 0.583(1), ave 0.908
Test execution time: sum 903566 ms, max 900023 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 11:08:37 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-10-31 11:08:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 32 seconds
Variants: generated 100, build-succeeded 44, build-failed 31, syntax-invalid 22, redundant 3
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4084 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 11:08:51 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-10-31 11:09:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 45 seconds
Variants: generated 100, build-succeeded 43, build-failed 26, syntax-invalid 26, redundant 5
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 3928 ms, max 120 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:09:04 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-10-31 11:09:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 1 seconds
Variants: generated 100, build-succeeded 54, build-failed 22, syntax-invalid 17, redundant 7
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 4998 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:09:20 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-10-31 11:09:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 15 seconds
Variants: generated 100, build-succeeded 42, build-failed 26, syntax-invalid 21, redundant 11
Fitness: max 0.917(41), min 0.75(1), ave 0.913
Test execution time: sum 3792 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:09:34 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-10-31 11:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 30 seconds
Variants: generated 100, build-succeeded 45, build-failed 26, syntax-invalid 22, redundant 7
Fitness: max 0.917(44), min 0.75(1), ave 0.913
Test execution time: sum 4126 ms, max 130 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:09:49 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-10-31 11:10:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 43 seconds
Variants: generated 100, build-succeeded 42, build-failed 26, syntax-invalid 26, redundant 6
Fitness: max 0.917(40), min 0.75(2), ave 0.909
Test execution time: sum 3782 ms, max 124 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:10:02 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-10-31 11:10:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 57 seconds
Variants: generated 100, build-succeeded 44, build-failed 25, syntax-invalid 26, redundant 5
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4117 ms, max 122 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 11:10:16 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-10-31 11:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 11 seconds
Variants: generated 100, build-succeeded 38, build-failed 32, syntax-invalid 26, redundant 4
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3500 ms, max 114 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 11:10:30 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-10-31 11:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 25 seconds
Variants: generated 100, build-succeeded 41, build-failed 28, syntax-invalid 25, redundant 6
Fitness: max 0.917(39), min 0.667(1), ave 0.909
Test execution time: sum 3739 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 11:10:44 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-10-31 11:10:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 48 minutes 39 seconds
Variants: generated 100, build-succeeded 38, build-failed 28, syntax-invalid 27, redundant 7
Fitness: max 0.917(38), min 0.917(38), ave 0.917
Test execution time: sum 3574 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:10:58 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-10-31 11:35:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 12 minutes 53 seconds
Variants: generated 100, build-succeeded 42, build-failed 28, syntax-invalid 27, redundant 3
Fitness: max 1(1), min 0.333(1), ave 0.905
Test execution time: sum 1443809 ms, max 1440022 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:35:12 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-10-31 11:35:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 7 seconds
Variants: generated 100, build-succeeded 39, build-failed 26, syntax-invalid 28, redundant 7
Fitness: max 0.917(38), min 0.75(1), ave 0.912
Test execution time: sum 3553 ms, max 115 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:35:26 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-10-31 11:35:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 22 seconds
Variants: generated 100, build-succeeded 49, build-failed 25, syntax-invalid 21, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4617 ms, max 123 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 11:35:41 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-10-31 11:35:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 37 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 20, redundant 5
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4322 ms, max 124 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:35:56 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-10-31 11:36:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 13 minutes 53 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 4891 ms, max 116 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:36:12 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-10-31 11:36:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 8 seconds
Variants: generated 100, build-succeeded 45, build-failed 30, syntax-invalid 20, redundant 5
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4174 ms, max 119 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 11:36:27 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-10-31 11:36:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 24 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 18, redundant 2
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4471 ms, max 117 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:36:43 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-10-31 11:36:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 39 seconds
Variants: generated 100, build-succeeded 44, build-failed 34, syntax-invalid 16, redundant 6
Fitness: max 0.917(43), min 0.75(1), ave 0.913
Test execution time: sum 3908 ms, max 117 ms, min 28 ms
----------------------------------------------------------------

2023-10-31 11:36:58 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-10-31 11:37:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 14 minutes 53 seconds
Variants: generated 100, build-succeeded 41, build-failed 32, syntax-invalid 21, redundant 6
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 3649 ms, max 119 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:37:12 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-10-31 11:37:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 9 seconds
Variants: generated 100, build-succeeded 55, build-failed 23, syntax-invalid 18, redundant 4
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 4884 ms, max 120 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:37:28 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-10-31 11:37:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 25 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 14, redundant 3
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4538 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:37:44 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-10-31 11:38:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 15 minutes 42 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 17, redundant 5
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4602 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:38:00 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-10-31 11:53:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 30 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 20, syntax-invalid 13, redundant 6
Fitness: max 0.917(57), min 0.583(1), ave 0.899
Test execution time: sum 905351 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:53:18 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-10-31 11:53:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 18 seconds
Variants: generated 100, build-succeeded 61, build-failed 22, syntax-invalid 8, redundant 9
Fitness: max 0.917(59), min 0.75(1), ave 0.913
Test execution time: sum 6168 ms, max 563 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 11:53:37 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-10-31 11:53:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 35 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 13, redundant 4
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5278 ms, max 123 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 11:53:54 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-10-31 11:54:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 31 minutes 54 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 4, redundant 9
Fitness: max 0.917(64), min 0.917(64), ave 0.917
Test execution time: sum 5998 ms, max 124 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:54:13 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-10-31 11:54:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 11, redundant 3
Fitness: max 0.917(57), min 0.75(1), ave 0.914
Test execution time: sum 5429 ms, max 129 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:54:31 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-10-31 11:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 29 seconds
Variants: generated 100, build-succeeded 55, build-failed 28, syntax-invalid 14, redundant 3
Fitness: max 1(2), min 0.917(53), ave 0.92
Test execution time: sum 4880 ms, max 125 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 11:54:48 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-10-31 11:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 32 minutes 46 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 10, redundant 7
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5206 ms, max 124 ms, min 67 ms
----------------------------------------------------------------

2023-10-31 11:55:05 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-10-31 11:55:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 33 minutes 4 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 11, redundant 2
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5046 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 11:55:23 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-10-31 12:10:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 21 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 12, redundant 4
Fitness: max 0.917(51), min 0.583(1), ave 0.91
Test execution time: sum 904797 ms, max 900024 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:10:40 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-10-31 12:10:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 39 seconds
Variants: generated 100, build-succeeded 58, build-failed 23, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 5333 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:10:58 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-10-31 12:11:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 48 minutes 56 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 12, redundant 4
Fitness: max 1(1), min 0.5(1), ave 0.91
Test execution time: sum 4394 ms, max 127 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 12:11:15 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-10-31 12:11:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 15 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 7, redundant 5
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5220 ms, max 128 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 12:11:34 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-10-31 12:11:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5057 ms, max 130 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 12:11:51 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-10-31 12:12:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 49 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 27, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0.917(61), ave 0.918
Test execution time: sum 5690 ms, max 124 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 12:12:10 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-10-31 12:12:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 29, syntax-invalid 13, redundant 2
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 5043 ms, max 123 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 12:12:28 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-10-31 12:12:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 25 seconds
Variants: generated 100, build-succeeded 47, build-failed 30, syntax-invalid 19, redundant 4
Fitness: max 0.917(46), min 0.75(1), ave 0.913
Test execution time: sum 4243 ms, max 122 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:12:44 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-10-31 12:13:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 50 minutes 42 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 17, redundant 6
Fitness: max 0.917(48), min 0.75(2), ave 0.91
Test execution time: sum 4471 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:13:01 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-10-31 12:13:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 23, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0.75(1), ave 0.914
Test execution time: sum 5435 ms, max 578 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 12:13:19 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-10-31 12:13:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 17 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.75(3), ave 0.908
Test execution time: sum 4435 ms, max 116 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:13:35 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-10-31 12:13:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 34 seconds
Variants: generated 100, build-succeeded 56, build-failed 26, syntax-invalid 14, redundant 4
Fitness: max 1(1), min 0.917(55), ave 0.918
Test execution time: sum 5140 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:13:53 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-10-31 12:14:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 51 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0.917(57), min 0.917(57), ave 0.917
Test execution time: sum 5237 ms, max 113 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 12:14:12 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-10-31 12:14:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 52 minutes 11 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 13, redundant 1
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5069 ms, max 127 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 12:14:29 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-10-31 12:32:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 28 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 14, redundant 4
Fitness: max 0.917(52), min 0.5(1), ave 0.909
Test execution time: sum 1084782 ms, max 1080022 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 12:32:47 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-10-31 12:33:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 10 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 17, redundant 3
Fitness: max 0.917(47), min 0.833(1), ave 0.915
Test execution time: sum 4391 ms, max 123 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:33:04 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-10-31 12:33:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 3 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 17, redundant 2
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4830 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 12:33:22 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-10-31 12:33:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 21 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 13, redundant 6
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5034 ms, max 123 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 12:33:40 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-10-31 12:33:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 39 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 13, redundant 6
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4926 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:33:58 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-10-31 12:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 11 minutes 57 seconds
Variants: generated 100, build-succeeded 46, build-failed 34, syntax-invalid 13, redundant 7
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4287 ms, max 126 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:34:16 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-10-31 12:34:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 24, syntax-invalid 18, redundant 5
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4778 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 12:34:33 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-10-31 12:34:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 12 minutes 31 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 17, redundant 2
Fitness: max 1(2), min 0.917(46), ave 0.92
Test execution time: sum 4328 ms, max 126 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 12:34:50 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-10-31 12:50:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 27 minutes 49 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 13, redundant 4
Fitness: max 0.917(47), min 0.583(1), ave 0.91
Test execution time: sum 904337 ms, max 900024 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 12:50:08 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-10-31 12:50:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 7 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 16, redundant 6
Fitness: max 0.917(52), min 0.75(1), ave 0.914
Test execution time: sum 4851 ms, max 99 ms, min 31 ms
----------------------------------------------------------------

2023-10-31 12:50:26 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-10-31 12:50:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 24 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 21, redundant 6
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4160 ms, max 121 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 12:50:43 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-10-31 12:51:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 28 minutes 42 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 0.917(48), min 0.75(1), ave 0.913
Test execution time: sum 4510 ms, max 125 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:51:01 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-10-31 12:51:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 0 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 16, redundant 4
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5070 ms, max 125 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 12:51:19 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-10-31 12:51:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 29 minutes 17 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 22, redundant 6
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 4050 ms, max 134 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 12:51:36 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-10-31 13:06:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 36 seconds
Variants: generated 100, build-succeeded 54, build-failed 27, syntax-invalid 17, redundant 2
Fitness: max 0.917(53), min 0.583(1), ave 0.91
Test execution time: sum 905028 ms, max 900024 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:06:55 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-10-31 13:07:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 44 minutes 54 seconds
Variants: generated 100, build-succeeded 51, build-failed 27, syntax-invalid 16, redundant 6
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4800 ms, max 106 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 13:07:13 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-10-31 13:07:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 11 seconds
Variants: generated 100, build-succeeded 44, build-failed 28, syntax-invalid 21, redundant 7
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4297 ms, max 119 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 13:07:30 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-10-31 13:07:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 13, redundant 7
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 5473 ms, max 140 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 13:07:50 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-10-31 13:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 45 minutes 53 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 10, redundant 2
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 6720 ms, max 143 ms, min 82 ms
----------------------------------------------------------------

2023-10-31 13:08:12 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-10-31 13:08:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 13 seconds
Variants: generated 100, build-succeeded 55, build-failed 26, syntax-invalid 14, redundant 5
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 6066 ms, max 144 ms, min 92 ms
----------------------------------------------------------------

2023-10-31 13:08:32 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-10-31 13:08:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 34 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 10, redundant 6
Fitness: max 1(1), min 0.917(59), ave 0.918
Test execution time: sum 6346 ms, max 168 ms, min 79 ms
----------------------------------------------------------------

2023-10-31 13:08:53 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-10-31 13:09:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 16, redundant 2
Fitness: max 0.917(53), min 0.917(53), ave 0.917
Test execution time: sum 4998 ms, max 116 ms, min 90 ms
----------------------------------------------------------------

2023-10-31 13:09:13 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-10-31 13:09:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 14 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 11, redundant 6
Fitness: max 0.917(60), min 0.917(60), ave 0.917
Test execution time: sum 5618 ms, max 120 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:09:33 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-10-31 13:09:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 35 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 11, redundant 8
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 5027 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:09:54 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-10-31 13:10:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 47 minutes 55 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 14, redundant 3
Fitness: max 0.917(54), min 0.917(54), ave 0.917
Test execution time: sum 5117 ms, max 125 ms, min 87 ms
----------------------------------------------------------------

2023-10-31 13:10:14 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-10-31 13:10:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 48 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 14, redundant 1
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 5091 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 13:10:33 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-10-31 13:10:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 48 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 14, redundant 4
Fitness: max 1(1), min 0.917(54), ave 0.918
Test execution time: sum 5139 ms, max 126 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:10:54 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-10-31 13:11:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 48 minutes 54 seconds
Variants: generated 100, build-succeeded 52, build-failed 27, syntax-invalid 15, redundant 6
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4945 ms, max 123 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:11:13 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-10-31 13:11:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 12 seconds
Variants: generated 100, build-succeeded 51, build-failed 20, syntax-invalid 22, redundant 7
Fitness: max 1(1), min 0.75(2), ave 0.912
Test execution time: sum 4674 ms, max 118 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 13:11:31 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-10-31 13:11:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 31 seconds
Variants: generated 100, build-succeeded 48, build-failed 25, syntax-invalid 20, redundant 7
Fitness: max 0.917(46), min 0.5(2), ave 0.899
Test execution time: sum 4251 ms, max 121 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 13:11:50 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-10-31 13:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 hours 49 minutes 50 seconds
Variants: generated 100, build-succeeded 49, build-failed 31, syntax-invalid 16, redundant 4
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4565 ms, max 123 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:12:09 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-10-31 13:27:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 10 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 16, redundant 3
Fitness: max 0.917(50), min 0.583(1), ave 0.91
Test execution time: sum 904655 ms, max 900024 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 13:27:28 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-10-31 13:27:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 31 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 9, redundant 4
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5159 ms, max 118 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:27:50 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-10-31 13:28:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 5 minutes 50 seconds
Variants: generated 100, build-succeeded 48, build-failed 32, syntax-invalid 17, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4533 ms, max 123 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:28:09 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-10-31 13:28:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 10 seconds
Variants: generated 100, build-succeeded 48, build-failed 31, syntax-invalid 16, redundant 5
Fitness: max 0.917(46), min 0.75(2), ave 0.91
Test execution time: sum 4421 ms, max 126 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 13:28:29 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-10-31 13:28:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 29 seconds
Variants: generated 100, build-succeeded 49, build-failed 25, syntax-invalid 20, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4650 ms, max 123 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:28:48 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-10-31 13:29:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 6 minutes 50 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 14, redundant 5
Fitness: max 0.917(56), min 0.917(56), ave 0.917
Test execution time: sum 5241 ms, max 127 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 13:29:09 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-10-31 13:29:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 7 minutes 10 seconds
Variants: generated 100, build-succeeded 49, build-failed 33, syntax-invalid 13, redundant 5
Fitness: max 1(1), min 0.917(48), ave 0.918
Test execution time: sum 4568 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:29:29 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-10-31 13:29:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 7 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 14, redundant 1
Fitness: max 1(1), min 0.917(56), ave 0.918
Test execution time: sum 5317 ms, max 124 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:29:50 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-10-31 13:30:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 7 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 25, syntax-invalid 12, redundant 4
Fitness: max 0.917(59), min 0.917(59), ave 0.917
Test execution time: sum 5523 ms, max 121 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 13:30:11 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-10-31 13:45:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 13 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 15, redundant 6
Fitness: max 0.917(51), min 0.583(1), ave 0.907
Test execution time: sum 904898 ms, max 900024 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 13:45:32 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-10-31 13:45:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 19, syntax-invalid 9, redundant 10
Fitness: max 0.917(62), min 0.917(62), ave 0.917
Test execution time: sum 6047 ms, max 123 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 13:45:55 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-10-31 13:46:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 23 minutes 56 seconds
Variants: generated 100, build-succeeded 56, build-failed 18, syntax-invalid 17, redundant 9
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5372 ms, max 127 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 13:46:15 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-10-31 14:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 17 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 17, redundant 6
Fitness: max 0.917(51), min 0.583(1), ave 0.91
Test execution time: sum 904957 ms, max 900024 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:01:36 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-10-31 14:01:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 38 seconds
Variants: generated 100, build-succeeded 55, build-failed 24, syntax-invalid 15, redundant 6
Fitness: max 0.917(55), min 0.917(55), ave 0.917
Test execution time: sum 5636 ms, max 131 ms, min 76 ms
----------------------------------------------------------------

2023-10-31 14:01:57 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-10-31 14:02:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 39 minutes 58 seconds
Variants: generated 100, build-succeeded 52, build-failed 23, syntax-invalid 18, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4916 ms, max 117 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:02:17 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-10-31 14:02:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 19 seconds
Variants: generated 100, build-succeeded 52, build-failed 30, syntax-invalid 14, redundant 4
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4631 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:02:38 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-10-31 14:03:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 hours 40 minutes 43 seconds
Variants: generated 100, build-succeeded 69, build-failed 21, syntax-invalid 6, redundant 4
Fitness: max 0.917(69), min 0.917(69), ave 0.917
Test execution time: sum 6115 ms, max 101 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 14:03:02 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-10-31 14:27:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 4 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 19, redundant 7
Fitness: max 1(1), min 0.333(1), ave 0.907
Test execution time: sum 1444437 ms, max 1440022 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 14:27:23 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-10-31 14:27:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 13, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 5154 ms, max 107 ms, min 39 ms
----------------------------------------------------------------

2023-10-31 14:27:45 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-10-31 14:28:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 5 minutes 49 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0.917(57), ave 0.918
Test execution time: sum 5387 ms, max 125 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:28:07 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-10-31 14:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 9 seconds
Variants: generated 100, build-succeeded 50, build-failed 30, syntax-invalid 16, redundant 4
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4569 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:28:28 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-10-31 14:28:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 32 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 11, redundant 6
Fitness: max 1(2), min 0(1), ave 0.903
Test execution time: sum 5067 ms, max 124 ms, min 22 ms
----------------------------------------------------------------

2023-10-31 14:28:51 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-10-31 14:29:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 6 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 29, syntax-invalid 13, redundant 7
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 4573 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:29:12 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-10-31 14:29:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 14 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 13, redundant 5
Fitness: max 1(2), min 0.917(51), ave 0.92
Test execution time: sum 4789 ms, max 123 ms, min 69 ms
----------------------------------------------------------------

2023-10-31 14:29:33 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-10-31 14:29:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 36 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 1(2), min 0.75(1), ave 0.917
Test execution time: sum 5065 ms, max 123 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:29:55 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-10-31 14:30:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 7 minutes 56 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 21, redundant 6
Fitness: max 1(1), min 0.75(1), ave 0.915
Test execution time: sum 4229 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:30:15 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-10-31 14:30:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 17 seconds
Variants: generated 100, build-succeeded 45, build-failed 33, syntax-invalid 19, redundant 3
Fitness: max 1(2), min 0.917(43), ave 0.92
Test execution time: sum 4124 ms, max 118 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:30:36 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-10-31 14:30:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 35 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 25, redundant 5
Fitness: max 0.917(41), min 0.917(41), ave 0.917
Test execution time: sum 3736 ms, max 121 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 14:30:54 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-10-31 14:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 8 minutes 55 seconds
Variants: generated 100, build-succeeded 45, build-failed 28, syntax-invalid 22, redundant 5
Fitness: max 0.917(45), min 0.917(45), ave 0.917
Test execution time: sum 4081 ms, max 122 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:31:14 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-10-31 14:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 15 seconds
Variants: generated 100, build-succeeded 52, build-failed 19, syntax-invalid 25, redundant 4
Fitness: max 0.917(50), min 0.75(2), ave 0.91
Test execution time: sum 4669 ms, max 122 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 14:31:34 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-10-31 14:31:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 35 seconds
Variants: generated 100, build-succeeded 43, build-failed 36, syntax-invalid 20, redundant 1
Fitness: max 0.917(42), min 0.833(1), ave 0.915
Test execution time: sum 3956 ms, max 124 ms, min 30 ms
----------------------------------------------------------------

2023-10-31 14:31:54 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-10-31 14:32:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 9 minutes 57 seconds
Variants: generated 100, build-succeeded 47, build-failed 25, syntax-invalid 18, redundant 10
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4422 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:32:16 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-10-31 14:32:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 17 seconds
Variants: generated 100, build-succeeded 51, build-failed 22, syntax-invalid 21, redundant 6
Fitness: max 1(1), min 0.917(50), ave 0.918
Test execution time: sum 4709 ms, max 98 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:32:36 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-10-31 14:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 38 seconds
Variants: generated 100, build-succeeded 47, build-failed 27, syntax-invalid 17, redundant 9
Fitness: max 1(1), min 0.917(46), ave 0.918
Test execution time: sum 4425 ms, max 124 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 14:32:57 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-10-31 14:33:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 10 minutes 59 seconds
Variants: generated 100, build-succeeded 43, build-failed 35, syntax-invalid 18, redundant 4
Fitness: max 0.917(43), min 0.917(43), ave 0.917
Test execution time: sum 4161 ms, max 128 ms, min 74 ms
----------------------------------------------------------------

2023-10-31 14:33:18 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-10-31 14:33:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 20 seconds
Variants: generated 100, build-succeeded 43, build-failed 29, syntax-invalid 21, redundant 7
Fitness: max 0.917(40), min 0.5(1), ave 0.901
Test execution time: sum 4498 ms, max 591 ms, min 23 ms
----------------------------------------------------------------

2023-10-31 14:33:39 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-10-31 14:34:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 11 minutes 41 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 16, redundant 7
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4733 ms, max 114 ms, min 68 ms
----------------------------------------------------------------

2023-10-31 14:34:00 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-10-31 14:34:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 3 seconds
Variants: generated 100, build-succeeded 53, build-failed 21, syntax-invalid 18, redundant 8
Fitness: max 1(1), min 0.917(52), ave 0.918
Test execution time: sum 5008 ms, max 114 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 14:34:22 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-10-31 14:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 26 seconds
Variants: generated 100, build-succeeded 56, build-failed 25, syntax-invalid 16, redundant 3
Fitness: max 0.917(55), min 0.75(1), ave 0.914
Test execution time: sum 5237 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:34:45 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-10-31 14:35:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 12 minutes 47 seconds
Variants: generated 100, build-succeeded 50, build-failed 24, syntax-invalid 19, redundant 7
Fitness: max 0.917(49), min 0.75(1), ave 0.913
Test execution time: sum 4634 ms, max 125 ms, min 31 ms
----------------------------------------------------------------

2023-10-31 14:35:06 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-10-31 14:35:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 7 seconds
Variants: generated 100, build-succeeded 42, build-failed 29, syntax-invalid 24, redundant 5
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 3996 ms, max 123 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 14:35:26 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-10-31 14:35:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 29 seconds
Variants: generated 100, build-succeeded 54, build-failed 21, syntax-invalid 19, redundant 6
Fitness: max 1(1), min 0.917(53), ave 0.918
Test execution time: sum 4999 ms, max 121 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:35:48 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-10-31 14:36:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 13 minutes 51 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 20, redundant 3
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 4876 ms, max 125 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:36:09 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-10-31 14:36:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 9 seconds
Variants: generated 100, build-succeeded 40, build-failed 27, syntax-invalid 30, redundant 3
Fitness: max 0.917(38), min 0.667(1), ave 0.906
Test execution time: sum 3588 ms, max 116 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:36:28 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-10-31 14:36:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 29 seconds
Variants: generated 100, build-succeeded 43, build-failed 27, syntax-invalid 23, redundant 7
Fitness: max 0.917(42), min 0.75(1), ave 0.913
Test execution time: sum 3788 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:36:48 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-10-31 14:37:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 14 minutes 51 seconds
Variants: generated 100, build-succeeded 50, build-failed 27, syntax-invalid 18, redundant 5
Fitness: max 0.917(50), min 0.917(50), ave 0.917
Test execution time: sum 4545 ms, max 117 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 14:37:10 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-10-31 14:37:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 13 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 16, redundant 3
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 4535 ms, max 123 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 14:37:32 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-10-31 14:37:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 35 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 18, redundant 5
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4640 ms, max 125 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 14:37:54 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-10-31 14:38:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 15 minutes 57 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 16, redundant 2
Fitness: max 0.917(51), min 0.917(51), ave 0.917
Test execution time: sum 4891 ms, max 124 ms, min 93 ms
----------------------------------------------------------------

2023-10-31 14:38:16 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-10-31 14:38:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 16 minutes 19 seconds
Variants: generated 100, build-succeeded 54, build-failed 19, syntax-invalid 20, redundant 7
Fitness: max 0.917(53), min 0.75(1), ave 0.914
Test execution time: sum 5084 ms, max 121 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:38:38 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-10-31 14:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 16 minutes 41 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 18, redundant 6
Fitness: max 1(2), min 0.917(47), ave 0.92
Test execution time: sum 4659 ms, max 123 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:39:00 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-10-31 14:39:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 17 minutes 3 seconds
Variants: generated 100, build-succeeded 49, build-failed 26, syntax-invalid 19, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4652 ms, max 120 ms, min 70 ms
----------------------------------------------------------------

2023-10-31 14:39:22 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-10-31 14:39:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 17 minutes 25 seconds
Variants: generated 100, build-succeeded 48, build-failed 26, syntax-invalid 22, redundant 4
Fitness: max 0.917(47), min 0.667(1), ave 0.911
Test execution time: sum 4570 ms, max 124 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:39:43 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-10-31 14:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 32 minutes 46 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 24, redundant 3
Fitness: max 0.917(46), min 0.583(1), ave 0.91
Test execution time: sum 904467 ms, max 900024 ms, min 75 ms
----------------------------------------------------------------

2023-10-31 14:55:05 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-10-31 14:55:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 7 seconds
Variants: generated 100, build-succeeded 52, build-failed 18, syntax-invalid 23, redundant 7
Fitness: max 0.917(52), min 0.917(52), ave 0.917
Test execution time: sum 5107 ms, max 116 ms, min 77 ms
----------------------------------------------------------------

2023-10-31 14:55:26 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-10-31 14:55:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 30 seconds
Variants: generated 100, build-succeeded 52, build-failed 24, syntax-invalid 17, redundant 7
Fitness: max 0.917(51), min 0.667(1), ave 0.912
Test execution time: sum 5001 ms, max 122 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:55:49 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-10-31 14:56:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 33 minutes 51 seconds
Variants: generated 100, build-succeeded 41, build-failed 29, syntax-invalid 25, redundant 5
Fitness: max 1(1), min 0.917(40), ave 0.919
Test execution time: sum 4058 ms, max 124 ms, min 76 ms
----------------------------------------------------------------

2023-10-31 14:56:10 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-10-31 14:56:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 13 seconds
Variants: generated 100, build-succeeded 48, build-failed 23, syntax-invalid 20, redundant 9
Fitness: max 0.917(46), min 0.75(1), ave 0.911
Test execution time: sum 4656 ms, max 127 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 14:56:32 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-10-31 14:56:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 35 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 23, redundant 3
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4488 ms, max 131 ms, min 77 ms
----------------------------------------------------------------

2023-10-31 14:56:54 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-10-31 14:57:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 34 minutes 57 seconds
Variants: generated 100, build-succeeded 44, build-failed 27, syntax-invalid 18, redundant 11
Fitness: max 1(1), min 0.917(43), ave 0.919
Test execution time: sum 4535 ms, max 136 ms, min 80 ms
----------------------------------------------------------------

2023-10-31 14:57:16 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-10-31 14:57:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 17 seconds
Variants: generated 100, build-succeeded 42, build-failed 27, syntax-invalid 27, redundant 4
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4442 ms, max 132 ms, min 84 ms
----------------------------------------------------------------

2023-10-31 14:57:36 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-10-31 14:57:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 35 minutes 39 seconds
Variants: generated 100, build-succeeded 44, build-failed 25, syntax-invalid 24, redundant 7
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4777 ms, max 135 ms, min 86 ms
----------------------------------------------------------------

2023-10-31 14:57:58 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-10-31 14:58:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 0 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 24, redundant 3
Fitness: max 1(1), min 0.917(42), ave 0.919
Test execution time: sum 4734 ms, max 140 ms, min 85 ms
----------------------------------------------------------------

2023-10-31 14:58:19 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-10-31 14:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 22 seconds
Variants: generated 100, build-succeeded 42, build-failed 22, syntax-invalid 24, redundant 12
Fitness: max 0.917(42), min 0.917(42), ave 0.917
Test execution time: sum 4667 ms, max 143 ms, min 80 ms
----------------------------------------------------------------

2023-10-31 14:58:41 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-10-31 14:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 36 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 24, syntax-invalid 21, redundant 7
Fitness: max 0.917(48), min 0.917(48), ave 0.917
Test execution time: sum 5163 ms, max 130 ms, min 86 ms
----------------------------------------------------------------

2023-10-31 14:59:04 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-10-31 14:59:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 9 seconds
Variants: generated 100, build-succeeded 49, build-failed 27, syntax-invalid 18, redundant 6
Fitness: max 0.917(49), min 0.917(49), ave 0.917
Test execution time: sum 4541 ms, max 116 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 14:59:28 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-10-31 14:59:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 31, syntax-invalid 15, redundant 4
Fitness: max 1(1), min 0.917(49), ave 0.918
Test execution time: sum 4519 ms, max 109 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 14:59:51 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-10-31 15:00:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 37 minutes 55 seconds
Variants: generated 100, build-succeeded 44, build-failed 36, syntax-invalid 15, redundant 5
Fitness: max 0.917(44), min 0.917(44), ave 0.917
Test execution time: sum 4134 ms, max 121 ms, min 73 ms
----------------------------------------------------------------

2023-10-31 15:00:14 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-10-31 15:00:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 38 minutes 18 seconds
Variants: generated 100, build-succeeded 46, build-failed 27, syntax-invalid 18, redundant 9
Fitness: max 0.917(46), min 0.917(46), ave 0.917
Test execution time: sum 4189 ms, max 100 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 15:00:37 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-10-31 15:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 38 minutes 40 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 22, redundant 1
Fitness: max 1(1), min 0.917(47), ave 0.918
Test execution time: sum 4337 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 15:00:59 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-10-31 15:01:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 22, syntax-invalid 17, redundant 6
Fitness: max 0.917(54), min 0.75(1), ave 0.914
Test execution time: sum 4943 ms, max 120 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 15:01:23 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-10-31 15:01:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 27 seconds
Variants: generated 100, build-succeeded 47, build-failed 26, syntax-invalid 19, redundant 8
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4321 ms, max 125 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 15:01:46 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-10-31 15:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 39 minutes 50 seconds
Variants: generated 100, build-succeeded 47, build-failed 32, syntax-invalid 18, redundant 3
Fitness: max 0.917(47), min 0.917(47), ave 0.917
Test execution time: sum 4245 ms, max 122 ms, min 71 ms
----------------------------------------------------------------

2023-10-31 15:02:09 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-10-31 15:02:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 13 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 19, redundant 4
Fitness: max 0.917(47), min 0.75(2), ave 0.91
Test execution time: sum 4279 ms, max 128 ms, min 24 ms
----------------------------------------------------------------

2023-10-31 15:02:32 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-10-31 15:02:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 hours 40 minutes 15 seconds
Variants: generated 10, build-succeeded 1, build-failed 8, syntax-invalid 0, redundant 1
Fitness: max 1(1), min 1(1), ave 1
Test execution time: sum 72 ms, max 72 ms, min 72 ms
----------------------------------------------------------------

2023-10-31 15:02:34 [main] [INFO]  KGenProgMain - GA stopped
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -484,6 +484,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v78)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,10 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos = 0;
+			eof = true;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -484,6 +487,7 @@
             for (int i = 0; i < inAvail; i++) {
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
+					byte[] buf = new byte[pos - readPos];
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v610)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,10 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			eof = true;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -485,7 +487,8 @@
                 if (buffer == null || buffer.length - pos < encodeSize) {
                     resizeBuffer();
                 }
-                modulus = (++modulus) % 3;
+                int startSrc = 0;
+				modulus = (++modulus) % 3;
                 int b = in[inPos++];
                 if (b < 0) {
                     b += 256;
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v833)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,11 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+            buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +491,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v1436)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,12 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +422,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v2820)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +425,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -487,6 +493,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v3449)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,14 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4118)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,13 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +424,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -487,6 +492,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4439)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,7 +496,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
-                if (b < 0) {
+				if (b < 0) {
                     b += 256;
                 }
                 x = (x << 8) + b;
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v4841)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5403)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,20 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5527)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			resizeBuffer();
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +496,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v5848)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,20 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            resizeBuffer();
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6512)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,16 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +495,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6517)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:34 [main] [INFO]  PatchLogExporter - patch (v6699)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,18 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6781)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,18 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			eof = true;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +497,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v6939)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,16 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +496,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7233)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v7720)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8101)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8511)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,19 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +498,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v8644)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,22 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +501,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9025)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +435,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9050)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,29 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			{
+				buffer = new byte[DEFAULT_BUFFER_SIZE];
+				pos = 0;
+				eof = true;
+				readPos = 0;
+			}
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +509,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9340)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -72,7 +72,8 @@
      */
     public Base64InputStream(InputStream in, boolean doEncode) {
         super(in);
-        this.doEncode = doEncode;
+        int readLen = 0;
+		this.doEncode = doEncode;
         this.base64 = new Base64(false);
     }
 
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,17 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +496,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v9605)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,22 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10120)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +434,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10432)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +504,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10605)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,23 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +434,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v10829)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,23 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			lineLength = 0;  // disable chunk-separating
+            readPos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12240)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12313)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,21 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12548)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12742)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,26 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v12918)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +438,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
@@ -487,6 +506,8 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13018)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,24 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            x = x << 6;
+			reset();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13203)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,25 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -487,6 +504,7 @@
                 }
                 modulus = (++modulus) % 3;
                 int b = in[inPos++];
+				System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);
                 if (b < 0) {
                     b += 256;
                 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v13743)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,32 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			pos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14104)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14535)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,30 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14536)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14805)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,27 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -384,6 +404,7 @@
             buffer = new byte[DEFAULT_BUFFER_SIZE];
             pos = 0;
             readPos = 0;
+			readPos = 0;
         } else {
             byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
             System.arraycopy(buffer, 0, b, 0, buffer.length);
@@ -418,7 +439,7 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
+            buffer = null;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v14939)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			int readLen = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -418,7 +445,6 @@
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
         if (out != null && out.length == outAvail) {
-            buffer = out;
             pos = outPos;
             readPos = outPos;
         }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15421)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,33 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int readLen = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v15702)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,33 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			int readLen = 0;
+			byte b = lineSeparator[lineSeparator.length - 1];
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16733)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,35 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16742)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,28 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			modulus = (++modulus) % 4;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v16832)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int readLen = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			lineSeparator = CHUNK_SEPARATOR;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v17336)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,31 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18148)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,36 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18533)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18906)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,29 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v18937)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,40 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19026)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,43 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19211)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,43 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			eof = true;
+			readPos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19808)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,44 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v19850)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,40 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20215)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,42 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            readPos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20326)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,36 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20634)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+            currentLinePos = 0;
+			pos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v20721)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,41 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21049)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,34 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21119)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,7 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
+                        long mod = len % 4;
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,40 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v21208)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,45 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int startSrc = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22228)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            reset();
+			switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v22241)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,36 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1055,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23441)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,43 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23525)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,47 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v23843)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            switch (modulus) {
+			case 2:
+				x = x << 6;
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				break;
+			case 3:
+				buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
+				buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
+				break;
+			}
+			buffer = null;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1024,7 +1069,6 @@
         buffer = null;
         pos = 0;
         readPos = 0;
-        currentLinePos = 0;
         modulus = 0;
         eof = false;
     }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24104)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.binary.Base64InputStream
+++ org.apache.commons.codec.binary.Base64InputStream
@@ -167,7 +167,6 @@
                     byte[] buf = new byte[doEncode ? 4096 : 8192];
                     int c = in.read(buf);
                     if (c > 0 && b.length == len) {
-                        base64.setInitialBuffer(b, offset, len);
                     }
                     if (doEncode) {
                         base64.encode(buf, 0, c);
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,32 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v24318)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,47 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1066,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25228)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25334)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,47 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			eof = true;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v25750)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,45 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			eof = true;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1064,9 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26350)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1071,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26454)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1071,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26589)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26740)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1070,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26772)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            byte[] buf = new byte[pos - readPos];
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26816)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,45 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            byte[] result = new byte[pos];
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26886)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,51 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26979)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1073,9 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v26989)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,50 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27036)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,50 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27062)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,53 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			resizeBuffer();
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27181)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,56 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27259)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27282)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1067,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27808)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,44 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			eof = true;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1062,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v27919)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,54 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            resizeBuffer();
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1073,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28321)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,47 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -1026,7 +1066,8 @@
         readPos = 0;
         currentLinePos = 0;
         modulus = 0;
-        eof = false;
+        pos = 0;
+		eof = false;
     }
 
 }
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v28715)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,60 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+            currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			resizeBuffer();
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29646)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,46 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v29650)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            int readLen = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			resizeBuffer();
+			eof = true;
+			resizeBuffer();
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos = 0;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30208)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,52 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
@@ -417,7 +462,7 @@
     }
 
     void setInitialBuffer(byte[] out, int outPos, int outAvail) {
-        if (out != null && out.length == outAvail) {
+        if (eof && modulus != 0) {
             buffer = out;
             pos = outPos;
             readPos = outPos;
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30517)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,49 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			buffer = null;
+			eof = true;
+			resizeBuffer();
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v30802)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -331,8 +331,58 @@
      */
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
-            lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31236)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,57 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            eof = true;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v31538)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.StringEncoder
+++ org.apache.commons.codec.StringEncoder
@@ -37,4 +37,3 @@
      */
     String encode(String pString) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.BinaryDecoder
+++ org.apache.commons.codec.BinaryDecoder
@@ -39,4 +39,3 @@
      */
     byte[] decode(byte[] pArray) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.BinaryEncoder
+++ org.apache.commons.codec.BinaryEncoder
@@ -39,4 +39,3 @@
      */
     byte[] encode(byte[] pArray) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.binary.Base64
+++ org.apache.commons.codec.binary.Base64
@@ -332,7 +332,48 @@
     public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {
         if (lineSeparator == null) {
             lineLength = 0;  // disable chunk-separating
-            lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+            currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			eof = true;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			buffer = null;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			currentLinePos = 0;
+			lineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			buffer = null;
+			pos += lineSeparator.length;
+			buffer = null;
+			pos += lineSeparator.length;
         }
         this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
         this.lineSeparator = new byte[lineSeparator.length];
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.Decoder
+++ org.apache.commons.codec.Decoder
@@ -52,4 +52,3 @@
      */
     Object decode(Object pObject) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.StringDecoder
+++ org.apache.commons.codec.StringDecoder
@@ -37,4 +37,3 @@
      */
     String decode(String pString) throws DecoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  PatchLogExporter - patch (v32010)
--- org.apache.commons.codec.Encoder
+++ org.apache.commons.codec.Encoder
@@ -43,4 +43,3 @@
      */
     Object encode(Object pObject) throws EncoderException;
 }  
-
2023-10-31 15:02:35 [main] [INFO]  KGenProgMain - Summary
Reached generation = 322
Generated variants = 32010
Syntax valid variants = 26983
Build succeeded variants = 15752
Time elapsed = 9 hours 40 minutes 16 seconds
Exit status = SUCCESS
