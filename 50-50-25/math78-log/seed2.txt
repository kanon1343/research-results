2023-08-01 20:13:49 [main] [WARN]  Configuration$Builder - The directory where kGenProg is running is different from the root directory of the given target project.
2023-08-01 20:13:49 [main] [WARN]  Configuration$Builder - If the target project includes test cases with file I/O, such test cases won't run correctly.
2023-08-01 20:13:49 [main] [WARN]  Configuration$Builder - We recommend you running kGenProg with the root directory of the target project as the current directory.
2023-08-01 20:13:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
configPath = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/kgenprog-78.toml (set by command line)
rootDir = /Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78 (set in config file)
productPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/main] (set in config file)
testPaths = [/Users/haradakanon/Downloads/kGenProg-1.8.2/example/math78/src/test] (set in config file)
classPaths = []
executionTests = [org.apache.commons.math.ode.events.EventStateTest] (set in config file)
outDir = kgenprog-out
logLevel = INFO (set in config file)
mutationGeneratingCount = 50 (set in config file)
crossoverGeneratingCount = 50 (set in config file)
headcount = 25
maxGeneration = 500 (set in config file)
timeLimit = PT24H (set in config file)
testTimeLimit = PT3M (set in config file)
requiredSolutionsCount = 100 (set in config file)
randomSeed = 2 (set by command line)
scope = PACKAGE (set in config file)
faultLocalization = Zoltar (set in config file)
mutationType = Simple
crossoverType = Random
firstVariantSelectionStrategy = Random
secondVariantSelectionStrategy = Random
isPatchOutput = true (set in config file)
isHistoryRecord = false
currentDirectory = /Users/haradakanon/Desktop/研究/実験データ/afterResearch
version = 1.8.2
================================================================
2023-08-01 20:14:07 [main] [INFO]  KGenProgMain - initial failed tests (1/1)
org.apache.commons.math.ode.events.EventStateTest.closeEvents: function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]

2023-08-01 20:14:07 [main] [INFO]  KGenProgMain - GA started
2023-08-01 20:14:07 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2023-08-01 20:14:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 50, build-succeeded 16, build-failed 24, syntax-invalid 5, redundant 5
Fitness: max 1(1), min 0(15), ave 0.062
Test execution time: sum 2095 ms, max 267 ms, min 69 ms
----------------------------------------------------------------

2023-08-01 20:14:14 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2023-08-01 20:14:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 50, build-succeeded 14, build-failed 31, syntax-invalid 4, redundant 1
Fitness: max 0(14), min 0(14), ave 0
Test execution time: sum 1234 ms, max 115 ms, min 65 ms
----------------------------------------------------------------

2023-08-01 20:14:19 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2023-08-01 20:14:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, build-succeeded 15, build-failed 37, syntax-invalid 3, redundant 45
Fitness: max 1(1), min 0(14), ave 0.067
Test execution time: sum 1193 ms, max 161 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 20:14:24 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2023-08-01 20:14:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 100, build-succeeded 29, build-failed 28, syntax-invalid 4, redundant 39
Fitness: max 0(29), min 0(29), ave 0
Test execution time: sum 1831 ms, max 89 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 20:14:30 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2023-08-01 20:14:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 100, build-succeeded 35, build-failed 34, syntax-invalid 4, redundant 27
Fitness: max 1(1), min 0(34), ave 0.029
Test execution time: sum 2243 ms, max 123 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 20:14:36 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2023-08-01 20:14:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 100, build-succeeded 45, build-failed 31, syntax-invalid 5, redundant 19
Fitness: max 1(2), min 0(43), ave 0.044
Test execution time: sum 2640 ms, max 134 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 20:14:43 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2023-08-01 20:14:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 100, build-succeeded 43, build-failed 30, syntax-invalid 5, redundant 22
Fitness: max 1(4), min 0(39), ave 0.093
Test execution time: sum 2704 ms, max 176 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 20:14:50 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2023-08-01 20:14:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 seconds
Variants: generated 100, build-succeeded 48, build-failed 27, syntax-invalid 4, redundant 21
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2897 ms, max 198 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 20:14:58 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2023-08-01 20:15:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 0 seconds
Variants: generated 100, build-succeeded 45, build-failed 32, syntax-invalid 5, redundant 18
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 3080 ms, max 182 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 20:15:07 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2023-08-01 20:15:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 11 seconds
Variants: generated 100, build-succeeded 42, build-failed 35, syntax-invalid 2, redundant 21
Fitness: max 0(42), min 0(42), ave 0
Test execution time: sum 3530 ms, max 217 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 20:15:18 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2023-08-01 20:15:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 18 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 8, redundant 14
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3003 ms, max 92 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 20:15:26 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2023-08-01 20:15:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 2, redundant 12
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3437 ms, max 213 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 20:15:34 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2023-08-01 20:15:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 33 seconds
Variants: generated 100, build-succeeded 49, build-failed 30, syntax-invalid 4, redundant 17
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 2734 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 20:15:40 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2023-08-01 20:15:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 41 seconds
Variants: generated 100, build-succeeded 48, build-failed 44, syntax-invalid 2, redundant 6
Fitness: max 1(2), min 0(46), ave 0.042
Test execution time: sum 2796 ms, max 139 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 20:15:48 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2023-08-01 20:15:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 48 seconds
Variants: generated 100, build-succeeded 51, build-failed 31, syntax-invalid 4, redundant 14
Fitness: max 1(2), min 0(49), ave 0.039
Test execution time: sum 2890 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 20:15:56 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2023-08-01 20:25:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 minutes 57 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 543208 ms, max 180085 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 20:25:05 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2023-08-01 20:52:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 minutes 6 seconds
Variants: generated 100, build-succeeded 45, build-failed 37, syntax-invalid 16, redundant 2
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 1623050 ms, max 180185 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 20:52:14 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2023-08-01 20:55:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 minutes 13 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 10, redundant 10
Fitness: max 1(1), min 0(44), ave 0.022
Test execution time: sum 182472 ms, max 180062 ms, min 48 ms
----------------------------------------------------------------

2023-08-01 20:55:21 [main] [INFO]  KGenProgMain - entered the era of 19th generation.
2023-08-01 20:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 20 seconds
Variants: generated 100, build-succeeded 40, build-failed 40, syntax-invalid 11, redundant 9
Fitness: max 0(40), min 0(40), ave 0
Test execution time: sum 182525 ms, max 180069 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 20:58:28 [main] [INFO]  KGenProgMain - entered the era of 20th generation.
2023-08-01 20:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 minutes 28 seconds
Variants: generated 100, build-succeeded 52, build-failed 36, syntax-invalid 8, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2821 ms, max 82 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 20:58:36 [main] [INFO]  KGenProgMain - entered the era of 21st generation.
2023-08-01 21:01:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 35 seconds
Variants: generated 100, build-succeeded 44, build-failed 41, syntax-invalid 10, redundant 5
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 182508 ms, max 180056 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:01:43 [main] [INFO]  KGenProgMain - entered the era of 22nd generation.
2023-08-01 21:01:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 44 seconds
Variants: generated 100, build-succeeded 53, build-failed 29, syntax-invalid 12, redundant 6
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3101 ms, max 142 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:01:52 [main] [INFO]  KGenProgMain - entered the era of 23rd generation.
2023-08-01 21:02:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 minutes 52 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 6, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3172 ms, max 87 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:02:00 [main] [INFO]  KGenProgMain - entered the era of 24th generation.
2023-08-01 21:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3490 ms, max 145 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:02:09 [main] [INFO]  KGenProgMain - entered the era of 25th generation.
2023-08-01 21:02:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 10 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 3, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3339 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:02:18 [main] [INFO]  KGenProgMain - entered the era of 26th generation.
2023-08-01 21:02:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 19 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 3, redundant 7
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3415 ms, max 137 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:02:27 [main] [INFO]  KGenProgMain - entered the era of 27th generation.
2023-08-01 21:02:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 27 seconds
Variants: generated 100, build-succeeded 46, build-failed 39, syntax-invalid 12, redundant 3
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2486 ms, max 84 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:02:35 [main] [INFO]  KGenProgMain - entered the era of 28th generation.
2023-08-01 21:02:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 36 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 9, redundant 7
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2929 ms, max 79 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:02:43 [main] [INFO]  KGenProgMain - entered the era of 29th generation.
2023-08-01 21:02:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 45 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 11, redundant 6
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2707 ms, max 133 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:02:53 [main] [INFO]  KGenProgMain - entered the era of 30th generation.
2023-08-01 21:03:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 minutes 54 seconds
Variants: generated 100, build-succeeded 43, build-failed 34, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0(42), ave 0.023
Test execution time: sum 2596 ms, max 212 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:03:02 [main] [INFO]  KGenProgMain - entered the era of 31st generation.
2023-08-01 21:03:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 3 seconds
Variants: generated 100, build-succeeded 52, build-failed 34, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 2791 ms, max 79 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:03:10 [main] [INFO]  KGenProgMain - entered the era of 32nd generation.
2023-08-01 21:03:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 11 seconds
Variants: generated 100, build-succeeded 55, build-failed 37, syntax-invalid 6, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3068 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:03:19 [main] [INFO]  KGenProgMain - entered the era of 33rd generation.
2023-08-01 21:03:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 20 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 11, redundant 6
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2658 ms, max 116 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:03:28 [main] [INFO]  KGenProgMain - entered the era of 34th generation.
2023-08-01 21:03:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 11, redundant 1
Fitness: max 1(3), min 0(55), ave 0.052
Test execution time: sum 3026 ms, max 78 ms, min 48 ms
----------------------------------------------------------------

2023-08-01 21:03:36 [main] [INFO]  KGenProgMain - entered the era of 35th generation.
2023-08-01 21:03:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 38 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 7, redundant 5
Fitness: max 1(3), min 0(54), ave 0.053
Test execution time: sum 3454 ms, max 198 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:03:46 [main] [INFO]  KGenProgMain - entered the era of 36th generation.
2023-08-01 21:03:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 minutes 47 seconds
Variants: generated 100, build-succeeded 50, build-failed 36, syntax-invalid 9, redundant 5
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 2672 ms, max 79 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:03:55 [main] [INFO]  KGenProgMain - entered the era of 37th generation.
2023-08-01 21:07:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 minutes 56 seconds
Variants: generated 100, build-succeeded 49, build-failed 35, syntax-invalid 15, redundant 1
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 182709 ms, max 180063 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:07:03 [main] [INFO]  KGenProgMain - entered the era of 38th generation.
2023-08-01 21:07:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 6 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 10, redundant 2
Fitness: max 1(4), min 0(50), ave 0.074
Test execution time: sum 3078 ms, max 141 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:07:13 [main] [INFO]  KGenProgMain - entered the era of 39th generation.
2023-08-01 21:07:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 14 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 17, redundant 5
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2559 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:07:21 [main] [INFO]  KGenProgMain - entered the era of 40th generation.
2023-08-01 21:07:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 23 seconds
Variants: generated 100, build-succeeded 48, build-failed 37, syntax-invalid 12, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 2798 ms, max 121 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:07:31 [main] [INFO]  KGenProgMain - entered the era of 41st generation.
2023-08-01 21:07:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 31 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 16, redundant 2
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2691 ms, max 85 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:07:39 [main] [INFO]  KGenProgMain - entered the era of 42nd generation.
2023-08-01 21:07:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 41 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 12, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3247 ms, max 207 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:07:49 [main] [INFO]  KGenProgMain - entered the era of 43rd generation.
2023-08-01 21:07:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 50 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 13, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2965 ms, max 78 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:07:58 [main] [INFO]  KGenProgMain - entered the era of 44th generation.
2023-08-01 21:08:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 53 minutes 58 seconds
Variants: generated 100, build-succeeded 47, build-failed 29, syntax-invalid 17, redundant 7
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2616 ms, max 72 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:08:06 [main] [INFO]  KGenProgMain - entered the era of 45th generation.
2023-08-01 21:08:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 8 seconds
Variants: generated 100, build-succeeded 45, build-failed 34, syntax-invalid 19, redundant 2
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2570 ms, max 130 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:08:15 [main] [INFO]  KGenProgMain - entered the era of 46th generation.
2023-08-01 21:08:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 16 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 19, redundant 3
Fitness: max 1(1), min 0(48), ave 0.02
Test execution time: sum 2720 ms, max 77 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:08:24 [main] [INFO]  KGenProgMain - entered the era of 47th generation.
2023-08-01 21:08:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 25 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 2989 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:08:33 [main] [INFO]  KGenProgMain - entered the era of 48th generation.
2023-08-01 21:08:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 35 seconds
Variants: generated 100, build-succeeded 47, build-failed 28, syntax-invalid 16, redundant 9
Fitness: max 1(1), min 0(46), ave 0.021
Test execution time: sum 2717 ms, max 141 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:08:43 [main] [INFO]  KGenProgMain - entered the era of 49th generation.
2023-08-01 21:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 44 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 9, redundant 5
Fitness: max 1(2), min 0(57), ave 0.034
Test execution time: sum 3371 ms, max 72 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:08:52 [main] [INFO]  KGenProgMain - entered the era of 50th generation.
2023-08-01 21:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 minutes 54 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 7, redundant 10
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2635 ms, max 132 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:01 [main] [INFO]  KGenProgMain - entered the era of 51st generation.
2023-08-01 21:09:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 6, redundant 5
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3117 ms, max 69 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:11 [main] [INFO]  KGenProgMain - entered the era of 52nd generation.
2023-08-01 21:09:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 13 seconds
Variants: generated 100, build-succeeded 52, build-failed 35, syntax-invalid 13, redundant 0
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3195 ms, max 195 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:21 [main] [INFO]  KGenProgMain - entered the era of 53rd generation.
2023-08-01 21:09:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 22 seconds
Variants: generated 100, build-succeeded 51, build-failed 26, syntax-invalid 20, redundant 3
Fitness: max 1(1), min 0(50), ave 0.02
Test execution time: sum 2704 ms, max 75 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:30 [main] [INFO]  KGenProgMain - entered the era of 54th generation.
2023-08-01 21:09:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 31 seconds
Variants: generated 100, build-succeeded 52, build-failed 32, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 2920 ms, max 80 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:09:39 [main] [INFO]  KGenProgMain - entered the era of 55th generation.
2023-08-01 21:09:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 41 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 17, redundant 2
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3020 ms, max 204 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:49 [main] [INFO]  KGenProgMain - entered the era of 56th generation.
2023-08-01 21:09:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 minutes 50 seconds
Variants: generated 100, build-succeeded 47, build-failed 38, syntax-invalid 11, redundant 4
Fitness: max 1(1), min 0(46), ave 0.021
Test execution time: sum 2494 ms, max 69 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:09:58 [main] [INFO]  KGenProgMain - entered the era of 57th generation.
2023-08-01 21:10:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 1 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 11, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3289 ms, max 144 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:10:08 [main] [INFO]  KGenProgMain - entered the era of 58th generation.
2023-08-01 21:10:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 10 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 2919 ms, max 70 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:10:18 [main] [INFO]  KGenProgMain - entered the era of 59th generation.
2023-08-01 21:10:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 20 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 9, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3117 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:10:28 [main] [INFO]  KGenProgMain - entered the era of 60th generation.
2023-08-01 21:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 5, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3228 ms, max 187 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:10:39 [main] [INFO]  KGenProgMain - entered the era of 61st generation.
2023-08-01 21:10:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 41 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 10, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3079 ms, max 67 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:10:48 [main] [INFO]  KGenProgMain - entered the era of 62nd generation.
2023-08-01 21:11:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 56 minutes 52 seconds
Variants: generated 100, build-succeeded 56, build-failed 36, syntax-invalid 6, redundant 2
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3187 ms, max 120 ms, min 48 ms
----------------------------------------------------------------

2023-08-01 21:11:00 [main] [INFO]  KGenProgMain - entered the era of 63rd generation.
2023-08-01 21:11:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 2 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 12, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3143 ms, max 91 ms, min 48 ms
----------------------------------------------------------------

2023-08-01 21:11:10 [main] [INFO]  KGenProgMain - entered the era of 64th generation.
2023-08-01 21:11:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 13 seconds
Variants: generated 100, build-succeeded 49, build-failed 38, syntax-invalid 9, redundant 4
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2946 ms, max 191 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:11:21 [main] [INFO]  KGenProgMain - entered the era of 65th generation.
2023-08-01 21:11:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 22 seconds
Variants: generated 100, build-succeeded 44, build-failed 32, syntax-invalid 17, redundant 7
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2319 ms, max 67 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:11:30 [main] [INFO]  KGenProgMain - entered the era of 66th generation.
2023-08-01 21:11:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 34 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 10, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3531 ms, max 133 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:11:42 [main] [INFO]  KGenProgMain - entered the era of 67th generation.
2023-08-01 21:11:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 45 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 10, redundant 2
Fitness: max 1(2), min 0(54), ave 0.036
Test execution time: sum 3029 ms, max 79 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:11:53 [main] [INFO]  KGenProgMain - entered the era of 68th generation.
2023-08-01 21:12:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 57 minutes 56 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 6, redundant 8
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3447 ms, max 69 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:12:04 [main] [INFO]  KGenProgMain - entered the era of 69th generation.
2023-08-01 21:12:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 8 seconds
Variants: generated 100, build-succeeded 53, build-failed 32, syntax-invalid 10, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2907 ms, max 121 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:12:15 [main] [INFO]  KGenProgMain - entered the era of 70th generation.
2023-08-01 21:12:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 18 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 11, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3079 ms, max 76 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:12:26 [main] [INFO]  KGenProgMain - entered the era of 71st generation.
2023-08-01 21:12:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 31 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 11, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3358 ms, max 128 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:12:38 [main] [INFO]  KGenProgMain - entered the era of 72nd generation.
2023-08-01 21:12:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 41 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3187 ms, max 76 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:12:49 [main] [INFO]  KGenProgMain - entered the era of 73rd generation.
2023-08-01 21:13:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 minutes 53 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 7, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3427 ms, max 128 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:13:01 [main] [INFO]  KGenProgMain - entered the era of 74th generation.
2023-08-01 21:13:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 3 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 13, redundant 3
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2704 ms, max 72 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:13:11 [main] [INFO]  KGenProgMain - entered the era of 75th generation.
2023-08-01 21:13:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 14 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 11, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3327 ms, max 71 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:13:22 [main] [INFO]  KGenProgMain - entered the era of 76th generation.
2023-08-01 21:13:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 26 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 13, redundant 1
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3279 ms, max 126 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:13:34 [main] [INFO]  KGenProgMain - entered the era of 77th generation.
2023-08-01 21:13:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 37 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 7, redundant 2
Fitness: max 1(3), min 0(59), ave 0.048
Test execution time: sum 3418 ms, max 75 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:13:45 [main] [INFO]  KGenProgMain - entered the era of 78th generation.
2023-08-01 21:13:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 59 minutes 49 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 2981 ms, max 124 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:13:56 [main] [INFO]  KGenProgMain - entered the era of 79th generation.
2023-08-01 21:17:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 2 minutes 59 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 16, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 182792 ms, max 180064 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:17:07 [main] [INFO]  KGenProgMain - entered the era of 80th generation.
2023-08-01 21:17:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 10 seconds
Variants: generated 100, build-succeeded 47, build-failed 34, syntax-invalid 17, redundant 2
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2910 ms, max 209 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:17:18 [main] [INFO]  KGenProgMain - entered the era of 81st generation.
2023-08-01 21:17:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 20 seconds
Variants: generated 100, build-succeeded 44, build-failed 27, syntax-invalid 24, redundant 5
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2353 ms, max 71 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:17:28 [main] [INFO]  KGenProgMain - entered the era of 82nd generation.
2023-08-01 21:17:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 3 minutes 31 seconds
Variants: generated 100, build-succeeded 57, build-failed 20, syntax-invalid 17, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3181 ms, max 68 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:17:39 [main] [INFO]  KGenProgMain - entered the era of 83rd generation.
2023-08-01 21:20:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 6 minutes 43 seconds
Variants: generated 100, build-succeeded 49, build-failed 29, syntax-invalid 16, redundant 6
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 182921 ms, max 180063 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:20:50 [main] [INFO]  KGenProgMain - entered the era of 84th generation.
2023-08-01 21:24:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 9 minutes 53 seconds
Variants: generated 100, build-succeeded 51, build-failed 32, syntax-invalid 11, redundant 6
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 182838 ms, max 180063 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:24:01 [main] [INFO]  KGenProgMain - entered the era of 85th generation.
2023-08-01 21:24:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 6 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 11, redundant 1
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3324 ms, max 139 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:24:13 [main] [INFO]  KGenProgMain - entered the era of 86th generation.
2023-08-01 21:24:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 17 seconds
Variants: generated 100, build-succeeded 60, build-failed 29, syntax-invalid 7, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3419 ms, max 79 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:24:25 [main] [INFO]  KGenProgMain - entered the era of 87th generation.
2023-08-01 21:24:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 8, redundant 0
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3555 ms, max 203 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:24:37 [main] [INFO]  KGenProgMain - entered the era of 88th generation.
2023-08-01 21:24:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 41 seconds
Variants: generated 100, build-succeeded 55, build-failed 31, syntax-invalid 11, redundant 3
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3095 ms, max 80 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:24:48 [main] [INFO]  KGenProgMain - entered the era of 89th generation.
2023-08-01 21:25:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 10 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 31, syntax-invalid 4, redundant 8
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3341 ms, max 138 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:25:01 [main] [INFO]  KGenProgMain - entered the era of 90th generation.
2023-08-01 21:25:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 4, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3386 ms, max 84 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:25:13 [main] [INFO]  KGenProgMain - entered the era of 91st generation.
2023-08-01 21:25:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 18 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 8, redundant 0
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3676 ms, max 193 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:25:26 [main] [INFO]  KGenProgMain - entered the era of 92nd generation.
2023-08-01 21:25:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 31 seconds
Variants: generated 100, build-succeeded 59, build-failed 27, syntax-invalid 7, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3666 ms, max 187 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:25:39 [main] [INFO]  KGenProgMain - entered the era of 93rd generation.
2023-08-01 21:25:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 4, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3470 ms, max 146 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:25:52 [main] [INFO]  KGenProgMain - entered the era of 94th generation.
2023-08-01 21:26:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 11 minutes 56 seconds
Variants: generated 100, build-succeeded 59, build-failed 34, syntax-invalid 3, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3366 ms, max 82 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:26:04 [main] [INFO]  KGenProgMain - entered the era of 95th generation.
2023-08-01 21:26:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 10 seconds
Variants: generated 100, build-succeeded 62, build-failed 33, syntax-invalid 4, redundant 1
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3687 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:26:18 [main] [INFO]  KGenProgMain - entered the era of 96th generation.
2023-08-01 21:26:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 23 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 11, redundant 5
Fitness: max 1(1), min 0(49), ave 0.02
Test execution time: sum 3173 ms, max 133 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:26:31 [main] [INFO]  KGenProgMain - entered the era of 97th generation.
2023-08-01 21:26:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 38 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 10, redundant 2
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3879 ms, max 202 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:26:45 [main] [INFO]  KGenProgMain - entered the era of 98th generation.
2023-08-01 21:26:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 12 minutes 50 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 7, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3432 ms, max 79 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:26:58 [main] [INFO]  KGenProgMain - entered the era of 99th generation.
2023-08-01 21:27:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 9, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3662 ms, max 194 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:27:11 [main] [INFO]  KGenProgMain - entered the era of 100th generation.
2023-08-01 21:27:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 16 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 10, redundant 3
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3662 ms, max 146 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:27:24 [main] [INFO]  KGenProgMain - entered the era of 101st generation.
2023-08-01 21:27:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 29 seconds
Variants: generated 100, build-succeeded 52, build-failed 37, syntax-invalid 6, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3005 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:27:37 [main] [INFO]  KGenProgMain - entered the era of 102nd generation.
2023-08-01 21:27:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 41 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 8, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3382 ms, max 74 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:27:49 [main] [INFO]  KGenProgMain - entered the era of 103rd generation.
2023-08-01 21:28:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 13 minutes 54 seconds
Variants: generated 100, build-succeeded 59, build-failed 28, syntax-invalid 9, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3598 ms, max 161 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:28:02 [main] [INFO]  KGenProgMain - entered the era of 104th generation.
2023-08-01 21:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 7 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 7, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 183407 ms, max 180093 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:31:14 [main] [INFO]  KGenProgMain - entered the era of 105th generation.
2023-08-01 21:31:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 20 seconds
Variants: generated 100, build-succeeded 61, build-failed 26, syntax-invalid 9, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3682 ms, max 134 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:31:28 [main] [INFO]  KGenProgMain - entered the era of 106th generation.
2023-08-01 21:31:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 32 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 4, redundant 4
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3312 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:31:40 [main] [INFO]  KGenProgMain - entered the era of 107th generation.
2023-08-01 21:31:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 45 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 6, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3657 ms, max 185 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:31:53 [main] [INFO]  KGenProgMain - entered the era of 108th generation.
2023-08-01 21:32:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 17 minutes 58 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 7, redundant 6
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3523 ms, max 183 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:32:06 [main] [INFO]  KGenProgMain - entered the era of 109th generation.
2023-08-01 21:32:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 12 seconds
Variants: generated 100, build-succeeded 57, build-failed 32, syntax-invalid 6, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3378 ms, max 131 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:32:19 [main] [INFO]  KGenProgMain - entered the era of 110th generation.
2023-08-01 21:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 24 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 5, redundant 4
Fitness: max 1(2), min 0(59), ave 0.033
Test execution time: sum 3387 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:32:32 [main] [INFO]  KGenProgMain - entered the era of 111th generation.
2023-08-01 21:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 37 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 7, redundant 1
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3702 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:32:45 [main] [INFO]  KGenProgMain - entered the era of 112th generation.
2023-08-01 21:32:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 18 minutes 49 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 4, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3402 ms, max 78 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:32:57 [main] [INFO]  KGenProgMain - entered the era of 113th generation.
2023-08-01 21:33:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 3, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3557 ms, max 113 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:33:11 [main] [INFO]  KGenProgMain - entered the era of 114th generation.
2023-08-01 21:33:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 15 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 6, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3197 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:33:23 [main] [INFO]  KGenProgMain - entered the era of 115th generation.
2023-08-01 21:33:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 28 seconds
Variants: generated 100, build-succeeded 57, build-failed 29, syntax-invalid 13, redundant 1
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3282 ms, max 134 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:33:36 [main] [INFO]  KGenProgMain - entered the era of 116th generation.
2023-08-01 21:33:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 41 seconds
Variants: generated 100, build-succeeded 64, build-failed 29, syntax-invalid 4, redundant 3
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3595 ms, max 71 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:33:49 [main] [INFO]  KGenProgMain - entered the era of 117th generation.
2023-08-01 21:34:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 19 minutes 54 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 9, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3381 ms, max 190 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:34:02 [main] [INFO]  KGenProgMain - entered the era of 118th generation.
2023-08-01 21:34:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 7 seconds
Variants: generated 100, build-succeeded 62, build-failed 31, syntax-invalid 5, redundant 2
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3466 ms, max 77 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:34:15 [main] [INFO]  KGenProgMain - entered the era of 119th generation.
2023-08-01 21:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 21 seconds
Variants: generated 100, build-succeeded 51, build-failed 41, syntax-invalid 7, redundant 1
Fitness: max 1(1), min 0(50), ave 0.02
Test execution time: sum 3035 ms, max 127 ms, min 49 ms
----------------------------------------------------------------

2023-08-01 21:34:29 [main] [INFO]  KGenProgMain - entered the era of 120th generation.
2023-08-01 21:34:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 33 seconds
Variants: generated 100, build-succeeded 56, build-failed 33, syntax-invalid 8, redundant 3
Fitness: max 1(1), min 0(55), ave 0.018
Test execution time: sum 3164 ms, max 80 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:34:41 [main] [INFO]  KGenProgMain - entered the era of 121st generation.
2023-08-01 21:34:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 20 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 27, syntax-invalid 11, redundant 7
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3319 ms, max 127 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:34:55 [main] [INFO]  KGenProgMain - entered the era of 122nd generation.
2023-08-01 21:35:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 0 seconds
Variants: generated 100, build-succeeded 51, build-failed 28, syntax-invalid 16, redundant 5
Fitness: max 1(3), min 0(48), ave 0.059
Test execution time: sum 2915 ms, max 69 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:35:07 [main] [INFO]  KGenProgMain - entered the era of 123rd generation.
2023-08-01 21:35:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 24, syntax-invalid 12, redundant 7
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3458 ms, max 134 ms, min 50 ms
----------------------------------------------------------------

2023-08-01 21:35:22 [main] [INFO]  KGenProgMain - entered the era of 124th generation.
2023-08-01 21:35:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 28 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0(53), ave 0.019
Test execution time: sum 3373 ms, max 114 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:35:36 [main] [INFO]  KGenProgMain - entered the era of 125th generation.
2023-08-01 21:35:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 21 minutes 47 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 4, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 4519 ms, max 184 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:35:54 [main] [INFO]  KGenProgMain - entered the era of 126th generation.
2023-08-01 21:36:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 3 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 5, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3612 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:36:10 [main] [INFO]  KGenProgMain - entered the era of 127th generation.
2023-08-01 21:36:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 16 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 5, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3359 ms, max 76 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:36:24 [main] [INFO]  KGenProgMain - entered the era of 128th generation.
2023-08-01 21:36:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 4, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3921 ms, max 189 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:36:39 [main] [INFO]  KGenProgMain - entered the era of 129th generation.
2023-08-01 21:36:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 22 minutes 47 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 6, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3767 ms, max 142 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:36:54 [main] [INFO]  KGenProgMain - entered the era of 130th generation.
2023-08-01 21:37:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 1 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3500 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:37:09 [main] [INFO]  KGenProgMain - entered the era of 131st generation.
2023-08-01 21:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 15 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 10, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3284 ms, max 70 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:37:23 [main] [INFO]  KGenProgMain - entered the era of 132nd generation.
2023-08-01 21:37:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 30 seconds
Variants: generated 100, build-succeeded 68, build-failed 22, syntax-invalid 5, redundant 5
Fitness: max 0(68), min 0(68), ave 0
Test execution time: sum 4098 ms, max 133 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:37:38 [main] [INFO]  KGenProgMain - entered the era of 133rd generation.
2023-08-01 21:37:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 23 minutes 46 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 7, redundant 2
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3765 ms, max 123 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:37:54 [main] [INFO]  KGenProgMain - entered the era of 134th generation.
2023-08-01 21:38:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 1 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 8, redundant 4
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3499 ms, max 128 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:38:09 [main] [INFO]  KGenProgMain - entered the era of 135th generation.
2023-08-01 21:38:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 34, syntax-invalid 8, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3144 ms, max 74 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:38:22 [main] [INFO]  KGenProgMain - entered the era of 136th generation.
2023-08-01 21:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 29 seconds
Variants: generated 100, build-succeeded 59, build-failed 31, syntax-invalid 5, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3650 ms, max 194 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:38:37 [main] [INFO]  KGenProgMain - entered the era of 137th generation.
2023-08-01 21:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 24 minutes 45 seconds
Variants: generated 100, build-succeeded 55, build-failed 30, syntax-invalid 8, redundant 7
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 3493 ms, max 186 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:38:52 [main] [INFO]  KGenProgMain - entered the era of 138th generation.
2023-08-01 21:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 2 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 10, redundant 7
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3930 ms, max 182 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:39:10 [main] [INFO]  KGenProgMain - entered the era of 139th generation.
2023-08-01 21:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 18 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3672 ms, max 128 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:39:26 [main] [INFO]  KGenProgMain - entered the era of 140th generation.
2023-08-01 21:39:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 28, syntax-invalid 15, redundant 7
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2920 ms, max 75 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:39:40 [main] [INFO]  KGenProgMain - entered the era of 141st generation.
2023-08-01 21:39:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 25 minutes 47 seconds
Variants: generated 100, build-succeeded 47, build-failed 37, syntax-invalid 11, redundant 5
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 2962 ms, max 130 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:39:55 [main] [INFO]  KGenProgMain - entered the era of 142nd generation.
2023-08-01 21:40:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 1 seconds
Variants: generated 100, build-succeeded 48, build-failed 35, syntax-invalid 12, redundant 5
Fitness: max 1(1), min 0(47), ave 0.021
Test execution time: sum 2905 ms, max 77 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:40:09 [main] [INFO]  KGenProgMain - entered the era of 143rd generation.
2023-08-01 21:40:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 11, redundant 5
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3461 ms, max 118 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:40:25 [main] [INFO]  KGenProgMain - entered the era of 144th generation.
2023-08-01 21:40:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 31 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 12, redundant 4
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3210 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:40:39 [main] [INFO]  KGenProgMain - entered the era of 145th generation.
2023-08-01 21:40:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 26 minutes 47 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 8, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3241 ms, max 138 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:40:55 [main] [INFO]  KGenProgMain - entered the era of 146th generation.
2023-08-01 21:41:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 2 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 9, redundant 4
Fitness: max 1(2), min 0(51), ave 0.038
Test execution time: sum 3073 ms, max 72 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:41:09 [main] [INFO]  KGenProgMain - entered the era of 147th generation.
2023-08-01 21:41:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 18 seconds
Variants: generated 100, build-succeeded 60, build-failed 31, syntax-invalid 8, redundant 1
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3677 ms, max 135 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:41:26 [main] [INFO]  KGenProgMain - entered the era of 148th generation.
2023-08-01 21:41:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 33, syntax-invalid 6, redundant 7
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3508 ms, max 148 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:41:41 [main] [INFO]  KGenProgMain - entered the era of 149th generation.
2023-08-01 21:41:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 27 minutes 50 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3483 ms, max 134 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:41:57 [main] [INFO]  KGenProgMain - entered the era of 150th generation.
2023-08-01 21:42:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 4 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 9, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3408 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:42:12 [main] [INFO]  KGenProgMain - entered the era of 151st generation.
2023-08-01 21:42:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 19 seconds
Variants: generated 100, build-succeeded 46, build-failed 37, syntax-invalid 15, redundant 2
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2858 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:42:27 [main] [INFO]  KGenProgMain - entered the era of 152nd generation.
2023-08-01 21:42:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 35 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 15, redundant 2
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3284 ms, max 126 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:42:43 [main] [INFO]  KGenProgMain - entered the era of 153rd generation.
2023-08-01 21:42:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 28 minutes 52 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 4, redundant 5
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3579 ms, max 191 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:42:59 [main] [INFO]  KGenProgMain - entered the era of 154th generation.
2023-08-01 21:43:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 6 seconds
Variants: generated 100, build-succeeded 52, build-failed 29, syntax-invalid 13, redundant 6
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 2975 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:43:14 [main] [INFO]  KGenProgMain - entered the era of 155th generation.
2023-08-01 21:43:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 22 seconds
Variants: generated 100, build-succeeded 54, build-failed 28, syntax-invalid 13, redundant 5
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3413 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:43:30 [main] [INFO]  KGenProgMain - entered the era of 156th generation.
2023-08-01 21:43:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 37 seconds
Variants: generated 100, build-succeeded 45, build-failed 35, syntax-invalid 16, redundant 4
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2967 ms, max 200 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:43:45 [main] [INFO]  KGenProgMain - entered the era of 157th generation.
2023-08-01 21:44:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 29 minutes 58 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 5, redundant 3
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 4456 ms, max 178 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 21:44:05 [main] [INFO]  KGenProgMain - entered the era of 158th generation.
2023-08-01 21:44:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 14 seconds
Variants: generated 100, build-succeeded 54, build-failed 38, syntax-invalid 7, redundant 1
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3161 ms, max 125 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:44:22 [main] [INFO]  KGenProgMain - entered the era of 159th generation.
2023-08-01 21:44:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 30 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3539 ms, max 77 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:44:37 [main] [INFO]  KGenProgMain - entered the era of 160th generation.
2023-08-01 21:44:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 30 minutes 46 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 13, redundant 1
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3077 ms, max 131 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:44:54 [main] [INFO]  KGenProgMain - entered the era of 161st generation.
2023-08-01 21:45:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 1 seconds
Variants: generated 100, build-succeeded 52, build-failed 33, syntax-invalid 12, redundant 3
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3051 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:45:09 [main] [INFO]  KGenProgMain - entered the era of 162nd generation.
2023-08-01 21:45:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 18 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 6, redundant 3
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 3554 ms, max 135 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:45:26 [main] [INFO]  KGenProgMain - entered the era of 163rd generation.
2023-08-01 21:45:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 5, redundant 4
Fitness: max 1(2), min 0(60), ave 0.032
Test execution time: sum 3880 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:45:43 [main] [INFO]  KGenProgMain - entered the era of 164th generation.
2023-08-01 21:46:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 31 minutes 52 seconds
Variants: generated 100, build-succeeded 57, build-failed 37, syntax-invalid 2, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3348 ms, max 127 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:46:00 [main] [INFO]  KGenProgMain - entered the era of 165th generation.
2023-08-01 21:46:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 8 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 6, redundant 2
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3452 ms, max 80 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:46:16 [main] [INFO]  KGenProgMain - entered the era of 166th generation.
2023-08-01 21:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 26 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 6, redundant 6
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3748 ms, max 201 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:46:33 [main] [INFO]  KGenProgMain - entered the era of 167th generation.
2023-08-01 21:46:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 32 minutes 43 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 3, redundant 7
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3903 ms, max 136 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:46:51 [main] [INFO]  KGenProgMain - entered the era of 168th generation.
2023-08-01 21:47:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 0 seconds
Variants: generated 100, build-succeeded 67, build-failed 27, syntax-invalid 4, redundant 2
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3933 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 21:47:08 [main] [INFO]  KGenProgMain - entered the era of 169th generation.
2023-08-01 21:47:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 17 seconds
Variants: generated 100, build-succeeded 58, build-failed 27, syntax-invalid 8, redundant 7
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3677 ms, max 126 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 21:47:24 [main] [INFO]  KGenProgMain - entered the era of 170th generation.
2023-08-01 21:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 33 minutes 33 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 1, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3527 ms, max 72 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 21:47:41 [main] [INFO]  KGenProgMain - entered the era of 171st generation.
2023-08-01 21:50:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 36 minutes 51 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 2, redundant 8
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 183935 ms, max 180065 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:50:58 [main] [INFO]  KGenProgMain - entered the era of 172nd generation.
2023-08-01 21:54:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 40 minutes 7 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 5, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 183702 ms, max 180065 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 21:54:15 [main] [INFO]  KGenProgMain - entered the era of 173rd generation.
2023-08-01 22:00:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 46 minutes 24 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 6, redundant 2
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 363903 ms, max 180063 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 22:00:32 [main] [INFO]  KGenProgMain - entered the era of 174th generation.
2023-08-01 22:03:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 42 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 3, redundant 4
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 184282 ms, max 180077 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:03:50 [main] [INFO]  KGenProgMain - entered the era of 175th generation.
2023-08-01 22:04:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 49 minutes 59 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 3, redundant 3
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3617 ms, max 78 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:04:06 [main] [INFO]  KGenProgMain - entered the era of 176th generation.
2023-08-01 22:04:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 18 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 5, redundant 2
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 4129 ms, max 122 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:04:25 [main] [INFO]  KGenProgMain - entered the era of 177th generation.
2023-08-01 22:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 36 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 5, redundant 4
Fitness: max 1(1), min 0(61), ave 0.016
Test execution time: sum 3941 ms, max 110 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:04:44 [main] [INFO]  KGenProgMain - entered the era of 178th generation.
2023-08-01 22:05:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 50 minutes 55 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 4, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 4223 ms, max 188 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:03 [main] [INFO]  KGenProgMain - entered the era of 179th generation.
2023-08-01 22:05:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 13 seconds
Variants: generated 100, build-succeeded 67, build-failed 26, syntax-invalid 2, redundant 5
Fitness: max 0(67), min 0(67), ave 0
Test execution time: sum 3997 ms, max 81 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:21 [main] [INFO]  KGenProgMain - entered the era of 180th generation.
2023-08-01 22:05:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 32 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0(62), ave 0.016
Test execution time: sum 4099 ms, max 207 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:40 [main] [INFO]  KGenProgMain - entered the era of 181st generation.
2023-08-01 22:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 51 minutes 50 seconds
Variants: generated 100, build-succeeded 65, build-failed 28, syntax-invalid 4, redundant 3
Fitness: max 1(1), min 0(64), ave 0.015
Test execution time: sum 3818 ms, max 97 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:05:58 [main] [INFO]  KGenProgMain - entered the era of 182nd generation.
2023-08-01 22:06:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 9 seconds
Variants: generated 100, build-succeeded 64, build-failed 30, syntax-invalid 4, redundant 2
Fitness: max 1(2), min 0(62), ave 0.031
Test execution time: sum 4125 ms, max 142 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:06:16 [main] [INFO]  KGenProgMain - entered the era of 183rd generation.
2023-08-01 22:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 28 seconds
Variants: generated 100, build-succeeded 61, build-failed 32, syntax-invalid 2, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 4003 ms, max 126 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:06:35 [main] [INFO]  KGenProgMain - entered the era of 184th generation.
2023-08-01 22:06:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 52 minutes 46 seconds
Variants: generated 100, build-succeeded 58, build-failed 34, syntax-invalid 7, redundant 1
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3516 ms, max 110 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:06:54 [main] [INFO]  KGenProgMain - entered the era of 185th generation.
2023-08-01 22:07:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 3 seconds
Variants: generated 100, build-succeeded 63, build-failed 28, syntax-invalid 7, redundant 2
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3753 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:07:11 [main] [INFO]  KGenProgMain - entered the era of 186th generation.
2023-08-01 22:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 22 seconds
Variants: generated 100, build-succeeded 53, build-failed 31, syntax-invalid 13, redundant 3
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3266 ms, max 122 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:07:29 [main] [INFO]  KGenProgMain - entered the era of 187th generation.
2023-08-01 22:07:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 40 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 8, redundant 2
Fitness: max 1(2), min 0(61), ave 0.032
Test execution time: sum 4033 ms, max 179 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:07:48 [main] [INFO]  KGenProgMain - entered the era of 188th generation.
2023-08-01 22:08:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 53 minutes 58 seconds
Variants: generated 100, build-succeeded 59, build-failed 30, syntax-invalid 5, redundant 6
Fitness: max 1(1), min 0(58), ave 0.017
Test execution time: sum 3478 ms, max 77 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:08:06 [main] [INFO]  KGenProgMain - entered the era of 189th generation.
2023-08-01 22:08:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 17 seconds
Variants: generated 100, build-succeeded 63, build-failed 27, syntax-invalid 6, redundant 4
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3983 ms, max 128 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:08:25 [main] [INFO]  KGenProgMain - entered the era of 190th generation.
2023-08-01 22:08:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 35 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 8, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3818 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:08:43 [main] [INFO]  KGenProgMain - entered the era of 191st generation.
2023-08-01 22:09:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 54 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 7, redundant 1
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3375 ms, max 81 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:09:01 [main] [INFO]  KGenProgMain - entered the era of 192nd generation.
2023-08-01 22:09:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 12 seconds
Variants: generated 100, build-succeeded 54, build-failed 35, syntax-invalid 9, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3383 ms, max 126 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:09:19 [main] [INFO]  KGenProgMain - entered the era of 193rd generation.
2023-08-01 22:09:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 29 seconds
Variants: generated 100, build-succeeded 50, build-failed 34, syntax-invalid 15, redundant 1
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2967 ms, max 76 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:09:36 [main] [INFO]  KGenProgMain - entered the era of 194th generation.
2023-08-01 22:09:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 55 minutes 47 seconds
Variants: generated 100, build-succeeded 52, build-failed 28, syntax-invalid 15, redundant 5
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3164 ms, max 128 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:09:55 [main] [INFO]  KGenProgMain - entered the era of 195th generation.
2023-08-01 22:10:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 4 seconds
Variants: generated 100, build-succeeded 53, build-failed 25, syntax-invalid 18, redundant 4
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3022 ms, max 70 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:10:11 [main] [INFO]  KGenProgMain - entered the era of 196th generation.
2023-08-01 22:10:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 56 minutes 21 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 17, redundant 4
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2950 ms, max 126 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:10:29 [main] [INFO]  KGenProgMain - entered the era of 197th generation.
2023-08-01 22:13:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 38 seconds
Variants: generated 100, build-succeeded 47, build-failed 36, syntax-invalid 15, redundant 2
Fitness: max 0(47), min 0(47), ave 0
Test execution time: sum 182875 ms, max 180064 ms, min 54 ms
----------------------------------------------------------------

2023-08-01 22:13:46 [main] [INFO]  KGenProgMain - entered the era of 198th generation.
2023-08-01 22:14:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 hours 59 minutes 55 seconds
Variants: generated 100, build-succeeded 44, build-failed 30, syntax-invalid 16, redundant 10
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2742 ms, max 127 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:14:03 [main] [INFO]  KGenProgMain - entered the era of 199th generation.
2023-08-01 22:14:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 24, syntax-invalid 12, redundant 4
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3572 ms, max 83 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:14:20 [main] [INFO]  KGenProgMain - entered the era of 200th generation.
2023-08-01 22:14:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 30 seconds
Variants: generated 100, build-succeeded 53, build-failed 27, syntax-invalid 16, redundant 4
Fitness: max 1(1), min 0(52), ave 0.019
Test execution time: sum 3447 ms, max 115 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:14:38 [main] [INFO]  KGenProgMain - entered the era of 201st generation.
2023-08-01 22:14:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 48 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 16, redundant 4
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3370 ms, max 78 ms, min 56 ms
----------------------------------------------------------------

2023-08-01 22:14:55 [main] [INFO]  KGenProgMain - entered the era of 202nd generation.
2023-08-01 22:15:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 7 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3773 ms, max 213 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 22:15:15 [main] [INFO]  KGenProgMain - entered the era of 203rd generation.
2023-08-01 22:15:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 1 minutes 25 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 5, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3670 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:15:33 [main] [INFO]  KGenProgMain - entered the era of 204th generation.
2023-08-01 22:18:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 4 minutes 43 seconds
Variants: generated 100, build-succeeded 57, build-failed 27, syntax-invalid 9, redundant 7
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 183516 ms, max 180059 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:18:51 [main] [INFO]  KGenProgMain - entered the era of 205th generation.
2023-08-01 22:19:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 5 minutes 0 seconds
Variants: generated 100, build-succeeded 52, build-failed 37, syntax-invalid 7, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3050 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 22:19:08 [main] [INFO]  KGenProgMain - entered the era of 206th generation.
2023-08-01 22:55:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 41 minutes 20 seconds
Variants: generated 100, build-succeeded 58, build-failed 29, syntax-invalid 9, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 2164041 ms, max 180106 ms, min 55 ms
----------------------------------------------------------------

2023-08-01 22:55:28 [main] [INFO]  KGenProgMain - entered the era of 207th generation.
2023-08-01 23:04:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 50 minutes 40 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 4, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 543921 ms, max 180087 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:04:48 [main] [INFO]  KGenProgMain - entered the era of 208th generation.
2023-08-01 23:11:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 2 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 1, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 363914 ms, max 180080 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:11:10 [main] [INFO]  KGenProgMain - entered the era of 209th generation.
2023-08-01 23:11:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 hours 57 minutes 23 seconds
Variants: generated 100, build-succeeded 55, build-failed 40, syntax-invalid 3, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3541 ms, max 123 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:11:30 [main] [INFO]  KGenProgMain - entered the era of 210th generation.
2023-08-01 23:14:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 45 seconds
Variants: generated 100, build-succeeded 57, build-failed 38, syntax-invalid 3, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 183738 ms, max 180065 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:14:53 [main] [INFO]  KGenProgMain - entered the era of 211th generation.
2023-08-01 23:15:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 6 seconds
Variants: generated 100, build-succeeded 61, build-failed 25, syntax-invalid 7, redundant 7
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3907 ms, max 127 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:15:14 [main] [INFO]  KGenProgMain - entered the era of 212th generation.
2023-08-01 23:15:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 28 seconds
Variants: generated 100, build-succeeded 62, build-failed 26, syntax-invalid 9, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 4009 ms, max 167 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:15:36 [main] [INFO]  KGenProgMain - entered the era of 213th generation.
2023-08-01 23:15:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 1 minutes 51 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 1, redundant 5
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3894 ms, max 125 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:15:58 [main] [INFO]  KGenProgMain - entered the era of 214th generation.
2023-08-01 23:16:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 35, syntax-invalid 3, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3756 ms, max 132 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:16:20 [main] [INFO]  KGenProgMain - entered the era of 215th generation.
2023-08-01 23:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 35 seconds
Variants: generated 100, build-succeeded 60, build-failed 32, syntax-invalid 7, redundant 1
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3954 ms, max 129 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:16:43 [main] [INFO]  KGenProgMain - entered the era of 216th generation.
2023-08-01 23:17:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 2 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 24, syntax-invalid 4, redundant 9
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3864 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:17:06 [main] [INFO]  KGenProgMain - entered the era of 217th generation.
2023-08-01 23:17:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 20 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 9, redundant 2
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3332 ms, max 164 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:17:27 [main] [INFO]  KGenProgMain - entered the era of 218th generation.
2023-08-01 23:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 3 minutes 42 seconds
Variants: generated 100, build-succeeded 55, build-failed 35, syntax-invalid 7, redundant 3
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3438 ms, max 124 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:17:50 [main] [INFO]  KGenProgMain - entered the era of 219th generation.
2023-08-01 23:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 3 seconds
Variants: generated 100, build-succeeded 58, build-failed 32, syntax-invalid 6, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3561 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:18:11 [main] [INFO]  KGenProgMain - entered the era of 220th generation.
2023-08-01 23:18:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 25 seconds
Variants: generated 100, build-succeeded 65, build-failed 20, syntax-invalid 7, redundant 8
Fitness: max 0(65), min 0(65), ave 0
Test execution time: sum 4074 ms, max 170 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:18:33 [main] [INFO]  KGenProgMain - entered the era of 221st generation.
2023-08-01 23:18:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 4 minutes 48 seconds
Variants: generated 100, build-succeeded 64, build-failed 34, syntax-invalid 2, redundant 0
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3931 ms, max 112 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:18:56 [main] [INFO]  KGenProgMain - entered the era of 222nd generation.
2023-08-01 23:19:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 10 seconds
Variants: generated 100, build-succeeded 64, build-failed 28, syntax-invalid 8, redundant 0
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3729 ms, max 118 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:19:17 [main] [INFO]  KGenProgMain - entered the era of 223rd generation.
2023-08-01 23:19:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 32 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 9, redundant 1
Fitness: max 1(1), min 0(59), ave 0.017
Test execution time: sum 3958 ms, max 189 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:19:39 [main] [INFO]  KGenProgMain - entered the era of 224th generation.
2023-08-01 23:20:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 5 minutes 53 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 7, redundant 2
Fitness: max 1(1), min 0(56), ave 0.018
Test execution time: sum 3466 ms, max 159 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:20:01 [main] [INFO]  KGenProgMain - entered the era of 225th generation.
2023-08-01 23:20:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 15 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 4, redundant 10
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3704 ms, max 106 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:20:23 [main] [INFO]  KGenProgMain - entered the era of 226th generation.
2023-08-01 23:20:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 38 seconds
Variants: generated 100, build-succeeded 68, build-failed 23, syntax-invalid 6, redundant 3
Fitness: max 0(68), min 0(68), ave 0
Test execution time: sum 4099 ms, max 117 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:20:45 [main] [INFO]  KGenProgMain - entered the era of 227th generation.
2023-08-01 23:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 6 minutes 59 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 5, redundant 1
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3594 ms, max 119 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:21:07 [main] [INFO]  KGenProgMain - entered the era of 228th generation.
2023-08-01 23:21:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 22 seconds
Variants: generated 100, build-succeeded 66, build-failed 27, syntax-invalid 5, redundant 2
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 3907 ms, max 119 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:21:30 [main] [INFO]  KGenProgMain - entered the era of 229th generation.
2023-08-01 23:21:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 7 minutes 44 seconds
Variants: generated 100, build-succeeded 59, build-failed 33, syntax-invalid 5, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3505 ms, max 104 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:21:51 [main] [INFO]  KGenProgMain - entered the era of 230th generation.
2023-08-01 23:22:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 5 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 4, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3578 ms, max 127 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:22:13 [main] [INFO]  KGenProgMain - entered the era of 231st generation.
2023-08-01 23:22:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 27 seconds
Variants: generated 100, build-succeeded 58, build-failed 30, syntax-invalid 8, redundant 4
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3503 ms, max 126 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:22:34 [main] [INFO]  KGenProgMain - entered the era of 232nd generation.
2023-08-01 23:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 8 minutes 49 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3747 ms, max 121 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:22:56 [main] [INFO]  KGenProgMain - entered the era of 233rd generation.
2023-08-01 23:23:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 11 seconds
Variants: generated 100, build-succeeded 62, build-failed 28, syntax-invalid 6, redundant 4
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3693 ms, max 129 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:23:18 [main] [INFO]  KGenProgMain - entered the era of 234th generation.
2023-08-01 23:23:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 32 seconds
Variants: generated 100, build-succeeded 61, build-failed 31, syntax-invalid 6, redundant 2
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3572 ms, max 106 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:23:40 [main] [INFO]  KGenProgMain - entered the era of 235th generation.
2023-08-01 23:24:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 9 minutes 54 seconds
Variants: generated 100, build-succeeded 62, build-failed 30, syntax-invalid 5, redundant 3
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3743 ms, max 113 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:24:02 [main] [INFO]  KGenProgMain - entered the era of 236th generation.
2023-08-01 23:24:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 15 seconds
Variants: generated 100, build-succeeded 64, build-failed 24, syntax-invalid 4, redundant 8
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3617 ms, max 115 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:24:23 [main] [INFO]  KGenProgMain - entered the era of 237th generation.
2023-08-01 23:24:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 37 seconds
Variants: generated 100, build-succeeded 64, build-failed 32, syntax-invalid 3, redundant 1
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 3746 ms, max 107 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:24:45 [main] [INFO]  KGenProgMain - entered the era of 238th generation.
2023-08-01 23:25:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 10 minutes 58 seconds
Variants: generated 100, build-succeeded 63, build-failed 26, syntax-invalid 6, redundant 5
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3574 ms, max 100 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:25:06 [main] [INFO]  KGenProgMain - entered the era of 239th generation.
2023-08-01 23:25:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 21 seconds
Variants: generated 100, build-succeeded 60, build-failed 30, syntax-invalid 7, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3780 ms, max 104 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:25:28 [main] [INFO]  KGenProgMain - entered the era of 240th generation.
2023-08-01 23:25:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 11 minutes 43 seconds
Variants: generated 100, build-succeeded 62, build-failed 29, syntax-invalid 3, redundant 6
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3697 ms, max 107 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:25:51 [main] [INFO]  KGenProgMain - entered the era of 241st generation.
2023-08-01 23:26:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 4 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 4, redundant 6
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3618 ms, max 131 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:26:12 [main] [INFO]  KGenProgMain - entered the era of 242nd generation.
2023-08-01 23:26:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 26 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 1, redundant 4
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3477 ms, max 103 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:26:34 [main] [INFO]  KGenProgMain - entered the era of 243rd generation.
2023-08-01 23:26:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 12 minutes 47 seconds
Variants: generated 100, build-succeeded 63, build-failed 30, syntax-invalid 5, redundant 2
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3663 ms, max 103 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:26:55 [main] [INFO]  KGenProgMain - entered the era of 244th generation.
2023-08-01 23:27:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 9 seconds
Variants: generated 100, build-succeeded 61, build-failed 30, syntax-invalid 8, redundant 1
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3525 ms, max 109 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:27:17 [main] [INFO]  KGenProgMain - entered the era of 245th generation.
2023-08-01 23:27:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 13 minutes 30 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 3, redundant 5
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3430 ms, max 176 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:27:38 [main] [INFO]  KGenProgMain - entered the era of 246th generation.
2023-08-01 23:31:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 16 minutes 52 seconds
Variants: generated 100, build-succeeded 61, build-failed 28, syntax-invalid 6, redundant 5
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 183641 ms, max 180068 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:31:00 [main] [INFO]  KGenProgMain - entered the era of 247th generation.
2023-08-01 23:31:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 17 minutes 13 seconds
Variants: generated 100, build-succeeded 63, build-failed 29, syntax-invalid 2, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3775 ms, max 83 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:31:21 [main] [INFO]  KGenProgMain - entered the era of 248th generation.
2023-08-01 23:34:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 36 seconds
Variants: generated 100, build-succeeded 60, build-failed 34, syntax-invalid 3, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 183826 ms, max 180070 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:34:44 [main] [INFO]  KGenProgMain - entered the era of 249th generation.
2023-08-01 23:35:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 20 minutes 59 seconds
Variants: generated 100, build-succeeded 61, build-failed 34, syntax-invalid 2, redundant 3
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3626 ms, max 130 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:35:07 [main] [INFO]  KGenProgMain - entered the era of 250th generation.
2023-08-01 23:35:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 22 seconds
Variants: generated 100, build-succeeded 61, build-failed 33, syntax-invalid 5, redundant 1
Fitness: max 1(1), min 0(60), ave 0.016
Test execution time: sum 3751 ms, max 131 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:35:29 [main] [INFO]  KGenProgMain - entered the era of 251st generation.
2023-08-01 23:35:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 21 minutes 44 seconds
Variants: generated 100, build-succeeded 60, build-failed 33, syntax-invalid 4, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3800 ms, max 108 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:35:52 [main] [INFO]  KGenProgMain - entered the era of 252nd generation.
2023-08-01 23:36:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 7 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 8, redundant 2
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3753 ms, max 122 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:36:14 [main] [INFO]  KGenProgMain - entered the era of 253rd generation.
2023-08-01 23:36:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 28 seconds
Variants: generated 100, build-succeeded 60, build-failed 35, syntax-invalid 2, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3570 ms, max 75 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:36:36 [main] [INFO]  KGenProgMain - entered the era of 254th generation.
2023-08-01 23:36:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 22 minutes 51 seconds
Variants: generated 100, build-succeeded 63, build-failed 31, syntax-invalid 5, redundant 1
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3703 ms, max 122 ms, min 51 ms
----------------------------------------------------------------

2023-08-01 23:36:59 [main] [INFO]  KGenProgMain - entered the era of 255th generation.
2023-08-01 23:37:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 12 seconds
Variants: generated 100, build-succeeded 60, build-failed 26, syntax-invalid 8, redundant 6
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3530 ms, max 75 ms, min 52 ms
----------------------------------------------------------------

2023-08-01 23:37:20 [main] [INFO]  KGenProgMain - entered the era of 256th generation.
2023-08-01 23:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 34 seconds
Variants: generated 100, build-succeeded 54, build-failed 29, syntax-invalid 11, redundant 6
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3246 ms, max 130 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:37:42 [main] [INFO]  KGenProgMain - entered the era of 257th generation.
2023-08-01 23:38:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 23 minutes 56 seconds
Variants: generated 100, build-succeeded 57, build-failed 34, syntax-invalid 6, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3368 ms, max 76 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:38:04 [main] [INFO]  KGenProgMain - entered the era of 258th generation.
2023-08-01 23:38:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 24 minutes 19 seconds
Variants: generated 100, build-succeeded 60, build-failed 27, syntax-invalid 10, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3774 ms, max 145 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:38:26 [main] [INFO]  KGenProgMain - entered the era of 259th generation.
2023-08-01 23:41:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 27 minutes 42 seconds
Variants: generated 100, build-succeeded 64, build-failed 23, syntax-invalid 8, redundant 5
Fitness: max 0(64), min 0(64), ave 0
Test execution time: sum 184311 ms, max 180080 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:41:50 [main] [INFO]  KGenProgMain - entered the era of 260th generation.
2023-08-01 23:57:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 43 minutes 4 seconds
Variants: generated 100, build-succeeded 55, build-failed 34, syntax-invalid 6, redundant 5
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 903608 ms, max 180100 ms, min 53 ms
----------------------------------------------------------------

2023-08-01 23:57:12 [main] [INFO]  KGenProgMain - entered the era of 261st generation.
2023-08-02 00:12:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 hours 58 minutes 27 seconds
Variants: generated 100, build-succeeded 60, build-failed 28, syntax-invalid 9, redundant 3
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 904100 ms, max 180078 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 00:12:35 [main] [INFO]  KGenProgMain - entered the era of 262nd generation.
2023-08-02 00:18:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 4 minutes 50 seconds
Variants: generated 100, build-succeeded 66, build-failed 26, syntax-invalid 6, redundant 2
Fitness: max 0(66), min 0(66), ave 0
Test execution time: sum 364149 ms, max 180078 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:18:58 [main] [INFO]  KGenProgMain - entered the era of 263rd generation.
2023-08-02 00:25:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 14 seconds
Variants: generated 100, build-succeeded 56, build-failed 35, syntax-invalid 6, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 363564 ms, max 180067 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 00:25:22 [main] [INFO]  KGenProgMain - entered the era of 264th generation.
2023-08-02 00:25:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 36 seconds
Variants: generated 100, build-succeeded 59, build-failed 32, syntax-invalid 6, redundant 3
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3609 ms, max 80 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:25:44 [main] [INFO]  KGenProgMain - entered the era of 265th generation.
2023-08-02 00:26:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 11 minutes 59 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 13, redundant 4
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3159 ms, max 120 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 00:26:07 [main] [INFO]  KGenProgMain - entered the era of 266th generation.
2023-08-02 00:29:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 15 minutes 21 seconds
Variants: generated 100, build-succeeded 54, build-failed 31, syntax-invalid 12, redundant 3
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 183300 ms, max 180070 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:29:28 [main] [INFO]  KGenProgMain - entered the era of 267th generation.
2023-08-02 00:32:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 18 minutes 43 seconds
Variants: generated 100, build-succeeded 55, build-failed 32, syntax-invalid 9, redundant 4
Fitness: max 1(1), min 0(54), ave 0.018
Test execution time: sum 183470 ms, max 180066 ms, min 52 ms
----------------------------------------------------------------

2023-08-02 00:32:51 [main] [INFO]  KGenProgMain - entered the era of 268th generation.
2023-08-02 00:39:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 4 seconds
Variants: generated 100, build-succeeded 48, build-failed 29, syntax-invalid 19, redundant 4
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 362931 ms, max 180071 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 00:39:12 [main] [INFO]  KGenProgMain - entered the era of 269th generation.
2023-08-02 00:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 25 minutes 27 seconds
Variants: generated 100, build-succeeded 58, build-failed 25, syntax-invalid 15, redundant 2
Fitness: max 1(2), min 0(56), ave 0.034
Test execution time: sum 3646 ms, max 210 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:39:34 [main] [INFO]  KGenProgMain - entered the era of 270th generation.
2023-08-02 00:48:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 34 minutes 48 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 6, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 543262 ms, max 180066 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:48:56 [main] [INFO]  KGenProgMain - entered the era of 271st generation.
2023-08-02 00:52:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 11 seconds
Variants: generated 100, build-succeeded 56, build-failed 32, syntax-invalid 9, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 183566 ms, max 180069 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:52:19 [main] [INFO]  KGenProgMain - entered the era of 272nd generation.
2023-08-02 00:52:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 38 minutes 35 seconds
Variants: generated 100, build-succeeded 62, build-failed 32, syntax-invalid 2, redundant 4
Fitness: max 0(62), min 0(62), ave 0
Test execution time: sum 3806 ms, max 80 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:52:43 [main] [INFO]  KGenProgMain - entered the era of 273rd generation.
2023-08-02 00:56:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 41 minutes 57 seconds
Variants: generated 100, build-succeeded 50, build-failed 32, syntax-invalid 10, redundant 8
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 183095 ms, max 180062 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 00:56:05 [main] [INFO]  KGenProgMain - entered the era of 274th generation.
2023-08-02 00:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 45 minutes 19 seconds
Variants: generated 100, build-succeeded 53, build-failed 28, syntax-invalid 14, redundant 5
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 183267 ms, max 180072 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 00:59:27 [main] [INFO]  KGenProgMain - entered the era of 275th generation.
2023-08-02 01:02:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 48 minutes 43 seconds
Variants: generated 100, build-succeeded 59, build-failed 29, syntax-invalid 6, redundant 6
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 183845 ms, max 180068 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 01:02:51 [main] [INFO]  KGenProgMain - entered the era of 276th generation.
2023-08-02 01:03:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 49 minutes 6 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 13, redundant 3
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3606 ms, max 84 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 01:03:13 [main] [INFO]  KGenProgMain - entered the era of 277th generation.
2023-08-02 01:06:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 52 minutes 29 seconds
Variants: generated 100, build-succeeded 58, build-failed 26, syntax-invalid 14, redundant 2
Fitness: max 1(1), min 0(57), ave 0.017
Test execution time: sum 183592 ms, max 180067 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:06:37 [main] [INFO]  KGenProgMain - entered the era of 278th generation.
2023-08-02 01:13:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 hours 58 minutes 53 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 12, redundant 1
Fitness: max 1(1), min 0(55), ave 0.018
Test execution time: sum 363542 ms, max 180076 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:13:00 [main] [INFO]  KGenProgMain - entered the era of 279th generation.
2023-08-02 01:19:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 5 minutes 15 seconds
Variants: generated 100, build-succeeded 50, build-failed 33, syntax-invalid 16, redundant 1
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 363145 ms, max 180065 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 01:19:23 [main] [INFO]  KGenProgMain - entered the era of 280th generation.
2023-08-02 01:34:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 20 minutes 37 seconds
Variants: generated 100, build-succeeded 51, build-failed 35, syntax-invalid 12, redundant 2
Fitness: max 1(1), min 0(50), ave 0.02
Test execution time: sum 903114 ms, max 180080 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:34:45 [main] [INFO]  KGenProgMain - entered the era of 281st generation.
2023-08-02 01:44:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 30 minutes 0 seconds
Variants: generated 100, build-succeeded 57, build-failed 28, syntax-invalid 12, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 543606 ms, max 180068 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:44:08 [main] [INFO]  KGenProgMain - entered the era of 282nd generation.
2023-08-02 01:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 39 minutes 23 seconds
Variants: generated 100, build-succeeded 54, build-failed 32, syntax-invalid 6, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 543192 ms, max 180073 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:53:30 [main] [INFO]  KGenProgMain - entered the era of 283rd generation.
2023-08-02 01:59:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 45 minutes 47 seconds
Variants: generated 100, build-succeeded 57, build-failed 33, syntax-invalid 6, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 363578 ms, max 180076 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 01:59:55 [main] [INFO]  KGenProgMain - entered the era of 284th generation.
2023-08-02 02:00:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 9 seconds
Variants: generated 100, build-succeeded 56, build-failed 27, syntax-invalid 15, redundant 2
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3434 ms, max 85 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:00:17 [main] [INFO]  KGenProgMain - entered the era of 285th generation.
2023-08-02 02:00:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 32 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 18, redundant 3
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 3102 ms, max 124 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:00:40 [main] [INFO]  KGenProgMain - entered the era of 286th generation.
2023-08-02 02:01:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 46 minutes 54 seconds
Variants: generated 100, build-succeeded 46, build-failed 33, syntax-invalid 16, redundant 5
Fitness: max 0(46), min 0(46), ave 0
Test execution time: sum 2754 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:01:02 [main] [INFO]  KGenProgMain - entered the era of 287th generation.
2023-08-02 02:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 47 minutes 17 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 14, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 3053 ms, max 136 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:01:24 [main] [INFO]  KGenProgMain - entered the era of 288th generation.
2023-08-02 02:04:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 50 minutes 40 seconds
Variants: generated 100, build-succeeded 57, build-failed 30, syntax-invalid 9, redundant 4
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 183588 ms, max 180075 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:04:47 [main] [INFO]  KGenProgMain - entered the era of 289th generation.
2023-08-02 02:05:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 3 seconds
Variants: generated 100, build-succeeded 59, build-failed 23, syntax-invalid 11, redundant 7
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3583 ms, max 133 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:05:11 [main] [INFO]  KGenProgMain - entered the era of 290th generation.
2023-08-02 02:05:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 26 seconds
Variants: generated 100, build-succeeded 52, build-failed 31, syntax-invalid 10, redundant 7
Fitness: max 0(52), min 0(52), ave 0
Test execution time: sum 3124 ms, max 73 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:05:33 [main] [INFO]  KGenProgMain - entered the era of 291st generation.
2023-08-02 02:05:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 51 minutes 49 seconds
Variants: generated 100, build-succeeded 51, build-failed 33, syntax-invalid 13, redundant 3
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3068 ms, max 111 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:05:57 [main] [INFO]  KGenProgMain - entered the era of 292nd generation.
2023-08-02 02:06:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 11 seconds
Variants: generated 100, build-succeeded 49, build-failed 34, syntax-invalid 12, redundant 5
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2878 ms, max 71 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:06:19 [main] [INFO]  KGenProgMain - entered the era of 293rd generation.
2023-08-02 02:06:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 36 seconds
Variants: generated 100, build-succeeded 60, build-failed 23, syntax-invalid 12, redundant 5
Fitness: max 0(60), min 0(60), ave 0
Test execution time: sum 3662 ms, max 108 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:06:43 [main] [INFO]  KGenProgMain - entered the era of 294th generation.
2023-08-02 02:07:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 52 minutes 58 seconds
Variants: generated 100, build-succeeded 50, build-failed 35, syntax-invalid 13, redundant 2
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2950 ms, max 78 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:07:05 [main] [INFO]  KGenProgMain - entered the era of 295th generation.
2023-08-02 02:07:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 21 seconds
Variants: generated 100, build-succeeded 53, build-failed 34, syntax-invalid 13, redundant 0
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3172 ms, max 132 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:07:29 [main] [INFO]  KGenProgMain - entered the era of 296th generation.
2023-08-02 02:07:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 53 minutes 43 seconds
Variants: generated 100, build-succeeded 45, build-failed 29, syntax-invalid 18, redundant 8
Fitness: max 0(45), min 0(45), ave 0
Test execution time: sum 2600 ms, max 72 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:07:51 [main] [INFO]  KGenProgMain - entered the era of 297th generation.
2023-08-02 02:08:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 6 seconds
Variants: generated 100, build-succeeded 49, build-failed 28, syntax-invalid 20, redundant 3
Fitness: max 0(49), min 0(49), ave 0
Test execution time: sum 2947 ms, max 123 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:08:14 [main] [INFO]  KGenProgMain - entered the era of 298th generation.
2023-08-02 02:08:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 28 seconds
Variants: generated 100, build-succeeded 39, build-failed 35, syntax-invalid 20, redundant 6
Fitness: max 0(39), min 0(39), ave 0
Test execution time: sum 2240 ms, max 69 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:08:36 [main] [INFO]  KGenProgMain - entered the era of 299th generation.
2023-08-02 02:09:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 54 minutes 52 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 19, redundant 2
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2787 ms, max 105 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:09:00 [main] [INFO]  KGenProgMain - entered the era of 300th generation.
2023-08-02 02:09:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 14 seconds
Variants: generated 100, build-succeeded 50, build-failed 29, syntax-invalid 16, redundant 5
Fitness: max 0(50), min 0(50), ave 0
Test execution time: sum 2871 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:09:22 [main] [INFO]  KGenProgMain - entered the era of 301st generation.
2023-08-02 02:09:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 37 seconds
Variants: generated 100, build-succeeded 42, build-failed 33, syntax-invalid 22, redundant 3
Fitness: max 0(42), min 0(42), ave 0
Test execution time: sum 2650 ms, max 118 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:09:45 [main] [INFO]  KGenProgMain - entered the era of 302nd generation.
2023-08-02 02:10:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 55 minutes 59 seconds
Variants: generated 100, build-succeeded 44, build-failed 35, syntax-invalid 20, redundant 1
Fitness: max 0(44), min 0(44), ave 0
Test execution time: sum 2553 ms, max 74 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:10:06 [main] [INFO]  KGenProgMain - entered the era of 303rd generation.
2023-08-02 02:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 23 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 14, redundant 5
Fitness: max 0(51), min 0(51), ave 0
Test execution time: sum 3264 ms, max 121 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:10:30 [main] [INFO]  KGenProgMain - entered the era of 304th generation.
2023-08-02 02:10:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 56 minutes 46 seconds
Variants: generated 100, build-succeeded 53, build-failed 26, syntax-invalid 13, redundant 8
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3055 ms, max 74 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:10:54 [main] [INFO]  KGenProgMain - entered the era of 305th generation.
2023-08-02 02:11:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 12 seconds
Variants: generated 100, build-succeeded 58, build-failed 28, syntax-invalid 8, redundant 6
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3703 ms, max 118 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:11:19 [main] [INFO]  KGenProgMain - entered the era of 306th generation.
2023-08-02 02:11:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 57 minutes 35 seconds
Variants: generated 100, build-succeeded 55, build-failed 29, syntax-invalid 10, redundant 6
Fitness: max 0(55), min 0(55), ave 0
Test execution time: sum 3219 ms, max 79 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:11:43 [main] [INFO]  KGenProgMain - entered the era of 307th generation.
2023-08-02 02:12:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 1 seconds
Variants: generated 100, build-succeeded 63, build-failed 25, syntax-invalid 6, redundant 6
Fitness: max 0(63), min 0(63), ave 0
Test execution time: sum 3963 ms, max 208 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:12:09 [main] [INFO]  KGenProgMain - entered the era of 308th generation.
2023-08-02 02:12:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 25 seconds
Variants: generated 100, build-succeeded 59, build-failed 24, syntax-invalid 9, redundant 8
Fitness: max 0(59), min 0(59), ave 0
Test execution time: sum 3379 ms, max 73 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:12:33 [main] [INFO]  KGenProgMain - entered the era of 309th generation.
2023-08-02 02:12:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 58 minutes 49 seconds
Variants: generated 100, build-succeeded 54, build-failed 30, syntax-invalid 14, redundant 2
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3348 ms, max 109 ms, min 53 ms
----------------------------------------------------------------

2023-08-02 02:12:57 [main] [INFO]  KGenProgMain - entered the era of 310th generation.
2023-08-02 02:13:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 14 seconds
Variants: generated 100, build-succeeded 57, build-failed 26, syntax-invalid 14, redundant 3
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3526 ms, max 97 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:13:21 [main] [INFO]  KGenProgMain - entered the era of 311th generation.
2023-08-02 02:13:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 hours 59 minutes 39 seconds
Variants: generated 100, build-succeeded 57, build-failed 35, syntax-invalid 6, redundant 2
Fitness: max 0(57), min 0(57), ave 0
Test execution time: sum 3558 ms, max 117 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:13:47 [main] [INFO]  KGenProgMain - entered the era of 312th generation.
2023-08-02 02:14:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 seconds
Variants: generated 100, build-succeeded 51, build-failed 30, syntax-invalid 18, redundant 1
Fitness: max 1(2), min 0(49), ave 0.039
Test execution time: sum 3195 ms, max 78 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:14:11 [main] [INFO]  KGenProgMain - entered the era of 313th generation.
2023-08-02 02:14:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 29 seconds
Variants: generated 100, build-succeeded 56, build-failed 31, syntax-invalid 10, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3573 ms, max 119 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:14:37 [main] [INFO]  KGenProgMain - entered the era of 314th generation.
2023-08-02 02:15:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 53 seconds
Variants: generated 100, build-succeeded 56, build-failed 28, syntax-invalid 13, redundant 3
Fitness: max 0(56), min 0(56), ave 0
Test execution time: sum 3593 ms, max 75 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:15:01 [main] [INFO]  KGenProgMain - entered the era of 315th generation.
2023-08-02 02:15:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 18 seconds
Variants: generated 100, build-succeeded 52, build-failed 25, syntax-invalid 16, redundant 7
Fitness: max 1(1), min 0(51), ave 0.019
Test execution time: sum 3291 ms, max 139 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:15:26 [main] [INFO]  KGenProgMain - entered the era of 316th generation.
2023-08-02 02:15:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 1 minutes 43 seconds
Variants: generated 100, build-succeeded 48, build-failed 30, syntax-invalid 17, redundant 5
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 3233 ms, max 132 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:15:50 [main] [INFO]  KGenProgMain - entered the era of 317th generation.
2023-08-02 02:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 8 seconds
Variants: generated 100, build-succeeded 61, build-failed 29, syntax-invalid 9, redundant 1
Fitness: max 0(61), min 0(61), ave 0
Test execution time: sum 3853 ms, max 82 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:16:16 [main] [INFO]  KGenProgMain - entered the era of 318th generation.
2023-08-02 02:16:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 2 minutes 35 seconds
Variants: generated 100, build-succeeded 58, build-failed 33, syntax-invalid 7, redundant 2
Fitness: max 0(58), min 0(58), ave 0
Test execution time: sum 3796 ms, max 133 ms, min 54 ms
----------------------------------------------------------------

2023-08-02 02:16:43 [main] [INFO]  KGenProgMain - entered the era of 319th generation.
2023-08-02 02:17:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 0 seconds
Variants: generated 100, build-succeeded 53, build-failed 37, syntax-invalid 9, redundant 1
Fitness: max 0(53), min 0(53), ave 0
Test execution time: sum 3297 ms, max 77 ms, min 55 ms
----------------------------------------------------------------

2023-08-02 02:17:08 [main] [INFO]  KGenProgMain - entered the era of 320th generation.
2023-08-02 02:17:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 26 seconds
Variants: generated 100, build-succeeded 48, build-failed 33, syntax-invalid 16, redundant 3
Fitness: max 0(48), min 0(48), ave 0
Test execution time: sum 3216 ms, max 128 ms, min 56 ms
----------------------------------------------------------------

2023-08-02 02:17:34 [main] [INFO]  KGenProgMain - entered the era of 321st generation.
2023-08-02 02:18:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 3 minutes 53 seconds
Variants: generated 100, build-succeeded 54, build-failed 26, syntax-invalid 12, redundant 8
Fitness: max 0(54), min 0(54), ave 0
Test execution time: sum 3689 ms, max 140 ms, min 57 ms
----------------------------------------------------------------

2023-08-02 02:18:01 [main] [INFO]  KGenProgMain - entered the era of 322nd generation.
2023-08-02 02:18:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 hours 4 minutes 1 seconds
Variants: generated 33, build-succeeded 8, build-failed 21, syntax-invalid 3, redundant 1
Fitness: max 1(1), min 0(7), ave 0.125
Test execution time: sum 547 ms, max 81 ms, min 59 ms
----------------------------------------------------------------

2023-08-02 02:18:09 [main] [INFO]  KGenProgMain - GA stopped
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v14)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v119)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final int n = (currentState == null) ? -1 : currentState.length;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v119)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -213,7 +214,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v326)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -290,7 +291,7 @@
             x0 = x1;
             y0 = y1;
             // Compute new X1, Y1
-            if (Math.abs(delta) > tolerance) {
+            if (y0 * y1 >= 0) {
                 x1 = x1 + delta;
             } else if (dx > 0.0) {
                 x1 = x1 + 0.5 * tolerance;
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -269,7 +269,7 @@
   public double[] getInterpolatedState() throws DerivativeException {
 
       // lazy evaluation of the state
-      if (dirtyState) {
+      if (currentState == null) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:12 [main] [INFO]  PatchLogExporter - patch (v428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final int n = (currentState == null) ? -1 : currentState.length;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -272,7 +273,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v485)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final int n = (currentState == null) ? -1 : currentState.length;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -272,7 +273,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v511)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -163,7 +163,8 @@
         double yMin = f.value(min);
         double yMax = f.value(max);
 
-        // Verify bracketing
+        this.resultComputed = false;
+		// Verify bracketing
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
@@ -223,15 +224,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    final int n = (currentState == null) ? -1 : currentState.length;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -272,7 +273,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v538)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -163,7 +163,8 @@
         double yMin = f.value(min);
         double yMax = f.value(max);
 
-        // Verify bracketing
+        this.resultComputed = false;
+		// Verify bracketing
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
@@ -223,7 +224,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i < maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v568)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v568)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v568)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v568)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v568)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -163,7 +163,8 @@
         double yMin = f.value(min);
         double yMax = f.value(max);
 
-        // Verify bracketing
+        this.resultComputed = false;
+		// Verify bracketing
         double sign = yMin * yMax;
         if (sign > 0) {
             // check if either value is close to a zero
@@ -230,7 +231,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +252,8 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
+                i++;
+				oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v587)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v587)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +104,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +215,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v587)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v587)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v683)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v683)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,18 +93,18 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
-        previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
@@ -213,7 +213,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v683)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v683)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,8 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
-    this.forward            = true;
+    final int n = (currentState == null) ? -1 : currentState.length;
+	this.forward            = true;
     this.dirtyState         = true;
   }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1125)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1205)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
@@ -282,7 +284,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1231)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1317)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -304,7 +296,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1330)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -101,9 +103,9 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -181,7 +183,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1413)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
@@ -304,7 +300,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,6 +60,7 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
+		final String pattern = "internal error, please fill a bug report at {0}";
         this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -101,9 +104,9 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v1676)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
@@ -304,7 +303,6 @@
                 delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -185,7 +188,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (i < n) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2871)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +229,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -248,7 +248,8 @@
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    h = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
@@ -272,7 +273,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +105,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v2973)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
@@ -287,7 +285,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +106,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -185,7 +189,7 @@
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
-                if (g0Positive ^ (gb >= 0)) {
+                if (i < n) {
                     // there is a sign change: an event is expected during this step
 
                         // this is a corner case:
@@ -213,7 +217,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3197)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -272,7 +272,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,17 +93,20 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3268)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3278)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -248,7 +247,8 @@
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    h = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +106,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +217,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3290)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3325)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3325)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,13 +93,16 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
@@ -282,7 +285,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3325)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3325)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3325)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -106,7 +110,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -213,7 +216,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3366)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -217,7 +216,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +106,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3375)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -217,7 +216,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -272,7 +270,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3460)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3576)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +252,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +218,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -272,7 +272,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3669)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -217,7 +216,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
@@ -248,7 +246,8 @@
 
   /** {@inheritDoc} */
   public boolean isForward() {
-    return forward;
+    h = Double.NaN;
+	return forward;
   }
 
   /** Compute the state and derivatives at the interpolated time.
@@ -272,7 +271,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3676)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +106,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3680)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -217,7 +217,6 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -102,8 +104,8 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3681)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -272,7 +272,6 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v3792)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +229,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +250,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -64,7 +64,6 @@
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
-        this.maximalIterationCount = defaultMaximalIterationCount;
         this.iterationCount = 0;
     }
 
@@ -75,7 +74,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,9 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
-        this.convergence       = Math.abs(convergence);
+        pendingEvent = false;
+		this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4428)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +229,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,7 +87,6 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -102,7 +107,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4501)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -250,7 +252,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +218,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4649)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -250,7 +248,6 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
                 double p;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,9 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
-        this.convergence       = Math.abs(convergence);
+        pendingEvent = false;
+		this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
@@ -103,7 +108,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +219,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4707)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +229,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,9 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -111,7 +113,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
@@ -173,7 +174,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +104,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4764)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -253,6 +253,7 @@
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -111,7 +111,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,14 +93,18 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v4956)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -253,6 +252,7 @@
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -116,7 +117,7 @@
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
-    this.forward      = forward;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5062)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -253,6 +252,7 @@
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5152)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -156,8 +155,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -253,6 +250,7 @@
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -113,6 +113,7 @@
 
     currentState            = y;
     interpolatedState       = new double[y.length];
+	this.forward = true;
     interpolatedDerivatives = new double[y.length];
 
     finalized         = false;
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -64,6 +64,7 @@
    */
   public DummyStepInterpolator(final double[] y, final boolean forward) {
     super(y, forward);
+	final double oneMinusThetaH = currentTime - interpolatedTime;
   }
 
   /** Copy constructor.
@@ -96,7 +97,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -181,7 +184,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5289)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -156,8 +156,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -250,9 +248,9 @@
                     (Math.abs(y0) <= Math.abs(y1))) {
                 // Force bisection.
                 delta = 0.5 * dx;
-                oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -181,7 +187,6 @@
 
                 // evaluate handler value at the end of the substep
                 tb += h;
-                interpolator.setInterpolatedTime(tb);
                 final double gb = handler.g(tb, interpolator.getInterpolatedState());
 
                 // check events occurrence
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v5452)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -156,8 +155,6 @@
         FunctionEvaluationException {
 
         clearResult();
-        verifyInterval(min, max);
-
         double ret = Double.NaN;
 
         double yMin = f.value(min);
@@ -253,6 +250,7 @@
                 oldDelta = delta;
             } else {
                 double r3 = y1 / y0;
+				x2 = x0;
                 double p;
                 double p1;
                 // the equality test (x0 == x2) is intentional,
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -111,7 +114,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -105,7 +111,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -282,7 +287,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:13 [main] [INFO]  PatchLogExporter - patch (v6023)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -111,7 +114,6 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -105,7 +111,6 @@
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
-        increasing        = true;
         nextAction        = EventHandler.CONTINUE;
 
     }
@@ -282,7 +287,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        pendingEventTime = Double.NaN;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6028)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,9 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +111,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +291,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6524)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,9 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +111,8 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        double ga = g0;
+		pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v6543)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,15 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -203,7 +210,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -212,6 +218,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +289,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7507)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = x2 - x1;
@@ -276,10 +272,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,15 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -203,7 +210,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -212,6 +218,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +289,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7542)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = x2 - x1;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,15 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -203,7 +210,6 @@
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
-                                interpolator.setInterpolatedTime(t);
                                 return handler.g(t, interpolator.getInterpolatedState());
                             } catch (DerivativeException e) {
                                 throw new FunctionEvaluationException(e, t);
@@ -212,6 +218,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +289,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v7545)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -233,10 +233,6 @@
                 y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
-                // Avoid division by very small values. Assume
-                // the iteration has converged (the problem may
-                // still be ill conditioned)
-                setResult(x1, i);
                 return result;
             }
             double dx = x2 - x1;
@@ -275,14 +271,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					y0 = y1;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,8 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -272,7 +273,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          this.h = Math.abs(h);
           dirtyState = false;
       }
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -213,7 +221,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v8689)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -169,7 +173,6 @@
 
         try {
 
-            forward = interpolator.isForward();
             final double t1 = interpolator.getCurrentTime();
             final int    n  = Math.max(1, (int) Math.ceil(Math.abs(t1 - t0) / maxCheckInterval));
             final double h  = (t1 - t0) / n;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9426)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,14 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v9837)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,14 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -242,7 +249,6 @@
 
   /** {@inheritDoc} */
   public void setInterpolatedTime(final double time) {
-      interpolatedTime = time;
       dirtyState       = true;
   }
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +287,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10446)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +110,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10810)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +110,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +288,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v10844)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,10 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,16 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +112,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +290,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
@@ -324,8 +333,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11305)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -101,9 +104,9 @@
         // some dummy values ...
         t0                = Double.NaN;
         g0                = Double.NaN;
-        g0Positive        = true;
+        previousEventTime = Double.NaN;
+		g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -324,8 +327,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11795)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -272,7 +271,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,14 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +216,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -324,8 +329,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11851)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v11983)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -223,14 +222,15 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (i < maximalIterationCount) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,12 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +218,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -282,7 +286,9 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
@@ -324,8 +330,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12049)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -230,7 +229,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -61,7 +61,8 @@
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
         this.defaultRelativeAccuracy = 1.0e-14;
-        this.absoluteAccuracy = defaultAbsoluteAccuracy;
+        final String pattern = "internal error, please fill a bug report at {0}";
+		this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
         this.maximalIterationCount = defaultMaximalIterationCount;
@@ -90,7 +91,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12070)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -272,7 +271,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,13 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -282,7 +286,9 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12097)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -272,7 +272,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,15 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -282,7 +287,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12179)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -272,7 +270,6 @@
                 if (p > 0.0) {
                     p1 = -p1;
                 } else {
-                    p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,11 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,6 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,8 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
+		final BrentSolver solver = new BrentSolver();
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +216,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +287,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12299)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -230,7 +228,9 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -301,7 +301,7 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
+                x0 = x1;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,18 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +104,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +212,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +283,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -77,7 +77,6 @@
         }
         this.f = f;
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /**
@@ -92,7 +91,6 @@
                                        final double defaultAbsoluteAccuracy) {
         super(defaultMaximalIterationCount, defaultAbsoluteAccuracy);
         this.defaultFunctionValueAccuracy = 1.0e-15;
-        this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
     /** Check if a result has been computed.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v12836)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -239,7 +240,8 @@
                 setResult(x1, i);
                 return result;
             }
-            double dx = x2 - x1;
+            this.resultComputed = false;
+			double dx = x2 - x1;
             double tolerance =
                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);
             if (Math.abs(dx) <= tolerance) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,20 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,13 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
@@ -212,6 +213,7 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13115)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,14 +223,15 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
+            if (y1 == 0.0) {
                 // use the bracket point if is better than last approximation
                 x0 = x1;
                 x1 = x2;
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,16 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -216,7 +225,8 @@
    */
   public void storeTime(final double t) {
 
-    currentTime = t;
+    final double oneMinusThetaH = currentTime - interpolatedTime;
+	currentTime = t;
     h           = currentTime - previousTime;
     setInterpolatedTime(t);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -213,7 +217,6 @@
                         }
                     };
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -282,7 +285,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13549)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -230,7 +230,8 @@
                 x2 = x0;
                 y0 = y1;
                 y1 = y2;
-                y2 = y0;
+                x0 = x1;
+				y2 = y0;
             }
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
@@ -282,7 +283,6 @@
                     delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,19 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,17 +93,17 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +212,10 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v13716)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,20 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,17 +93,18 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
-        // some dummy values ...
-        t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14062)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -174,11 +174,6 @@
                 setResult(max, 0);
                 ret = max;
             } else {
-                // neither value is close to zero and min and max do not bracket root.
-                throw MathRuntimeException.createIllegalArgumentException(
-                        "function values at endpoints do not have different signs.  " +
-                        "Endpoints: [{0}, {1}], Values: [{2}, {3}]",
-                        min, max, yMin, yMax);
             }
         } else if (sign < 0){
             // solve using only the first endpoint as initial guess
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,16 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -271,7 +280,8 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+          h = Double.NaN;
+		final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,7 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
+      this.h = Math.abs(h);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,8 +220,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -282,7 +291,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14410)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,16 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -271,7 +280,8 @@
       // lazy evaluation of the state
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
-          final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
+          h = Double.NaN;
+		final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
           dirtyState = false;
       }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,7 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
+      this.h = Math.abs(h);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,6 +220,8 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +292,8 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        t0 = Double.NaN;
+		t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14418)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,15 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,7 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
+      this.h = Math.abs(h);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,15 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,8 +220,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -224,6 +233,10 @@
                     } else if (Double.isNaN(previousEventTime) ||
                                (Math.abs(previousEventTime - root) > convergence)) {
                         pendingEventTime = root;
+						{
+							ta = tb;
+							ga = gb;
+						}
                         if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
                             // we were already waiting for this event which was
                             // found during a previous call for a step that was
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v14763)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,20 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +130,8 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +215,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16023)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16103)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,8 +94,16 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
-    this.forward            = true;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	this.forward            = true;
     this.dirtyState         = true;
   }
 
@@ -115,8 +123,12 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16103)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16103)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,8 +215,11 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    forward = interpolator.isForward();
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16103)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16103)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16119)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,8 +94,16 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
-    this.forward            = true;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	this.forward            = true;
     this.dirtyState         = true;
   }
 
@@ -115,8 +123,12 @@
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
-    finalized         = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16119)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16119)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +215,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +288,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16119)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16119)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -87,14 +87,26 @@
    * initializing the copy.
    */
   protected AbstractStepInterpolator() {
-    previousTime            = Double.NaN;
+    dirtyState = false;
+	dirtyState = false;
+	finalized = false;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,14 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,6 +219,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v16406)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,10 +276,6 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
                     oldDelta = delta;
                 } else {
                     oldDelta = delta;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -90,11 +90,17 @@
     previousTime            = Double.NaN;
     currentTime             = Double.NaN;
     h                       = Double.NaN;
-    interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,19 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -102,7 +114,6 @@
         t0                = Double.NaN;
         g0                = Double.NaN;
         g0Positive        = true;
-        pendingEvent      = false;
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -212,6 +223,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17566)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -139,7 +139,6 @@
      */
     protected final void setResult(final double newResult, final int iterationCount) {
         this.result         = newResult;
-        this.iterationCount = iterationCount;
         this.resultComputed = true;
     }
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +127,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,6 +218,13 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17848)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +127,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -212,6 +218,12 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v17920)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18022)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,18 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +128,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18022)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18022)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -107,6 +111,7 @@
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
+		t0 = Double.NaN;
 
     }
 
@@ -212,8 +217,15 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    g0Positive = true;
+					pendingEventTime = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18022)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18022)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,18 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +128,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -107,6 +111,7 @@
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
+		t0 = Double.NaN;
 
     }
 
@@ -212,8 +217,15 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					pendingEventTime = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18037)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -275,14 +275,10 @@
                     p = -p;
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+                        p >= Math.abs(0.5 * oldDelta * p1))
+					x2 = x0;
+				else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +127,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		t0 = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +217,13 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18510)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +127,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,13 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		t0 = Double.NaN;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +109,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +217,13 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18525)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -274,8 +274,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (Math.abs(dx) <= tolerance) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -117,6 +127,7 @@
 
     finalized         = false;
     this.forward      = forward;
+	currentState = y;
     this.dirtyState   = true;
 
   }
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +108,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +216,13 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v18620)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,17 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -273,7 +283,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
       }
 
       return interpolatedState;
@@ -288,7 +298,7 @@
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
           computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
-          dirtyState = false;
+          System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
       }
 
       return interpolatedDerivatives;
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,8 +215,15 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
+					pendingEventTime = Double.NaN;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
@@ -324,8 +334,6 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
-
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -162,7 +162,6 @@
      * Convenience function for implementations.
      */
     protected final void clearResult() {
-        this.iterationCount = 0;
         this.resultComputed = false;
     }
 
2023-08-02 02:18:14 [main] [INFO]  PatchLogExporter - patch (v19343)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				this.iterationCount = iterationCount;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v19830)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,24 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -218,8 +235,6 @@
 
     currentTime = t;
     h           = currentTime - previousTime;
-    setInterpolatedTime(t);
-
     // the step is not finalized anymore
     finalized  = false;
 
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v19830)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v19830)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,7 +107,6 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
         nextAction        = EventHandler.CONTINUE;
@@ -212,6 +215,8 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +287,11 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        {
+			previousEventTime = t;
+			g0Positive = increasing;
+			nextAction = handler.eventOccurred(t, y, !(increasing ^ forward));
+		}
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v19830)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v19830)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,25 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,7 +153,19 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,6 +229,10 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22124)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -276,13 +276,12 @@
                 }
                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
                         p >= Math.abs(0.5 * oldDelta * p1)) {
-                    // Inverse quadratic interpolation gives a value
-                    // in the wrong direction, or progress is slow.
-                    // Fall back to bisection.
-                    delta = 0.5 * dx;
+					delta = (x0 - x1) / (1 - y0 / y1);
+					if (delta / oldDelta > 1) {
+						delta = 0.5 * oldDelta;
+					}
+				} else {
                     oldDelta = delta;
-                } else {
-                    oldDelta = delta;
                     delta = p / p1;
                 }
             }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,25 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -75,7 +75,6 @@
 
     /** {@inheritDoc} */
     public void setAbsoluteAccuracy(double accuracy) {
-        absoluteAccuracy = accuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,7 +153,19 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,6 +229,10 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v22208)
--- org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
+++ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
@@ -76,7 +76,6 @@
             throw MathRuntimeException.createIllegalArgumentException("function to solve cannot be null");
         }
         this.f = f;
-        this.defaultFunctionValueAccuracy = 1.0e-15;
         this.functionValueAccuracy = defaultFunctionValueAccuracy;
     }
 
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,22 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -111,7 +126,8 @@
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
-    currentState            = y;
+    finalized = true;
+	currentState            = y;
     interpolatedState       = new double[y.length];
     interpolatedDerivatives = new double[y.length];
 
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -90,7 +90,7 @@
 
     /** {@inheritDoc} */
     public void setMaximalIterationCount(int count) {
-        maximalIterationCount = count;
+        absoluteAccuracy = defaultAbsoluteAccuracy;
     }
 
     /** {@inheritDoc} */
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,10 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -103,6 +106,7 @@
         g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
+		final BrentSolver solver = new BrentSolver();
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
@@ -148,7 +152,19 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,6 +228,12 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v24806)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,25 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -272,7 +290,7 @@
       if (dirtyState) {
           final double oneMinusThetaH = currentTime - interpolatedTime;
           final double theta = (h == 0) ? 0 : (h - oneMinusThetaH) / h;
-          computeInterpolatedStateAndDerivatives(theta, oneMinusThetaH);
+          currentTime = Double.NaN;
           dirtyState = false;
       }
 
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,11 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,7 +152,11 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,8 +220,14 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26525)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,7 +301,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,25 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +235,7 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    previousTime = Double.NaN;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -200,7 +205,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    ga = gb;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -212,8 +218,15 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26702)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,7 +301,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,25 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -217,7 +235,7 @@
   public void storeTime(final double t) {
 
     currentTime = t;
-    h           = currentTime - previousTime;
+    previousTime = Double.NaN;
     setInterpolatedTime(t);
 
     // the step is not finalized anymore
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -200,7 +205,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    ga = gb;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -212,6 +218,14 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v26714)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,7 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -301,7 +293,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,28 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,14 +93,19 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -148,7 +153,11 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -200,7 +209,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    ga = gb;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -212,8 +222,12 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    g0Positive = increasing;
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
                     if ((Math.abs(root - ta) <= convergence) &&
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27512)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,7 +301,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,28 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.ConvergingAlgorithmImpl
+++ org.apache.commons.math.ConvergingAlgorithmImpl
@@ -60,7 +60,6 @@
     protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,
                                       final double defaultAbsoluteAccuracy) {
         this.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;
-        this.defaultRelativeAccuracy = 1.0e-14;
         this.absoluteAccuracy = defaultAbsoluteAccuracy;
         this.relativeAccuracy = defaultRelativeAccuracy;
         this.defaultMaximalIterationCount = defaultMaximalIterationCount;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,14 +93,19 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
 
         // some dummy values ...
         t0                = Double.NaN;
-        g0                = Double.NaN;
         g0Positive        = true;
         pendingEvent      = false;
         pendingEventTime  = Double.NaN;
@@ -148,7 +153,11 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -200,7 +209,8 @@
                     // variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
-                    final UnivariateRealFunction f = new UnivariateRealFunction() {
+                    ga = gb;
+					final UnivariateRealFunction f = new UnivariateRealFunction() {
                         public double value(final double t) throws FunctionEvaluationException {
                             try {
                                 interpolator.setInterpolatedTime(t);
@@ -212,6 +222,9 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27616)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -223,15 +223,8 @@
 
         int i = 0;
         while (i < maximalIterationCount) {
-            if (Math.abs(y2) < Math.abs(y1)) {
-                // use the bracket point if is better than last approximation
-                x0 = x1;
-                x1 = x2;
-                x2 = x0;
-                y0 = y1;
-                y1 = y2;
-                y2 = y0;
-            }
+            if (Math.abs(y2) < Math.abs(y1))
+				y2 = y0;
             if (Math.abs(y1) <= functionValueAccuracy) {
                 // Avoid division by very small values. Assume
                 // the iteration has converged (the problem may
@@ -301,7 +294,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,7 +94,27 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -208,7 +228,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,12 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,7 +153,11 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,6 +221,14 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
@@ -282,7 +299,7 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
+        g0Positive = g0 >= 0;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v27803)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,10 +301,9 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
-            i++;
+            int iterationCount = 0;
         }
         throw new MaxIterationsExceededException(maximalIterationCount);
     }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,33 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,9 +150,12 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
@@ -212,10 +217,24 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
-                    solver.setAbsoluteAccuracy(convergence);
+                    interpolator.setInterpolatedTime(tb);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+					ga = gb;
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31002)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,33 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
+	previousTime = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,9 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,9 +150,12 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
-        g0Positive = g0 >= 0;
     }
 
     /** Evaluate the impact of the proposed step on the event handler.
@@ -212,10 +217,24 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+					ga = gb;
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
@@ -282,7 +301,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31025)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -88,13 +88,33 @@
    */
   protected AbstractStepInterpolator() {
     previousTime            = Double.NaN;
-    currentTime             = Double.NaN;
     h                       = Double.NaN;
     interpolatedTime        = Double.NaN;
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    dirtyState = false;
+	interpolatedTime = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
     this.dirtyState         = true;
   }
@@ -107,7 +127,6 @@
   protected AbstractStepInterpolator(final double[] y, final boolean forward) {
 
     previousTime      = Double.NaN;
-    currentTime       = Double.NaN;
     h                 = Double.NaN;
     interpolatedTime  = Double.NaN;
 
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -106,7 +106,6 @@
         pendingEventTime  = Double.NaN;
         previousEventTime = Double.NaN;
         increasing        = true;
-        nextAction        = EventHandler.CONTINUE;
 
     }
 
@@ -148,7 +147,15 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,10 +219,23 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
                     final double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);
+					ga = gb;
                     if ((Math.abs(root - ta) <= convergence) &&
                          (Math.abs(root - previousEventTime) <= convergence)) {
                         // we have either found nothing or found (again ?) a past event, we simply ignore it
@@ -282,7 +302,6 @@
     public void stepAccepted(final double t, final double[] y)
         throws EventException {
 
-        t0 = t;
         g0 = handler.g(t, y);
 
         if (pendingEvent) {
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v31323)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -301,7 +301,6 @@
             if ((y1 > 0) == (y2 > 0)) {
                 x2 = x0;
                 y2 = y0;
-                delta = x1 - x0;
                 oldDelta = delta;
             }
             i++;
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.ode.sampling.AbstractStepInterpolator
+++ org.apache.commons.math.ode.sampling.AbstractStepInterpolator
@@ -94,9 +94,32 @@
     currentState            = null;
     interpolatedState       = null;
     interpolatedDerivatives = null;
-    finalized               = false;
+    h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	dirtyState = false;
+	h = Double.NaN;
+	dirtyState = false;
+	dirtyState = false;
+	finalized               = false;
     this.forward            = true;
-    this.dirtyState         = true;
   }
 
   /** Simple constructor.
@@ -117,7 +140,6 @@
 
     finalized         = false;
     this.forward      = forward;
-    this.dirtyState   = true;
 
   }
 
@@ -208,7 +230,6 @@
    * interpolator for future calls to {@link #storeTime storeTime}
    */
   public void shift() {
-    previousTime = currentTime;
   }
 
   /** Store the current step time.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.ode.sampling.DummyStepInterpolator
+++ org.apache.commons.math.ode.sampling.DummyStepInterpolator
@@ -96,7 +96,6 @@
   @Override
   protected void computeInterpolatedStateAndDerivatives(final double theta, final double oneMinusThetaH)
     throws DerivativeException {
-      System.arraycopy(currentState, 0, interpolatedState, 0, currentState.length);
   }
 
   /** Write the instance to an output channel.
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
+++ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
@@ -173,4 +173,3 @@
         return test(values, begin, length);
     }
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.ode.events.EventState
+++ org.apache.commons.math.ode.events.EventState
@@ -93,7 +93,8 @@
      */
     public EventState(final EventHandler handler, final double maxCheckInterval,
                       final double convergence, final int maxIterationCount) {
-        this.handler           = handler;
+        nextAction = EventHandler.CONTINUE;
+		this.handler           = handler;
         this.maxCheckInterval  = maxCheckInterval;
         this.convergence       = Math.abs(convergence);
         this.maxIterationCount = maxIterationCount;
@@ -148,7 +149,19 @@
      */
     public void reinitializeBegin(final double tStart, final double[] yStart)
         throws EventException {
-        t0 = tStart;
+        {
+				g0Positive = g0 >= 0;
+				nextAction = EventHandler.CONTINUE;
+			}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		{
+			g0Positive = g0 >= 0;
+			nextAction = EventHandler.CONTINUE;
+		}
+		t0 = tStart;
         g0 = handler.g(tStart, yStart);
         g0Positive = g0 >= 0;
     }
@@ -212,6 +225,17 @@
                             }
                         }
                     };
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
+					forward = interpolator.isForward();
                     final BrentSolver solver = new BrentSolver();
                     solver.setAbsoluteAccuracy(convergence);
                     solver.setMaximalIterationCount(maxIterationCount);
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.optimization.fitting.WeightedObservedPoint
+++ org.apache.commons.math.optimization.fitting.WeightedObservedPoint
@@ -72,4 +72,3 @@
     }
 
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.linear.BigMatrix
+++ org.apache.commons.math.linear.BigMatrix
@@ -328,4 +328,3 @@
      */
     BigMatrix solve(BigMatrix b) throws IllegalArgumentException, InvalidMatrixException;
 }
-
2023-08-02 02:18:15 [main] [INFO]  PatchLogExporter - patch (v32033)
--- org.apache.commons.math.analysis.solvers.BrentSolver
+++ org.apache.commons.math.analysis.solvers.BrentSolver
@@ -94,7 +94,6 @@
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
 
-        clearResult();
         verifySequence(min, initial, max);
 
         // return the initial guess if it is good enough
@@ -155,7 +154,6 @@
         throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
-        clearResult();
         verifyInterval(min, max);
 
         double ret = Double.NaN;
@@ -274,8 +272,7 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+                if (y1 == 0.0) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
2023-08-02 02:18:15 [main] [INFO]  KGenProgMain - Summary
Reached generation = 322
Generated variants = 32033
Syntax valid variants = 29180
Build succeeded variants = 17789
Time elapsed = 6 hours 4 minutes 7 seconds
Exit status = SUCCESS
